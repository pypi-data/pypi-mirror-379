abacusai.model_metrics
======================

.. py:module:: abacusai.model_metrics


Classes
-------

.. autoapisummary::

   abacusai.model_metrics.ModelMetrics


Module Contents
---------------

.. py:class:: ModelMetrics(client, algoMetrics=None, selectedAlgorithm=None, selectedAlgorithmName=None, modelId=None, modelVersion=None, metricNames=None, targetColumn=None, trainValTestSplit=None, trainingCompletedAt=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Metrics of the trained model.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param algoMetrics: Dictionary mapping algorithm ID to algorithm name and algorithm metrics dictionary
   :type algoMetrics: dict
   :param selectedAlgorithm: The algorithm ID of the selected (default) algorithm that will be used in deployments of this Model Version
   :type selectedAlgorithm: str
   :param selectedAlgorithmName: The algorithm name of the selected (default) algorithm that will be used in deployments of this Model Version
   :type selectedAlgorithmName: str
   :param modelId: The Model ID
   :type modelId: str
   :param modelVersion: The Model Version
   :type modelVersion: str
   :param metricNames: Maps shorthand names of the metrics to their verbose names
   :type metricNames: dict
   :param targetColumn: The target feature that the model was trained to predict
   :type targetColumn: str
   :param trainValTestSplit: Info on train, val and test split
   :type trainValTestSplit: dict
   :param trainingCompletedAt: Timestamp when training was completed
   :type trainingCompletedAt: datetime


   .. py:attribute:: algo_metrics
      :value: None



   .. py:attribute:: selected_algorithm
      :value: None



   .. py:attribute:: selected_algorithm_name
      :value: None



   .. py:attribute:: model_id
      :value: None



   .. py:attribute:: model_version
      :value: None



   .. py:attribute:: metric_names
      :value: None



   .. py:attribute:: target_column
      :value: None



   .. py:attribute:: train_val_test_split
      :value: None



   .. py:attribute:: training_completed_at
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



