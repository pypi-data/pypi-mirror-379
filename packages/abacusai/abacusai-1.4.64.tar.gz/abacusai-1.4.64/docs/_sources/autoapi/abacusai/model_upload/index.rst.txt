abacusai.model_upload
=====================

.. py:module:: abacusai.model_upload


Classes
-------

.. autoapisummary::

   abacusai.model_upload.ModelUpload


Module Contents
---------------

.. py:class:: ModelUpload(client, modelId=None, modelVersion=None, status=None, createdAt=None, modelUploadId=None, embeddingsUploadId=None, artifactsUploadId=None, verificationsUploadId=None, defaultItemsUploadId=None, modelFileUploadId=None, modelStateUploadId=None, inputPreprocessorUploadId=None, requirementsUploadId=None, resourcesUploadId=None, multiCatalogEmbeddingsUploadId=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A model version that includes the upload identifiers for the various required files.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param modelId: A reference to the model this version belongs to.
   :type modelId: str
   :param modelVersion: A unique identifier for the model version.
   :type modelVersion: str
   :param status: The current status of the model.
   :type status: str
   :param createdAt: The timestamp at which the model version was created, in ISO-8601 format.
   :type createdAt: str
   :param modelUploadId: An upload identifier to be used when uploading the TensorFlow Saved Model.
   :type modelUploadId: str
   :param embeddingsUploadId: An upload identifier to be used when uploading the embeddings CSV.
   :type embeddingsUploadId: str
   :param artifactsUploadId: An upload identifier to be used when uploading the artifacts JSON file.
   :type artifactsUploadId: str
   :param verificationsUploadId: An upload identifier to be used when uploading the verifications JSON file.
   :type verificationsUploadId: str
   :param defaultItemsUploadId: An upload identifier to be used when uploading the default items JSON file.
   :type defaultItemsUploadId: str
   :param modelFileUploadId: An upload identifier to be used when uploading the model JSON file.
   :type modelFileUploadId: str
   :param modelStateUploadId: An upload identifier to be used when uploading the model state JSON file.
   :type modelStateUploadId: str
   :param inputPreprocessorUploadId: An upload identifier to be used when uploading the input preprocessor JSON file.
   :type inputPreprocessorUploadId: str
   :param requirementsUploadId: An upload identifier to be used when uploading the requirements JSON file.
   :type requirementsUploadId: str
   :param resourcesUploadId: An upload identifier to be used when uploading the resources JSON file.
   :type resourcesUploadId: str
   :param multiCatalogEmbeddingsUploadId: An upload identifier to be used when upload the multi-catalog embeddings CSV file.
   :type multiCatalogEmbeddingsUploadId: str


   .. py:attribute:: model_id
      :value: None



   .. py:attribute:: model_version
      :value: None



   .. py:attribute:: status
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: model_upload_id
      :value: None



   .. py:attribute:: embeddings_upload_id
      :value: None



   .. py:attribute:: artifacts_upload_id
      :value: None



   .. py:attribute:: verifications_upload_id
      :value: None



   .. py:attribute:: default_items_upload_id
      :value: None



   .. py:attribute:: model_file_upload_id
      :value: None



   .. py:attribute:: model_state_upload_id
      :value: None



   .. py:attribute:: input_preprocessor_upload_id
      :value: None



   .. py:attribute:: requirements_upload_id
      :value: None



   .. py:attribute:: resources_upload_id
      :value: None



   .. py:attribute:: multi_catalog_embeddings_upload_id
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



