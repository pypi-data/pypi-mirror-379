abacusai.api_class.monitor
==========================

.. py:module:: abacusai.api_class.monitor


Classes
-------

.. autoapisummary::

   abacusai.api_class.monitor.TimeWindowConfig
   abacusai.api_class.monitor.ForecastingMonitorConfig
   abacusai.api_class.monitor.StdDevThreshold
   abacusai.api_class.monitor.ItemAttributesStdDevThreshold
   abacusai.api_class.monitor.RestrictFeatureMappings
   abacusai.api_class.monitor.MonitorFilteringConfig


Module Contents
---------------

.. py:class:: TimeWindowConfig

   Bases: :py:obj:`abacusai.api_class.abstract.ApiClass`


   Time Window Configuration

   :param window_duration: The duration of the window.
   :type window_duration: int
   :param window_from_start: Whether the window should be from the start of the time series.
   :type window_from_start: bool


   .. py:attribute:: window_duration
      :type:  int
      :value: None



   .. py:attribute:: window_from_start
      :type:  bool
      :value: None



   .. py:method:: to_dict()

      Standardizes converting an ApiClass to dictionary.
      Keys of response dictionary are converted to camel case.
      This also validates the fields ( type, value, etc ) received in the dictionary.



.. py:class:: ForecastingMonitorConfig

   Bases: :py:obj:`abacusai.api_class.abstract.ApiClass`


   Forecasting Monitor Configuration

   :param id_column: The name of the column that contains the unique identifier for the time series.
   :type id_column: str
   :param timestamp_column: The name of the column that contains the timestamp for the time series.
   :type timestamp_column: str
   :param target_column: The name of the column that contains the target value for the time series.
   :type target_column: str
   :param start_time: The start time of the time series data.
   :type start_time: str
   :param end_time: The end time of the time series data.
   :type end_time: str
   :param window_config: The windowing configuration for the time series data.
   :type window_config: TimeWindowConfig


   .. py:attribute:: id_column
      :type:  str
      :value: None



   .. py:attribute:: timestamp_column
      :type:  str
      :value: None



   .. py:attribute:: target_column
      :type:  str
      :value: None



   .. py:attribute:: start_time
      :type:  str
      :value: None



   .. py:attribute:: end_time
      :type:  str
      :value: None



   .. py:attribute:: window_config
      :type:  TimeWindowConfig
      :value: None



   .. py:method:: to_dict()

      Standardizes converting an ApiClass to dictionary.
      Keys of response dictionary are converted to camel case.
      This also validates the fields ( type, value, etc ) received in the dictionary.



.. py:class:: StdDevThreshold

   Bases: :py:obj:`abacusai.api_class.abstract.ApiClass`


   Std Dev Threshold types

   :param threshold_type: Type of threshold to apply to the item attributes.
   :type threshold_type: StdDevThresholdType
   :param value: Value to use for the threshold.
   :type value: float


   .. py:attribute:: threshold_type
      :type:  abacusai.api_class.enums.StdDevThresholdType
      :value: None



   .. py:attribute:: value
      :type:  float
      :value: None



   .. py:method:: to_dict()

      Standardizes converting an ApiClass to dictionary.
      Keys of response dictionary are converted to camel case.
      This also validates the fields ( type, value, etc ) received in the dictionary.



.. py:class:: ItemAttributesStdDevThreshold

   Bases: :py:obj:`abacusai.api_class.abstract.ApiClass`


   Item Attributes Std Dev Threshold for Monitor Alerts

   :param lower_bound: Lower bound for the item attributes.
   :type lower_bound: StdDevThreshold
   :param upper_bound: Upper bound for the item attributes.
   :type upper_bound: StdDevThreshold


   .. py:attribute:: lower_bound
      :type:  StdDevThreshold
      :value: None



   .. py:attribute:: upper_bound
      :type:  StdDevThreshold
      :value: None



   .. py:method:: to_dict()

      Standardizes converting an ApiClass to dictionary.
      Keys of response dictionary are converted to camel case.
      This also validates the fields ( type, value, etc ) received in the dictionary.



.. py:class:: RestrictFeatureMappings

   Bases: :py:obj:`abacusai.api_class.abstract.ApiClass`


   Restrict Feature Mappings for Monitor Filtering

   :param feature_name: The name of the feature to restrict the monitor to.
   :type feature_name: str
   :param restricted_feature_values: The values of the feature to restrict the monitor to if feature is a categorical.
   :type restricted_feature_values: list
   :param start_time: The start time of the timestamp feature to filter from
   :type start_time: str
   :param end_time: The end time of the timestamp feature to filter until
   :type end_time: str
   :param min_value: Value to filter the numerical feature above
   :type min_value: float
   :param max_value: Filtering the numerical feature to below this value
   :type max_value: float


   .. py:attribute:: feature_name
      :type:  str
      :value: None



   .. py:attribute:: restricted_feature_values
      :type:  list
      :value: []



   .. py:attribute:: start_time
      :type:  str
      :value: None



   .. py:attribute:: end_time
      :type:  str
      :value: None



   .. py:attribute:: min_value
      :type:  float
      :value: None



   .. py:attribute:: max_value
      :type:  float
      :value: None



   .. py:method:: to_dict()

      Standardizes converting an ApiClass to dictionary.
      Keys of response dictionary are converted to camel case.
      This also validates the fields ( type, value, etc ) received in the dictionary.



.. py:class:: MonitorFilteringConfig

   Bases: :py:obj:`abacusai.api_class.abstract.ApiClass`


   Monitor Filtering Configuration

   :param start_time: The start time of the prediction time col
   :type start_time: str
   :param end_time: The end time of the prediction time col
   :type end_time: str
   :param restrict_feature_mappings: The feature mapping to restrict the monitor to.
   :type restrict_feature_mappings: RestrictFeatureMappings
   :param target_class: The target class to restrict the monitor to.
   :type target_class: str
   :param train_target_feature: Set the target feature for the training data.
   :type train_target_feature: str
   :param prediction_target_feature: Set the target feature for the prediction data.
   :type prediction_target_feature: str


   .. py:attribute:: start_time
      :type:  str
      :value: None



   .. py:attribute:: end_time
      :type:  str
      :value: None



   .. py:attribute:: restrict_feature_mappings
      :type:  List[RestrictFeatureMappings]
      :value: None



   .. py:attribute:: target_class
      :type:  str
      :value: None



   .. py:attribute:: train_target_feature
      :type:  str
      :value: None



   .. py:attribute:: prediction_target_feature
      :type:  str
      :value: None



   .. py:method:: to_dict()

      Standardizes converting an ApiClass to dictionary.
      Keys of response dictionary are converted to camel case.
      This also validates the fields ( type, value, etc ) received in the dictionary.



