abacusai.dataset_version
========================

.. py:module:: abacusai.dataset_version


Classes
-------

.. autoapisummary::

   abacusai.dataset_version.DatasetVersion


Module Contents
---------------

.. py:class:: DatasetVersion(client, datasetVersion=None, status=None, datasetId=None, size=None, rowCount=None, fileInspectMetadata=None, createdAt=None, error=None, incrementalQueriedAt=None, uploadId=None, mergeFileSchemas=None, databaseConnectorConfig=None, applicationConnectorConfig=None, invalidRecords=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A specific version of a dataset

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param datasetVersion: The unique identifier of the dataset version.
   :type datasetVersion: str
   :param status: The current status of the dataset version
   :type status: str
   :param datasetId: A reference to the Dataset this dataset version belongs to.
   :type datasetId: str
   :param size: The size in bytes of the file.
   :type size: int
   :param rowCount: Number of rows in the dataset version.
   :type rowCount: int
   :param fileInspectMetadata: Metadata information about file's inspection. For example - the detected delimiter for CSV files.
   :type fileInspectMetadata: dict
   :param createdAt: The timestamp this dataset version was created.
   :type createdAt: str
   :param error: If status is FAILED, this field will be populated with an error.
   :type error: str
   :param incrementalQueriedAt: If the dataset version is from an incremental dataset, this is the last entry of timestamp column when the dataset version was created.
   :type incrementalQueriedAt: str
   :param uploadId: If the dataset version is being uploaded, this the reference to the Upload
   :type uploadId: str
   :param mergeFileSchemas: If the merge file schemas policy is enabled.
   :type mergeFileSchemas: bool
   :param databaseConnectorConfig: The database connector query used to retrieve data for this version.
   :type databaseConnectorConfig: dict
   :param applicationConnectorConfig: The application connector used to retrieve data for this version.
   :type applicationConnectorConfig: dict
   :param invalidRecords: Invalid records in the dataset version
   :type invalidRecords: str


   .. py:attribute:: dataset_version
      :value: None



   .. py:attribute:: status
      :value: None



   .. py:attribute:: dataset_id
      :value: None



   .. py:attribute:: size
      :value: None



   .. py:attribute:: row_count
      :value: None



   .. py:attribute:: file_inspect_metadata
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: error
      :value: None



   .. py:attribute:: incremental_queried_at
      :value: None



   .. py:attribute:: upload_id
      :value: None



   .. py:attribute:: merge_file_schemas
      :value: None



   .. py:attribute:: database_connector_config
      :value: None



   .. py:attribute:: application_connector_config
      :value: None



   .. py:attribute:: invalid_records
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: get_metrics(selected_columns = None, include_charts = False, include_statistics = True)

      Get metrics for a specific dataset version.

      :param selected_columns: A list of columns to order first.
      :type selected_columns: List
      :param include_charts: A flag indicating whether charts should be included in the response. Default is false.
      :type include_charts: bool
      :param include_statistics: A flag indicating whether statistics should be included in the response. Default is true.
      :type include_statistics: bool

      :returns: The metrics for the specified Dataset version.
      :rtype: DataMetrics



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: DatasetVersion



   .. py:method:: describe()

      Retrieves a full description of the specified dataset version, including its ID, name, source type, and other attributes.

      :param dataset_version: Unique string identifier associated with the dataset version.
      :type dataset_version: str

      :returns: The dataset version.
      :rtype: DatasetVersion



   .. py:method:: delete()

      Deletes the specified dataset version from the organization.

      :param dataset_version: String identifier of the dataset version to delete.
      :type dataset_version: str



   .. py:method:: get_logs()

      Retrieves the dataset import logs.

      :param dataset_version: The unique version ID of the dataset version.
      :type dataset_version: str

      :returns: The logs for the specified dataset version.
      :rtype: DatasetVersionLogs



   .. py:method:: wait_for_import(timeout=900)

      A waiting call until dataset version is imported.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int



   .. py:method:: wait_for_inspection(timeout=None)

      A waiting call until dataset version is completely inspected.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int



   .. py:method:: get_status()

      Gets the status of the dataset version.

      :returns: A string describing the status of a dataset version (importing, inspecting, complete, etc.).
      :rtype: str



