abacusai.pipeline_version
=========================

.. py:module:: abacusai.pipeline_version


Classes
-------

.. autoapisummary::

   abacusai.pipeline_version.PipelineVersion


Module Contents
---------------

.. py:class:: PipelineVersion(client, pipelineName=None, pipelineId=None, pipelineVersion=None, createdAt=None, updatedAt=None, completedAt=None, status=None, error=None, stepVersions={}, codeSource={}, pipelineVariableMappings={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A version of a pipeline.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param pipelineName: The name of the pipeline this step is a part of.
   :type pipelineName: str
   :param pipelineId: The reference to the pipeline this step belongs to.
   :type pipelineId: str
   :param pipelineVersion: The reference to this pipeline version.
   :type pipelineVersion: str
   :param createdAt: The date and time which this pipeline version was created.
   :type createdAt: str
   :param updatedAt: The date and time which this pipeline version was updated.
   :type updatedAt: str
   :param completedAt: The date and time which this pipeline version was updated.
   :type completedAt: str
   :param status: The status of the pipeline version.
   :type status: str
   :param error: The relevant error, if the status is FAILED.
   :type error: str
   :param stepVersions: A list of the pipeline step versions.
   :type stepVersions: PipelineStepVersion
   :param codeSource: information on the source code
   :type codeSource: CodeSource
   :param pipelineVariableMappings: A description of the function variables into the pipeline.
   :type pipelineVariableMappings: PythonFunctionArgument


   .. py:attribute:: pipeline_name
      :value: None



   .. py:attribute:: pipeline_id
      :value: None



   .. py:attribute:: pipeline_version
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: updated_at
      :value: None



   .. py:attribute:: completed_at
      :value: None



   .. py:attribute:: status
      :value: None



   .. py:attribute:: error
      :value: None



   .. py:attribute:: step_versions


   .. py:attribute:: code_source


   .. py:attribute:: pipeline_variable_mappings


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: PipelineVersion



   .. py:method:: describe()

      Describes a specified pipeline version

      :param pipeline_version: Unique string identifier for the pipeline version
      :type pipeline_version: str

      :returns: Object describing the pipeline version
      :rtype: PipelineVersion



   .. py:method:: reset(steps = None, include_downstream_steps = True)

      Reruns a pipeline version for the given steps and downstream steps if specified.

      :param steps: List of pipeline step names to rerun.
      :type steps: list
      :param include_downstream_steps: Whether to rerun downstream steps from the steps you have passed
      :type include_downstream_steps: bool

      :returns: Object describing the pipeline version
      :rtype: PipelineVersion



   .. py:method:: list_logs()

      Gets the logs for the steps in a given pipeline version.

      :param pipeline_version: The id of the pipeline version.
      :type pipeline_version: str

      :returns: Object describing the logs for the steps in the pipeline.
      :rtype: PipelineVersionLogs



   .. py:method:: skip_pending_steps()

      Skips pending steps in a pipeline version.

      :param pipeline_version: The id of the pipeline version.
      :type pipeline_version: str

      :returns: Object describing the pipeline version
      :rtype: PipelineVersion



   .. py:method:: wait_for_pipeline(timeout=1200)

      A waiting call until all the stages in a pipeline version have completed.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int



   .. py:method:: get_status()

      Gets the status of the pipeline version.

      :returns: A string describing the status of a pipeline version (pending, running, complete, etc.).
      :rtype: str



