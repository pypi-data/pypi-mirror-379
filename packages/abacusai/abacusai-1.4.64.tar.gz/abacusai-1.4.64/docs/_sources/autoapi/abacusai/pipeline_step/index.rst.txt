abacusai.pipeline_step
======================

.. py:module:: abacusai.pipeline_step


Classes
-------

.. autoapisummary::

   abacusai.pipeline_step.PipelineStep


Module Contents
---------------

.. py:class:: PipelineStep(client, pipelineStepId=None, pipelineId=None, stepName=None, pipelineName=None, createdAt=None, updatedAt=None, pythonFunctionId=None, stepDependencies=None, cpuSize=None, memory=None, timeout=None, pythonFunction={}, codeSource={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A step in a pipeline.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param pipelineStepId: The reference to this step.
   :type pipelineStepId: str
   :param pipelineId: The reference to the pipeline this step belongs to.
   :type pipelineId: str
   :param stepName: The name of the step.
   :type stepName: str
   :param pipelineName: The name of the pipeline this step is a part of.
   :type pipelineName: str
   :param createdAt: The date and time which this step was created.
   :type createdAt: str
   :param updatedAt: The date and time when this step was last updated.
   :type updatedAt: str
   :param pythonFunctionId: The python function_id.
   :type pythonFunctionId: str
   :param stepDependencies: List of steps this step depends on.
   :type stepDependencies: list[str]
   :param cpuSize: CPU size specified for the step function.
   :type cpuSize: str
   :param memory: Memory in GB specified for the step function.
   :type memory: int
   :param timeout: Timeout for the step in minutes, default is 300 minutes.
   :type timeout: int
   :param pythonFunction: Information about the python function for the step.
   :type pythonFunction: PythonFunction
   :param codeSource: Information about the source code of the step function.
   :type codeSource: CodeSource


   .. py:attribute:: pipeline_step_id
      :value: None



   .. py:attribute:: pipeline_id
      :value: None



   .. py:attribute:: step_name
      :value: None



   .. py:attribute:: pipeline_name
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: updated_at
      :value: None



   .. py:attribute:: python_function_id
      :value: None



   .. py:attribute:: step_dependencies
      :value: None



   .. py:attribute:: cpu_size
      :value: None



   .. py:attribute:: memory
      :value: None



   .. py:attribute:: timeout
      :value: None



   .. py:attribute:: python_function


   .. py:attribute:: code_source


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: delete()

      Deletes a step from a pipeline.

      :param pipeline_step_id: The ID of the pipeline step.
      :type pipeline_step_id: str



   .. py:method:: update(function_name = None, source_code = None, step_input_mappings = None, output_variable_mappings = None, step_dependencies = None, package_requirements = None, cpu_size = None, memory = None, timeout = None)

      Creates a step in a given pipeline.

      :param function_name: The name of the Python function.
      :type function_name: str
      :param source_code: Contents of a valid Python source code file. The source code should contain the transform feature group functions. A list of allowed imports and system libraries for each language is specified in the user functions documentation section.
      :type source_code: str
      :param step_input_mappings: List of Python function arguments.
      :type step_input_mappings: List
      :param output_variable_mappings: List of Python function outputs.
      :type output_variable_mappings: List
      :param step_dependencies: List of step names this step depends on.
      :type step_dependencies: list
      :param package_requirements: List of package requirement strings. For example: ['numpy==1.2.3', 'pandas>=1.4.0'].
      :type package_requirements: list
      :param cpu_size: Size of the CPU for the step function.
      :type cpu_size: str
      :param memory: Memory (in GB) for the step function.
      :type memory: int
      :param timeout: Timeout for the pipeline step, default is 300 minutes.
      :type timeout: int

      :returns: Object describing the pipeline.
      :rtype: PipelineStep



   .. py:method:: rename(step_name)

      Renames a step in a given pipeline.

      :param step_name: The name of the step.
      :type step_name: str

      :returns: Object describing the pipeline.
      :rtype: PipelineStep



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: PipelineStep



   .. py:method:: describe()

      Deletes a step from a pipeline.

      :param pipeline_step_id: The ID of the pipeline step.
      :type pipeline_step_id: str

      :returns: An object describing the pipeline step.
      :rtype: PipelineStep



