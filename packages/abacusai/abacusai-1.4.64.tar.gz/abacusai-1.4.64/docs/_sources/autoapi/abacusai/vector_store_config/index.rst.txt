:py:mod:`abacusai.vector_store_config`
======================================

.. py:module:: abacusai.vector_store_config


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   abacusai.vector_store_config.VectorStoreConfig




.. py:class:: VectorStoreConfig(client, chunkSize=None, chunkOverlapFraction=None, textEncoder=None)


   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`

   A config for vector store creation.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param chunkSize: The size of chunks for vector store, i.e., maximum number of words in the chunk.
   :type chunkSize: int
   :param chunkOverlapFraction: The fraction of overlap between two consecutive chunks.
   :type chunkOverlapFraction: float
   :param textEncoder: The text encoder used to encode texts in the vector store.
   :type textEncoder: str

   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



