abacusai.llm_artifact
=====================

.. py:module:: abacusai.llm_artifact


Classes
-------

.. autoapisummary::

   abacusai.llm_artifact.LlmArtifact


Module Contents
---------------

.. py:class:: LlmArtifact(client, llmArtifactId=None, info=None, description=None, createdAt=None, webAppDeploymentId=None, deploymentStatus=None, isLatest=None, deploymentConversationId=None, webAppProjectId=None, hasDatabase=None, hasStorage=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   LLM Artifact

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param llmArtifactId: The ID of the LLM artifact
   :type llmArtifactId: id
   :param info: The info of the LLM artifact
   :type info: dict
   :param description: The description of the LLM artifact
   :type description: str
   :param createdAt: The creation timestamp
   :type createdAt: str
   :param webAppDeploymentId: The ID of the associated web app deployment
   :type webAppDeploymentId: id
   :param deploymentStatus: The status of the associated web app deployment
   :type deploymentStatus: str
   :param isLatest: Whether it is the most recent version of the artifact
   :type isLatest: bool
   :param deploymentConversationId: The ID of the deployment conversation
   :type deploymentConversationId: id
   :param webAppProjectId: The ID of the web app project
   :type webAppProjectId: id
   :param hasDatabase: Whether the app associated with the artifact has a database
   :type hasDatabase: bool
   :param hasStorage: Whether the app associated with the artifact has a storage
   :type hasStorage: bool


   .. py:attribute:: llm_artifact_id
      :value: None



   .. py:attribute:: info
      :value: None



   .. py:attribute:: description
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: web_app_deployment_id
      :value: None



   .. py:attribute:: deployment_status
      :value: None



   .. py:attribute:: is_latest
      :value: None



   .. py:attribute:: deployment_conversation_id
      :value: None



   .. py:attribute:: web_app_project_id
      :value: None



   .. py:attribute:: has_database
      :value: None



   .. py:attribute:: has_storage
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



