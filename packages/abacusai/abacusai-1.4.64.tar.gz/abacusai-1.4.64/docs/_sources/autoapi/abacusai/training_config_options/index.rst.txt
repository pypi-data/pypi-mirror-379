abacusai.training_config_options
================================

.. py:module:: abacusai.training_config_options


Classes
-------

.. autoapisummary::

   abacusai.training_config_options.TrainingConfigOptions


Module Contents
---------------

.. py:class:: TrainingConfigOptions(client, name=None, dataType=None, valueType=None, valueOptions=None, value=None, default=None, options=None, description=None, required=None, lastModelValue=None, needsRefresh=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Training options for a model

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param name: The name of the parameter
   :type name: str
   :param dataType: The type of input required for this option
   :type dataType: str
   :param valueType: If the data_type is of type DICT_VALUES, this field specifies the expected value type of the values
   :type valueType: str
   :param valueOptions: The list of valid values for DICT_VALUES
   :type valueOptions: list[str]
   :param value: The value of this option
   :type value: optional[any]
   :param default: The default value for this option
   :type default: optional[any]
   :param options: A dict of options for this parameter
   :type options: dict
   :param description: A description of the parameter
   :type description: str
   :param required: True if the parameter is required for training
   :type required: bool
   :param lastModelValue: The last value used to train a model in this project
   :type lastModelValue: optional[str, int, float, bool]
   :param needsRefresh: True if training config needs to be fetched again when this config option is changed
   :type needsRefresh: bool


   .. py:attribute:: name
      :value: None



   .. py:attribute:: data_type
      :value: None



   .. py:attribute:: value_type
      :value: None



   .. py:attribute:: value_options
      :value: None



   .. py:attribute:: value
      :value: None



   .. py:attribute:: default
      :value: None



   .. py:attribute:: options
      :value: None



   .. py:attribute:: description
      :value: None



   .. py:attribute:: required
      :value: None



   .. py:attribute:: last_model_value
      :value: None



   .. py:attribute:: needs_refresh
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



