:py:mod:`abacusai.prediction_metric_version`
============================================

.. py:module:: abacusai.prediction_metric_version


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   abacusai.prediction_metric_version.PredictionMetricVersion




.. py:class:: PredictionMetricVersion(client, createdAt=None, error=None, featureGroupVersion=None, predictionMetricCompletedAt=None, predictionMetricConfig=None, predictionMetricId=None, predictionMetricStartedAt=None, predictionMetricVersion=None, status=None)


   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`

   A Prediction Metric version for a Prediction Metric job description.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param createdAt: Date and time when this prediction metric version was created.
   :type createdAt: str
   :param error: Relevant error if the status of this job version is FAILED.
   :type error: str
   :param featureGroupVersion: The feature group version used as input to this prediction metric.
   :type featureGroupVersion: str
   :param predictionMetricCompletedAt: The time and date computations were completed for this job version.
   :type predictionMetricCompletedAt: str
   :param predictionMetricConfig: Specification for the prediction metric used to run this job.
   :type predictionMetricConfig: dict
   :param predictionMetricId: The unique identifier of the prediction metric this is a version of.
   :type predictionMetricId: str
   :param predictionMetricStartedAt: The time and date computations were started for this job version.
   :type predictionMetricStartedAt: str
   :param predictionMetricVersion: The unique identifier of this prediction metric version.
   :type predictionMetricVersion: str
   :param status: The current status of the computations for this job version.
   :type status: str

   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict


   .. py:method:: wait_for_prediction_metric_version(timeout=1200)

      A waiting call until the prediction metric version is ready.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int, optional


   .. py:method:: get_status()

      Get the lifecycle status of this version.

      :returns: An enum value of the lifecycle status of this version.
      :rtype: str



