abacusai.deployment_conversation_event
======================================

.. py:module:: abacusai.deployment_conversation_event


Classes
-------

.. autoapisummary::

   abacusai.deployment_conversation_event.DeploymentConversationEvent


Module Contents
---------------

.. py:class:: DeploymentConversationEvent(client, role=None, text=None, timestamp=None, messageIndex=None, regenerateAttempt=None, modelVersion=None, searchResults=None, isUseful=None, feedback=None, feedbackType=None, docInfos=None, keywordArguments=None, inputParams=None, attachments=None, responseVersion=None, agentWorkflowNodeId=None, nextAgentWorkflowNodeId=None, chatType=None, agentResponse=None, error=None, segments=None, streamedData=None, streamedSectionData=None, highlights=None, llmDisplayName=None, llmBotIcon=None, formResponse=None, routedLlm=None, computePointsUsed=None, computerFiles=None, toolUseRequest=None, verificationSummary=None, attachedUserFileNames=None, oldFileContent=None, allVersions=None, selectedVersionIndex=None, totalVersions=None, isLastMessage=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A single deployment conversation message.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param role: The role of the message sender
   :type role: str
   :param text: The text of the message
   :type text: str
   :param timestamp: The timestamp at which the message was sent
   :type timestamp: str
   :param messageIndex: The index of the message in the conversation
   :type messageIndex: int
   :param regenerateAttempt: The sequence number of regeneration. Not regenerated if 0.
   :type regenerateAttempt: int
   :param modelVersion: The model instance id associated with the message.
   :type modelVersion: str
   :param searchResults: The search results for the message.
   :type searchResults: dict
   :param isUseful: Whether this message was marked as useful or not
   :type isUseful: bool
   :param feedback: The feedback provided for the message
   :type feedback: str
   :param feedbackType: The type of feedback provided for the message
   :type feedbackType: str
   :param docInfos: A list of information on the documents associated with the message
   :type docInfos: list
   :param keywordArguments: User message only. A dictionary of keyword arguments used to generate response.
   :type keywordArguments: dict
   :param inputParams: User message only. A dictionary of input parameters used to generate response.
   :type inputParams: dict
   :param attachments: A list of attachments associated with the message.
   :type attachments: list
   :param responseVersion: The version of the response, used to differentiate w/ legacy agent response.
   :type responseVersion: str
   :param agentWorkflowNodeId: The workflow node id associated with the agent response.
   :type agentWorkflowNodeId: str
   :param nextAgentWorkflowNodeId: The id of the workflow node to be executed next.
   :type nextAgentWorkflowNodeId: str
   :param chatType: The type of chat llm that was run for the message.
   :type chatType: str
   :param agentResponse: Response from the agent. Only for conversation with agents.
   :type agentResponse: dict
   :param error: The error message in case of an error.
   :type error: str
   :param segments: The segments of the message.
   :type segments: list
   :param streamedData: Aggregated streamed messages from the agent.
   :type streamedData: str
   :param streamedSectionData: Aggregated streamed section outputs from the agent in a list.
   :type streamedSectionData: str
   :param highlights: Chunks with bounding boxes for highlighting the result sources.
   :type highlights: dict
   :param llmDisplayName: The display name of the LLM model used to generate the response. Only used for system-created bots.
   :type llmDisplayName: str
   :param llmBotIcon: The icon location of the LLM model used to generate the response. Only used for system-created bots.
   :type llmBotIcon: str
   :param formResponse: Contains form data response from the user when a Form Segment is given out by the bot.
   :type formResponse: dict
   :param routedLlm: The LLM that was chosen by RouteLLM to generate the response.
   :type routedLlm: str
   :param computePointsUsed: The number of compute points used for the message.
   :type computePointsUsed: int
   :param computerFiles: The list of files that were created by the computer agent.
   :type computerFiles: list
   :param toolUseRequest: The tool use request for the message.
   :type toolUseRequest: dict
   :param verificationSummary: The summary of the verification process for the message.
   :type verificationSummary: str
   :param attachedUserFileNames: The list of files attached by the user on the message.
   :type attachedUserFileNames: list
   :param oldFileContent: The content of the file associated with an edit tool request before the file was edited
   :type oldFileContent: str
   :param allVersions: All versions of the last bot message for version switching functionality.
   :type allVersions: list
   :param selectedVersionIndex: The index of the currently selected version of the last bot message.
   :type selectedVersionIndex: int
   :param totalVersions: The total number of versions available for the last bot message.
   :type totalVersions: int
   :param isLastMessage: Whether this message is the last message in the conversation.
   :type isLastMessage: bool


   .. py:attribute:: role
      :value: None



   .. py:attribute:: text
      :value: None



   .. py:attribute:: timestamp
      :value: None



   .. py:attribute:: message_index
      :value: None



   .. py:attribute:: regenerate_attempt
      :value: None



   .. py:attribute:: model_version
      :value: None



   .. py:attribute:: search_results
      :value: None



   .. py:attribute:: is_useful
      :value: None



   .. py:attribute:: feedback
      :value: None



   .. py:attribute:: feedback_type
      :value: None



   .. py:attribute:: doc_infos
      :value: None



   .. py:attribute:: keyword_arguments
      :value: None



   .. py:attribute:: input_params
      :value: None



   .. py:attribute:: attachments
      :value: None



   .. py:attribute:: response_version
      :value: None



   .. py:attribute:: agent_workflow_node_id
      :value: None



   .. py:attribute:: next_agent_workflow_node_id
      :value: None



   .. py:attribute:: chat_type
      :value: None



   .. py:attribute:: agent_response
      :value: None



   .. py:attribute:: error
      :value: None



   .. py:attribute:: segments
      :value: None



   .. py:attribute:: streamed_data
      :value: None



   .. py:attribute:: streamed_section_data
      :value: None



   .. py:attribute:: highlights
      :value: None



   .. py:attribute:: llm_display_name
      :value: None



   .. py:attribute:: llm_bot_icon
      :value: None



   .. py:attribute:: form_response
      :value: None



   .. py:attribute:: routed_llm
      :value: None



   .. py:attribute:: compute_points_used
      :value: None



   .. py:attribute:: computer_files
      :value: None



   .. py:attribute:: tool_use_request
      :value: None



   .. py:attribute:: verification_summary
      :value: None



   .. py:attribute:: attached_user_file_names
      :value: None



   .. py:attribute:: old_file_content
      :value: None



   .. py:attribute:: all_versions
      :value: None



   .. py:attribute:: selected_version_index
      :value: None



   .. py:attribute:: total_versions
      :value: None



   .. py:attribute:: is_last_message
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



