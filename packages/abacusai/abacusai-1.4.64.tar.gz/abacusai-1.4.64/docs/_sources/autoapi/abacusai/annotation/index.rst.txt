abacusai.annotation
===================

.. py:module:: abacusai.annotation


Classes
-------

.. autoapisummary::

   abacusai.annotation.Annotation


Module Contents
---------------

.. py:class:: Annotation(client, annotationType=None, annotationValue=None, comments=None, metadata=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   An Annotation Store Annotation

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param annotationType: A name determining the type of annotation and how to interpret the annotation value data, e.g. as a label, bounding box, etc.
   :type annotationType: str
   :param annotationValue: JSON-compatible value of the annotation. The format of the value is determined by the annotation type.
   :type annotationValue: dict
   :param comments: Comments about the annotation. This is a dictionary of feature name to the corresponding comment.
   :type comments: dict
   :param metadata: Metadata about the annotation.
   :type metadata: dict


   .. py:attribute:: annotation_type
      :value: None



   .. py:attribute:: annotation_value
      :value: None



   .. py:attribute:: comments
      :value: None



   .. py:attribute:: metadata
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



