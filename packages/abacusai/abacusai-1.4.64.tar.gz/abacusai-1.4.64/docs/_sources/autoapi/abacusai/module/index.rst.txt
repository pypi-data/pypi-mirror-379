abacusai.module
===============

.. py:module:: abacusai.module


Classes
-------

.. autoapisummary::

   abacusai.module.Module


Module Contents
---------------

.. py:class:: Module(client, name=None, createdAt=None, notebookId=None, hideModuleCode=None, codeSource={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Customer created python module

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param name: The name to identify the algorithm. Only uppercase letters, numbers, and underscores are allowed.
   :type name: str
   :param createdAt: The date and time when the Python function was created, in ISO-8601 format.
   :type createdAt: str
   :param notebookId: The unique string identifier of the notebook used to create or edit the module.
   :type notebookId: str
   :param hideModuleCode: Whether the module code is hidden from external users
   :type hideModuleCode: bool
   :param codeSource: Information about the source code of the Python function.
   :type codeSource: CodeSource


   .. py:attribute:: name
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: notebook_id
      :value: None



   .. py:attribute:: hide_module_code
      :value: None



   .. py:attribute:: code_source


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



