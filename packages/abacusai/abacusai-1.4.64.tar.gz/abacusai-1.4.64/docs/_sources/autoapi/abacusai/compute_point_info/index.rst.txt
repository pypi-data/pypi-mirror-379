abacusai.compute_point_info
===========================

.. py:module:: abacusai.compute_point_info


Classes
-------

.. autoapisummary::

   abacusai.compute_point_info.ComputePointInfo


Module Contents
---------------

.. py:class:: ComputePointInfo(client, updatedAt=None, last24HoursUsage=None, last7DaysUsage=None, currMonthAvailPoints=None, currMonthUsage=None, lastThrottlePopUp=None, alwaysDisplay=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   The compute point info of the organization

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param updatedAt: The last time the compute point info was updated
   :type updatedAt: str
   :param last24HoursUsage: The 24 hours usage of the organization
   :type last24HoursUsage: int
   :param last7DaysUsage: The 7 days usage of the organization
   :type last7DaysUsage: int
   :param currMonthAvailPoints: The current month's available compute points
   :type currMonthAvailPoints: int
   :param currMonthUsage: The current month's usage compute points
   :type currMonthUsage: int
   :param lastThrottlePopUp: The last time the organization was throttled
   :type lastThrottlePopUp: str
   :param alwaysDisplay: Whether to always display the compute point toggle
   :type alwaysDisplay: bool


   .. py:attribute:: updated_at
      :value: None



   .. py:attribute:: last_24_hours_usage
      :value: None



   .. py:attribute:: last_7_days_usage
      :value: None



   .. py:attribute:: curr_month_avail_points
      :value: None



   .. py:attribute:: curr_month_usage
      :value: None



   .. py:attribute:: last_throttle_pop_up
      :value: None



   .. py:attribute:: always_display
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



