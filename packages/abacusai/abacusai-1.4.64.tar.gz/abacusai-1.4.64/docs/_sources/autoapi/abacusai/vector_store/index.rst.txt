:py:mod:`abacusai.vector_store`
===============================

.. py:module:: abacusai.vector_store


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   abacusai.vector_store.VectorStore




.. py:class:: VectorStore(client, name=None, vectorStoreId=None, createdAt=None, latestVectorStoreVersion={}, vectorStoreConfig={})


   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`

   A vector store that stores embeddings for a list of document trunks.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param name: The name of the vector store.
   :type name: str
   :param vectorStoreId: The unique identifier of the vector store.
   :type vectorStoreId: str
   :param createdAt: When the vector store was created.
   :type createdAt: str
   :param latestVectorStoreVersion: The latest version of vector store.
   :type latestVectorStoreVersion: VectorStoreVersion
   :param vectorStoreConfig: The config for vector store creation.
   :type vectorStoreConfig: VectorStoreConfig

   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict


   .. py:method:: delete_document_retriever()

      Delete a Document Retriever.

      :param vector_store_id: A unique string identifier associated with the document retriever.
      :type vector_store_id: str


   .. py:method:: wait_until_ready(timeout = 3600)

      A waiting call until vector store is ready.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out. Default value given is 3600 seconds.
      :type timeout: int, optional


   .. py:method:: get_status()

      Gets the status of the vector store.

      :returns: A string describing the status of a vector store (pending, complete, etc.).
      :rtype: str



