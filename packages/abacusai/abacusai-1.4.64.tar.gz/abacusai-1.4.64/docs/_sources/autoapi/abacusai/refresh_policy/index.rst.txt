abacusai.refresh_policy
=======================

.. py:module:: abacusai.refresh_policy


Classes
-------

.. autoapisummary::

   abacusai.refresh_policy.RefreshPolicy


Module Contents
---------------

.. py:class:: RefreshPolicy(client, refreshPolicyId=None, name=None, cron=None, nextRunTime=None, createdAt=None, refreshType=None, projectId=None, datasetIds=None, featureGroupId=None, modelIds=None, deploymentIds=None, batchPredictionIds=None, modelMonitorIds=None, notebookId=None, paused=None, predictionOperatorId=None, pipelineId=None, featureGroupExportConfig={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A Refresh Policy describes the frequency at which one or more datasets/models/deployments/batch_predictions can be updated.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param refreshPolicyId: The unique identifier for the refresh policy
   :type refreshPolicyId: str
   :param name: The user-friendly name for the refresh policy
   :type name: str
   :param cron: A cron-style string that describes when this refresh policy is to be executed in UTC
   :type cron: str
   :param nextRunTime: The next UTC time that this refresh policy will be executed
   :type nextRunTime: str
   :param createdAt: The time when the refresh policy was created
   :type createdAt: str
   :param refreshType: The type of refresh policy to be run
   :type refreshType: str
   :param projectId: The unique identifier of a project that this refresh policy applies to
   :type projectId: str
   :param datasetIds: Comma-separated list of Dataset IDs that this refresh policy applies to
   :type datasetIds: list[str]
   :param featureGroupId: Feature Group ID that this refresh policy applies to
   :type featureGroupId: str
   :param modelIds: Comma-separated list of Model IDs that this refresh policy applies to
   :type modelIds: list[str]
   :param deploymentIds: Comma-separated list of Deployment IDs that this refresh policy applies to
   :type deploymentIds: list[str]
   :param batchPredictionIds: Comma-separated list of Batch Prediction IDs that this refresh policy applies to
   :type batchPredictionIds: list[str]
   :param modelMonitorIds: Comma-separated list of Model Monitor IDs that this refresh policy applies to
   :type modelMonitorIds: list[str]
   :param notebookId: Notebook ID that this refresh policy applies to
   :type notebookId: str
   :param paused: True if the refresh policy is paused
   :type paused: bool
   :param predictionOperatorId: Prediction Operator ID that this refresh policy applies to
   :type predictionOperatorId: str
   :param pipelineId: The Pipeline ID With The Cron Schedule
   :type pipelineId: str
   :param featureGroupExportConfig: The export configuration for the feature group. Only applicable if refresh_type is FEATUREGROUP.
   :type featureGroupExportConfig: FeatureGroupRefreshExportConfig


   .. py:attribute:: refresh_policy_id
      :value: None



   .. py:attribute:: name
      :value: None



   .. py:attribute:: cron
      :value: None



   .. py:attribute:: next_run_time
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: refresh_type
      :value: None



   .. py:attribute:: project_id
      :value: None



   .. py:attribute:: dataset_ids
      :value: None



   .. py:attribute:: feature_group_id
      :value: None



   .. py:attribute:: model_ids
      :value: None



   .. py:attribute:: deployment_ids
      :value: None



   .. py:attribute:: batch_prediction_ids
      :value: None



   .. py:attribute:: model_monitor_ids
      :value: None



   .. py:attribute:: notebook_id
      :value: None



   .. py:attribute:: paused
      :value: None



   .. py:attribute:: prediction_operator_id
      :value: None



   .. py:attribute:: pipeline_id
      :value: None



   .. py:attribute:: feature_group_export_config


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: delete()

      Delete a refresh policy.

      :param refresh_policy_id: Unique string identifier associated with the refresh policy to delete.
      :type refresh_policy_id: str



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: RefreshPolicy



   .. py:method:: describe()

      Retrieve a single refresh policy

      :param refresh_policy_id: The unique ID associated with this refresh policy.
      :type refresh_policy_id: str

      :returns: An object representing the refresh policy.
      :rtype: RefreshPolicy



   .. py:method:: list_refresh_pipeline_runs()

      List the the times that the refresh policy has been run

      :param refresh_policy_id: Unique identifier associated with the refresh policy.
      :type refresh_policy_id: str

      :returns: List of refresh pipeline runs for the given refresh policy ID.
      :rtype: list[RefreshPipelineRun]



   .. py:method:: pause()

      Pauses a refresh policy

      :param refresh_policy_id: Unique identifier associated with the refresh policy to be paused.
      :type refresh_policy_id: str



   .. py:method:: resume()

      Resumes a refresh policy

      :param refresh_policy_id: The unique ID associated with this refresh policy.
      :type refresh_policy_id: str



   .. py:method:: run()

      Force a run of the refresh policy.

      :param refresh_policy_id: Unique string identifier associated with the refresh policy to be run.
      :type refresh_policy_id: str



   .. py:method:: update(name = None, cron = None, feature_group_export_config = None)

      Update the name or cron string of a refresh policy

      :param name: Name of the refresh policy to be updated.
      :type name: str
      :param cron: Cron string describing the schedule from the refresh policy to be updated.
      :type cron: str
      :param feature_group_export_config: Feature group export configuration to update a feature group refresh policy.
      :type feature_group_export_config: FeatureGroupExportConfig

      :returns: Updated refresh policy.
      :rtype: RefreshPolicy



