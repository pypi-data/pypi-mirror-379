abacusai.web_app_domain
=======================

.. py:module:: abacusai.web_app_domain


Classes
-------

.. autoapisummary::

   abacusai.web_app_domain.WebAppDomain


Module Contents
---------------

.. py:class:: WebAppDomain(client, webAppDomainId=None, hostname=None, domainType=None, lifecycle=None, nameservers=None, dnsRecords=None, metadata=None, isRootDomain=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Web App Domain

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param webAppDomainId: The ID of the web app domain
   :type webAppDomainId: id
   :param hostname: The hostname of the web app domain
   :type hostname: str
   :param domainType: The type of the web app domain
   :type domainType: str
   :param lifecycle: The lifecycle of the web app domain
   :type lifecycle: str
   :param nameservers: The nameservers of the web app domain
   :type nameservers: list
   :param dnsRecords: The DNS records of the web app domain
   :type dnsRecords: list
   :param metadata: The metadata of the web app domain
   :type metadata: dict
   :param isRootDomain: Whether the web app domain is a root domain
   :type isRootDomain: bool


   .. py:attribute:: web_app_domain_id
      :value: None



   .. py:attribute:: hostname
      :value: None



   .. py:attribute:: domain_type
      :value: None



   .. py:attribute:: lifecycle
      :value: None



   .. py:attribute:: nameservers
      :value: None



   .. py:attribute:: dns_records
      :value: None



   .. py:attribute:: metadata
      :value: None



   .. py:attribute:: is_root_domain
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



