abacusai.problem_type
=====================

.. py:module:: abacusai.problem_type


Classes
-------

.. autoapisummary::

   abacusai.problem_type.ProblemType


Module Contents
---------------

.. py:class:: ProblemType(client, problemType=None, requiredFeatureGroupType=None, optionalFeatureGroupTypes=None, useCasesSupportCustomAlgorithm=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Description of a problem type which is the common underlying problem for different use cases.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param problemType: Name of the problem type
   :type problemType: str
   :param requiredFeatureGroupType: The required feature group types to train for this problem type
   :type requiredFeatureGroupType: str
   :param optionalFeatureGroupTypes: The optional feature group types can be used to train for this problem type
   :type optionalFeatureGroupTypes: list[str]
   :param useCasesSupportCustomAlgorithm: A list of use cases that support custom algorithms
   :type useCasesSupportCustomAlgorithm: list


   .. py:attribute:: problem_type
      :value: None



   .. py:attribute:: required_feature_group_type
      :value: None



   .. py:attribute:: optional_feature_group_types
      :value: None



   .. py:attribute:: use_cases_support_custom_algorithm
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



