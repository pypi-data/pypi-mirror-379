abacusai.model_monitor
======================

.. py:module:: abacusai.model_monitor


Classes
-------

.. autoapisummary::

   abacusai.model_monitor.ModelMonitor


Module Contents
---------------

.. py:class:: ModelMonitor(client, modelMonitorId=None, name=None, createdAt=None, projectId=None, trainingFeatureGroupId=None, predictionFeatureGroupId=None, predictionFeatureGroupVersion=None, trainingFeatureGroupVersion=None, alertConfig=None, biasMetricId=None, metricConfigs=None, featureGroupMonitorConfigs=None, metricTypes=None, modelId=None, starred=None, batchPredictionId=None, monitorType=None, edaConfigs=None, trainingForecastConfig=None, predictionForecastConfig=None, forecastFrequency=None, trainingFeatureGroupSampling=None, predictionFeatureGroupSampling=None, monitorDriftConfig=None, predictionDataUseMappings=None, trainingDataUseMappings=None, refreshSchedules={}, latestMonitorModelVersion={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A model monitor

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param modelMonitorId: The unique identifier of the model monitor.
   :type modelMonitorId: str
   :param name: The user-friendly name for the model monitor.
   :type name: str
   :param createdAt: Date and time at which the model was created.
   :type createdAt: str
   :param projectId: The project this model belongs to.
   :type projectId: str
   :param trainingFeatureGroupId: Feature group IDs that this model monitor is monitoring.
   :type trainingFeatureGroupId: list[str]
   :param predictionFeatureGroupId: Feature group IDs that this model monitor is monitoring.
   :type predictionFeatureGroupId: list[str]
   :param predictionFeatureGroupVersion: Feature group versions that this model monitor is monitoring.
   :type predictionFeatureGroupVersion: list[str]
   :param trainingFeatureGroupVersion: Feature group versions that this model monitor is monitoring.
   :type trainingFeatureGroupVersion: list[str]
   :param alertConfig: Alerting configuration for this model monitor.
   :type alertConfig: dict
   :param biasMetricId: The bias metric ID
   :type biasMetricId: str
   :param metricConfigs: Configurations for model monitor
   :type metricConfigs: dict
   :param featureGroupMonitorConfigs: Configurations for feature group monitor
   :type featureGroupMonitorConfigs: dict
   :param metricTypes: List of metric types
   :type metricTypes: dict
   :param modelId: Model ID that this model monitor is monitoring.
   :type modelId: str
   :param starred: Whether this model monitor is starred.
   :type starred: bool
   :param batchPredictionId: The batch prediction ID this model monitor monitors
   :type batchPredictionId: str
   :param monitorType: The type of the monitor, one of MODEL_MONITOR, or FEATURE_GROUP_MONITOR
   :type monitorType: str
   :param edaConfigs: The configs for EDA
   :type edaConfigs: dict
   :param trainingForecastConfig: The tarining config for forecast monitors
   :type trainingForecastConfig: dict
   :param predictionForecastConfig: The prediction config for forecast monitors
   :type predictionForecastConfig: dict
   :param forecastFrequency: The frequency of the forecast
   :type forecastFrequency: str
   :param trainingFeatureGroupSampling: Whether or not we sample from training feature group
   :type trainingFeatureGroupSampling: bool
   :param predictionFeatureGroupSampling: Whether or not we sample from prediction feature group
   :type predictionFeatureGroupSampling: bool
   :param monitorDriftConfig: The monitor drift config for the monitor
   :type monitorDriftConfig: dict
   :param predictionDataUseMappings: The data_use mapping of the prediction features
   :type predictionDataUseMappings: dict
   :param trainingDataUseMappings: The data_use mapping of the training features
   :type trainingDataUseMappings: dict
   :param latestMonitorModelVersion: The latest model monitor version.
   :type latestMonitorModelVersion: ModelMonitorVersion
   :param refreshSchedules: List of refresh schedules that indicate when the next model version will be trained.
   :type refreshSchedules: RefreshSchedule


   .. py:attribute:: model_monitor_id
      :value: None



   .. py:attribute:: name
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: project_id
      :value: None



   .. py:attribute:: training_feature_group_id
      :value: None



   .. py:attribute:: prediction_feature_group_id
      :value: None



   .. py:attribute:: prediction_feature_group_version
      :value: None



   .. py:attribute:: training_feature_group_version
      :value: None



   .. py:attribute:: alert_config
      :value: None



   .. py:attribute:: bias_metric_id
      :value: None



   .. py:attribute:: metric_configs
      :value: None



   .. py:attribute:: feature_group_monitor_configs
      :value: None



   .. py:attribute:: metric_types
      :value: None



   .. py:attribute:: model_id
      :value: None



   .. py:attribute:: starred
      :value: None



   .. py:attribute:: batch_prediction_id
      :value: None



   .. py:attribute:: monitor_type
      :value: None



   .. py:attribute:: eda_configs
      :value: None



   .. py:attribute:: training_forecast_config
      :value: None



   .. py:attribute:: prediction_forecast_config
      :value: None



   .. py:attribute:: forecast_frequency
      :value: None



   .. py:attribute:: training_feature_group_sampling
      :value: None



   .. py:attribute:: prediction_feature_group_sampling
      :value: None



   .. py:attribute:: monitor_drift_config
      :value: None



   .. py:attribute:: prediction_data_use_mappings
      :value: None



   .. py:attribute:: training_data_use_mappings
      :value: None



   .. py:attribute:: refresh_schedules


   .. py:attribute:: latest_monitor_model_version


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: rerun()

      Re-runs the specified model monitor.

      :param model_monitor_id: Unique string identifier of the model monitor to re-run.
      :type model_monitor_id: str

      :returns: The model monitor that is being re-run.
      :rtype: ModelMonitor



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: ModelMonitor



   .. py:method:: describe()

      Retrieves a full description of the specified model monitor.

      :param model_monitor_id: Unique string identifier associated with the model monitor.
      :type model_monitor_id: str

      :returns: Description of the model monitor.
      :rtype: ModelMonitor



   .. py:method:: get_summary()

      Gets the summary of a model monitor across versions.

      :param model_monitor_id: A unique string identifier associated with the model monitor.
      :type model_monitor_id: str

      :returns: An object describing integrity, bias violations, model accuracy and drift for the model monitor.
      :rtype: ModelMonitorSummary



   .. py:method:: list_versions(limit = 100, start_after_version = None)

      Retrieves a list of versions for a given model monitor.

      :param limit: The maximum length of the list of all model monitor versions.
      :type limit: int
      :param start_after_version: The ID of the version after which the list starts.
      :type start_after_version: str

      :returns: A list of model monitor versions.
      :rtype: list[ModelMonitorVersion]



   .. py:method:: rename(name)

      Renames a model monitor

      :param name: The new name to apply to the model monitor.
      :type name: str



   .. py:method:: delete()

      Deletes the specified Model Monitor and all its versions.

      :param model_monitor_id: Unique identifier of the Model Monitor to delete.
      :type model_monitor_id: str



   .. py:method:: list_monitor_alerts_for_monitor(realtime_monitor_id = None)

      Retrieves the list of monitor alerts for a specified monitor. One of the model_monitor_id or realtime_monitor_id is required but not both.

      :param realtime_monitor_id: The unique ID associated with the real-time monitor.
      :type realtime_monitor_id: str

      :returns: A list of monitor alerts.
      :rtype: list[MonitorAlert]



