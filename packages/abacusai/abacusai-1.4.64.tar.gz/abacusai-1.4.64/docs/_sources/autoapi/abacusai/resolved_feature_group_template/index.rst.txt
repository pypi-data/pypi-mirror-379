abacusai.resolved_feature_group_template
========================================

.. py:module:: abacusai.resolved_feature_group_template


Classes
-------

.. autoapisummary::

   abacusai.resolved_feature_group_template.ResolvedFeatureGroupTemplate


Module Contents
---------------

.. py:class:: ResolvedFeatureGroupTemplate(client, featureGroupTemplateId=None, resolvedVariables=None, resolvedSql=None, templateSql=None, sqlError=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Final SQL from resolving a feature group template.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param featureGroupTemplateId: Unique identifier for this feature group template.
   :type featureGroupTemplateId: str
   :param resolvedVariables: Map from template variable names to parameters available during template resolution.
   :type resolvedVariables: dict
   :param resolvedSql: SQL resulting from resolving the SQL template by applying the resolved bindings.
   :type resolvedSql: str
   :param templateSql: SQL that can include variables to be replaced by values from the template config to resolve this template SQL into a valid SQL query for a feature group.
   :type templateSql: str
   :param sqlError: if invalid, the sql error message
   :type sqlError: str


   .. py:attribute:: feature_group_template_id
      :value: None



   .. py:attribute:: resolved_variables
      :value: None



   .. py:attribute:: resolved_sql
      :value: None



   .. py:attribute:: template_sql
      :value: None



   .. py:attribute:: sql_error
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



