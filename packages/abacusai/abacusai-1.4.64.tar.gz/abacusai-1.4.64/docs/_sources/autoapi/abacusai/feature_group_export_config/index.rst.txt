abacusai.feature_group_export_config
====================================

.. py:module:: abacusai.feature_group_export_config


Classes
-------

.. autoapisummary::

   abacusai.feature_group_export_config.FeatureGroupExportConfig


Module Contents
---------------

.. py:class:: FeatureGroupExportConfig(client, outputLocation=None, fileFormat=None, databaseConnectorId=None, objectName=None, writeMode=None, databaseFeatureMapping=None, idColumn=None, additionalIdColumns=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Export configuration (file connector or database connector information) for feature group exports.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param outputLocation: The File Connector location to which the feature group is being written.
   :type outputLocation: str
   :param fileFormat: The file format being written to output_location.
   :type fileFormat: str
   :param databaseConnectorId: The unique string identifier of the database connector used.
   :type databaseConnectorId: str
   :param objectName: The object in the database connector to which the feature group is being written.
   :type objectName: str
   :param writeMode: UPSERT or INSERT for writing to the database connector.
   :type writeMode: str
   :param databaseFeatureMapping: The column/feature pairs mapping the features to the database columns.
   :type databaseFeatureMapping: dict
   :param idColumn: The id column to use as the upsert key.
   :type idColumn: str
   :param additionalIdColumns: For database connectors which support it, additional ID columns to use as a complex key for upserting.
   :type additionalIdColumns: str


   .. py:attribute:: output_location
      :value: None



   .. py:attribute:: file_format
      :value: None



   .. py:attribute:: database_connector_id
      :value: None



   .. py:attribute:: object_name
      :value: None



   .. py:attribute:: write_mode
      :value: None



   .. py:attribute:: database_feature_mapping
      :value: None



   .. py:attribute:: id_column
      :value: None



   .. py:attribute:: additional_id_columns
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



