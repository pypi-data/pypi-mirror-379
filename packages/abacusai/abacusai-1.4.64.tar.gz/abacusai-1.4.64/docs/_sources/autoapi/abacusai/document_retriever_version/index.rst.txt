abacusai.document_retriever_version
===================================

.. py:module:: abacusai.document_retriever_version


Classes
-------

.. autoapisummary::

   abacusai.document_retriever_version.DocumentRetrieverVersion


Module Contents
---------------

.. py:class:: DocumentRetrieverVersion(client, documentRetrieverId=None, documentRetrieverVersion=None, createdAt=None, status=None, deploymentStatus=None, featureGroupId=None, featureGroupVersion=None, error=None, numberOfChunks=None, embeddingFileSize=None, warnings=None, resolvedConfig={}, documentRetrieverConfig={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A version of document retriever.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param documentRetrieverId: The unique identifier of the Document Retriever.
   :type documentRetrieverId: str
   :param documentRetrieverVersion: The unique identifier of the Document Retriever version.
   :type documentRetrieverVersion: str
   :param createdAt: When the Document Retriever was created.
   :type createdAt: str
   :param status: The status of Document Retriever version. It represents indexing status until indexing isn't complete, and deployment status after indexing is complete.
   :type status: str
   :param deploymentStatus: The status of deploying the Document Retriever version.
   :type deploymentStatus: str
   :param featureGroupId: The feature group id associated with the document retriever.
   :type featureGroupId: str
   :param featureGroupVersion: The unique identifier of the feature group version at which the Document Retriever version is created.
   :type featureGroupVersion: str
   :param error: The error message when it failed to create the document retriever version.
   :type error: str
   :param numberOfChunks: The number of chunks for the document retriever.
   :type numberOfChunks: int
   :param embeddingFileSize: The size of embedding file for the document retriever.
   :type embeddingFileSize: int
   :param warnings: The warning messages when creating the document retriever.
   :type warnings: list
   :param resolvedConfig: The resolved configurations, such as default settings, for indexing documents.
   :type resolvedConfig: VectorStoreConfig
   :param documentRetrieverConfig: The config used to create the document retriever version.
   :type documentRetrieverConfig: VectorStoreConfig


   .. py:attribute:: document_retriever_id
      :value: None



   .. py:attribute:: document_retriever_version
      :value: None



   .. py:attribute:: created_at
      :value: None



   .. py:attribute:: status
      :value: None



   .. py:attribute:: deployment_status
      :value: None



   .. py:attribute:: feature_group_id
      :value: None



   .. py:attribute:: feature_group_version
      :value: None



   .. py:attribute:: error
      :value: None



   .. py:attribute:: number_of_chunks
      :value: None



   .. py:attribute:: embedding_file_size
      :value: None



   .. py:attribute:: warnings
      :value: None



   .. py:attribute:: resolved_config


   .. py:attribute:: document_retriever_config


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



   .. py:method:: delete()

      Delete a document retriever version.

      :param document_retriever_version: A unique string identifier associated with the document retriever version.
      :type document_retriever_version: str



   .. py:method:: refresh()

      Calls describe and refreshes the current object's fields

      :returns: The current object
      :rtype: DocumentRetrieverVersion



   .. py:method:: describe()

      Describe a document retriever version.

      :param document_retriever_version: A unique string identifier associated with the document retriever version.
      :type document_retriever_version: str

      :returns: The document retriever version object.
      :rtype: DocumentRetrieverVersion



   .. py:method:: wait_for_results(timeout=3600)

      A waiting call until document retriever version is complete.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int



   .. py:method:: wait_until_ready(timeout=3600)

      A waiting call until the document retriever version is ready.  It restarts the document retriever if it is stopped.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out.
      :type timeout: int



   .. py:method:: wait_until_deployment_ready(timeout = 3600)

      A waiting call until the document retriever deployment is ready to serve.

      :param timeout: The waiting time given to the call to finish, if it doesn't finish by the allocated time, the call is said to be timed out. Default value given is 3600 seconds.
      :type timeout: int



   .. py:method:: get_status()

      Gets the status of the document retriever version.

      :returns: A string describing the status of a document retriever version (pending, complete, etc.).
      :rtype: str



   .. py:method:: get_deployment_status()

      Gets the status of the document retriever version.

      :returns: A string describing the deployment status of a document retriever version (pending, deploying, etc.).
      :rtype: str



