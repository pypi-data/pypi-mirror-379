abacusai.eda_forecasting_analysis
=================================

.. py:module:: abacusai.eda_forecasting_analysis


Classes
-------

.. autoapisummary::

   abacusai.eda_forecasting_analysis.EdaForecastingAnalysis


Module Contents
---------------

.. py:class:: EdaForecastingAnalysis(client, primaryKeys=None, forecastingTargetFeature=None, timestampFeature=None, forecastFrequency=None, salesAcrossTime={}, cummulativeContribution={}, missingValueDistribution={}, historyLength={}, numRowsHistogram={}, productMaturity={}, seasonalityYear={}, seasonalityMonth={}, seasonalityWeekOfYear={}, seasonalityDayOfYear={}, seasonalityDayOfMonth={}, seasonalityDayOfWeek={}, seasonalityQuarter={}, seasonalityHour={}, seasonalityMinute={}, seasonalitySecond={}, autocorrelation={}, partialAutocorrelation={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   Eda Forecasting Analysis of the latest version of the data.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param primaryKeys: Name of the primary keys in the data
   :type primaryKeys: list
   :param forecastingTargetFeature: Feature in the data that represents the target.
   :type forecastingTargetFeature: str
   :param timestampFeature: Feature in the data that represents the timestamp column.
   :type timestampFeature: str
   :param forecastFrequency: Frequency of data, could be hourly, daily, weekly, monthly, quarterly or yearly.
   :type forecastFrequency: str
   :param salesAcrossTime: Data showing average, p10, p90, median sales across time
   :type salesAcrossTime: ForecastingAnalysisGraphData
   :param cummulativeContribution: Data showing what percent of items contribute to what amount of sales.
   :type cummulativeContribution: ForecastingAnalysisGraphData
   :param missingValueDistribution: Data showing missing or null value distribution
   :type missingValueDistribution: ForecastingAnalysisGraphData
   :param historyLength: Data showing length of history distribution
   :type historyLength: ForecastingAnalysisGraphData
   :param numRowsHistogram: Data showing number of rows for an item distribution
   :type numRowsHistogram: ForecastingAnalysisGraphData
   :param productMaturity: Data showing length of how long a product has been alive with average, p10, p90 and median
   :type productMaturity: ForecastingAnalysisGraphData
   :param seasonalityYear: Data showing average, p10, p90, median sales across grouped years
   :type seasonalityYear: ForecastingAnalysisGraphData
   :param seasonalityMonth: Data showing average, p10, p90, median sales across grouped months
   :type seasonalityMonth: ForecastingAnalysisGraphData
   :param seasonalityWeekOfYear: Data showing average, p10, p90, median sales across week of year seasonality
   :type seasonalityWeekOfYear: ForecastingAnalysisGraphData
   :param seasonalityDayOfYear: Data showing average, p10, p90, median sales across day of year seasonality
   :type seasonalityDayOfYear: ForecastingAnalysisGraphData
   :param seasonalityDayOfMonth: Data showing average, p10, p90, median sales across day of month seasonality
   :type seasonalityDayOfMonth: ForecastingAnalysisGraphData
   :param seasonalityDayOfWeek: Data showing average, p10, p90, median sales across day of week seasonality
   :type seasonalityDayOfWeek: ForecastingAnalysisGraphData
   :param seasonalityQuarter: Data showing average, p10, p90, median sales across grouped quarters
   :type seasonalityQuarter: ForecastingAnalysisGraphData
   :param seasonalityHour: Data showing average, p10, p90, median sales across grouped hours
   :type seasonalityHour: ForecastingAnalysisGraphData
   :param seasonalityMinute: Data showing average, p10, p90, median sales across grouped minutes
   :type seasonalityMinute: ForecastingAnalysisGraphData
   :param seasonalitySecond: Data showing average, p10, p90, median sales across grouped seconds
   :type seasonalitySecond: ForecastingAnalysisGraphData
   :param autocorrelation: Data showing the correlation of the forecasting target and its lagged values at different time lags.
   :type autocorrelation: ForecastingAnalysisGraphData
   :param partialAutocorrelation: Data showing the correlation of the forecasting target and its lagged values, controlling for the effects of intervening lags.
   :type partialAutocorrelation: ForecastingAnalysisGraphData


   .. py:attribute:: primary_keys
      :value: None



   .. py:attribute:: forecasting_target_feature
      :value: None



   .. py:attribute:: timestamp_feature
      :value: None



   .. py:attribute:: forecast_frequency
      :value: None



   .. py:attribute:: sales_across_time


   .. py:attribute:: cummulative_contribution


   .. py:attribute:: missing_value_distribution


   .. py:attribute:: history_length


   .. py:attribute:: num_rows_histogram


   .. py:attribute:: product_maturity


   .. py:attribute:: seasonality_year


   .. py:attribute:: seasonality_month


   .. py:attribute:: seasonality_week_of_year


   .. py:attribute:: seasonality_day_of_year


   .. py:attribute:: seasonality_day_of_month


   .. py:attribute:: seasonality_day_of_week


   .. py:attribute:: seasonality_quarter


   .. py:attribute:: seasonality_hour


   .. py:attribute:: seasonality_minute


   .. py:attribute:: seasonality_second


   .. py:attribute:: autocorrelation


   .. py:attribute:: partial_autocorrelation


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



