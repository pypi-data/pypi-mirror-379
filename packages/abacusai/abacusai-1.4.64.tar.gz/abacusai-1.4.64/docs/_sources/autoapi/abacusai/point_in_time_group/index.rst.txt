abacusai.point_in_time_group
============================

.. py:module:: abacusai.point_in_time_group


Classes
-------

.. autoapisummary::

   abacusai.point_in_time_group.PointInTimeGroup


Module Contents
---------------

.. py:class:: PointInTimeGroup(client, groupName=None, windowKey=None, aggregationKeys=None, lookbackWindow=None, lookbackWindowLag=None, lookbackCount=None, lookbackUntilPosition=None, historyTableName=None, historyWindowKey=None, historyAggregationKeys=None, features={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A point in time group containing point in time features

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param groupName: The name of the point in time group
   :type groupName: str
   :param windowKey: Name of feature which contains the timestamp value for the point in time feature
   :type windowKey: str
   :param aggregationKeys: List of keys to use for join the historical table and performing the window aggregation.
   :type aggregationKeys: list
   :param lookbackWindow: Number of seconds in the past from the current time for start of the window.
   :type lookbackWindow: float
   :param lookbackWindowLag: Optional lag to offset the closest point for the window. If it is positive, we delay the start of window. If it is negative, we are looking at the "future" rows in the history table.
   :type lookbackWindowLag: float
   :param lookbackCount: If window is specified in terms of count, the start position of the window (0 is the current row)
   :type lookbackCount: int
   :param lookbackUntilPosition: Optional lag to offset the closest point for the window. If it is positive, we delay the start of window by that many rows. If it is negative, we are looking at those many "future" rows in the history table.
   :type lookbackUntilPosition: int
   :param historyTableName: The table to use for aggregating, if not provided, the source table will be used
   :type historyTableName: str
   :param historyWindowKey: Name of feature to use for ordering the rows on the history table. If not provided, the windowKey from the source table will be used
   :type historyWindowKey: str
   :param historyAggregationKeys: List of keys to use for join the historical table and performing the window aggregation. If not provided, the aggregationKeys from the source table will be used. Must be the same length and order as the source table's aggregationKeys
   :type historyAggregationKeys: list
   :param features: List of features in the Point in Time group
   :type features: PointInTimeGroupFeature


   .. py:attribute:: group_name
      :value: None



   .. py:attribute:: window_key
      :value: None



   .. py:attribute:: aggregation_keys
      :value: None



   .. py:attribute:: lookback_window
      :value: None



   .. py:attribute:: lookback_window_lag
      :value: None



   .. py:attribute:: lookback_count
      :value: None



   .. py:attribute:: lookback_until_position
      :value: None



   .. py:attribute:: history_table_name
      :value: None



   .. py:attribute:: history_window_key
      :value: None



   .. py:attribute:: history_aggregation_keys
      :value: None



   .. py:attribute:: features


   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



