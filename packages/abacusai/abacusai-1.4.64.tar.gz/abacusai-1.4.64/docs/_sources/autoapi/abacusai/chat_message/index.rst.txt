abacusai.chat_message
=====================

.. py:module:: abacusai.chat_message


Classes
-------

.. autoapisummary::

   abacusai.chat_message.ChatMessage


Module Contents
---------------

.. py:class:: ChatMessage(client, role=None, text=None, timestamp=None, isUseful=None, feedback=None, docIds=None, hotkeyTitle=None, tasks=None, keywordArguments=None, computePointsUsed=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A single chat message with Abacus Chat.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param role: The role of the message sender
   :type role: str
   :param text: A list of text segments for the message
   :type text: list[dict]
   :param timestamp: The timestamp at which the message was sent
   :type timestamp: str
   :param isUseful: Whether this message was marked as useful or not
   :type isUseful: bool
   :param feedback: The feedback provided for the message
   :type feedback: str
   :param docIds: A list of IDs of the uploaded document if the message has
   :type docIds: list[str]
   :param hotkeyTitle: The title of the hotkey prompt if the message has one
   :type hotkeyTitle: str
   :param tasks: The list of spawned tasks, if the message was broken down into smaller sub-tasks.
   :type tasks: list[str]
   :param keywordArguments: A dict of kwargs used to generate the response.
   :type keywordArguments: dict
   :param computePointsUsed: The number of compute points used for the message.
   :type computePointsUsed: int


   .. py:attribute:: role
      :value: None



   .. py:attribute:: text
      :value: None



   .. py:attribute:: timestamp
      :value: None



   .. py:attribute:: is_useful
      :value: None



   .. py:attribute:: feedback
      :value: None



   .. py:attribute:: doc_ids
      :value: None



   .. py:attribute:: hotkey_title
      :value: None



   .. py:attribute:: tasks
      :value: None



   .. py:attribute:: keyword_arguments
      :value: None



   .. py:attribute:: compute_points_used
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



