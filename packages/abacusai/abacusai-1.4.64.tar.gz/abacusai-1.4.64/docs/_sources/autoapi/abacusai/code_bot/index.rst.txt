abacusai.code_bot
=================

.. py:module:: abacusai.code_bot


Classes
-------

.. autoapisummary::

   abacusai.code_bot.CodeBot


Module Contents
---------------

.. py:class:: CodeBot(client, llmName=None, name=None, imageUploadSupported=None, codeAgentSupported=None, codeEditSupported=None, isPremium=None, llmBotIcon=None, provider=None, isUserApiKeyAllowed=None, isRateLimited=None, apiKeyUrl=None)

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`


   A bot option for CodeLLM

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param llmName: The name of the LLM.
   :type llmName: str
   :param name: The name of the bot.
   :type name: str
   :param imageUploadSupported: Whether the LLM supports image upload.
   :type imageUploadSupported: bool
   :param codeAgentSupported: Whether the LLM supports code agent.
   :type codeAgentSupported: bool
   :param codeEditSupported: Whether the LLM supports code edit.
   :type codeEditSupported: bool
   :param isPremium: Whether the LLM is a premium LLM.
   :type isPremium: bool
   :param llmBotIcon: The icon of the LLM bot.
   :type llmBotIcon: str
   :param provider: The provider of the LLM.
   :type provider: str
   :param isUserApiKeyAllowed: Whether the LLM supports user API key.
   :type isUserApiKeyAllowed: bool
   :param isRateLimited: Whether the LLM is rate limited.
   :type isRateLimited: bool
   :param apiKeyUrl: The URL to get the API key.
   :type apiKeyUrl: str


   .. py:attribute:: llm_name
      :value: None



   .. py:attribute:: name
      :value: None



   .. py:attribute:: image_upload_supported
      :value: None



   .. py:attribute:: code_agent_supported
      :value: None



   .. py:attribute:: code_edit_supported
      :value: None



   .. py:attribute:: is_premium
      :value: None



   .. py:attribute:: llm_bot_icon
      :value: None



   .. py:attribute:: provider
      :value: None



   .. py:attribute:: is_user_api_key_allowed
      :value: None



   .. py:attribute:: is_rate_limited
      :value: None



   .. py:attribute:: api_key_url
      :value: None



   .. py:attribute:: deprecated_keys


   .. py:method:: __repr__()


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



