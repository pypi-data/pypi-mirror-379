[project]
name = 'snowflake._legacy'
authors = [
    {name = 'Snowflake, Inc.', email = 'snowflake-python-libraries-dl@snowflake.com' },
]
description = 'You should switch to the snowflake-uuid package'
readme = 'README.md'
requires-python = '>=3.9,<3.14'
license = {text = 'Apache-2.0'}
keywords = [
    'Snowflake',
    'analytics',
    'cloud',
    'database',
    'db',
    'warehouse',
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: Console',
    'Environment :: Other Environment',
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Programming Language :: SQL',
    'Programming Language :: Python :: 3',
    'Topic :: Database',
    'Topic :: Software Development',
    'Topic :: Software Development :: Libraries',
    'Topic :: Software Development :: Libraries :: Application Frameworks',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Scientific/Engineering :: Information Analysis',
]
dynamic = ['version']

[tool.hatch.version]
path = 'src/snowflake/_legacy/__init__.py'

[tool.hatch.build]
directory = '../../dist/snowflake._legacy'
dev-mode-dirs = ['src']
sources = ['data', 'src']

[tool.hatch.build.targets.wheel]
include = [
    'src/snowflake',
    'data/snowflake.pth',
]

[tool.hatch.build.targets.sdist]
include = [
    'src/snowflake',
    'data/snowflake.pth',
    'README.md',
    'tests/',
    'CHANGELOG.md',
    'pyproject.toml',
]

[tool.hatch.envs.test_all]
template = 'test'

[[tool.hatch.envs.test_all.matrix]]
python = ['3.9', '3.10', '3.11', '3.12', '3.13']

[tool.hatch.envs.test]
dependencies = [
    'coverage[toml]',
    'diff-cover',
    'pytest',
    'pytest-cov',
    'sybil',
]

[tool.hatch.envs.test.scripts]
check = [
    'pytest --cov-report=xml:coverage-{matrix:python:{env:PYTHON_VERSION:unset}}.xml {args:tests}',
    # The following is only useful in a git repository; thus errors are ignored.
    '- diff-cover coverage-{matrix:python:{env:PYTHON_VERSION:unset}}.xml',
]

[tool.hatch.envs.precommit]
dependencies = [
    'black',                    # 2023-08-08(bwarsaw): Change to `blue` in followup PR
    'mypy',
    'ruff',
]

[tool.hatch.envs.precommit.env-vars]
MYPYPATH = '{root}/src'

[tool.hatch.envs.precommit.scripts]
check = [
    'ruff check src/snowflake',
    'mypy --install-types --non-interactive -p snowflake._legacy',
]
fix = [
    'ruff check --fix src/snowflake',
    'mypy --install-types --non-interactive -p snowflake._legacy',
]

[tool.pytest.ini_options]
addopts = '--cov=snowflake --cov-report=term'
testpaths = 'integ unit'
pythonpath = 'src'

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = [
    'snowflake._legacy',
]
omit = [
    '.hatch/*',
]

[tool.coverage.report]
fail_under = 63
show_missing = true

[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'
