"use strict";(self.webpackChunk_jupyterlite_ai=self.webpackChunk_jupyterlite_ai||[]).push([[92],{8092:(t,e,o)=>{o.d(e,{CallToolResultSchema:()=>ft,GU:()=>Gt,HM:()=>ht,Iu:()=>a,ListToolsResultSchema:()=>yt,Nh:()=>At,O$:()=>K,O4:()=>_,OR:()=>T,Rk:()=>E,Sq:()=>P,Yu:()=>it,_r:()=>O,aE:()=>r,cv:()=>D,lg:()=>j,o$:()=>C,tC:()=>L,tG:()=>f,ve:()=>X,vo:()=>b,wR:()=>k,wU:()=>H});var n=o(9661);const r="2025-06-18",a=[r,"2025-03-26","2024-11-05","2024-10-07"],i="2.0",s=n.z.union([n.z.string(),n.z.number().int()]),z=n.z.string(),l=n.z.object({progressToken:n.z.optional(s)}).passthrough(),p=n.z.object({_meta:n.z.optional(l)}).passthrough(),u=n.z.object({method:n.z.string(),params:n.z.optional(p)}),c=n.z.object({_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),g=n.z.object({method:n.z.string(),params:n.z.optional(c)}),m=n.z.object({_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),h=n.z.union([n.z.string(),n.z.number().int()]),d=n.z.object({jsonrpc:n.z.literal(i),id:h}).merge(u).strict(),b=t=>d.safeParse(t).success,x=n.z.object({jsonrpc:n.z.literal(i)}).merge(g).strict(),j=t=>x.safeParse(t).success,y=n.z.object({jsonrpc:n.z.literal(i),id:h,result:m}).strict(),f=t=>y.safeParse(t).success;var _;!function(t){t[t.ConnectionClosed=-32e3]="ConnectionClosed",t[t.RequestTimeout=-32001]="RequestTimeout",t[t.ParseError=-32700]="ParseError",t[t.InvalidRequest=-32600]="InvalidRequest",t[t.MethodNotFound=-32601]="MethodNotFound",t[t.InvalidParams=-32602]="InvalidParams",t[t.InternalError=-32603]="InternalError"}(_||(_={}));const v=n.z.object({jsonrpc:n.z.literal(i),id:h,error:n.z.object({code:n.z.number().int(),message:n.z.string(),data:n.z.optional(n.z.unknown())})}).strict(),C=t=>v.safeParse(t).success,T=n.z.union([d,x,y,v]),k=m.strict(),P=g.extend({method:n.z.literal("notifications/cancelled"),params:c.extend({requestId:h,reason:n.z.string().optional()})}),q=n.z.object({name:n.z.string(),title:n.z.optional(n.z.string())}).passthrough(),I=q.extend({version:n.z.string()}),R=n.z.object({experimental:n.z.optional(n.z.object({}).passthrough()),sampling:n.z.optional(n.z.object({}).passthrough()),elicitation:n.z.optional(n.z.object({}).passthrough()),roots:n.z.optional(n.z.object({listChanged:n.z.optional(n.z.boolean())}).passthrough())}).passthrough(),w=u.extend({method:n.z.literal("initialize"),params:p.extend({protocolVersion:n.z.string(),capabilities:R,clientInfo:I})}),S=n.z.object({experimental:n.z.optional(n.z.object({}).passthrough()),logging:n.z.optional(n.z.object({}).passthrough()),completions:n.z.optional(n.z.object({}).passthrough()),prompts:n.z.optional(n.z.object({listChanged:n.z.optional(n.z.boolean())}).passthrough()),resources:n.z.optional(n.z.object({subscribe:n.z.optional(n.z.boolean()),listChanged:n.z.optional(n.z.boolean())}).passthrough()),tools:n.z.optional(n.z.object({listChanged:n.z.optional(n.z.boolean())}).passthrough())}).passthrough(),E=m.extend({protocolVersion:n.z.string(),capabilities:S,serverInfo:I,instructions:n.z.optional(n.z.string())}),M=g.extend({method:n.z.literal("notifications/initialized")}),H=t=>M.safeParse(t).success,L=u.extend({method:n.z.literal("ping")}),N=n.z.object({progress:n.z.number(),total:n.z.optional(n.z.number()),message:n.z.optional(n.z.string())}).passthrough(),O=g.extend({method:n.z.literal("notifications/progress"),params:c.merge(N).extend({progressToken:s})}),$=u.extend({params:p.extend({cursor:n.z.optional(z)}).optional()}),U=m.extend({nextCursor:n.z.optional(z)}),F=n.z.object({uri:n.z.string(),mimeType:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),G=F.extend({text:n.z.string()}),V=n.z.string().refine(t=>{try{return atob(t),!0}catch(t){return!1}},{message:"Invalid Base64 string"}),W=F.extend({blob:V}),B=q.extend({uri:n.z.string(),description:n.z.optional(n.z.string()),mimeType:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}),Y=q.extend({uriTemplate:n.z.string(),description:n.z.optional(n.z.string()),mimeType:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}),A=$.extend({method:n.z.literal("resources/list")}),D=U.extend({resources:n.z.array(B)}),J=$.extend({method:n.z.literal("resources/templates/list")}),K=U.extend({resourceTemplates:n.z.array(Y)}),Q=u.extend({method:n.z.literal("resources/read"),params:p.extend({uri:n.z.string()})}),X=m.extend({contents:n.z.array(n.z.union([G,W]))}),Z=g.extend({method:n.z.literal("notifications/resources/list_changed")}),tt=u.extend({method:n.z.literal("resources/subscribe"),params:p.extend({uri:n.z.string()})}),et=u.extend({method:n.z.literal("resources/unsubscribe"),params:p.extend({uri:n.z.string()})}),ot=g.extend({method:n.z.literal("notifications/resources/updated"),params:c.extend({uri:n.z.string()})}),nt=n.z.object({name:n.z.string(),description:n.z.optional(n.z.string()),required:n.z.optional(n.z.boolean())}).passthrough(),rt=q.extend({description:n.z.optional(n.z.string()),arguments:n.z.optional(n.z.array(nt)),_meta:n.z.optional(n.z.object({}).passthrough())}),at=$.extend({method:n.z.literal("prompts/list")}),it=U.extend({prompts:n.z.array(rt)}),st=u.extend({method:n.z.literal("prompts/get"),params:p.extend({name:n.z.string(),arguments:n.z.optional(n.z.record(n.z.string()))})}),zt=n.z.object({type:n.z.literal("text"),text:n.z.string(),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),lt=n.z.object({type:n.z.literal("image"),data:V,mimeType:n.z.string(),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),pt=n.z.object({type:n.z.literal("audio"),data:V,mimeType:n.z.string(),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),ut=n.z.object({type:n.z.literal("resource"),resource:n.z.union([G,W]),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),ct=B.extend({type:n.z.literal("resource_link")}),gt=n.z.union([zt,lt,pt,ct,ut]),mt=n.z.object({role:n.z.enum(["user","assistant"]),content:gt}).passthrough(),ht=m.extend({description:n.z.optional(n.z.string()),messages:n.z.array(mt)}),dt=g.extend({method:n.z.literal("notifications/prompts/list_changed")}),bt=n.z.object({title:n.z.optional(n.z.string()),readOnlyHint:n.z.optional(n.z.boolean()),destructiveHint:n.z.optional(n.z.boolean()),idempotentHint:n.z.optional(n.z.boolean()),openWorldHint:n.z.optional(n.z.boolean())}).passthrough(),xt=q.extend({description:n.z.optional(n.z.string()),inputSchema:n.z.object({type:n.z.literal("object"),properties:n.z.optional(n.z.object({}).passthrough()),required:n.z.optional(n.z.array(n.z.string()))}).passthrough(),outputSchema:n.z.optional(n.z.object({type:n.z.literal("object"),properties:n.z.optional(n.z.object({}).passthrough()),required:n.z.optional(n.z.array(n.z.string()))}).passthrough()),annotations:n.z.optional(bt),_meta:n.z.optional(n.z.object({}).passthrough())}),jt=$.extend({method:n.z.literal("tools/list")}),yt=U.extend({tools:n.z.array(xt)}),ft=m.extend({content:n.z.array(gt).default([]),structuredContent:n.z.object({}).passthrough().optional(),isError:n.z.optional(n.z.boolean())}),_t=(ft.or(m.extend({toolResult:n.z.unknown()})),u.extend({method:n.z.literal("tools/call"),params:p.extend({name:n.z.string(),arguments:n.z.optional(n.z.record(n.z.unknown()))})})),vt=g.extend({method:n.z.literal("notifications/tools/list_changed")}),Ct=n.z.enum(["debug","info","notice","warning","error","critical","alert","emergency"]),Tt=u.extend({method:n.z.literal("logging/setLevel"),params:p.extend({level:Ct})}),kt=g.extend({method:n.z.literal("notifications/message"),params:c.extend({level:Ct,logger:n.z.optional(n.z.string()),data:n.z.unknown()})}),Pt=n.z.object({name:n.z.string().optional()}).passthrough(),qt=n.z.object({hints:n.z.optional(n.z.array(Pt)),costPriority:n.z.optional(n.z.number().min(0).max(1)),speedPriority:n.z.optional(n.z.number().min(0).max(1)),intelligencePriority:n.z.optional(n.z.number().min(0).max(1))}).passthrough(),It=n.z.object({role:n.z.enum(["user","assistant"]),content:n.z.union([zt,lt,pt])}).passthrough(),Rt=u.extend({method:n.z.literal("sampling/createMessage"),params:p.extend({messages:n.z.array(It),systemPrompt:n.z.optional(n.z.string()),includeContext:n.z.optional(n.z.enum(["none","thisServer","allServers"])),temperature:n.z.optional(n.z.number()),maxTokens:n.z.number().int(),stopSequences:n.z.optional(n.z.array(n.z.string())),metadata:n.z.optional(n.z.object({}).passthrough()),modelPreferences:n.z.optional(qt)})}),wt=m.extend({model:n.z.string(),stopReason:n.z.optional(n.z.enum(["endTurn","stopSequence","maxTokens"]).or(n.z.string())),role:n.z.enum(["user","assistant"]),content:n.z.discriminatedUnion("type",[zt,lt,pt])}),St=n.z.object({type:n.z.literal("boolean"),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),default:n.z.optional(n.z.boolean())}).passthrough(),Et=n.z.object({type:n.z.literal("string"),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),minLength:n.z.optional(n.z.number()),maxLength:n.z.optional(n.z.number()),format:n.z.optional(n.z.enum(["email","uri","date","date-time"]))}).passthrough(),Mt=n.z.object({type:n.z.enum(["number","integer"]),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),minimum:n.z.optional(n.z.number()),maximum:n.z.optional(n.z.number())}).passthrough(),Ht=n.z.object({type:n.z.literal("string"),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),enum:n.z.array(n.z.string()),enumNames:n.z.optional(n.z.array(n.z.string()))}).passthrough(),Lt=n.z.union([St,Et,Mt,Ht]),Nt=u.extend({method:n.z.literal("elicitation/create"),params:p.extend({message:n.z.string(),requestedSchema:n.z.object({type:n.z.literal("object"),properties:n.z.record(n.z.string(),Lt),required:n.z.optional(n.z.array(n.z.string()))}).passthrough()})}),Ot=m.extend({action:n.z.enum(["accept","decline","cancel"]),content:n.z.optional(n.z.record(n.z.string(),n.z.unknown()))}),$t=n.z.object({type:n.z.literal("ref/resource"),uri:n.z.string()}).passthrough(),Ut=n.z.object({type:n.z.literal("ref/prompt"),name:n.z.string()}).passthrough(),Ft=u.extend({method:n.z.literal("completion/complete"),params:p.extend({ref:n.z.union([Ut,$t]),argument:n.z.object({name:n.z.string(),value:n.z.string()}).passthrough(),context:n.z.optional(n.z.object({arguments:n.z.optional(n.z.record(n.z.string(),n.z.string()))}))})}),Gt=m.extend({completion:n.z.object({values:n.z.array(n.z.string()).max(100),total:n.z.optional(n.z.number().int()),hasMore:n.z.optional(n.z.boolean())}).passthrough()}),Vt=n.z.object({uri:n.z.string().startsWith("file://"),name:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),Wt=u.extend({method:n.z.literal("roots/list")}),Bt=m.extend({roots:n.z.array(Vt)}),Yt=g.extend({method:n.z.literal("notifications/roots/list_changed")});n.z.union([L,w,Ft,Tt,st,at,A,J,Q,tt,et,_t,jt]),n.z.union([P,O,M,Yt]),n.z.union([k,wt,Ot,Bt]),n.z.union([L,Rt,Nt,Wt]),n.z.union([P,O,kt,ot,Z,vt,dt]),n.z.union([k,E,Gt,ht,it,D,K,X,ft,yt]);class At extends Error{constructor(t,e,o){super(`MCP error ${t}: ${e}`),this.code=t,this.data=o,this.name="McpError"}}}}]);