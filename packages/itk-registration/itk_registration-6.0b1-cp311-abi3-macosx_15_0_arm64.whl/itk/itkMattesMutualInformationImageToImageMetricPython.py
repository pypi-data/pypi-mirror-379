# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMattesMutualInformationImageToImageMetricPython
else:
    import _itkMattesMutualInformationImageToImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageMetricPython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.itkArrayPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkCostFunctionPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMapContainerPython
import itk.itkSpatialObjectPropertyPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkFunctionBasePython

def itkMattesMutualInformationImageToImageMetricID2ID2_New():
    return itkMattesMutualInformationImageToImageMetricID2ID2.New()

class itkMattesMutualInformationImageToImageMetricID2ID2(itk.itkImageToImageMetricPython.itkImageToImageMetricID2ID2):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricID2ID2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricID2ID2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricID2ID2

        Create a new object of the class itkMattesMutualInformationImageToImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricID2ID2 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID2ID2_swigregister(itkMattesMutualInformationImageToImageMetricID2ID2)

def itkMattesMutualInformationImageToImageMetricID3ID3_New():
    return itkMattesMutualInformationImageToImageMetricID3ID3.New()

class itkMattesMutualInformationImageToImageMetricID3ID3(itk.itkImageToImageMetricPython.itkImageToImageMetricID3ID3):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricID3ID3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricID3ID3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricID3ID3

        Create a new object of the class itkMattesMutualInformationImageToImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricID3ID3 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID3ID3_swigregister(itkMattesMutualInformationImageToImageMetricID3ID3)

def itkMattesMutualInformationImageToImageMetricID4ID4_New():
    return itkMattesMutualInformationImageToImageMetricID4ID4.New()

class itkMattesMutualInformationImageToImageMetricID4ID4(itk.itkImageToImageMetricPython.itkImageToImageMetricID4ID4):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricID4ID4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricID4ID4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricID4ID4

        Create a new object of the class itkMattesMutualInformationImageToImageMetricID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricID4ID4 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricID4ID4_swigregister(itkMattesMutualInformationImageToImageMetricID4ID4)

def itkMattesMutualInformationImageToImageMetricIF2IF2_New():
    return itkMattesMutualInformationImageToImageMetricIF2IF2.New()

class itkMattesMutualInformationImageToImageMetricIF2IF2(itk.itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIF2IF2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIF2IF2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIF2IF2

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIF2IF2 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF2IF2_swigregister(itkMattesMutualInformationImageToImageMetricIF2IF2)

def itkMattesMutualInformationImageToImageMetricIF3IF3_New():
    return itkMattesMutualInformationImageToImageMetricIF3IF3.New()

class itkMattesMutualInformationImageToImageMetricIF3IF3(itk.itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIF3IF3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIF3IF3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIF3IF3

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIF3IF3 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF3IF3_swigregister(itkMattesMutualInformationImageToImageMetricIF3IF3)

def itkMattesMutualInformationImageToImageMetricIF4IF4_New():
    return itkMattesMutualInformationImageToImageMetricIF4IF4.New()

class itkMattesMutualInformationImageToImageMetricIF4IF4(itk.itkImageToImageMetricPython.itkImageToImageMetricIF4IF4):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIF4IF4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIF4IF4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIF4IF4

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIF4IF4 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIF4IF4_swigregister(itkMattesMutualInformationImageToImageMetricIF4IF4)

def itkMattesMutualInformationImageToImageMetricISS2ISS2_New():
    return itkMattesMutualInformationImageToImageMetricISS2ISS2.New()

class itkMattesMutualInformationImageToImageMetricISS2ISS2(itk.itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricISS2ISS2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricISS2ISS2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricISS2ISS2

        Create a new object of the class itkMattesMutualInformationImageToImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricISS2ISS2 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS2ISS2_swigregister(itkMattesMutualInformationImageToImageMetricISS2ISS2)

def itkMattesMutualInformationImageToImageMetricISS3ISS3_New():
    return itkMattesMutualInformationImageToImageMetricISS3ISS3.New()

class itkMattesMutualInformationImageToImageMetricISS3ISS3(itk.itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricISS3ISS3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricISS3ISS3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricISS3ISS3

        Create a new object of the class itkMattesMutualInformationImageToImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricISS3ISS3 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS3ISS3_swigregister(itkMattesMutualInformationImageToImageMetricISS3ISS3)

def itkMattesMutualInformationImageToImageMetricISS4ISS4_New():
    return itkMattesMutualInformationImageToImageMetricISS4ISS4.New()

class itkMattesMutualInformationImageToImageMetricISS4ISS4(itk.itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricISS4ISS4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricISS4ISS4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricISS4ISS4

        Create a new object of the class itkMattesMutualInformationImageToImageMetricISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricISS4ISS4 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricISS4ISS4_swigregister(itkMattesMutualInformationImageToImageMetricISS4ISS4)

def itkMattesMutualInformationImageToImageMetricIUC2IUC2_New():
    return itkMattesMutualInformationImageToImageMetricIUC2IUC2.New()

class itkMattesMutualInformationImageToImageMetricIUC2IUC2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIUC2IUC2

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIUC2IUC2 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC2IUC2_swigregister(itkMattesMutualInformationImageToImageMetricIUC2IUC2)

def itkMattesMutualInformationImageToImageMetricIUC3IUC3_New():
    return itkMattesMutualInformationImageToImageMetricIUC3IUC3.New()

class itkMattesMutualInformationImageToImageMetricIUC3IUC3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIUC3IUC3

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIUC3IUC3 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC3IUC3_swigregister(itkMattesMutualInformationImageToImageMetricIUC3IUC3)

def itkMattesMutualInformationImageToImageMetricIUC4IUC4_New():
    return itkMattesMutualInformationImageToImageMetricIUC4IUC4.New()

class itkMattesMutualInformationImageToImageMetricIUC4IUC4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIUC4IUC4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIUC4IUC4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIUC4IUC4

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIUC4IUC4 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUC4IUC4_swigregister(itkMattesMutualInformationImageToImageMetricIUC4IUC4)

def itkMattesMutualInformationImageToImageMetricIUS2IUS2_New():
    return itkMattesMutualInformationImageToImageMetricIUS2IUS2.New()

class itkMattesMutualInformationImageToImageMetricIUS2IUS2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIUS2IUS2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIUS2IUS2_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIUS2IUS2

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIUS2IUS2 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS2IUS2_swigregister(itkMattesMutualInformationImageToImageMetricIUS2IUS2)

def itkMattesMutualInformationImageToImageMetricIUS3IUS3_New():
    return itkMattesMutualInformationImageToImageMetricIUS3IUS3.New()

class itkMattesMutualInformationImageToImageMetricIUS3IUS3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIUS3IUS3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIUS3IUS3_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIUS3IUS3

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIUS3IUS3 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS3IUS3_swigregister(itkMattesMutualInformationImageToImageMetricIUS3IUS3)

def itkMattesMutualInformationImageToImageMetricIUS4IUS4_New():
    return itkMattesMutualInformationImageToImageMetricIUS4IUS4.New()

class itkMattesMutualInformationImageToImageMetricIUS4IUS4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4):
    r"""Proxy of C++ itkMattesMutualInformationImageToImageMetricIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMattesMutualInformationImageToImageMetricIUS4IUS4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMattesMutualInformationImageToImageMetricIUS4IUS4_Pointer"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_Clone(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned long const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_GetNumberOfHistogramBins(self)

    def SetUseExplicitPDFDerivatives(self, _arg):
        r"""
        SetUseExplicitPDFDerivatives(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_SetUseExplicitPDFDerivatives(self, _arg)

    def GetUseExplicitPDFDerivatives(self):
        r"""GetUseExplicitPDFDerivatives(self) -> bool const &"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_GetUseExplicitPDFDerivatives(self)

    def UseExplicitPDFDerivativesOn(self):
        r"""UseExplicitPDFDerivativesOn(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_UseExplicitPDFDerivativesOn(self)

    def UseExplicitPDFDerivativesOff(self):
        r"""UseExplicitPDFDerivativesOff(self)"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_UseExplicitPDFDerivativesOff(self)

    def GetJointPDF(self):
        r"""GetJointPDF(self) -> itkImageD2_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_GetJointPDF(self)

    def GetJointPDFDerivatives(self):
        r"""GetJointPDFDerivatives(self) -> itkImageD3_Pointer const"""
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_GetJointPDFDerivatives(self)
    __swig_destroy__ = _itkMattesMutualInformationImageToImageMetricPython.delete_itkMattesMutualInformationImageToImageMetricIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMattesMutualInformationImageToImageMetricIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMattesMutualInformationImageToImageMetricIUS4IUS4

        Create a new object of the class itkMattesMutualInformationImageToImageMetricIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMattesMutualInformationImageToImageMetricIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMattesMutualInformationImageToImageMetricIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMattesMutualInformationImageToImageMetricIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMattesMutualInformationImageToImageMetricIUS4IUS4 in _itkMattesMutualInformationImageToImageMetricPython:
_itkMattesMutualInformationImageToImageMetricPython.itkMattesMutualInformationImageToImageMetricIUS4IUS4_swigregister(itkMattesMutualInformationImageToImageMetricIUS4IUS4)

