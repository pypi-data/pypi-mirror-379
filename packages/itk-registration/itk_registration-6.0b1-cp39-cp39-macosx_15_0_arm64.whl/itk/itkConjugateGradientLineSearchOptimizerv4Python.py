# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKOptimizersv4Python



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConjugateGradientLineSearchOptimizerv4Python
else:
    import _itkConjugateGradientLineSearchOptimizerv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkGradientDescentOptimizerv4Python
import itk.itkGradientDescentOptimizerBasev4Python
import itk.itkArrayPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkObjectToObjectOptimizerBasePython
import itk.itkOptimizerParametersPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkOptimizerParameterScalesEstimatorPython

def itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_New():
    return itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass.New()

class itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass(itk.itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateD):
    r"""Proxy of C++ itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_Clone(self)

    def SetEpsilon(self, _arg):
        r"""
        SetEpsilon(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_SetEpsilon(self, _arg)

    def GetEpsilon(self):
        r"""GetEpsilon(self) -> double"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_GetEpsilon(self)

    def SetLowerLimit(self, _arg):
        r"""
        SetLowerLimit(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_SetLowerLimit(self, _arg)

    def GetLowerLimit(self):
        r"""GetLowerLimit(self) -> double"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_GetLowerLimit(self)

    def SetUpperLimit(self, _arg):
        r"""
        SetUpperLimit(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_SetUpperLimit(self, _arg)

    def GetUpperLimit(self):
        r"""GetUpperLimit(self) -> double"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_GetUpperLimit(self)

    def SetMaximumLineSearchIterations(self, _arg):
        r"""
        SetMaximumLineSearchIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_SetMaximumLineSearchIterations(self, _arg)

    def GetMaximumLineSearchIterations(self):
        r"""GetMaximumLineSearchIterations(self) -> unsigned int"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_GetMaximumLineSearchIterations(self)
    __swig_destroy__ = _itkConjugateGradientLineSearchOptimizerv4Python.delete_itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass

        Create a new object of the class itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass in _itkConjugateGradientLineSearchOptimizerv4Python:
_itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass_swigregister(itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass)

def itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_New():
    return itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass.New()

class itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass(itk.itkGradientDescentOptimizerv4Python.itkGradientDescentOptimizerv4TemplateF):
    r"""Proxy of C++ itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_Clone(self)

    def SetEpsilon(self, _arg):
        r"""
        SetEpsilon(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_SetEpsilon(self, _arg)

    def GetEpsilon(self):
        r"""GetEpsilon(self) -> float"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_GetEpsilon(self)

    def SetLowerLimit(self, _arg):
        r"""
        SetLowerLimit(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_SetLowerLimit(self, _arg)

    def GetLowerLimit(self):
        r"""GetLowerLimit(self) -> float"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_GetLowerLimit(self)

    def SetUpperLimit(self, _arg):
        r"""
        SetUpperLimit(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_SetUpperLimit(self, _arg)

    def GetUpperLimit(self):
        r"""GetUpperLimit(self) -> float"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_GetUpperLimit(self)

    def SetMaximumLineSearchIterations(self, _arg):
        r"""
        SetMaximumLineSearchIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_SetMaximumLineSearchIterations(self, _arg)

    def GetMaximumLineSearchIterations(self):
        r"""GetMaximumLineSearchIterations(self) -> unsigned int"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_GetMaximumLineSearchIterations(self)
    __swig_destroy__ = _itkConjugateGradientLineSearchOptimizerv4Python.delete_itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass

        Create a new object of the class itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass in _itkConjugateGradientLineSearchOptimizerv4Python:
_itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass_swigregister(itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass)

def itkConjugateGradientLineSearchOptimizerv4TemplateD_New():
    return itkConjugateGradientLineSearchOptimizerv4TemplateD.New()

class itkConjugateGradientLineSearchOptimizerv4TemplateD(itkConjugateGradientLineSearchOptimizerv4TemplateD_Superclass):
    r"""Proxy of C++ itkConjugateGradientLineSearchOptimizerv4TemplateD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConjugateGradientLineSearchOptimizerv4TemplateD_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConjugateGradientLineSearchOptimizerv4TemplateD_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_Clone(self)

    def StartOptimization(self, doOnlyInitialization=False):
        r"""
        StartOptimization(self, doOnlyInitialization=False)

        Parameters
        ----------
        doOnlyInitialization: bool

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_StartOptimization(self, doOnlyInitialization)

    def SetInitialLearningRate(self, _arg):
        r"""
        SetInitialLearningRate(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_SetInitialLearningRate(self, _arg)

    def GetInitialLearningRate(self):
        r"""GetInitialLearningRate(self) -> double const &"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_GetInitialLearningRate(self)
    __swig_destroy__ = _itkConjugateGradientLineSearchOptimizerv4Python.delete_itkConjugateGradientLineSearchOptimizerv4TemplateD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConjugateGradientLineSearchOptimizerv4TemplateD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConjugateGradientLineSearchOptimizerv4TemplateD

        Create a new object of the class itkConjugateGradientLineSearchOptimizerv4TemplateD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConjugateGradientLineSearchOptimizerv4TemplateD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConjugateGradientLineSearchOptimizerv4TemplateD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConjugateGradientLineSearchOptimizerv4TemplateD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConjugateGradientLineSearchOptimizerv4TemplateD in _itkConjugateGradientLineSearchOptimizerv4Python:
_itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateD_swigregister(itkConjugateGradientLineSearchOptimizerv4TemplateD)

def itkConjugateGradientLineSearchOptimizerv4TemplateF_New():
    return itkConjugateGradientLineSearchOptimizerv4TemplateF.New()

class itkConjugateGradientLineSearchOptimizerv4TemplateF(itkConjugateGradientLineSearchOptimizerv4TemplateF_Superclass):
    r"""Proxy of C++ itkConjugateGradientLineSearchOptimizerv4TemplateF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConjugateGradientLineSearchOptimizerv4TemplateF_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConjugateGradientLineSearchOptimizerv4TemplateF_Pointer"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_Clone(self)

    def StartOptimization(self, doOnlyInitialization=False):
        r"""
        StartOptimization(self, doOnlyInitialization=False)

        Parameters
        ----------
        doOnlyInitialization: bool

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_StartOptimization(self, doOnlyInitialization)

    def SetInitialLearningRate(self, _arg):
        r"""
        SetInitialLearningRate(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_SetInitialLearningRate(self, _arg)

    def GetInitialLearningRate(self):
        r"""GetInitialLearningRate(self) -> float const &"""
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_GetInitialLearningRate(self)
    __swig_destroy__ = _itkConjugateGradientLineSearchOptimizerv4Python.delete_itkConjugateGradientLineSearchOptimizerv4TemplateF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConjugateGradientLineSearchOptimizerv4TemplateF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConjugateGradientLineSearchOptimizerv4TemplateF

        Create a new object of the class itkConjugateGradientLineSearchOptimizerv4TemplateF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConjugateGradientLineSearchOptimizerv4TemplateF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConjugateGradientLineSearchOptimizerv4TemplateF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConjugateGradientLineSearchOptimizerv4TemplateF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConjugateGradientLineSearchOptimizerv4TemplateF in _itkConjugateGradientLineSearchOptimizerv4Python:
_itkConjugateGradientLineSearchOptimizerv4Python.itkConjugateGradientLineSearchOptimizerv4TemplateF_swigregister(itkConjugateGradientLineSearchOptimizerv4TemplateF)

