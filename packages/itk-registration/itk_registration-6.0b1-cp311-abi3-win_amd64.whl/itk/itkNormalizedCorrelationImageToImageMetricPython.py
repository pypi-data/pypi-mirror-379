# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNormalizedCorrelationImageToImageMetricPython
else:
    import _itkNormalizedCorrelationImageToImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageMetricPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.ITKCostFunctionsPython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.vnl_least_squares_functionPython
import itk.itkCostFunctionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkMapContainerPython

def itkNormalizedCorrelationImageToImageMetricID2ID2_New():
    return itkNormalizedCorrelationImageToImageMetricID2ID2.New()

class itkNormalizedCorrelationImageToImageMetricID2ID2(itk.itkImageToImageMetricPython.itkImageToImageMetricID2ID2):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricID2ID2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricID2ID2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricID2ID2

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricID2ID2 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID2ID2_swigregister(itkNormalizedCorrelationImageToImageMetricID2ID2)

def itkNormalizedCorrelationImageToImageMetricID3ID3_New():
    return itkNormalizedCorrelationImageToImageMetricID3ID3.New()

class itkNormalizedCorrelationImageToImageMetricID3ID3(itk.itkImageToImageMetricPython.itkImageToImageMetricID3ID3):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricID3ID3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricID3ID3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricID3ID3

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricID3ID3 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID3ID3_swigregister(itkNormalizedCorrelationImageToImageMetricID3ID3)

def itkNormalizedCorrelationImageToImageMetricID4ID4_New():
    return itkNormalizedCorrelationImageToImageMetricID4ID4.New()

class itkNormalizedCorrelationImageToImageMetricID4ID4(itk.itkImageToImageMetricPython.itkImageToImageMetricID4ID4):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricID4ID4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricID4ID4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricID4ID4

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricID4ID4 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricID4ID4_swigregister(itkNormalizedCorrelationImageToImageMetricID4ID4)

def itkNormalizedCorrelationImageToImageMetricIF2IF2_New():
    return itkNormalizedCorrelationImageToImageMetricIF2IF2.New()

class itkNormalizedCorrelationImageToImageMetricIF2IF2(itk.itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIF2IF2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIF2IF2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIF2IF2

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIF2IF2 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF2IF2_swigregister(itkNormalizedCorrelationImageToImageMetricIF2IF2)

def itkNormalizedCorrelationImageToImageMetricIF3IF3_New():
    return itkNormalizedCorrelationImageToImageMetricIF3IF3.New()

class itkNormalizedCorrelationImageToImageMetricIF3IF3(itk.itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIF3IF3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIF3IF3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIF3IF3

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIF3IF3 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF3IF3_swigregister(itkNormalizedCorrelationImageToImageMetricIF3IF3)

def itkNormalizedCorrelationImageToImageMetricIF4IF4_New():
    return itkNormalizedCorrelationImageToImageMetricIF4IF4.New()

class itkNormalizedCorrelationImageToImageMetricIF4IF4(itk.itkImageToImageMetricPython.itkImageToImageMetricIF4IF4):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIF4IF4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIF4IF4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIF4IF4

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIF4IF4 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIF4IF4_swigregister(itkNormalizedCorrelationImageToImageMetricIF4IF4)

def itkNormalizedCorrelationImageToImageMetricISS2ISS2_New():
    return itkNormalizedCorrelationImageToImageMetricISS2ISS2.New()

class itkNormalizedCorrelationImageToImageMetricISS2ISS2(itk.itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricISS2ISS2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricISS2ISS2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricISS2ISS2

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricISS2ISS2 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS2ISS2_swigregister(itkNormalizedCorrelationImageToImageMetricISS2ISS2)

def itkNormalizedCorrelationImageToImageMetricISS3ISS3_New():
    return itkNormalizedCorrelationImageToImageMetricISS3ISS3.New()

class itkNormalizedCorrelationImageToImageMetricISS3ISS3(itk.itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricISS3ISS3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricISS3ISS3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricISS3ISS3

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricISS3ISS3 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS3ISS3_swigregister(itkNormalizedCorrelationImageToImageMetricISS3ISS3)

def itkNormalizedCorrelationImageToImageMetricISS4ISS4_New():
    return itkNormalizedCorrelationImageToImageMetricISS4ISS4.New()

class itkNormalizedCorrelationImageToImageMetricISS4ISS4(itk.itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricISS4ISS4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricISS4ISS4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricISS4ISS4

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricISS4ISS4 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricISS4ISS4_swigregister(itkNormalizedCorrelationImageToImageMetricISS4ISS4)

def itkNormalizedCorrelationImageToImageMetricIUC2IUC2_New():
    return itkNormalizedCorrelationImageToImageMetricIUC2IUC2.New()

class itkNormalizedCorrelationImageToImageMetricIUC2IUC2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIUC2IUC2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIUC2IUC2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIUC2IUC2

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIUC2IUC2 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC2IUC2_swigregister(itkNormalizedCorrelationImageToImageMetricIUC2IUC2)

def itkNormalizedCorrelationImageToImageMetricIUC3IUC3_New():
    return itkNormalizedCorrelationImageToImageMetricIUC3IUC3.New()

class itkNormalizedCorrelationImageToImageMetricIUC3IUC3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIUC3IUC3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIUC3IUC3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIUC3IUC3

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIUC3IUC3 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC3IUC3_swigregister(itkNormalizedCorrelationImageToImageMetricIUC3IUC3)

def itkNormalizedCorrelationImageToImageMetricIUC4IUC4_New():
    return itkNormalizedCorrelationImageToImageMetricIUC4IUC4.New()

class itkNormalizedCorrelationImageToImageMetricIUC4IUC4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIUC4IUC4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIUC4IUC4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIUC4IUC4

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIUC4IUC4 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUC4IUC4_swigregister(itkNormalizedCorrelationImageToImageMetricIUC4IUC4)

def itkNormalizedCorrelationImageToImageMetricIUS2IUS2_New():
    return itkNormalizedCorrelationImageToImageMetricIUS2IUS2.New()

class itkNormalizedCorrelationImageToImageMetricIUS2IUS2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIUS2IUS2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIUS2IUS2_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIUS2IUS2

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIUS2IUS2 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS2IUS2_swigregister(itkNormalizedCorrelationImageToImageMetricIUS2IUS2)

def itkNormalizedCorrelationImageToImageMetricIUS3IUS3_New():
    return itkNormalizedCorrelationImageToImageMetricIUS3IUS3.New()

class itkNormalizedCorrelationImageToImageMetricIUS3IUS3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIUS3IUS3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIUS3IUS3_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIUS3IUS3

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIUS3IUS3 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS3IUS3_swigregister(itkNormalizedCorrelationImageToImageMetricIUS3IUS3)

def itkNormalizedCorrelationImageToImageMetricIUS4IUS4_New():
    return itkNormalizedCorrelationImageToImageMetricIUS4IUS4.New()

class itkNormalizedCorrelationImageToImageMetricIUS4IUS4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4):
    r"""Proxy of C++ itkNormalizedCorrelationImageToImageMetricIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNormalizedCorrelationImageToImageMetricIUS4IUS4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNormalizedCorrelationImageToImageMetricIUS4IUS4_Pointer"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_Clone(self)

    def SetSubtractMean(self, _arg):
        r"""
        SetSubtractMean(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_SetSubtractMean(self, _arg)

    def GetSubtractMean(self):
        r"""GetSubtractMean(self) -> bool const &"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_GetSubtractMean(self)

    def SubtractMeanOn(self):
        r"""SubtractMeanOn(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_SubtractMeanOn(self)

    def SubtractMeanOff(self):
        r"""SubtractMeanOff(self)"""
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_SubtractMeanOff(self)
    __swig_destroy__ = _itkNormalizedCorrelationImageToImageMetricPython.delete_itkNormalizedCorrelationImageToImageMetricIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNormalizedCorrelationImageToImageMetricIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNormalizedCorrelationImageToImageMetricIUS4IUS4

        Create a new object of the class itkNormalizedCorrelationImageToImageMetricIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNormalizedCorrelationImageToImageMetricIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNormalizedCorrelationImageToImageMetricIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNormalizedCorrelationImageToImageMetricIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNormalizedCorrelationImageToImageMetricIUS4IUS4 in _itkNormalizedCorrelationImageToImageMetricPython:
_itkNormalizedCorrelationImageToImageMetricPython.itkNormalizedCorrelationImageToImageMetricIUS4IUS4_swigregister(itkNormalizedCorrelationImageToImageMetricIUS4IUS4)

