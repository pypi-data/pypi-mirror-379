# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMetricsv4Python



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRegistrationParameterScalesFromIndexShiftPython
else:
    import _itkRegistrationParameterScalesFromIndexShiftPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkANTSNeighborhoodCorrelationImageToImageMetricv4Python
import itk.itkImageToImageMetricv4Python
import itk.itkDisplacementFieldTransformPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkPointSetPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkCorrelationImageToImageMetricv4Python
import itk.itkMeanSquaresImageToImageMetricv4Python
import itk.itkJointHistogramMutualInformationImageToImageMetricv4Python
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkDemonsImageToImageMetricv4Python
import itk.itkMattesMutualInformationImageToImageMetricv4Python
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkANTSNeighborhoodCorrelationImageToImageMetricv4ID2ID2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkANTSNeighborhoodCorrelationImageToImageMetricv4ID2ID2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkANTSNeighborhoodCorrelationImageToImageMetricv4ID3ID3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkANTSNeighborhoodCorrelationImageToImageMetricv4ID3ID3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkANTSNeighborhoodCorrelationImageToImageMetricv4ID4ID4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkANTSNeighborhoodCorrelationImageToImageMetricv4ID4ID4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkANTSNeighborhoodCorrelationImageToImageMetricv4IF2IF2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkANTSNeighborhoodCorrelationImageToImageMetricv4IF2IF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkANTSNeighborhoodCorrelationImageToImageMetricv4IF3IF3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkANTSNeighborhoodCorrelationImageToImageMetricv4IF3IF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkANTSNeighborhoodCorrelationImageToImageMetricv4IF4IF4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkANTSNeighborhoodCorrelationImageToImageMetricv4IF4IF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkCorrelationImageToImageMetricv4ID2ID2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkCorrelationImageToImageMetricv4ID2ID2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkCorrelationImageToImageMetricv4ID3ID3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkCorrelationImageToImageMetricv4ID3ID3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkCorrelationImageToImageMetricv4ID4ID4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkCorrelationImageToImageMetricv4ID4ID4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkCorrelationImageToImageMetricv4IF2IF2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkCorrelationImageToImageMetricv4IF2IF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkCorrelationImageToImageMetricv4IF3IF3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkCorrelationImageToImageMetricv4IF3IF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkCorrelationImageToImageMetricv4IF4IF4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkCorrelationImageToImageMetricv4IF4IF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkDemonsImageToImageMetricv4ID2ID2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkDemonsImageToImageMetricv4ID2ID2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkDemonsImageToImageMetricv4ID3ID3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkDemonsImageToImageMetricv4ID3ID3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkDemonsImageToImageMetricv4ID4ID4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkDemonsImageToImageMetricv4ID4ID4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkDemonsImageToImageMetricv4IF2IF2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkDemonsImageToImageMetricv4IF2IF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkDemonsImageToImageMetricv4IF3IF3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkDemonsImageToImageMetricv4IF3IF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkDemonsImageToImageMetricv4IF4IF4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkDemonsImageToImageMetricv4IF4IF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricv4D2D2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkImageToImageMetricv4D2D2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricv4D3D3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkImageToImageMetricv4D3D3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricv4D4D4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkImageToImageMetricv4D4D4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricv4F2F2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkImageToImageMetricv4F2F2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricv4F3F3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkImageToImageMetricv4F3F3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricv4F4F4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkImageToImageMetricv4F4F4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkJointHistogramMutualInformationImageToImageMetricv4ID2ID2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkJointHistogramMutualInformationImageToImageMetricv4ID3ID3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkJointHistogramMutualInformationImageToImageMetricv4ID4ID4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkJointHistogramMutualInformationImageToImageMetricv4ID4ID4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkJointHistogramMutualInformationImageToImageMetricv4IF2IF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkJointHistogramMutualInformationImageToImageMetricv4IF3IF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkJointHistogramMutualInformationImageToImageMetricv4IF4IF4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkJointHistogramMutualInformationImageToImageMetricv4IF4IF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMattesMutualInformationImageToImageMetricv4ID2ID2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMattesMutualInformationImageToImageMetricv4ID2ID2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMattesMutualInformationImageToImageMetricv4ID3ID3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMattesMutualInformationImageToImageMetricv4ID3ID3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMattesMutualInformationImageToImageMetricv4ID4ID4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMattesMutualInformationImageToImageMetricv4ID4ID4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMattesMutualInformationImageToImageMetricv4IF2IF2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMattesMutualInformationImageToImageMetricv4IF2IF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMattesMutualInformationImageToImageMetricv4IF3IF3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMattesMutualInformationImageToImageMetricv4IF3IF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMattesMutualInformationImageToImageMetricv4IF4IF4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMattesMutualInformationImageToImageMetricv4IF4IF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMeanSquaresImageToImageMetricv4ID2ID2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMeanSquaresImageToImageMetricv4ID2ID2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMeanSquaresImageToImageMetricv4ID3ID3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMeanSquaresImageToImageMetricv4ID3ID3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMeanSquaresImageToImageMetricv4ID4ID4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMeanSquaresImageToImageMetricv4ID4ID4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetD4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetD4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetD4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMeanSquaresImageToImageMetricv4IF2IF2 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMeanSquaresImageToImageMetricv4IF2IF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF2 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF2 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF2"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMeanSquaresImageToImageMetricv4IF3IF3 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMeanSquaresImageToImageMetricv4IF3IF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF3 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF3 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF3"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkMeanSquaresImageToImageMetricv4IF4IF4 *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkMeanSquaresImageToImageMetricv4IF4IF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_GetMetric(self)

    def SetTransformForward(self, _arg):
        r"""
        SetTransformForward(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_SetTransformForward(self, _arg)

    def GetTransformForward(self):
        r"""GetTransformForward(self) -> bool"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_GetTransformForward(self)

    def TransformForwardOn(self):
        r"""TransformForwardOn(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_TransformForwardOn(self)

    def TransformForwardOff(self):
        r"""TransformForwardOff(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_TransformForwardOff(self)

    def SetVirtualDomainPointSet(self, *args):
        r"""
        SetVirtualDomainPointSet(self, arg)

        Parameters
        ----------
        arg: itkPointSetF4 *const

        SetVirtualDomainPointSet(self, _arg)

        Parameters
        ----------
        _arg: itkPointSetF4 const *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_SetVirtualDomainPointSet(self, *args)

    def GetVirtualDomainPointSet(self):
        r"""GetVirtualDomainPointSet(self) -> itkPointSetF4"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_GetVirtualDomainPointSet(self)

    def SetCentralRegionRadius(self, _arg):
        r"""
        SetCentralRegionRadius(self, _arg)

        Parameters
        ----------
        _arg: long

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_SetCentralRegionRadius(self, _arg)

    def GetCentralRegionRadius(self):
        r"""GetCentralRegionRadius(self) -> long"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_GetCentralRegionRadius(self)

    def SetScalesSamplingStrategy(self):
        r"""SetScalesSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_SetScalesSamplingStrategy(self)

    def SetStepScaleSamplingStrategy(self):
        r"""SetStepScaleSamplingStrategy(self)"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_SetStepScaleSamplingStrategy(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass(itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass(itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass(itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass(itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass(itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass)
class itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass(itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetSmallParameterVariation(self, _arg):
        r"""
        SetSmallParameterVariation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_SetSmallParameterVariation(self, _arg)

    def GetSmallParameterVariation(self):
        r"""GetSmallParameterVariation(self) -> double"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_GetSmallParameterVariation(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_cast(obj)

# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass)

def itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD2)

def itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD3)

def itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMD4)

def itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF2)

def itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF3)

def itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftANTSNCITIMF4)

def itkRegistrationParameterScalesFromIndexShiftCITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftCITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftCITIMD2(itkRegistrationParameterScalesFromIndexShiftCITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftCITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftCITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftCITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftCITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftCITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftCITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftCITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftCITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD2)

def itkRegistrationParameterScalesFromIndexShiftCITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftCITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftCITIMD3(itkRegistrationParameterScalesFromIndexShiftCITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftCITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftCITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftCITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftCITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftCITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftCITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftCITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftCITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD3)

def itkRegistrationParameterScalesFromIndexShiftCITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftCITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftCITIMD4(itkRegistrationParameterScalesFromIndexShiftCITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftCITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftCITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftCITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftCITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftCITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftCITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftCITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftCITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMD4)

def itkRegistrationParameterScalesFromIndexShiftCITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftCITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftCITIMF2(itkRegistrationParameterScalesFromIndexShiftCITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftCITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftCITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftCITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftCITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftCITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftCITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftCITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftCITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF2)

def itkRegistrationParameterScalesFromIndexShiftCITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftCITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftCITIMF3(itkRegistrationParameterScalesFromIndexShiftCITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftCITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftCITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftCITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftCITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftCITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftCITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftCITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftCITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF3)

def itkRegistrationParameterScalesFromIndexShiftCITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftCITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftCITIMF4(itkRegistrationParameterScalesFromIndexShiftCITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftCITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftCITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftCITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftCITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftCITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftCITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftCITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftCITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftCITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftCITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftCITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftCITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftCITIMF4)

def itkRegistrationParameterScalesFromIndexShiftDITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftDITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftDITIMD2(itkRegistrationParameterScalesFromIndexShiftDITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftDITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftDITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftDITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftDITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftDITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftDITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftDITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftDITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD2)

def itkRegistrationParameterScalesFromIndexShiftDITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftDITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftDITIMD3(itkRegistrationParameterScalesFromIndexShiftDITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftDITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftDITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftDITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftDITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftDITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftDITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftDITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftDITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD3)

def itkRegistrationParameterScalesFromIndexShiftDITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftDITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftDITIMD4(itkRegistrationParameterScalesFromIndexShiftDITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftDITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftDITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftDITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftDITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftDITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftDITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftDITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftDITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMD4)

def itkRegistrationParameterScalesFromIndexShiftDITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftDITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftDITIMF2(itkRegistrationParameterScalesFromIndexShiftDITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftDITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftDITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftDITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftDITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftDITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftDITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftDITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftDITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF2)

def itkRegistrationParameterScalesFromIndexShiftDITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftDITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftDITIMF3(itkRegistrationParameterScalesFromIndexShiftDITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftDITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftDITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftDITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftDITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftDITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftDITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftDITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftDITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF3)

def itkRegistrationParameterScalesFromIndexShiftDITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftDITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftDITIMF4(itkRegistrationParameterScalesFromIndexShiftDITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftDITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftDITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftDITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftDITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftDITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftDITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftDITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftDITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftDITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftDITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftDITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftDITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftDITIMF4)

def itkRegistrationParameterScalesFromIndexShiftITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftITIMD2(itkRegistrationParameterScalesFromIndexShiftITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD2)

def itkRegistrationParameterScalesFromIndexShiftITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftITIMD3(itkRegistrationParameterScalesFromIndexShiftITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD3)

def itkRegistrationParameterScalesFromIndexShiftITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftITIMD4(itkRegistrationParameterScalesFromIndexShiftITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMD4)

def itkRegistrationParameterScalesFromIndexShiftITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftITIMF2(itkRegistrationParameterScalesFromIndexShiftITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF2)

def itkRegistrationParameterScalesFromIndexShiftITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftITIMF3(itkRegistrationParameterScalesFromIndexShiftITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF3)

def itkRegistrationParameterScalesFromIndexShiftITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftITIMF4(itkRegistrationParameterScalesFromIndexShiftITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftITIMF4)

def itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD2)

def itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD3)

def itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMD4)

def itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF2)

def itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF3)

def itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftJHMIITIMF4)

def itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftMMIITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftMMIITIMD2(itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMMIITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMMIITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD2)

def itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftMMIITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftMMIITIMD3(itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMMIITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMMIITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD3)

def itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftMMIITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftMMIITIMD4(itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMMIITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMMIITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMD4)

def itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftMMIITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftMMIITIMF2(itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMMIITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMMIITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF2)

def itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftMMIITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftMMIITIMF3(itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMMIITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMMIITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF3)

def itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftMMIITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftMMIITIMF4(itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMMIITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMMIITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMMIITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMMIITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMMIITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMMIITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMMIITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMMIITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftMMIITIMF4)

def itkRegistrationParameterScalesFromIndexShiftMSITIMD2_New():
    return itkRegistrationParameterScalesFromIndexShiftMSITIMD2.New()

class itkRegistrationParameterScalesFromIndexShiftMSITIMD2(itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMSITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMSITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMSITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMSITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMSITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD2_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD2)

def itkRegistrationParameterScalesFromIndexShiftMSITIMD3_New():
    return itkRegistrationParameterScalesFromIndexShiftMSITIMD3.New()

class itkRegistrationParameterScalesFromIndexShiftMSITIMD3(itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMSITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMSITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMSITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMSITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMSITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD3_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD3)

def itkRegistrationParameterScalesFromIndexShiftMSITIMD4_New():
    return itkRegistrationParameterScalesFromIndexShiftMSITIMD4.New()

class itkRegistrationParameterScalesFromIndexShiftMSITIMD4(itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMSITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMSITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMSITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMSITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMSITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMSITIMD4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMD4_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMD4)

def itkRegistrationParameterScalesFromIndexShiftMSITIMF2_New():
    return itkRegistrationParameterScalesFromIndexShiftMSITIMF2.New()

class itkRegistrationParameterScalesFromIndexShiftMSITIMF2(itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMSITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMSITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMSITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMSITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMSITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF2 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF2_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF2)

def itkRegistrationParameterScalesFromIndexShiftMSITIMF3_New():
    return itkRegistrationParameterScalesFromIndexShiftMSITIMF3.New()

class itkRegistrationParameterScalesFromIndexShiftMSITIMF3(itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMSITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMSITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMSITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMSITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMSITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF3 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF3_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF3)

def itkRegistrationParameterScalesFromIndexShiftMSITIMF4_New():
    return itkRegistrationParameterScalesFromIndexShiftMSITIMF4.New()

class itkRegistrationParameterScalesFromIndexShiftMSITIMF4(itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromIndexShiftMSITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Pointer"""
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_Clone(self)
    __swig_destroy__ = _itkRegistrationParameterScalesFromIndexShiftPython.delete_itkRegistrationParameterScalesFromIndexShiftMSITIMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRegistrationParameterScalesFromIndexShiftMSITIMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromIndexShiftMSITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromIndexShiftMSITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromIndexShiftMSITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromIndexShiftMSITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromIndexShiftMSITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromIndexShiftMSITIMF4 in _itkRegistrationParameterScalesFromIndexShiftPython:
_itkRegistrationParameterScalesFromIndexShiftPython.itkRegistrationParameterScalesFromIndexShiftMSITIMF4_swigregister(itkRegistrationParameterScalesFromIndexShiftMSITIMF4)

