# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKOptimizersv4Python



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPowellOptimizerv4Python
else:
    import _itkPowellOptimizerv4Python

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkObjectToObjectOptimizerBasePython
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython

def itkPowellOptimizerv4D_New():
    return itkPowellOptimizerv4D.New()

class itkPowellOptimizerv4D(itk.itkObjectToObjectOptimizerBasePython.itkObjectToObjectOptimizerBaseTemplateD):
    r"""Proxy of C++ itkPowellOptimizerv4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowellOptimizerv4D_Pointer"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowellOptimizerv4D_Pointer"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_Clone(self)

    def SetMaximumIteration(self, _arg):
        r"""
        SetMaximumIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetMaximumIteration(self, _arg)

    def GetMaximumIteration(self):
        r"""GetMaximumIteration(self) -> unsigned int const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetMaximumIteration(self)

    def SetMaximumLineIteration(self, _arg):
        r"""
        SetMaximumLineIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetMaximumLineIteration(self, _arg)

    def GetMaximumLineIteration(self):
        r"""GetMaximumLineIteration(self) -> unsigned int"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetMaximumLineIteration(self)

    def SetStepLength(self, _arg):
        r"""
        SetStepLength(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetStepLength(self, _arg)

    def GetStepLength(self):
        r"""GetStepLength(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetStepLength(self)

    def SetStepTolerance(self, _arg):
        r"""
        SetStepTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetStepTolerance(self, _arg)

    def GetStepTolerance(self):
        r"""GetStepTolerance(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetStepTolerance(self)

    def SetValueTolerance(self, _arg):
        r"""
        SetValueTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetValueTolerance(self, _arg)

    def GetValueTolerance(self):
        r"""GetValueTolerance(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetValueTolerance(self)

    def GetCurrentCost(self):
        r"""GetCurrentCost(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetCurrentCost(self)

    def GetCurrentLineIteration(self):
        r"""GetCurrentLineIteration(self) -> unsigned int const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetCurrentLineIteration(self)

    def StartOptimization(self, doOnlyInitialization=False):
        r"""
        StartOptimization(self, doOnlyInitialization=False)

        Parameters
        ----------
        doOnlyInitialization: bool

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_StartOptimization(self, doOnlyInitialization)

    def StopOptimization(self):
        r"""StopOptimization(self)"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_StopOptimization(self)

    def GetCatchGetValueException(self):
        r"""GetCatchGetValueException(self) -> bool const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetCatchGetValueException(self)

    def SetCatchGetValueException(self, _arg):
        r"""
        SetCatchGetValueException(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetCatchGetValueException(self, _arg)

    def CatchGetValueExceptionOn(self):
        r"""CatchGetValueExceptionOn(self)"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_CatchGetValueExceptionOn(self)

    def CatchGetValueExceptionOff(self):
        r"""CatchGetValueExceptionOff(self)"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_CatchGetValueExceptionOff(self)

    def GetMetricWorstPossibleValue(self):
        r"""GetMetricWorstPossibleValue(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_GetMetricWorstPossibleValue(self)

    def SetMetricWorstPossibleValue(self, _arg):
        r"""
        SetMetricWorstPossibleValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_SetMetricWorstPossibleValue(self, _arg)
    __swig_destroy__ = _itkPowellOptimizerv4Python.delete_itkPowellOptimizerv4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowellOptimizerv4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowellOptimizerv4D

        Create a new object of the class itkPowellOptimizerv4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowellOptimizerv4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowellOptimizerv4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowellOptimizerv4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowellOptimizerv4D in _itkPowellOptimizerv4Python:
_itkPowellOptimizerv4Python.itkPowellOptimizerv4D_swigregister(itkPowellOptimizerv4D)

def itkPowellOptimizerv4F_New():
    return itkPowellOptimizerv4F.New()

class itkPowellOptimizerv4F(itk.itkObjectToObjectOptimizerBasePython.itkObjectToObjectOptimizerBaseTemplateF):
    r"""Proxy of C++ itkPowellOptimizerv4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowellOptimizerv4F_Pointer"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowellOptimizerv4F_Pointer"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_Clone(self)

    def SetMaximumIteration(self, _arg):
        r"""
        SetMaximumIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetMaximumIteration(self, _arg)

    def GetMaximumIteration(self):
        r"""GetMaximumIteration(self) -> unsigned int const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetMaximumIteration(self)

    def SetMaximumLineIteration(self, _arg):
        r"""
        SetMaximumLineIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetMaximumLineIteration(self, _arg)

    def GetMaximumLineIteration(self):
        r"""GetMaximumLineIteration(self) -> unsigned int"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetMaximumLineIteration(self)

    def SetStepLength(self, _arg):
        r"""
        SetStepLength(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetStepLength(self, _arg)

    def GetStepLength(self):
        r"""GetStepLength(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetStepLength(self)

    def SetStepTolerance(self, _arg):
        r"""
        SetStepTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetStepTolerance(self, _arg)

    def GetStepTolerance(self):
        r"""GetStepTolerance(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetStepTolerance(self)

    def SetValueTolerance(self, _arg):
        r"""
        SetValueTolerance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetValueTolerance(self, _arg)

    def GetValueTolerance(self):
        r"""GetValueTolerance(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetValueTolerance(self)

    def GetCurrentCost(self):
        r"""GetCurrentCost(self) -> float const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetCurrentCost(self)

    def GetCurrentLineIteration(self):
        r"""GetCurrentLineIteration(self) -> unsigned int const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetCurrentLineIteration(self)

    def StartOptimization(self, doOnlyInitialization=False):
        r"""
        StartOptimization(self, doOnlyInitialization=False)

        Parameters
        ----------
        doOnlyInitialization: bool

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_StartOptimization(self, doOnlyInitialization)

    def StopOptimization(self):
        r"""StopOptimization(self)"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_StopOptimization(self)

    def GetCatchGetValueException(self):
        r"""GetCatchGetValueException(self) -> bool const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetCatchGetValueException(self)

    def SetCatchGetValueException(self, _arg):
        r"""
        SetCatchGetValueException(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetCatchGetValueException(self, _arg)

    def CatchGetValueExceptionOn(self):
        r"""CatchGetValueExceptionOn(self)"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_CatchGetValueExceptionOn(self)

    def CatchGetValueExceptionOff(self):
        r"""CatchGetValueExceptionOff(self)"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_CatchGetValueExceptionOff(self)

    def GetMetricWorstPossibleValue(self):
        r"""GetMetricWorstPossibleValue(self) -> double const &"""
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_GetMetricWorstPossibleValue(self)

    def SetMetricWorstPossibleValue(self, _arg):
        r"""
        SetMetricWorstPossibleValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_SetMetricWorstPossibleValue(self, _arg)
    __swig_destroy__ = _itkPowellOptimizerv4Python.delete_itkPowellOptimizerv4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowellOptimizerv4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowellOptimizerv4Python.itkPowellOptimizerv4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowellOptimizerv4F

        Create a new object of the class itkPowellOptimizerv4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowellOptimizerv4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowellOptimizerv4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowellOptimizerv4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowellOptimizerv4F in _itkPowellOptimizerv4Python:
_itkPowellOptimizerv4Python.itkPowellOptimizerv4F_swigregister(itkPowellOptimizerv4F)

