# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKPDEDeformableRegistrationPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMultiResolutionPDEDeformableRegistrationPython
else:
    import _itkMultiResolutionPDEDeformableRegistrationPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPDEDeformableRegistrationFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython
import itk.itkArrayPython
import itk.itkResampleImageFilterPython
import itk.itkExtrapolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkFunctionBasePython
import itk.itkInterpolateImageFunctionPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkMultiResolutionPyramidImageFilterPython

def itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_New():
    return itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D.New()

class itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""Proxy of C++ itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_Clone(self)

    def SetFixedImage(self, ptr):
        r"""
        SetFixedImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageD2 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetFixedImage(self, ptr)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetFixedImage(self)

    def SetMovingImage(self, ptr):
        r"""
        SetMovingImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageD2 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetMovingImage(self, ptr)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetMovingImage(self)

    def SetInitialDisplacementField(self, ptr):
        r"""
        SetInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetInitialDisplacementField(self, ptr)

    def SetArbitraryInitialDisplacementField(self, ptr):
        r"""
        SetArbitraryInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetArbitraryInitialDisplacementField(self, ptr)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageVF22"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetDisplacementField(self)

    def SetRegistrationFilter(self, _arg):
        r"""
        SetRegistrationFilter(self, _arg)

        Parameters
        ----------
        _arg: itkPDEDeformableRegistrationFilterID2ID2IVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetRegistrationFilter(self, _arg)

    def GetModifiableRegistrationFilter(self):
        r"""GetModifiableRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID2ID2IVF22"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetModifiableRegistrationFilter(self)

    def GetRegistrationFilter(self, *args):
        r"""
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID2ID2IVF22
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID2ID2IVF22
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetRegistrationFilter(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID2ID2 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID2ID2 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetMovingImagePyramid(self, *args)

    def SetNumberOfLevels(self, num):
        r"""
        SetNumberOfLevels(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetNumberOfLevels(self, num)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetCurrentLevel(self)

    def SetFieldExpander(self, _arg):
        r"""
        SetFieldExpander(self, _arg)

        Parameters
        ----------
        _arg: itkResampleImageFilterIVF22IVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetFieldExpander(self, _arg)

    def GetModifiableFieldExpander(self):
        r"""GetModifiableFieldExpander(self) -> itkResampleImageFilterIVF22IVF22"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetModifiableFieldExpander(self)

    def GetFieldExpander(self, *args):
        r"""
        GetFieldExpander(self) -> itkResampleImageFilterIVF22IVF22
        GetFieldExpander(self) -> itkResampleImageFilterIVF22IVF22
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetFieldExpander(self, *args)

    def SetNumberOfIterations(self, *args):
        r"""
        SetNumberOfIterations(self, numberOfIterations)

        Parameters
        ----------
        numberOfIterations: itkArrayUI

        SetNumberOfIterations(self, data)

        Parameters
        ----------
        data: unsigned int *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> itkArrayUI"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_GetNumberOfIterations(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_StopRegistration(self)
    __swig_destroy__ = _itkMultiResolutionPDEDeformableRegistrationPython.delete_itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D

        Create a new object of the class itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D in _itkMultiResolutionPDEDeformableRegistrationPython:
_itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D_swigregister(itkMultiResolutionPDEDeformableRegistrationID2ID2IVF22D)

def itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_New():
    return itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D.New()

class itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_Clone(self)

    def SetFixedImage(self, ptr):
        r"""
        SetFixedImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageD3 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetFixedImage(self, ptr)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetFixedImage(self)

    def SetMovingImage(self, ptr):
        r"""
        SetMovingImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageD3 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetMovingImage(self, ptr)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetMovingImage(self)

    def SetInitialDisplacementField(self, ptr):
        r"""
        SetInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetInitialDisplacementField(self, ptr)

    def SetArbitraryInitialDisplacementField(self, ptr):
        r"""
        SetArbitraryInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetArbitraryInitialDisplacementField(self, ptr)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageVF33"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetDisplacementField(self)

    def SetRegistrationFilter(self, _arg):
        r"""
        SetRegistrationFilter(self, _arg)

        Parameters
        ----------
        _arg: itkPDEDeformableRegistrationFilterID3ID3IVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetRegistrationFilter(self, _arg)

    def GetModifiableRegistrationFilter(self):
        r"""GetModifiableRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID3ID3IVF33"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetModifiableRegistrationFilter(self)

    def GetRegistrationFilter(self, *args):
        r"""
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID3ID3IVF33
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID3ID3IVF33
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetRegistrationFilter(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID3ID3 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID3ID3 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetMovingImagePyramid(self, *args)

    def SetNumberOfLevels(self, num):
        r"""
        SetNumberOfLevels(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetNumberOfLevels(self, num)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetCurrentLevel(self)

    def SetFieldExpander(self, _arg):
        r"""
        SetFieldExpander(self, _arg)

        Parameters
        ----------
        _arg: itkResampleImageFilterIVF33IVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetFieldExpander(self, _arg)

    def GetModifiableFieldExpander(self):
        r"""GetModifiableFieldExpander(self) -> itkResampleImageFilterIVF33IVF33"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetModifiableFieldExpander(self)

    def GetFieldExpander(self, *args):
        r"""
        GetFieldExpander(self) -> itkResampleImageFilterIVF33IVF33
        GetFieldExpander(self) -> itkResampleImageFilterIVF33IVF33
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetFieldExpander(self, *args)

    def SetNumberOfIterations(self, *args):
        r"""
        SetNumberOfIterations(self, numberOfIterations)

        Parameters
        ----------
        numberOfIterations: itkArrayUI

        SetNumberOfIterations(self, data)

        Parameters
        ----------
        data: unsigned int *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> itkArrayUI"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_GetNumberOfIterations(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_StopRegistration(self)
    __swig_destroy__ = _itkMultiResolutionPDEDeformableRegistrationPython.delete_itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D

        Create a new object of the class itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D in _itkMultiResolutionPDEDeformableRegistrationPython:
_itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D_swigregister(itkMultiResolutionPDEDeformableRegistrationID3ID3IVF33D)

def itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_New():
    return itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D.New()

class itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44):
    r"""Proxy of C++ itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_Clone(self)

    def SetFixedImage(self, ptr):
        r"""
        SetFixedImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageD4 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetFixedImage(self, ptr)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetFixedImage(self)

    def SetMovingImage(self, ptr):
        r"""
        SetMovingImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageD4 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetMovingImage(self, ptr)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetMovingImage(self)

    def SetInitialDisplacementField(self, ptr):
        r"""
        SetInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetInitialDisplacementField(self, ptr)

    def SetArbitraryInitialDisplacementField(self, ptr):
        r"""
        SetArbitraryInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetArbitraryInitialDisplacementField(self, ptr)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageVF44"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetDisplacementField(self)

    def SetRegistrationFilter(self, _arg):
        r"""
        SetRegistrationFilter(self, _arg)

        Parameters
        ----------
        _arg: itkPDEDeformableRegistrationFilterID4ID4IVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetRegistrationFilter(self, _arg)

    def GetModifiableRegistrationFilter(self):
        r"""GetModifiableRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID4ID4IVF44"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetModifiableRegistrationFilter(self)

    def GetRegistrationFilter(self, *args):
        r"""
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID4ID4IVF44
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterID4ID4IVF44
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetRegistrationFilter(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID4ID4 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID4ID4 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetMovingImagePyramid(self, *args)

    def SetNumberOfLevels(self, num):
        r"""
        SetNumberOfLevels(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetNumberOfLevels(self, num)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetCurrentLevel(self)

    def SetFieldExpander(self, _arg):
        r"""
        SetFieldExpander(self, _arg)

        Parameters
        ----------
        _arg: itkResampleImageFilterIVF44IVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetFieldExpander(self, _arg)

    def GetModifiableFieldExpander(self):
        r"""GetModifiableFieldExpander(self) -> itkResampleImageFilterIVF44IVF44"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetModifiableFieldExpander(self)

    def GetFieldExpander(self, *args):
        r"""
        GetFieldExpander(self) -> itkResampleImageFilterIVF44IVF44
        GetFieldExpander(self) -> itkResampleImageFilterIVF44IVF44
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetFieldExpander(self, *args)

    def SetNumberOfIterations(self, *args):
        r"""
        SetNumberOfIterations(self, numberOfIterations)

        Parameters
        ----------
        numberOfIterations: itkArrayUI

        SetNumberOfIterations(self, data)

        Parameters
        ----------
        data: unsigned int *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> itkArrayUI"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_GetNumberOfIterations(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_StopRegistration(self)
    __swig_destroy__ = _itkMultiResolutionPDEDeformableRegistrationPython.delete_itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D

        Create a new object of the class itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D in _itkMultiResolutionPDEDeformableRegistrationPython:
_itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D_swigregister(itkMultiResolutionPDEDeformableRegistrationID4ID4IVF44D)

def itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_New():
    return itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F.New()

class itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""Proxy of C++ itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_Clone(self)

    def SetFixedImage(self, ptr):
        r"""
        SetFixedImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageF2 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetFixedImage(self, ptr)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetFixedImage(self)

    def SetMovingImage(self, ptr):
        r"""
        SetMovingImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageF2 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetMovingImage(self, ptr)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetMovingImage(self)

    def SetInitialDisplacementField(self, ptr):
        r"""
        SetInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetInitialDisplacementField(self, ptr)

    def SetArbitraryInitialDisplacementField(self, ptr):
        r"""
        SetArbitraryInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetArbitraryInitialDisplacementField(self, ptr)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageVF22"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetDisplacementField(self)

    def SetRegistrationFilter(self, _arg):
        r"""
        SetRegistrationFilter(self, _arg)

        Parameters
        ----------
        _arg: itkPDEDeformableRegistrationFilterIF2IF2IVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetRegistrationFilter(self, _arg)

    def GetModifiableRegistrationFilter(self):
        r"""GetModifiableRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF2IF2IVF22"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetModifiableRegistrationFilter(self)

    def GetRegistrationFilter(self, *args):
        r"""
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF2IF2IVF22
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF2IF2IVF22
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetRegistrationFilter(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF2IF2 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF2IF2 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetMovingImagePyramid(self, *args)

    def SetNumberOfLevels(self, num):
        r"""
        SetNumberOfLevels(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetNumberOfLevels(self, num)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetCurrentLevel(self)

    def SetFieldExpander(self, _arg):
        r"""
        SetFieldExpander(self, _arg)

        Parameters
        ----------
        _arg: itkResampleImageFilterIVF22IVF22 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetFieldExpander(self, _arg)

    def GetModifiableFieldExpander(self):
        r"""GetModifiableFieldExpander(self) -> itkResampleImageFilterIVF22IVF22"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetModifiableFieldExpander(self)

    def GetFieldExpander(self, *args):
        r"""
        GetFieldExpander(self) -> itkResampleImageFilterIVF22IVF22
        GetFieldExpander(self) -> itkResampleImageFilterIVF22IVF22
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetFieldExpander(self, *args)

    def SetNumberOfIterations(self, *args):
        r"""
        SetNumberOfIterations(self, numberOfIterations)

        Parameters
        ----------
        numberOfIterations: itkArrayUI

        SetNumberOfIterations(self, data)

        Parameters
        ----------
        data: unsigned int *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> itkArrayUI"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_GetNumberOfIterations(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_StopRegistration(self)
    __swig_destroy__ = _itkMultiResolutionPDEDeformableRegistrationPython.delete_itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F

        Create a new object of the class itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F in _itkMultiResolutionPDEDeformableRegistrationPython:
_itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F_swigregister(itkMultiResolutionPDEDeformableRegistrationIF2IF2IVF22F)

def itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_New():
    return itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F.New()

class itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_Clone(self)

    def SetFixedImage(self, ptr):
        r"""
        SetFixedImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageF3 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetFixedImage(self, ptr)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetFixedImage(self)

    def SetMovingImage(self, ptr):
        r"""
        SetMovingImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageF3 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetMovingImage(self, ptr)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetMovingImage(self)

    def SetInitialDisplacementField(self, ptr):
        r"""
        SetInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetInitialDisplacementField(self, ptr)

    def SetArbitraryInitialDisplacementField(self, ptr):
        r"""
        SetArbitraryInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetArbitraryInitialDisplacementField(self, ptr)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageVF33"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetDisplacementField(self)

    def SetRegistrationFilter(self, _arg):
        r"""
        SetRegistrationFilter(self, _arg)

        Parameters
        ----------
        _arg: itkPDEDeformableRegistrationFilterIF3IF3IVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetRegistrationFilter(self, _arg)

    def GetModifiableRegistrationFilter(self):
        r"""GetModifiableRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF3IF3IVF33"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetModifiableRegistrationFilter(self)

    def GetRegistrationFilter(self, *args):
        r"""
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF3IF3IVF33
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF3IF3IVF33
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetRegistrationFilter(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF3IF3 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF3IF3 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetMovingImagePyramid(self, *args)

    def SetNumberOfLevels(self, num):
        r"""
        SetNumberOfLevels(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetNumberOfLevels(self, num)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetCurrentLevel(self)

    def SetFieldExpander(self, _arg):
        r"""
        SetFieldExpander(self, _arg)

        Parameters
        ----------
        _arg: itkResampleImageFilterIVF33IVF33 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetFieldExpander(self, _arg)

    def GetModifiableFieldExpander(self):
        r"""GetModifiableFieldExpander(self) -> itkResampleImageFilterIVF33IVF33"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetModifiableFieldExpander(self)

    def GetFieldExpander(self, *args):
        r"""
        GetFieldExpander(self) -> itkResampleImageFilterIVF33IVF33
        GetFieldExpander(self) -> itkResampleImageFilterIVF33IVF33
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetFieldExpander(self, *args)

    def SetNumberOfIterations(self, *args):
        r"""
        SetNumberOfIterations(self, numberOfIterations)

        Parameters
        ----------
        numberOfIterations: itkArrayUI

        SetNumberOfIterations(self, data)

        Parameters
        ----------
        data: unsigned int *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> itkArrayUI"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_GetNumberOfIterations(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_StopRegistration(self)
    __swig_destroy__ = _itkMultiResolutionPDEDeformableRegistrationPython.delete_itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F

        Create a new object of the class itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F in _itkMultiResolutionPDEDeformableRegistrationPython:
_itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F_swigregister(itkMultiResolutionPDEDeformableRegistrationIF3IF3IVF33F)

def itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_New():
    return itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F.New()

class itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44):
    r"""Proxy of C++ itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_Pointer"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_Clone(self)

    def SetFixedImage(self, ptr):
        r"""
        SetFixedImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageF4 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetFixedImage(self, ptr)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetFixedImage(self)

    def SetMovingImage(self, ptr):
        r"""
        SetMovingImage(self, ptr)

        Parameters
        ----------
        ptr: itkImageF4 const *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetMovingImage(self, ptr)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetMovingImage(self)

    def SetInitialDisplacementField(self, ptr):
        r"""
        SetInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetInitialDisplacementField(self, ptr)

    def SetArbitraryInitialDisplacementField(self, ptr):
        r"""
        SetArbitraryInitialDisplacementField(self, ptr)

        Parameters
        ----------
        ptr: itkImageVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetArbitraryInitialDisplacementField(self, ptr)

    def GetDisplacementField(self):
        r"""GetDisplacementField(self) -> itkImageVF44"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetDisplacementField(self)

    def SetRegistrationFilter(self, _arg):
        r"""
        SetRegistrationFilter(self, _arg)

        Parameters
        ----------
        _arg: itkPDEDeformableRegistrationFilterIF4IF4IVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetRegistrationFilter(self, _arg)

    def GetModifiableRegistrationFilter(self):
        r"""GetModifiableRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF4IF4IVF44"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetModifiableRegistrationFilter(self)

    def GetRegistrationFilter(self, *args):
        r"""
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF4IF4IVF44
        GetRegistrationFilter(self) -> itkPDEDeformableRegistrationFilterIF4IF4IVF44
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetRegistrationFilter(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF4IF4 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF4IF4 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetMovingImagePyramid(self, *args)

    def SetNumberOfLevels(self, num):
        r"""
        SetNumberOfLevels(self, num)

        Parameters
        ----------
        num: unsigned int

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetNumberOfLevels(self, num)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned int const &"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetCurrentLevel(self)

    def SetFieldExpander(self, _arg):
        r"""
        SetFieldExpander(self, _arg)

        Parameters
        ----------
        _arg: itkResampleImageFilterIVF44IVF44 *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetFieldExpander(self, _arg)

    def GetModifiableFieldExpander(self):
        r"""GetModifiableFieldExpander(self) -> itkResampleImageFilterIVF44IVF44"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetModifiableFieldExpander(self)

    def GetFieldExpander(self, *args):
        r"""
        GetFieldExpander(self) -> itkResampleImageFilterIVF44IVF44
        GetFieldExpander(self) -> itkResampleImageFilterIVF44IVF44
        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetFieldExpander(self, *args)

    def SetNumberOfIterations(self, *args):
        r"""
        SetNumberOfIterations(self, numberOfIterations)

        Parameters
        ----------
        numberOfIterations: itkArrayUI

        SetNumberOfIterations(self, data)

        Parameters
        ----------
        data: unsigned int *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_SetNumberOfIterations(self, *args)

    def GetNumberOfIterations(self):
        r"""GetNumberOfIterations(self) -> itkArrayUI"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_GetNumberOfIterations(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_StopRegistration(self)
    __swig_destroy__ = _itkMultiResolutionPDEDeformableRegistrationPython.delete_itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F

        Create a new object of the class itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F in _itkMultiResolutionPDEDeformableRegistrationPython:
_itkMultiResolutionPDEDeformableRegistrationPython.itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F_swigregister(itkMultiResolutionPDEDeformableRegistrationIF4IF4IVF44F)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def multi_resolution_pde_deformable_registration(*args: itkt.ImageLike,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., initial_displacement_field: itkt.Image=..., arbitrary_initial_displacement_field: itkt.Image=..., registration_filter=..., fixed_image_pyramid=..., moving_image_pyramid=..., number_of_levels: int=..., field_expander=..., number_of_iterations: Sequence[int]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MultiResolutionPDEDeformableRegistration"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'initial_displacement_field':initial_displacement_field,'arbitrary_initial_displacement_field':arbitrary_initial_displacement_field,'registration_filter':registration_filter,'fixed_image_pyramid':fixed_image_pyramid,'moving_image_pyramid':moving_image_pyramid,'number_of_levels':number_of_levels,'field_expander':field_expander,'number_of_iterations':number_of_iterations }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MultiResolutionPDEDeformableRegistration.New(*args, **kwargs)

    return instance.__internal_call__()

def multi_resolution_pde_deformable_registration_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKPDEDeformableRegistration.MultiResolutionPDEDeformableRegistration
    multi_resolution_pde_deformable_registration.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    multi_resolution_pde_deformable_registration.__doc__ = filter_object.__doc__



