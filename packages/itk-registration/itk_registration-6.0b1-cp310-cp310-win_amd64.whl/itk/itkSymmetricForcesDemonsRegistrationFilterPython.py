# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKPDEDeformableRegistrationPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSymmetricForcesDemonsRegistrationFilterPython
else:
    import _itkSymmetricForcesDemonsRegistrationFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPDEDeformableRegistrationFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_New():
    return itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22.New()

class itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterID2ID2IVF22):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22_swigregister(itkSymmetricForcesDemonsRegistrationFilterID2ID2IVF22)

def itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_New():
    return itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33.New()

class itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterID3ID3IVF33):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33_swigregister(itkSymmetricForcesDemonsRegistrationFilterID3ID3IVF33)

def itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_New():
    return itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44.New()

class itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterID4ID4IVF44):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44_swigregister(itkSymmetricForcesDemonsRegistrationFilterID4ID4IVF44)

def itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_New():
    return itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22.New()

class itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIF2IF2IVF22):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22_swigregister(itkSymmetricForcesDemonsRegistrationFilterIF2IF2IVF22)

def itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_New():
    return itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33.New()

class itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIF3IF3IVF33):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33_swigregister(itkSymmetricForcesDemonsRegistrationFilterIF3IF3IVF33)

def itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_New():
    return itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44.New()

class itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIF4IF4IVF44):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44_swigregister(itkSymmetricForcesDemonsRegistrationFilterIF4IF4IVF44)

def itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_New():
    return itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22.New()

class itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterISS2ISS2IVF22):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22_swigregister(itkSymmetricForcesDemonsRegistrationFilterISS2ISS2IVF22)

def itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_New():
    return itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33.New()

class itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterISS3ISS3IVF33):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33_swigregister(itkSymmetricForcesDemonsRegistrationFilterISS3ISS3IVF33)

def itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_New():
    return itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44.New()

class itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterISS4ISS4IVF44):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44_swigregister(itkSymmetricForcesDemonsRegistrationFilterISS4ISS4IVF44)

def itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_New():
    return itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22.New()

class itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIUC2IUC2IVF22):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22_swigregister(itkSymmetricForcesDemonsRegistrationFilterIUC2IUC2IVF22)

def itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_New():
    return itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33.New()

class itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIUC3IUC3IVF33):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33_swigregister(itkSymmetricForcesDemonsRegistrationFilterIUC3IUC3IVF33)

def itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_New():
    return itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44.New()

class itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIUC4IUC4IVF44):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44_swigregister(itkSymmetricForcesDemonsRegistrationFilterIUC4IUC4IVF44)

def itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_New():
    return itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22.New()

class itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIUS2IUS2IVF22):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22_swigregister(itkSymmetricForcesDemonsRegistrationFilterIUS2IUS2IVF22)

def itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_New():
    return itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33.New()

class itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIUS3IUS3IVF33):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33_swigregister(itkSymmetricForcesDemonsRegistrationFilterIUS3IUS3IVF33)

def itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_New():
    return itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44.New()

class itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44(itk.itkPDEDeformableRegistrationFilterPython.itkPDEDeformableRegistrationFilterIUS4IUS4IVF44):
    r"""Proxy of C++ itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_Pointer"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_Clone(self)

    def GetMetric(self):
        r"""GetMetric(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_GetMetric(self)

    def SetIntensityDifferenceThreshold(self, arg0):
        r"""
        SetIntensityDifferenceThreshold(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_SetIntensityDifferenceThreshold(self, arg0)

    def GetIntensityDifferenceThreshold(self):
        r"""GetIntensityDifferenceThreshold(self) -> double"""
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_GetIntensityDifferenceThreshold(self)
    __swig_destroy__ = _itkSymmetricForcesDemonsRegistrationFilterPython.delete_itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44

        Create a new object of the class itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44 in _itkSymmetricForcesDemonsRegistrationFilterPython:
_itkSymmetricForcesDemonsRegistrationFilterPython.itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44_swigregister(itkSymmetricForcesDemonsRegistrationFilterIUS4IUS4IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def symmetric_forces_demons_registration_filter(*args: itkt.ImageLike,  intensity_difference_threshold: float=..., fixed_image: itkt.Image=..., moving_image: itkt.Image=..., initial_displacement_field: itkt.Image=..., smooth_displacement_field: bool=..., standard_deviations: Union[Sequence[float], float]=..., smooth_update_field: bool=..., update_field_standard_deviations: Union[Sequence[float], float]=..., maximum_error: float=..., maximum_kernel_width: int=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SymmetricForcesDemonsRegistrationFilter"""
    import itk

    kwarg_typehints = { 'intensity_difference_threshold':intensity_difference_threshold,'fixed_image':fixed_image,'moving_image':moving_image,'initial_displacement_field':initial_displacement_field,'smooth_displacement_field':smooth_displacement_field,'standard_deviations':standard_deviations,'smooth_update_field':smooth_update_field,'update_field_standard_deviations':update_field_standard_deviations,'maximum_error':maximum_error,'maximum_kernel_width':maximum_kernel_width,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SymmetricForcesDemonsRegistrationFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def symmetric_forces_demons_registration_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKPDEDeformableRegistration.SymmetricForcesDemonsRegistrationFilter
    symmetric_forces_demons_registration_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    symmetric_forces_demons_registration_filter.__doc__ = filter_object.__doc__



