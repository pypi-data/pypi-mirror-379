# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToImageMetricPython
else:
    import _itkImageToImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkImagePython
import itk.stdcomplexPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkCostFunctionPython
class itkImageToImageMetricID2ID2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID2D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion2 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD22
        GetGradientImage(self) -> itkImageCVD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: double const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> double const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD22_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID2ID2_cast(obj)

# Register itkImageToImageMetricID2ID2 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricID2ID2_swigregister(itkImageToImageMetricID2ID2)
class itkImageToImageMetricID3ID3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion3 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD33
        GetGradientImage(self) -> itkImageCVD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: double const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> double const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD33_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID3ID3_cast(obj)

# Register itkImageToImageMetricID3ID3 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricID3ID3_swigregister(itkImageToImageMetricID3ID3)
class itkImageToImageMetricID4ID4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID4D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion4 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex4,std::allocator< itkIndex4 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD44
        GetGradientImage(self) -> itkImageCVD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: double const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> double const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD44_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricID4ID4_cast(obj)

# Register itkImageToImageMetricID4ID4 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricID4ID4_swigregister(itkImageToImageMetricID4ID4)
class itkImageToImageMetricIF2IF2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion2 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD22
        GetGradientImage(self) -> itkImageCVD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: float const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> float const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD22_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_cast(obj)

# Register itkImageToImageMetricIF2IF2 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIF2IF2_swigregister(itkImageToImageMetricIF2IF2)
class itkImageToImageMetricIF3IF3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion3 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD33
        GetGradientImage(self) -> itkImageCVD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: float const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> float const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD33_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_cast(obj)

# Register itkImageToImageMetricIF3IF3 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIF3IF3_swigregister(itkImageToImageMetricIF3IF3)
class itkImageToImageMetricIF4IF4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion4 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex4,std::allocator< itkIndex4 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD44
        GetGradientImage(self) -> itkImageCVD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: float const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> float const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD44_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_cast(obj)

# Register itkImageToImageMetricIF4IF4 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIF4IF4_swigregister(itkImageToImageMetricIF4IF4)
class itkImageToImageMetricISS2ISS2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion2 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD22
        GetGradientImage(self) -> itkImageCVD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: short const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> short const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD22_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_cast(obj)

# Register itkImageToImageMetricISS2ISS2 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2_swigregister(itkImageToImageMetricISS2ISS2)
class itkImageToImageMetricISS3ISS3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion3 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD33
        GetGradientImage(self) -> itkImageCVD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: short const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> short const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD33_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_cast(obj)

# Register itkImageToImageMetricISS3ISS3 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3_swigregister(itkImageToImageMetricISS3ISS3)
class itkImageToImageMetricISS4ISS4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS4D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS4D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion4 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex4,std::allocator< itkIndex4 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD44
        GetGradientImage(self) -> itkImageCVD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: short const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> short const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD44_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_cast(obj)

# Register itkImageToImageMetricISS4ISS4 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4_swigregister(itkImageToImageMetricISS4ISS4)
class itkImageToImageMetricIUC2IUC2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion2 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD22
        GetGradientImage(self) -> itkImageCVD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: unsigned char const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> unsigned char const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD22_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_cast(obj)

# Register itkImageToImageMetricIUC2IUC2 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2_swigregister(itkImageToImageMetricIUC2IUC2)
class itkImageToImageMetricIUC3IUC3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion3 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD33
        GetGradientImage(self) -> itkImageCVD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: unsigned char const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> unsigned char const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD33_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_cast(obj)

# Register itkImageToImageMetricIUC3IUC3 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3_swigregister(itkImageToImageMetricIUC3IUC3)
class itkImageToImageMetricIUC4IUC4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC4D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion4 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex4,std::allocator< itkIndex4 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD44
        GetGradientImage(self) -> itkImageCVD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: unsigned char const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> unsigned char const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD44_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_cast(obj)

# Register itkImageToImageMetricIUC4IUC4 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4_swigregister(itkImageToImageMetricIUC4IUC4)
class itkImageToImageMetricIUS2IUS2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion2 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject2 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject2"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex2,std::allocator< itkIndex2 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD22"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD22
        GetGradientImage(self) -> itkImageCVD22
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: unsigned short const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> unsigned short const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD22_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_cast(obj)

# Register itkImageToImageMetricIUS2IUS2 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2_swigregister(itkImageToImageMetricIUS2IUS2)
class itkImageToImageMetricIUS3IUS3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion3 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject3 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject3"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex3,std::allocator< itkIndex3 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD33"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD33
        GetGradientImage(self) -> itkImageCVD33
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: unsigned short const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> unsigned short const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD33_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_cast(obj)

# Register itkImageToImageMetricIUS3IUS3 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3_swigregister(itkImageToImageMetricIUS3IUS3)
class itkImageToImageMetricIUS4IUS4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkImageToImageMetricIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS4D
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetInterpolator(self, *args)

    def GetNumberOfMovingImageSamples(self):
        r"""GetNumberOfMovingImageSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetNumberOfMovingImageSamples(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion(self, reg):
        r"""
        SetFixedImageRegion(self, reg)

        Parameters
        ----------
        reg: itkImageRegion4 const

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetFixedImageRegion(self, reg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetFixedImageRegion(self)

    def SetMovingImageMask(self, *args):
        r"""
        SetMovingImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetMovingImageMask(self, *args)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetMovingImageMask(self)

    def SetFixedImageMask(self, *args):
        r"""
        SetFixedImageMask(self, arg)

        Parameters
        ----------
        arg: itkSpatialObject4 *const

        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 const *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetFixedImageMask(self, *args)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkSpatialObject4"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetFixedImageMask(self)

    def SetFixedImageIndexes(self, indexes):
        r"""
        SetFixedImageIndexes(self, indexes)

        Parameters
        ----------
        indexes: std::vector< itkIndex4,std::allocator< itkIndex4 > > const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetFixedImageIndexes(self, indexes)

    def SetUseFixedImageIndexes(self, useIndexes):
        r"""
        SetUseFixedImageIndexes(self, useIndexes)

        Parameters
        ----------
        useIndexes: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetUseFixedImageIndexes(self, useIndexes)

    def GetUseFixedImageIndexes(self):
        r"""GetUseFixedImageIndexes(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetUseFixedImageIndexes(self)

    def SetNumberOfWorkUnits(self, numberOfWorkUnits):
        r"""
        SetNumberOfWorkUnits(self, numberOfWorkUnits)

        Parameters
        ----------
        numberOfWorkUnits: unsigned int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetNumberOfWorkUnits(self, numberOfWorkUnits)

    def GetNumberOfWorkUnits(self):
        r"""GetNumberOfWorkUnits(self) -> unsigned int const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetNumberOfWorkUnits(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_ComputeGradientOff(self)

    def ComputeGradient(self):
        r"""ComputeGradient(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_ComputeGradient(self)

    def GetModifiableGradientImage(self):
        r"""GetModifiableGradientImage(self) -> itkImageCVD44"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetModifiableGradientImage(self)

    def GetGradientImage(self, *args):
        r"""
        GetGradientImage(self) -> itkImageCVD44
        GetGradientImage(self) -> itkImageCVD44
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetGradientImage(self, *args)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_Initialize(self)

    def MultiThreadingInitialize(self):
        r"""MultiThreadingInitialize(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_MultiThreadingInitialize(self)

    def SetNumberOfFixedImageSamples(self, numSamples):
        r"""
        SetNumberOfFixedImageSamples(self, numSamples)

        Parameters
        ----------
        numSamples: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetNumberOfFixedImageSamples(self, numSamples)

    def GetNumberOfFixedImageSamples(self):
        r"""GetNumberOfFixedImageSamples(self) -> unsigned long long const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetNumberOfFixedImageSamples(self)

    def SetNumberOfSpatialSamples(self, num):
        r"""
        SetNumberOfSpatialSamples(self, num)

        Parameters
        ----------
        num: unsigned long long

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetNumberOfSpatialSamples(self, num)

    def GetNumberOfSpatialSamples(self):
        r"""GetNumberOfSpatialSamples(self) -> unsigned long long"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetNumberOfSpatialSamples(self)

    def SetFixedImageSamplesIntensityThreshold(self, thresh):
        r"""
        SetFixedImageSamplesIntensityThreshold(self, thresh)

        Parameters
        ----------
        thresh: unsigned short const &

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetFixedImageSamplesIntensityThreshold(self, thresh)

    def GetFixedImageSamplesIntensityThreshold(self):
        r"""GetFixedImageSamplesIntensityThreshold(self) -> unsigned short const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetFixedImageSamplesIntensityThreshold(self)

    def SetUseFixedImageSamplesIntensityThreshold(self, useThresh):
        r"""
        SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

        Parameters
        ----------
        useThresh: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetUseFixedImageSamplesIntensityThreshold(self, useThresh)

    def GetUseFixedImageSamplesIntensityThreshold(self):
        r"""GetUseFixedImageSamplesIntensityThreshold(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetUseFixedImageSamplesIntensityThreshold(self)

    def SetUseAllPixels(self, useAllPixels):
        r"""
        SetUseAllPixels(self, useAllPixels)

        Parameters
        ----------
        useAllPixels: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetUseAllPixels(self, useAllPixels)

    def UseAllPixelsOn(self):
        r"""UseAllPixelsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_UseAllPixelsOn(self)

    def UseAllPixelsOff(self):
        r"""UseAllPixelsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_UseAllPixelsOff(self)

    def GetUseAllPixels(self):
        r"""GetUseAllPixels(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetUseAllPixels(self)

    def SetUseSequentialSampling(self, useSequential):
        r"""
        SetUseSequentialSampling(self, useSequential)

        Parameters
        ----------
        useSequential: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetUseSequentialSampling(self, useSequential)

    def GetUseSequentialSampling(self):
        r"""GetUseSequentialSampling(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetUseSequentialSampling(self)

    def ReinitializeSeed(self, *args):
        r"""
        ReinitializeSeed(self)
        ReinitializeSeed(self, seed)

        Parameters
        ----------
        seed: int

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_ReinitializeSeed(self, *args)

    def SetUseCachingOfBSplineWeights(self, _arg):
        r"""
        SetUseCachingOfBSplineWeights(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_SetUseCachingOfBSplineWeights(self, _arg)

    def GetUseCachingOfBSplineWeights(self):
        r"""GetUseCachingOfBSplineWeights(self) -> bool const &"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetUseCachingOfBSplineWeights(self)

    def UseCachingOfBSplineWeightsOn(self):
        r"""UseCachingOfBSplineWeightsOn(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_UseCachingOfBSplineWeightsOn(self)

    def UseCachingOfBSplineWeightsOff(self):
        r"""UseCachingOfBSplineWeightsOff(self)"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_UseCachingOfBSplineWeightsOff(self)

    def GetModifiableThreader(self):
        r"""GetModifiableThreader(self) -> itkMultiThreaderBase"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetModifiableThreader(self)

    def GetThreader(self, *args):
        r"""
        GetThreader(self) -> itkMultiThreaderBase
        GetThreader(self) -> itkMultiThreaderBase
        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetThreader(self, *args)

    def GetThreaderTransform(self):
        r"""GetThreaderTransform(self) -> itkTransformD44_Pointer const *"""
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_GetThreaderTransform(self)
    __swig_destroy__ = _itkImageToImageMetricPython.delete_itkImageToImageMetricIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToImageMetricIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_cast(obj)

# Register itkImageToImageMetricIUS4IUS4 in _itkImageToImageMetricPython:
_itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4_swigregister(itkImageToImageMetricIUS4IUS4)

