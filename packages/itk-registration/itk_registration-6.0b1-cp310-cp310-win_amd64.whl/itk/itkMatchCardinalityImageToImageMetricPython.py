# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMatchCardinalityImageToImageMetricPython
else:
    import _itkMatchCardinalityImageToImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageMetricPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkFunctionBasePython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkCostFunctionPython

def itkMatchCardinalityImageToImageMetricID2ID2_New():
    return itkMatchCardinalityImageToImageMetricID2ID2.New()

class itkMatchCardinalityImageToImageMetricID2ID2(itk.itkImageToImageMetricPython.itkImageToImageMetricID2ID2):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricID2ID2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricID2ID2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricID2ID2

        Create a new object of the class itkMatchCardinalityImageToImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricID2ID2 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID2ID2_swigregister(itkMatchCardinalityImageToImageMetricID2ID2)

def itkMatchCardinalityImageToImageMetricID3ID3_New():
    return itkMatchCardinalityImageToImageMetricID3ID3.New()

class itkMatchCardinalityImageToImageMetricID3ID3(itk.itkImageToImageMetricPython.itkImageToImageMetricID3ID3):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricID3ID3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricID3ID3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricID3ID3

        Create a new object of the class itkMatchCardinalityImageToImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricID3ID3 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID3ID3_swigregister(itkMatchCardinalityImageToImageMetricID3ID3)

def itkMatchCardinalityImageToImageMetricID4ID4_New():
    return itkMatchCardinalityImageToImageMetricID4ID4.New()

class itkMatchCardinalityImageToImageMetricID4ID4(itk.itkImageToImageMetricPython.itkImageToImageMetricID4ID4):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricID4ID4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricID4ID4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricID4ID4

        Create a new object of the class itkMatchCardinalityImageToImageMetricID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricID4ID4 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricID4ID4_swigregister(itkMatchCardinalityImageToImageMetricID4ID4)

def itkMatchCardinalityImageToImageMetricIF2IF2_New():
    return itkMatchCardinalityImageToImageMetricIF2IF2.New()

class itkMatchCardinalityImageToImageMetricIF2IF2(itk.itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIF2IF2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIF2IF2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIF2IF2

        Create a new object of the class itkMatchCardinalityImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIF2IF2 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF2IF2_swigregister(itkMatchCardinalityImageToImageMetricIF2IF2)

def itkMatchCardinalityImageToImageMetricIF3IF3_New():
    return itkMatchCardinalityImageToImageMetricIF3IF3.New()

class itkMatchCardinalityImageToImageMetricIF3IF3(itk.itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIF3IF3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIF3IF3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIF3IF3

        Create a new object of the class itkMatchCardinalityImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIF3IF3 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF3IF3_swigregister(itkMatchCardinalityImageToImageMetricIF3IF3)

def itkMatchCardinalityImageToImageMetricIF4IF4_New():
    return itkMatchCardinalityImageToImageMetricIF4IF4.New()

class itkMatchCardinalityImageToImageMetricIF4IF4(itk.itkImageToImageMetricPython.itkImageToImageMetricIF4IF4):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIF4IF4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIF4IF4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIF4IF4

        Create a new object of the class itkMatchCardinalityImageToImageMetricIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIF4IF4 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIF4IF4_swigregister(itkMatchCardinalityImageToImageMetricIF4IF4)

def itkMatchCardinalityImageToImageMetricISS2ISS2_New():
    return itkMatchCardinalityImageToImageMetricISS2ISS2.New()

class itkMatchCardinalityImageToImageMetricISS2ISS2(itk.itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricISS2ISS2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricISS2ISS2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricISS2ISS2

        Create a new object of the class itkMatchCardinalityImageToImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricISS2ISS2 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS2ISS2_swigregister(itkMatchCardinalityImageToImageMetricISS2ISS2)

def itkMatchCardinalityImageToImageMetricISS3ISS3_New():
    return itkMatchCardinalityImageToImageMetricISS3ISS3.New()

class itkMatchCardinalityImageToImageMetricISS3ISS3(itk.itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricISS3ISS3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricISS3ISS3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricISS3ISS3

        Create a new object of the class itkMatchCardinalityImageToImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricISS3ISS3 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS3ISS3_swigregister(itkMatchCardinalityImageToImageMetricISS3ISS3)

def itkMatchCardinalityImageToImageMetricISS4ISS4_New():
    return itkMatchCardinalityImageToImageMetricISS4ISS4.New()

class itkMatchCardinalityImageToImageMetricISS4ISS4(itk.itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricISS4ISS4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricISS4ISS4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricISS4ISS4

        Create a new object of the class itkMatchCardinalityImageToImageMetricISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricISS4ISS4 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricISS4ISS4_swigregister(itkMatchCardinalityImageToImageMetricISS4ISS4)

def itkMatchCardinalityImageToImageMetricIUC2IUC2_New():
    return itkMatchCardinalityImageToImageMetricIUC2IUC2.New()

class itkMatchCardinalityImageToImageMetricIUC2IUC2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIUC2IUC2

        Create a new object of the class itkMatchCardinalityImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIUC2IUC2 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC2IUC2_swigregister(itkMatchCardinalityImageToImageMetricIUC2IUC2)

def itkMatchCardinalityImageToImageMetricIUC3IUC3_New():
    return itkMatchCardinalityImageToImageMetricIUC3IUC3.New()

class itkMatchCardinalityImageToImageMetricIUC3IUC3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIUC3IUC3

        Create a new object of the class itkMatchCardinalityImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIUC3IUC3 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC3IUC3_swigregister(itkMatchCardinalityImageToImageMetricIUC3IUC3)

def itkMatchCardinalityImageToImageMetricIUC4IUC4_New():
    return itkMatchCardinalityImageToImageMetricIUC4IUC4.New()

class itkMatchCardinalityImageToImageMetricIUC4IUC4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIUC4IUC4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIUC4IUC4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIUC4IUC4

        Create a new object of the class itkMatchCardinalityImageToImageMetricIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIUC4IUC4 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUC4IUC4_swigregister(itkMatchCardinalityImageToImageMetricIUC4IUC4)

def itkMatchCardinalityImageToImageMetricIUS2IUS2_New():
    return itkMatchCardinalityImageToImageMetricIUS2IUS2.New()

class itkMatchCardinalityImageToImageMetricIUS2IUS2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIUS2IUS2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIUS2IUS2_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIUS2IUS2

        Create a new object of the class itkMatchCardinalityImageToImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIUS2IUS2 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS2IUS2_swigregister(itkMatchCardinalityImageToImageMetricIUS2IUS2)

def itkMatchCardinalityImageToImageMetricIUS3IUS3_New():
    return itkMatchCardinalityImageToImageMetricIUS3IUS3.New()

class itkMatchCardinalityImageToImageMetricIUS3IUS3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIUS3IUS3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIUS3IUS3_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIUS3IUS3

        Create a new object of the class itkMatchCardinalityImageToImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIUS3IUS3 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS3IUS3_swigregister(itkMatchCardinalityImageToImageMetricIUS3IUS3)

def itkMatchCardinalityImageToImageMetricIUS4IUS4_New():
    return itkMatchCardinalityImageToImageMetricIUS4IUS4.New()

class itkMatchCardinalityImageToImageMetricIUS4IUS4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4):
    r"""Proxy of C++ itkMatchCardinalityImageToImageMetricIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMatchCardinalityImageToImageMetricIUS4IUS4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMatchCardinalityImageToImageMetricIUS4IUS4_Pointer"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_Clone(self)

    def SetMeasureMatches(self, _arg):
        r"""
        SetMeasureMatches(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_SetMeasureMatches(self, _arg)

    def MeasureMatchesOn(self):
        r"""MeasureMatchesOn(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_MeasureMatchesOn(self)

    def MeasureMatchesOff(self):
        r"""MeasureMatchesOff(self)"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_MeasureMatchesOff(self)

    def GetMeasureMatches(self):
        r"""GetMeasureMatches(self) -> bool"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_GetMeasureMatches(self)

    def GetMultiThreader(self):
        r"""GetMultiThreader(self) -> itkMultiThreaderBase"""
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_GetMultiThreader(self)
    __swig_destroy__ = _itkMatchCardinalityImageToImageMetricPython.delete_itkMatchCardinalityImageToImageMetricIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMatchCardinalityImageToImageMetricIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMatchCardinalityImageToImageMetricIUS4IUS4

        Create a new object of the class itkMatchCardinalityImageToImageMetricIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMatchCardinalityImageToImageMetricIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMatchCardinalityImageToImageMetricIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMatchCardinalityImageToImageMetricIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMatchCardinalityImageToImageMetricIUS4IUS4 in _itkMatchCardinalityImageToImageMetricPython:
_itkMatchCardinalityImageToImageMetricPython.itkMatchCardinalityImageToImageMetricIUS4IUS4_swigregister(itkMatchCardinalityImageToImageMetricIUS4IUS4)

