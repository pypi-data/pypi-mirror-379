# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMultiResolutionImageRegistrationMethodPython
else:
    import _itkMultiResolutionImageRegistrationMethodPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.ITKOptimizersBasePython
import itk.itkArrayPython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.itkCostFunctionPython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageMetricPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkSpatialObjectPropertyPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkMultiResolutionPyramidImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython

def itkMultiResolutionImageRegistrationMethodID2ID2_New():
    return itkMultiResolutionImageRegistrationMethodID2ID2.New()

class itkMultiResolutionImageRegistrationMethodID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodID2ID2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodID2ID2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricID2ID2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricID2ID2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricID2ID2
        GetMetric(self) -> itkImageToImageMetricID2ID2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID2D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID2ID2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID2ID2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID2ID2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodID2ID2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodID2ID2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID2ID2_swigregister(itkMultiResolutionImageRegistrationMethodID2ID2)

def itkMultiResolutionImageRegistrationMethodID3ID3_New():
    return itkMultiResolutionImageRegistrationMethodID3ID3.New()

class itkMultiResolutionImageRegistrationMethodID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodID3ID3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodID3ID3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricID3ID3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricID3ID3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricID3ID3
        GetMetric(self) -> itkImageToImageMetricID3ID3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID3ID3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID3ID3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID3ID3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodID3ID3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodID3ID3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID3ID3_swigregister(itkMultiResolutionImageRegistrationMethodID3ID3)

def itkMultiResolutionImageRegistrationMethodID4ID4_New():
    return itkMultiResolutionImageRegistrationMethodID4ID4.New()

class itkMultiResolutionImageRegistrationMethodID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodID4ID4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodID4ID4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricID4ID4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricID4ID4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricID4ID4
        GetMetric(self) -> itkImageToImageMetricID4ID4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID4D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID4ID4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterID4ID4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterID4ID4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodID4ID4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodID4ID4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodID4ID4_swigregister(itkMultiResolutionImageRegistrationMethodID4ID4)

def itkMultiResolutionImageRegistrationMethodIF2IF2_New():
    return itkMultiResolutionImageRegistrationMethodIF2IF2.New()

class itkMultiResolutionImageRegistrationMethodIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIF2IF2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIF2IF2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIF2IF2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIF2IF2
        GetMetric(self) -> itkImageToImageMetricIF2IF2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF2IF2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF2IF2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF2IF2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIF2IF2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIF2IF2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF2IF2_swigregister(itkMultiResolutionImageRegistrationMethodIF2IF2)

def itkMultiResolutionImageRegistrationMethodIF3IF3_New():
    return itkMultiResolutionImageRegistrationMethodIF3IF3.New()

class itkMultiResolutionImageRegistrationMethodIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIF3IF3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIF3IF3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIF3IF3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIF3IF3
        GetMetric(self) -> itkImageToImageMetricIF3IF3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF3IF3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF3IF3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF3IF3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIF3IF3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIF3IF3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF3IF3_swigregister(itkMultiResolutionImageRegistrationMethodIF3IF3)

def itkMultiResolutionImageRegistrationMethodIF4IF4_New():
    return itkMultiResolutionImageRegistrationMethodIF4IF4.New()

class itkMultiResolutionImageRegistrationMethodIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIF4IF4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIF4IF4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIF4IF4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIF4IF4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIF4IF4
        GetMetric(self) -> itkImageToImageMetricIF4IF4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF4IF4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIF4IF4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIF4IF4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIF4IF4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIF4IF4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIF4IF4_swigregister(itkMultiResolutionImageRegistrationMethodIF4IF4)

def itkMultiResolutionImageRegistrationMethodISS2ISS2_New():
    return itkMultiResolutionImageRegistrationMethodISS2ISS2.New()

class itkMultiResolutionImageRegistrationMethodISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodISS2ISS2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodISS2ISS2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricISS2ISS2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricISS2ISS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricISS2ISS2
        GetMetric(self) -> itkImageToImageMetricISS2ISS2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterISS2ISS2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS2ISS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS2ISS2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS2ISS2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterISS2ISS2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS2ISS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS2ISS2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS2ISS2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodISS2ISS2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodISS2ISS2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS2ISS2_swigregister(itkMultiResolutionImageRegistrationMethodISS2ISS2)

def itkMultiResolutionImageRegistrationMethodISS3ISS3_New():
    return itkMultiResolutionImageRegistrationMethodISS3ISS3.New()

class itkMultiResolutionImageRegistrationMethodISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodISS3ISS3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodISS3ISS3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricISS3ISS3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricISS3ISS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricISS3ISS3
        GetMetric(self) -> itkImageToImageMetricISS3ISS3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterISS3ISS3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS3ISS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS3ISS3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS3ISS3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterISS3ISS3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS3ISS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS3ISS3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS3ISS3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodISS3ISS3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodISS3ISS3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS3ISS3_swigregister(itkMultiResolutionImageRegistrationMethodISS3ISS3)

def itkMultiResolutionImageRegistrationMethodISS4ISS4_New():
    return itkMultiResolutionImageRegistrationMethodISS4ISS4.New()

class itkMultiResolutionImageRegistrationMethodISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodISS4ISS4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodISS4ISS4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricISS4ISS4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricISS4ISS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricISS4ISS4
        GetMetric(self) -> itkImageToImageMetricISS4ISS4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS4D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS4D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterISS4ISS4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS4ISS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS4ISS4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS4ISS4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterISS4ISS4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS4ISS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS4ISS4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterISS4ISS4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodISS4ISS4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodISS4ISS4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodISS4ISS4_swigregister(itkMultiResolutionImageRegistrationMethodISS4ISS4)

def itkMultiResolutionImageRegistrationMethodIUC2IUC2_New():
    return itkMultiResolutionImageRegistrationMethodIUC2IUC2.New()

class itkMultiResolutionImageRegistrationMethodIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIUC2IUC2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIUC2IUC2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIUC2IUC2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIUC2IUC2
        GetMetric(self) -> itkImageToImageMetricIUC2IUC2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUC2IUC2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC2IUC2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC2IUC2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC2IUC2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUC2IUC2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC2IUC2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC2IUC2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC2IUC2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUC2IUC2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUC2IUC2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC2IUC2_swigregister(itkMultiResolutionImageRegistrationMethodIUC2IUC2)

def itkMultiResolutionImageRegistrationMethodIUC3IUC3_New():
    return itkMultiResolutionImageRegistrationMethodIUC3IUC3.New()

class itkMultiResolutionImageRegistrationMethodIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIUC3IUC3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIUC3IUC3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIUC3IUC3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIUC3IUC3
        GetMetric(self) -> itkImageToImageMetricIUC3IUC3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUC3IUC3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC3IUC3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC3IUC3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC3IUC3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUC3IUC3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC3IUC3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC3IUC3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC3IUC3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUC3IUC3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUC3IUC3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC3IUC3_swigregister(itkMultiResolutionImageRegistrationMethodIUC3IUC3)

def itkMultiResolutionImageRegistrationMethodIUC4IUC4_New():
    return itkMultiResolutionImageRegistrationMethodIUC4IUC4.New()

class itkMultiResolutionImageRegistrationMethodIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIUC4IUC4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIUC4IUC4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIUC4IUC4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIUC4IUC4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIUC4IUC4
        GetMetric(self) -> itkImageToImageMetricIUC4IUC4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC4D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUC4IUC4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC4IUC4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC4IUC4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC4IUC4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUC4IUC4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC4IUC4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC4IUC4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUC4IUC4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUC4IUC4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUC4IUC4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUC4IUC4_swigregister(itkMultiResolutionImageRegistrationMethodIUC4IUC4)

def itkMultiResolutionImageRegistrationMethodIUS2IUS2_New():
    return itkMultiResolutionImageRegistrationMethodIUS2IUS2.New()

class itkMultiResolutionImageRegistrationMethodIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIUS2IUS2_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIUS2IUS2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIUS2IUS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIUS2IUS2
        GetMetric(self) -> itkImageToImageMetricIUS2IUS2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD22
        GetTransform(self) -> itkTransformD22
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUS2IUS2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS2IUS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS2IUS2
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS2IUS2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUS2IUS2 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS2IUS2"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS2IUS2
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS2IUS2
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUS2IUS2

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUS2IUS2 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS2IUS2_swigregister(itkMultiResolutionImageRegistrationMethodIUS2IUS2)

def itkMultiResolutionImageRegistrationMethodIUS3IUS3_New():
    return itkMultiResolutionImageRegistrationMethodIUS3IUS3.New()

class itkMultiResolutionImageRegistrationMethodIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIUS3IUS3_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIUS3IUS3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIUS3IUS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIUS3IUS3
        GetMetric(self) -> itkImageToImageMetricIUS3IUS3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD33
        GetTransform(self) -> itkTransformD33
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUS3IUS3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS3IUS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS3IUS3
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS3IUS3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUS3IUS3 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS3IUS3"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS3IUS3
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS3IUS3
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUS3IUS3

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUS3IUS3 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS3IUS3_swigregister(itkMultiResolutionImageRegistrationMethodIUS3IUS3)

def itkMultiResolutionImageRegistrationMethodIUS4IUS4_New():
    return itkMultiResolutionImageRegistrationMethodIUS4IUS4.New()

class itkMultiResolutionImageRegistrationMethodIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMultiResolutionImageRegistrationMethodIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiResolutionImageRegistrationMethodIUS4IUS4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiResolutionImageRegistrationMethodIUS4IUS4_Pointer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_Clone(self)

    def StopRegistration(self):
        r"""StopRegistration(self)"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_StopRegistration(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetOptimizer(self, _arg)

    def GetModifiableOptimizer(self):
        r"""GetModifiableOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableOptimizer(self)

    def GetOptimizer(self, *args):
        r"""
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetOptimizer(self, *args)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageMetricIUS4IUS4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetMetric(self, _arg)

    def GetModifiableMetric(self):
        r"""GetModifiableMetric(self) -> itkImageToImageMetricIUS4IUS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableMetric(self)

    def GetMetric(self, *args):
        r"""
        GetMetric(self) -> itkImageToImageMetricIUS4IUS4
        GetMetric(self) -> itkImageToImageMetricIUS4IUS4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMetric(self, *args)

    def SetFixedImageRegion(self, _arg):
        r"""
        SetFixedImageRegion(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetFixedImageRegion(self, _arg)

    def GetFixedImageRegion(self):
        r"""GetFixedImageRegion(self) -> itkImageRegion4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImageRegion(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetTransform(self, _arg)

    def GetModifiableTransform(self):
        r"""GetModifiableTransform(self) -> itkTransformD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableTransform(self)

    def GetTransform(self, *args):
        r"""
        GetTransform(self) -> itkTransformD44
        GetTransform(self) -> itkTransformD44
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetTransform(self, *args)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS4D
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetInterpolator(self, *args)

    def SetFixedImagePyramid(self, _arg):
        r"""
        SetFixedImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUS4IUS4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetFixedImagePyramid(self, _arg)

    def GetModifiableFixedImagePyramid(self):
        r"""GetModifiableFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS4IUS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableFixedImagePyramid(self)

    def GetFixedImagePyramid(self, *args):
        r"""
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS4IUS4
        GetFixedImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS4IUS4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImagePyramid(self, *args)

    def SetMovingImagePyramid(self, _arg):
        r"""
        SetMovingImagePyramid(self, _arg)

        Parameters
        ----------
        _arg: itkMultiResolutionPyramidImageFilterIUS4IUS4 *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetMovingImagePyramid(self, _arg)

    def GetModifiableMovingImagePyramid(self):
        r"""GetModifiableMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS4IUS4"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetModifiableMovingImagePyramid(self)

    def GetMovingImagePyramid(self, *args):
        r"""
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS4IUS4
        GetMovingImagePyramid(self) -> itkMultiResolutionPyramidImageFilterIUS4IUS4
        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMovingImagePyramid(self, *args)

    def SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule):
        r"""
        SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

        Parameters
        ----------
        fixedImagePyramidSchedule: itkArray2DUI const &
        movingImagePyramidSchedule: itkArray2DUI const &

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetSchedules(self, fixedImagePyramidSchedule, movingImagePyramidSchedule)

    def GetFixedImagePyramidSchedule(self):
        r"""GetFixedImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetFixedImagePyramidSchedule(self)

    def GetMovingImagePyramidSchedule(self):
        r"""GetMovingImagePyramidSchedule(self) -> itkArray2DUI"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetMovingImagePyramidSchedule(self)

    def SetNumberOfLevels(self, numberOfLevels):
        r"""
        SetNumberOfLevels(self, numberOfLevels)

        Parameters
        ----------
        numberOfLevels: unsigned long

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetNumberOfLevels(self, numberOfLevels)

    def GetNumberOfLevels(self):
        r"""GetNumberOfLevels(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetNumberOfLevels(self)

    def GetCurrentLevel(self):
        r"""GetCurrentLevel(self) -> unsigned long"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetCurrentLevel(self)

    def SetInitialTransformParameters(self, _arg):
        r"""
        SetInitialTransformParameters(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetInitialTransformParameters(self, _arg)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetInitialTransformParameters(self)

    def SetInitialTransformParametersOfNextLevel(self, _arg):
        r"""
        SetInitialTransformParametersOfNextLevel(self, _arg)

        Parameters
        ----------
        _arg: itkOptimizerParametersD

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_SetInitialTransformParametersOfNextLevel(self, _arg)

    def GetInitialTransformParametersOfNextLevel(self):
        r"""GetInitialTransformParametersOfNextLevel(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetInitialTransformParametersOfNextLevel(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetLastTransformParameters(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_GetOutput(self)
    __swig_destroy__ = _itkMultiResolutionImageRegistrationMethodPython.delete_itkMultiResolutionImageRegistrationMethodIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiResolutionImageRegistrationMethodIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiResolutionImageRegistrationMethodIUS4IUS4

        Create a new object of the class itkMultiResolutionImageRegistrationMethodIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiResolutionImageRegistrationMethodIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiResolutionImageRegistrationMethodIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiResolutionImageRegistrationMethodIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiResolutionImageRegistrationMethodIUS4IUS4 in _itkMultiResolutionImageRegistrationMethodPython:
_itkMultiResolutionImageRegistrationMethodPython.itkMultiResolutionImageRegistrationMethodIUS4IUS4_swigregister(itkMultiResolutionImageRegistrationMethodIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def multi_resolution_image_registration_method(*args,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., optimizer=..., metric=..., fixed_image_region: itkt.ImageRegion=..., transform: itkt.Transform=..., interpolator: itkt.InterpolateImageFunction=..., fixed_image_pyramid=..., moving_image_pyramid=..., schedules=..., number_of_levels: int=..., initial_transform_parameters=..., initial_transform_parameters_of_next_level=...,**kwargs):
    """Functional interface for MultiResolutionImageRegistrationMethod"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'optimizer':optimizer,'metric':metric,'fixed_image_region':fixed_image_region,'transform':transform,'interpolator':interpolator,'fixed_image_pyramid':fixed_image_pyramid,'moving_image_pyramid':moving_image_pyramid,'schedules':schedules,'number_of_levels':number_of_levels,'initial_transform_parameters':initial_transform_parameters,'initial_transform_parameters_of_next_level':initial_transform_parameters_of_next_level }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MultiResolutionImageRegistrationMethod.New(*args, **kwargs)

    return instance.__internal_call__()

def multi_resolution_image_registration_method_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKRegistrationCommon.MultiResolutionImageRegistrationMethod
    multi_resolution_image_registration_method.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    multi_resolution_image_registration_method.__doc__ = filter_object.__doc__



