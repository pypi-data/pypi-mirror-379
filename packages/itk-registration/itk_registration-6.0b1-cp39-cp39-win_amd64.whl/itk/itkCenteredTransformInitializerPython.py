# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCenteredTransformInitializerPython
else:
    import _itkCenteredTransformInitializerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkVersorRigid3DTransformPython
import itk.itkVersorTransformPython
import itk.itkRigid3DTransformPython
import itk.itkVersorPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageMomentsCalculatorPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkSpatialObjectPropertyPython

def itkCenteredTransformInitializerMOTBD22ID2ID2_New():
    return itkCenteredTransformInitializerMOTBD22ID2ID2.New()

class itkCenteredTransformInitializerMOTBD22ID2ID2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerMOTBD22ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerMOTBD22ID2ID2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerMOTBD22ID2ID2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixOffsetTransformBaseD22 *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorID2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorID2
        GetFixedCalculator(self) -> itkImageMomentsCalculatorID2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorID2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorID2
        GetMovingCalculator(self) -> itkImageMomentsCalculatorID2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerMOTBD22ID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerMOTBD22ID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerMOTBD22ID2ID2

        Create a new object of the class itkCenteredTransformInitializerMOTBD22ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerMOTBD22ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerMOTBD22ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerMOTBD22ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerMOTBD22ID2ID2 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ID2ID2_swigregister(itkCenteredTransformInitializerMOTBD22ID2ID2)

def itkCenteredTransformInitializerMOTBD22IF2IF2_New():
    return itkCenteredTransformInitializerMOTBD22IF2IF2.New()

class itkCenteredTransformInitializerMOTBD22IF2IF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerMOTBD22IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerMOTBD22IF2IF2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerMOTBD22IF2IF2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixOffsetTransformBaseD22 *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorIF2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIF2
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIF2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorIF2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIF2
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIF2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerMOTBD22IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerMOTBD22IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerMOTBD22IF2IF2

        Create a new object of the class itkCenteredTransformInitializerMOTBD22IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerMOTBD22IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerMOTBD22IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerMOTBD22IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerMOTBD22IF2IF2 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IF2IF2_swigregister(itkCenteredTransformInitializerMOTBD22IF2IF2)

def itkCenteredTransformInitializerMOTBD22ISS2ISS2_New():
    return itkCenteredTransformInitializerMOTBD22ISS2ISS2.New()

class itkCenteredTransformInitializerMOTBD22ISS2ISS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerMOTBD22ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerMOTBD22ISS2ISS2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerMOTBD22ISS2ISS2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixOffsetTransformBaseD22 *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorISS2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorISS2
        GetFixedCalculator(self) -> itkImageMomentsCalculatorISS2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorISS2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorISS2
        GetMovingCalculator(self) -> itkImageMomentsCalculatorISS2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerMOTBD22ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerMOTBD22ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerMOTBD22ISS2ISS2

        Create a new object of the class itkCenteredTransformInitializerMOTBD22ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerMOTBD22ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerMOTBD22ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerMOTBD22ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerMOTBD22ISS2ISS2 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22ISS2ISS2_swigregister(itkCenteredTransformInitializerMOTBD22ISS2ISS2)

def itkCenteredTransformInitializerMOTBD22IUC2IUC2_New():
    return itkCenteredTransformInitializerMOTBD22IUC2IUC2.New()

class itkCenteredTransformInitializerMOTBD22IUC2IUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerMOTBD22IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerMOTBD22IUC2IUC2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerMOTBD22IUC2IUC2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixOffsetTransformBaseD22 *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorIUC2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUC2
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUC2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorIUC2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUC2
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUC2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerMOTBD22IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerMOTBD22IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerMOTBD22IUC2IUC2

        Create a new object of the class itkCenteredTransformInitializerMOTBD22IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerMOTBD22IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerMOTBD22IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerMOTBD22IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerMOTBD22IUC2IUC2 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUC2IUC2_swigregister(itkCenteredTransformInitializerMOTBD22IUC2IUC2)

def itkCenteredTransformInitializerMOTBD22IUS2IUS2_New():
    return itkCenteredTransformInitializerMOTBD22IUS2IUS2.New()

class itkCenteredTransformInitializerMOTBD22IUS2IUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerMOTBD22IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerMOTBD22IUS2IUS2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerMOTBD22IUS2IUS2_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixOffsetTransformBaseD22 *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorIUS2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUS2
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUS2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorIUS2"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUS2
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUS2
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerMOTBD22IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerMOTBD22IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerMOTBD22IUS2IUS2

        Create a new object of the class itkCenteredTransformInitializerMOTBD22IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerMOTBD22IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerMOTBD22IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerMOTBD22IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerMOTBD22IUS2IUS2 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerMOTBD22IUS2IUS2_swigregister(itkCenteredTransformInitializerMOTBD22IUS2IUS2)

def itkCenteredTransformInitializerVR3DTDID3ID3_New():
    return itkCenteredTransformInitializerVR3DTDID3ID3.New()

class itkCenteredTransformInitializerVR3DTDID3ID3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerVR3DTDID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerVR3DTDID3ID3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerVR3DTDID3ID3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkVersorRigid3DTransformD *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorID3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorID3
        GetFixedCalculator(self) -> itkImageMomentsCalculatorID3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorID3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorID3
        GetMovingCalculator(self) -> itkImageMomentsCalculatorID3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerVR3DTDID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerVR3DTDID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerVR3DTDID3ID3

        Create a new object of the class itkCenteredTransformInitializerVR3DTDID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerVR3DTDID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerVR3DTDID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerVR3DTDID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerVR3DTDID3ID3 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDID3ID3_swigregister(itkCenteredTransformInitializerVR3DTDID3ID3)

def itkCenteredTransformInitializerVR3DTDIF3IF3_New():
    return itkCenteredTransformInitializerVR3DTDIF3IF3.New()

class itkCenteredTransformInitializerVR3DTDIF3IF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerVR3DTDIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerVR3DTDIF3IF3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkVersorRigid3DTransformD *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorIF3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIF3
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIF3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorIF3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIF3
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIF3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerVR3DTDIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerVR3DTDIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerVR3DTDIF3IF3

        Create a new object of the class itkCenteredTransformInitializerVR3DTDIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerVR3DTDIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerVR3DTDIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerVR3DTDIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerVR3DTDIF3IF3 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIF3IF3_swigregister(itkCenteredTransformInitializerVR3DTDIF3IF3)

def itkCenteredTransformInitializerVR3DTDISS3ISS3_New():
    return itkCenteredTransformInitializerVR3DTDISS3ISS3.New()

class itkCenteredTransformInitializerVR3DTDISS3ISS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerVR3DTDISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerVR3DTDISS3ISS3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerVR3DTDISS3ISS3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkVersorRigid3DTransformD *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorISS3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorISS3
        GetFixedCalculator(self) -> itkImageMomentsCalculatorISS3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorISS3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorISS3
        GetMovingCalculator(self) -> itkImageMomentsCalculatorISS3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerVR3DTDISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerVR3DTDISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerVR3DTDISS3ISS3

        Create a new object of the class itkCenteredTransformInitializerVR3DTDISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerVR3DTDISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerVR3DTDISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerVR3DTDISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerVR3DTDISS3ISS3 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDISS3ISS3_swigregister(itkCenteredTransformInitializerVR3DTDISS3ISS3)

def itkCenteredTransformInitializerVR3DTDIUC3IUC3_New():
    return itkCenteredTransformInitializerVR3DTDIUC3IUC3.New()

class itkCenteredTransformInitializerVR3DTDIUC3IUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerVR3DTDIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerVR3DTDIUC3IUC3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkVersorRigid3DTransformD *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorIUC3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUC3
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUC3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorIUC3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUC3
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUC3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerVR3DTDIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerVR3DTDIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerVR3DTDIUC3IUC3

        Create a new object of the class itkCenteredTransformInitializerVR3DTDIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerVR3DTDIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerVR3DTDIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerVR3DTDIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerVR3DTDIUC3IUC3 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUC3IUC3_swigregister(itkCenteredTransformInitializerVR3DTDIUC3IUC3)

def itkCenteredTransformInitializerVR3DTDIUS3IUS3_New():
    return itkCenteredTransformInitializerVR3DTDIUS3IUS3.New()

class itkCenteredTransformInitializerVR3DTDIUS3IUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCenteredTransformInitializerVR3DTDIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCenteredTransformInitializerVR3DTDIUS3IUS3_Pointer"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_Clone(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkVersorRigid3DTransformD *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_SetTransform(self, _arg)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_SetFixedImage(self, _arg)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_SetMovingImage(self, _arg)

    def InitializeTransform(self):
        r"""InitializeTransform(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_InitializeTransform(self)

    def GeometryOn(self):
        r"""GeometryOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_GeometryOn(self)

    def MomentsOn(self):
        r"""MomentsOn(self)"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_MomentsOn(self)

    def GetModifiableFixedCalculator(self):
        r"""GetModifiableFixedCalculator(self) -> itkImageMomentsCalculatorIUS3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_GetModifiableFixedCalculator(self)

    def GetFixedCalculator(self, *args):
        r"""
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUS3
        GetFixedCalculator(self) -> itkImageMomentsCalculatorIUS3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_GetFixedCalculator(self, *args)

    def GetModifiableMovingCalculator(self):
        r"""GetModifiableMovingCalculator(self) -> itkImageMomentsCalculatorIUS3"""
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_GetModifiableMovingCalculator(self)

    def GetMovingCalculator(self, *args):
        r"""
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUS3
        GetMovingCalculator(self) -> itkImageMomentsCalculatorIUS3
        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_GetMovingCalculator(self, *args)
    __swig_destroy__ = _itkCenteredTransformInitializerPython.delete_itkCenteredTransformInitializerVR3DTDIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCenteredTransformInitializerVR3DTDIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCenteredTransformInitializerVR3DTDIUS3IUS3

        Create a new object of the class itkCenteredTransformInitializerVR3DTDIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCenteredTransformInitializerVR3DTDIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCenteredTransformInitializerVR3DTDIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCenteredTransformInitializerVR3DTDIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCenteredTransformInitializerVR3DTDIUS3IUS3 in _itkCenteredTransformInitializerPython:
_itkCenteredTransformInitializerPython.itkCenteredTransformInitializerVR3DTDIUS3IUS3_swigregister(itkCenteredTransformInitializerVR3DTDIUS3IUS3)

