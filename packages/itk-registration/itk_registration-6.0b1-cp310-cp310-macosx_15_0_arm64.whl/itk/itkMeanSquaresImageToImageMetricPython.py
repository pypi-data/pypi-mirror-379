# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKRegistrationCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeanSquaresImageToImageMetricPython
else:
    import _itkMeanSquaresImageToImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkOptimizerParametersPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkImageToImageMetricPython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.ITKCostFunctionsPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkCostFunctionPython
import itk.vnl_least_squares_functionPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkFunctionBasePython

def itkMeanSquaresImageToImageMetricID2ID2_New():
    return itkMeanSquaresImageToImageMetricID2ID2.New()

class itkMeanSquaresImageToImageMetricID2ID2(itk.itkImageToImageMetricPython.itkImageToImageMetricID2ID2):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricID2ID2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricID2ID2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID2ID2

        Create a new object of the class itkMeanSquaresImageToImageMetricID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricID2ID2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID2ID2_swigregister(itkMeanSquaresImageToImageMetricID2ID2)

def itkMeanSquaresImageToImageMetricID3ID3_New():
    return itkMeanSquaresImageToImageMetricID3ID3.New()

class itkMeanSquaresImageToImageMetricID3ID3(itk.itkImageToImageMetricPython.itkImageToImageMetricID3ID3):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricID3ID3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricID3ID3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID3ID3

        Create a new object of the class itkMeanSquaresImageToImageMetricID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricID3ID3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID3ID3_swigregister(itkMeanSquaresImageToImageMetricID3ID3)

def itkMeanSquaresImageToImageMetricID4ID4_New():
    return itkMeanSquaresImageToImageMetricID4ID4.New()

class itkMeanSquaresImageToImageMetricID4ID4(itk.itkImageToImageMetricPython.itkImageToImageMetricID4ID4):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricID4ID4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricID4ID4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID4ID4_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricID4ID4

        Create a new object of the class itkMeanSquaresImageToImageMetricID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricID4ID4 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricID4ID4_swigregister(itkMeanSquaresImageToImageMetricID4ID4)

def itkMeanSquaresImageToImageMetricIF2IF2_New():
    return itkMeanSquaresImageToImageMetricIF2IF2.New()

class itkMeanSquaresImageToImageMetricIF2IF2(itk.itkImageToImageMetricPython.itkImageToImageMetricIF2IF2):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIF2IF2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIF2IF2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF2IF2

        Create a new object of the class itkMeanSquaresImageToImageMetricIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIF2IF2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF2IF2_swigregister(itkMeanSquaresImageToImageMetricIF2IF2)

def itkMeanSquaresImageToImageMetricIF3IF3_New():
    return itkMeanSquaresImageToImageMetricIF3IF3.New()

class itkMeanSquaresImageToImageMetricIF3IF3(itk.itkImageToImageMetricPython.itkImageToImageMetricIF3IF3):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIF3IF3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIF3IF3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF3IF3

        Create a new object of the class itkMeanSquaresImageToImageMetricIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIF3IF3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF3IF3_swigregister(itkMeanSquaresImageToImageMetricIF3IF3)

def itkMeanSquaresImageToImageMetricIF4IF4_New():
    return itkMeanSquaresImageToImageMetricIF4IF4.New()

class itkMeanSquaresImageToImageMetricIF4IF4(itk.itkImageToImageMetricPython.itkImageToImageMetricIF4IF4):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIF4IF4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIF4IF4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF4IF4_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIF4IF4

        Create a new object of the class itkMeanSquaresImageToImageMetricIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIF4IF4 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIF4IF4_swigregister(itkMeanSquaresImageToImageMetricIF4IF4)

def itkMeanSquaresImageToImageMetricISS2ISS2_New():
    return itkMeanSquaresImageToImageMetricISS2ISS2.New()

class itkMeanSquaresImageToImageMetricISS2ISS2(itk.itkImageToImageMetricPython.itkImageToImageMetricISS2ISS2):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricISS2ISS2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricISS2ISS2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS2ISS2

        Create a new object of the class itkMeanSquaresImageToImageMetricISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricISS2ISS2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS2ISS2_swigregister(itkMeanSquaresImageToImageMetricISS2ISS2)

def itkMeanSquaresImageToImageMetricISS3ISS3_New():
    return itkMeanSquaresImageToImageMetricISS3ISS3.New()

class itkMeanSquaresImageToImageMetricISS3ISS3(itk.itkImageToImageMetricPython.itkImageToImageMetricISS3ISS3):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricISS3ISS3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricISS3ISS3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS3ISS3

        Create a new object of the class itkMeanSquaresImageToImageMetricISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricISS3ISS3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS3ISS3_swigregister(itkMeanSquaresImageToImageMetricISS3ISS3)

def itkMeanSquaresImageToImageMetricISS4ISS4_New():
    return itkMeanSquaresImageToImageMetricISS4ISS4.New()

class itkMeanSquaresImageToImageMetricISS4ISS4(itk.itkImageToImageMetricPython.itkImageToImageMetricISS4ISS4):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricISS4ISS4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricISS4ISS4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS4ISS4_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricISS4ISS4

        Create a new object of the class itkMeanSquaresImageToImageMetricISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricISS4ISS4 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricISS4ISS4_swigregister(itkMeanSquaresImageToImageMetricISS4ISS4)

def itkMeanSquaresImageToImageMetricIUC2IUC2_New():
    return itkMeanSquaresImageToImageMetricIUC2IUC2.New()

class itkMeanSquaresImageToImageMetricIUC2IUC2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC2IUC2):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIUC2IUC2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC2IUC2

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUC2IUC2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC2IUC2_swigregister(itkMeanSquaresImageToImageMetricIUC2IUC2)

def itkMeanSquaresImageToImageMetricIUC3IUC3_New():
    return itkMeanSquaresImageToImageMetricIUC3IUC3.New()

class itkMeanSquaresImageToImageMetricIUC3IUC3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC3IUC3):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIUC3IUC3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC3IUC3

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUC3IUC3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC3IUC3_swigregister(itkMeanSquaresImageToImageMetricIUC3IUC3)

def itkMeanSquaresImageToImageMetricIUC4IUC4_New():
    return itkMeanSquaresImageToImageMetricIUC4IUC4.New()

class itkMeanSquaresImageToImageMetricIUC4IUC4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUC4IUC4):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIUC4IUC4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIUC4IUC4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUC4IUC4

        Create a new object of the class itkMeanSquaresImageToImageMetricIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUC4IUC4 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUC4IUC4_swigregister(itkMeanSquaresImageToImageMetricIUC4IUC4)

def itkMeanSquaresImageToImageMetricIUS2IUS2_New():
    return itkMeanSquaresImageToImageMetricIUS2IUS2.New()

class itkMeanSquaresImageToImageMetricIUS2IUS2(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS2IUS2):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIUS2IUS2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIUS2IUS2_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS2IUS2

        Create a new object of the class itkMeanSquaresImageToImageMetricIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUS2IUS2 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS2IUS2_swigregister(itkMeanSquaresImageToImageMetricIUS2IUS2)

def itkMeanSquaresImageToImageMetricIUS3IUS3_New():
    return itkMeanSquaresImageToImageMetricIUS3IUS3.New()

class itkMeanSquaresImageToImageMetricIUS3IUS3(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS3IUS3):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIUS3IUS3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIUS3IUS3_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS3IUS3

        Create a new object of the class itkMeanSquaresImageToImageMetricIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUS3IUS3 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS3IUS3_swigregister(itkMeanSquaresImageToImageMetricIUS3IUS3)

def itkMeanSquaresImageToImageMetricIUS4IUS4_New():
    return itkMeanSquaresImageToImageMetricIUS4IUS4.New()

class itkMeanSquaresImageToImageMetricIUS4IUS4(itk.itkImageToImageMetricPython.itkImageToImageMetricIUS4IUS4):
    r"""Proxy of C++ itkMeanSquaresImageToImageMetricIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanSquaresImageToImageMetricIUS4IUS4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanSquaresImageToImageMetricIUS4IUS4_Pointer"""
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkMeanSquaresImageToImageMetricPython.delete_itkMeanSquaresImageToImageMetricIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanSquaresImageToImageMetricIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanSquaresImageToImageMetricIUS4IUS4

        Create a new object of the class itkMeanSquaresImageToImageMetricIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanSquaresImageToImageMetricIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanSquaresImageToImageMetricIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanSquaresImageToImageMetricIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanSquaresImageToImageMetricIUS4IUS4 in _itkMeanSquaresImageToImageMetricPython:
_itkMeanSquaresImageToImageMetricPython.itkMeanSquaresImageToImageMetricIUS4IUS4_swigregister(itkMeanSquaresImageToImageMetricIUS4IUS4)

