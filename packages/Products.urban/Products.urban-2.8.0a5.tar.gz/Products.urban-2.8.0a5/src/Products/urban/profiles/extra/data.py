# -*- coding: utf-8 -*-

from plone.app.textfield import RichTextValue

from Products.urban.config import DASHBOARD_TEMPLATES
from Products.urban.config import GLOBAL_TEMPLATES

globalTemplates = GLOBAL_TEMPLATES
dashboardTemplates = DASHBOARD_TEMPLATES

default_texts = {
    "claimsTextDefaultValue": [
        "<p>Considérant que xxx réclamations écrites ont été introduites au cours de l'enquête émanant des riverains (xxx lettres identiques et xxx lettres individuelles);</p>",
        "<p>Considérant que xxx réclamations orales ont été consignées dans le registre;</p>",
        "<p>Considérant que ces réclamations portent principalement sur :</p>",
        "<p>* ...</p>",
        "<p>* ...</p>",
        "<p>* ...</p>",
        "<p>Attendu qu'une réunion de clôture d'enquête à été organisée le xxx dans les bureaux du service de l'urbanisme de la Commune, conformément aux dispositions de l'article 340 du Code modifié;</p>",
        "<p>Considérant qu'aucune personnes ne s'est présentée lors de cette réunion pour faire opposition;</p>",
        "<p>Considérant que xxx personnes se sont présentées à cette réunion et ont émis les réclamations suivantes :</p>",
        "<p>* ...</p>",
        "<p>* ...</p>",
        "<p>* ...</p>",
    ],
    "investigationArticlesTextDefaultValue": [
        "<p>« la construction ou la reconstruction de bâtiments dont la hauteur est d'au moins quatre niveaux ou douze mètres sous corniche et dépasse de trois mètres ou plus la moyenne des hauteurs sous corniche des bâtiments situés dans la même rue jusqu'à cinquante mètres de part et d'autre de la construction projetée ; la transformation de bâtiments ayant pour effet de placer ceux-ci dans les mêmes conditions »</p>"
        "<p>« la construction ou la reconstruction de bâtiments dont la profondeur, mesurée à partir de l'alignement ou du front de bâtisse lorsque les constructions voisines ne sont pas implantées sur l'alignement, est supérieure à 15 mètres et dépasse de plus de 4 mètres les bâtiments situés sur les parcelles contiguës (AGW du 23 décembre 1998, art 1er), la transformation de bâtiments ayant pour effet de placer ceux-ci dans les mêmes conditions »</p>"
        "<p>« la construction, la reconstruction d'un magasin ou la modification de la destination d'un bâtiment en magasin dont la surface nette de vente est supérieure à 400 m² ; la transformation de bâtiments ayant pour effet de placer ceux-ci dans les mêmes conditions »</p>"
        "<p>« la construction, la reconstruction de bureaux ou la modification de la destination d'un bâtiment en bureaux dont la superficie des planchers est supérieure à 650 m² ; la transformation de bâtiments ayant pour effet de placer ceux-ci dans les mêmes conditions »</p>"
        "<p>« la construction, la reconstruction ou la modification de la destination d'un bâtiment en atelier, entrepôt ou hall de stockage à caractère non agricole dont la superficie des planchers est supérieure à 400 m² ; la transformation de bâtiments ayant pour effet de placer ceux-ci dans les mêmes conditions »</p>"
        "<p>« l'utilisation habituelle d'un terrain pour le dépôt d'un ou plusieurs véhicules usagés, de mitrailles, de matériaux ou de déchets »</p>"
        "<p>« les demandes de permis de lotir ou de permis d'urbanisme relatives à des constructions groupées visées à l'article 126 qui portent sur une superficie de 2 hectares et plus »</p>"
        "<p>« les demandes de permis de lotir ou de permis d'urbanisme relatives à des constructions groupées visées à l'article 126 qui peuvent comporter un ou plusieurs bâtiments visés aux 1°, 2°, 3°, 4° et 5° »</p>"
        "<p>« les demandes de permis de lotir ou de permis d'urbanisme visées à l'article 128 »</p>"
        "<p>« les demandes de permis de lotir visées à l'article 97 »</p>"
        "<p>« les demandes de permis de lotir ou de permis d'urbanisme impliquant l'application des articles 110 à 113 »</p>"
        "<p>« les voiries publiques de la Région classées en réseau interurbain (RESI) par l'arrêté ministériel du 11 août 1994 »</p>"
        "<p>« Dès le lendemain du jour où il est en possession de l'accusé de réception et jusqu'au jour de la clôture de l'enquête publique, le demandeur est tenu d'afficher sur le terrain faisant l'objet de la demande : 2° dans les cas visés à l'article 330, 1° à 5°, et 12°, ou lorsque la dérogation porte sur le gabarit d'un bâtiment, une vue axonométrique du projet et des bâtiments contigus »</p>"
    ],
}


EventConfigs = {
    "codt_buildlicence": (
        {
            "id": "depot-de-la-demande-codt",
            "title": "Dépôt de la demande",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_depot_de_la_demande.odt",
                    "title": "Dépôt de la demande",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "dossier-incomplet-codt",
            "title": "1er dossier incomplet",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_17_dossier_incomplet_demandeur.odt",
                    "title": "Dossier incomplet (lettre au demandeur, Annexe 17)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "codt_pu_dossier_incomplet_architecte.odt",
                    "title": "Dossier incomplet (lettre à l'architecte)",
                    "context_variables": [
                        {"name": "publipostage", "value": "architectes"}
                    ],
                },
                {
                    "id": "codt_pu_dossier_incomplet_fd.odt",
                    "title": "Dossier incomplet (lettre au FD)",
                },
            ),
        },
        {
            "id": "recepisse-complement-codt",
            "title": "Récépissé d'un complément à une demande de permis",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "codt_pu_recepisse_depot_complements.odt",
                    "title": "Récépissé de dépôt de compléments",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "dossier-incomplet-irrecevable-codt",
            "title": "2ème dossier incomplet (irrecevable)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_dossier_incomplet_2eme_fois_irrecevable.odt",
                    "title": "Deuxième dossier incomplet (irrecevable)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
        },
        {
            "id": "accuse-de-reception-codt",
            "title": "Accusé de réception (dossier complet)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_18_accuse_reception.odt",
                    "title": "Accusé de réception (Annexe 18)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
        },
        {
            "id": "dossier-recevable-par-defaut-codt",
            "title": "Dossier recevable par défaut",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IDefaultCODTAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "notification-choix-procedure-codt",
            "title": "Notification du choix de la procédure",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.ICODTProcedureChoiceNotified",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "reception-choix-procedure-FD-codt",
            "title": "Réception du choix de la procédure par le FD",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.ICODTProcedureChoiceNotified",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "transmis-1er-dossier-rw-codt",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_form_envoi_premier_dossier_rw.odt",
                    "title": "Formulaire d'envoi du premier dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "urb-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {
                    "id": "codt_pu_courrier_demande_avis_gen.odt",
                    "title": "Courrier de demande d'avis",
                },
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "annonce-de-projet-codt",
            "title": "Annonce de projet",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "displayDate",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddAnnouncementEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_25_affiche_verte.odt",
                    "title": "Affiche verte (Annexe 25)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAnnouncementEvent",),
            "eventPortalType": "UrbanEventAnnouncement",
        },
        {
            "id": "enquete-publique-codt",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "displayDate",
                "claimsDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_26_enq_pub_avis_riverains_mailing.odt",
                    "title": "Avis enquête (Lettre riverains publipostable, Annexe 26)",
                    "context_variables": [
                        {
                            "name": "publipostage",
                            "value": "proprietaires_voisinage_enquete",
                        }
                    ],
                },
                {
                    "id": "codt_pu_annexe_26_affiche_jaune.odt",
                    "title": "Affiche jaune (annexe 26)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
                {
                    "id": "codt_pu_PV_cloture_enquete.odt",
                    "title": "PV clôture d'enquête",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "avis-FD",
            "title": "Demande d'avis au FD",
            "eventDateLabel": "Date d'envoi",
            "activatedFields": (
                "receiptDate",
                "adviceAgreementLevel",
                "externalDecision",
                "opinionText",
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionOpinionRequestEvent",
            ),
            "eventPortalType": "UrbanEventOpinionRequest",
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "prorogation-codt",
            "title": "Prorogation du permis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "python: here.getProrogation()",
            "eventType": ("Products.urban.interfaces.ISimpleCollegeEvent",),
            "eventPortalType": "UrbanEventCollege",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_prorogation_si_non_automatique_deliberation.odt",
                    "title": "Délibération CODT - PROROGATION si non automatique",
                },
                {
                    "id": "codt_pu_prorogation_info_demandeur.odt",
                    "title": "Information au demandeur de la prorogation",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "codt_pu_prorogation_info_architecte.odt",
                    "title": "Information à l'architecte de la prorogation",
                    "context_variables": [
                        {"name": "publipostage", "value": "architectes"}
                    ],
                },
                {
                    "id": "codt_pu_formulaire_envoi_prorogation_fd_grille.odt",
                    "title": "Formulaire d'envoi de la prorogation au FD (GRILLE)",
                },
            ),
        },
        {
            "id": "procedure-voirie-codt",
            "title": "Procédure voirie",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "python: here.getProrogation()",
            "eventType": ("Products.urban.interfaces.ISimpleCollegeEvent",),
            "eventPortalType": "UrbanEventCollege",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "prorogation-codt-pm",
            "title": "Prorogation du permis (Plans modificatifs)",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "python: here.getProrogationModifiedBp()",
            "eventType": ("Products.urban.interfaces.ISimpleCollegeEvent",),
            "eventPortalType": "UrbanEventCollege",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_prorogation_si_non_automatique_deliberation.odt",
                    "title": "Délibération CODT - PROROGATION si non automatique",
                },
                {
                    "id": "codt_pu_prorogation_info_demandeur.odt",
                    "title": "Information au demandeur de la prorogation (Plans modificatifs)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "codt_pu_prorogation_info_architecte.odt",
                    "title": "Information à l'architecte de la prorogation (Plans modificatifs)",
                    "context_variables": [
                        {"name": "publipostage", "value": "architectes"}
                    ],
                },
                {
                    "id": "codt_pu_formulaire_envoi_prorogation_fd_grille.odt",
                    "title": "Formulaire d'envoi de la prorogation au FD (Plans modificatifs) (GRILLE)",
                },
            ),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus-codt",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_12_decision_octroi_refus.odt",
                    "title": "Décision (Annexe 12)",
                },
                {
                    "id": "codt_pu_annexe_12_lien_delib.odt",
                    "title": "Décision lien Delib (Annexe 12)",
                },
                {
                    "id": "codt_pu_decision_octroi_refus_lettre_architecte.odt",
                    "title": "Décision lettre à l'architecte",
                    "context_variables": [
                        {"name": "publipostage", "value": "architectes"},
                    ],
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "a-i-d-e",
            "title": "Demande d'avis A.I.D.E.",
            "description": RichTextValue(
                "<p>A.I.D.E.<br />Rue de la Digue 25<br />Bâtiment 56<br />4420 Tilleur</p>"
            ),
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "eventDateLabel": "Date",
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "eventPortalType": "UrbanEventOpinionRequest",
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "externalDirections": ["liege_2"],
            "abbreviation": "A.I.D.E.",
            "podTemplates": (),
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "agriculture",
            "title": "Demande d'avis Agriculture",
            "description": RichTextValue(
                "<p>Service Public de Wallonie<br />Direction générale de l’Agriculture, des Ressources Naturelles et de l’Environnement<br />Direction du Développement rural<br />Service extérieur d’Ath<br />Chemin du Vieux Ath 2C<br />7800 Ath</p>"
            ),
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "eventDateLabel": "Date",
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "eventPortalType": "UrbanEventOpinionRequest",
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "externalDirections": ["hainaut_1"],
            "abbreviation": "Agriculture",
            "podTemplates": (),
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "air-liquide-industries-belgium-s-a",
            "title": "Air Liquide Industries Belgium S.A.",
            "description": RichTextValue(
                "<p>Air Liquide Industries Belgium S.A.<br />Rue Adolphe Quételet 1 bis<br />7180 Seneffe</p>"
            ),
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "eventDateLabel": "Date",
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "eventPortalType": "UrbanEventOpinionRequest",
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "externalDirections": ["hainaut_1", "hainaut_2"],
            "abbreviation": "Air Liquide Industries Belgium S.A.",
            "podTemplates": (),
        },
    ),
    "codt_parceloutlicence": (
        {
            "id": "depot-de-la-demande-codt",
            "title": "Dépôt de la demande",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_recepisse_du_depot_de_demande.odt",
                    "title": "Récépissé du dépôt de la demande",
                },
                {
                    "id": "codt_purb_entete_farde_dossier.odt",
                    "title": "En-tête farde dossier",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "fiche-analyse-urbanisme-codt",
            "title": "Fiche d'analyse urbanisme",
            "activatedFields": (),
            "deadLineDelay": 15,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "codt_purb_fiche_analyse.odt", "title": "Fiche d'analyse"},
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "dossier-incomplet-codt",
            "title": "1er dossier incomplet",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_annexe_17_dossier_incomplet_demandeur.odt",
                    "title": "Relevé des pièces manquantes (lettre au demandeur)",
                },
                {
                    "id": "codt_purb_dossier_incomplet_geometre.odt",
                    "title": "Relevé des pièces manquantes (géomètre)",
                },
                {
                    "id": "codt_purb_dossier_incomplet_dgo4.odt",
                    "title": "Relevé des pièces manquantes (TLPE)",
                },
            ),
        },
        {
            "id": "recepisse-complement-codt",
            "title": "Récépissé d'un complément à une demande de permis",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "codt_purb_recepisse_complement_demande.odt",
                    "title": "Récépissé de dépôt de compléments",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "dossier-incomplet-irrecevable-codt",
            "title": "2ème dossier incomplet (irrecevable)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_dossier_irrecevable_courrier_geometre.odt",
                    "title": "Dossier irrecevable - courrier géomètre",
                },
                {
                    "id": "codt_purb_dossier_irrecevable_courrier_dgo4.odt",
                    "title": "Dossier irrecevable - courrier TLPE",
                },
                {
                    "id": "codt_purb_dossier_irrecevable_courrier_demandeur.odt",
                    "title": "Dossier irrecevable - courrier demandeur",
                },
            ),
        },
        {
            "id": "accuse-de-reception-codt",
            "title": "Accusé de réception (dossier complet)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_accuse_reception_dossier_complet.odt",
                    "title": "Accusé de réception dossier complet (annexe 18)",
                },
            ),
        },
        {
            "id": "dossier-recevable-par-defaut-codt",
            "title": "Dossier recevable par défaut",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IDefaultCODTAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "notification-choix-procedure-codt",
            "title": "Notification du choix de la procédure",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.ICODTProcedureChoiceNotified",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "reception-choix-procedure-FD-codt",
            "title": "Réception du choix de la procédure par le FD",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.ICODTProcedureChoiceNotified",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "transmis-1er-dossier-rw-codt",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
                "suspension",
                "suspension_period",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_envoi_premier_dossier_form_rw.odt",
                    "title": "Formulaire d'envoi du premier dossier à la RW",
                },
                {
                    "id": "codt_purb_envoi_premier_dossier_rw_alternative.odt",
                    "title": "Formulaire d'envoi du premier dossier à la RW (alternative)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "transmis-2er-dossier-rw-codt",
            "title": "Transmis 2ème dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
                "suspension",
                "suspension_period",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_envoi_deuxieme_dossier_rw.odt",
                    "title": "Formulaire d'envoi du deuxième dossier à la RW",
                },
                {
                    "id": "codt_purb_envoi_deuxieme_dossier_rw_alternative.odt",
                    "title": "Formulaire d'envoi du deuxième dossier à la RW (alternative)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "codt_purb_avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "annonce-de-projet-codt",
            "title": "Annonce de projet",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddAnnouncementEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_purb_annexe_25.odt",
                    "title": "Annexe 25 (affiche publique)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAnnouncementEvent",),
            "eventPortalType": "UrbanEventAnnouncement",
        },
        {
            "id": "enquete-publique-codt",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {"id": "codt_purb_annexe_26.odt", "title": "Annexe 26"},
                {
                    "id": "codt_purb_attestation_affiche.odt",
                    "title": "Attestation d'affichage après enquête",
                },
                {
                    "id": "codt_purb_accuse_reception_reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "codt_purb_pv_cloture_enquete.odt",
                    "title": " Procès-verbal de clôture d'enquête publique",
                },
                {
                    "id": "codt_purb_reunion_cloture_enquete.odt",
                    "title": " Réunion de clôture d'enquête publique",
                },
                {
                    "id": "codt_purb_pv_observations.odt",
                    "title": "Procès-verbal d'observations",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "prorogation-codt",
            "title": "Prorogation du délai d'instruction du permis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "python: here.getProrogation()",
            "eventType": ("Products.urban.interfaces.ISimpleCollegeEvent",),
            "eventPortalType": "UrbanEventCollege",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_information_au_demandeur_de_la_prorogation.odt",
                    "title": "Information au demandeur de la prorogation",
                },
                {
                    "id": "codt_purb_information_au_geometre_de_la_prorogation.odt",
                    "title": "Information au géomètre de la prorogation",
                },
                {
                    "id": "codt_purb_formulaire_envoi_prorogation_fd_grille.odt",
                    "title": "Formulaire d'envoi de la prorogation au FD (GRILLE)",
                },
            ),
        },
        {
            "id": "procedure-voirie-codt",
            "title": "Procédure voirie",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "python: here.getProrogation()",
            "eventType": ("Products.urban.interfaces.ISimpleCollegeEvent",),
            "eventPortalType": "UrbanEventCollege",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "codt_purb_rapport_college.odt", "title": "Rapport du Service"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus-codt",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_purb_annexe_12_decision_octroi_refus.odt",
                    "title": "Décision (Octroi - Refus)",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "codt_article127": (
        {
            "id": "reception-demande-dgo4-codt",
            "title": "Réception de la demande du SPW TLPE",
            "eventDateLabel": "Date de la réception",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pp_entete_farde_dossier_permis.odt",
                    "title": "Réception de la demande du SPW TLPE",
                },
                {
                    "id": "codt_pp_recepisse_directeur_technique.odt",
                    "title": "Récépissé Directeur technique",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "annonce-de-projet-codt",
            "title": "Annonce de projet",
            "activatedFields": (),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddAnnouncementEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_pp_entete_farde_annonce.odt",
                    "title": "Entête farde annonce",
                },
                {
                    "id": "codt_pp_affiche_annonce_de_projet_annexe_25.odt",
                    "title": "Affiche annonce de projet (annexe 25)",
                },
                {
                    "id": "codt_pp_envoi_affiche_annonce_suite_dossier_fd_art_d_iv_22.odt",
                    "title": "Envoi affiche annonce suite à un dossier FD art D IV 22",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAnnouncementEvent",),
            "eventPortalType": "UrbanEventAnnouncement",
        },
        {
            "id": "enquete-publique-codt",
            "title": "Enquête publique",
            "activatedFields": [
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ],
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_pp_affiche_enquete_publique_annexe_26.odt",
                    "title": "Affiche enquête publique (annexe 26)",
                },
                {
                    "id": "codt_pp_en_tete_farde_enquete.odt",
                    "title": "Entête farde enquête",
                },
                {"id": "codt_pp_mailing_riverains.odt", "title": "Mailing riverains"},
                {
                    "id": "codt_pp_attestation_affichage_apres_enquete.odt",
                    "title": "Attestation d’affichage après enquête",
                },
                {
                    "id": "codt_pp_proces_verbal_cloture_enquete_publique.odt",
                    "title": "Procès-verbal de clôture d’enquête publique",
                },
                {
                    "id": "codt_pp_accuse_reception_reclamation.odt",
                    "title": "Accusé de réception d’une réclamation",
                },
                {
                    "id": "codt_pp_pv_reclamation_orale.odt",
                    "title": "Procès-verbal des réclamations orales",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "avis-college-communal-codt",
            "title": "Avis du collège communal",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pp_deliberation_college_ecart_derogation.odt",
                    "title": "Délibération du collège communal",
                },
            ),
            "eventType": ("Products.urban.interfaces.ILicenceNotificationEvent",),
        },
        {
            "id": "transmis-decision-fd-codt",
            "title": "Transmis de la décision au FD",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pp_transmis_fd.odt",
                    "title": "Transmis au fonctionnaire délégué",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "permis-decision-fd-codt",
            "title": "Permis octroyé par le FD",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_pp_affichage_octroi_permis.odt",
                    "title": "Affichage octroi du permis",
                },
                {
                    "id": "codt_pp_debut_fin_travaux.odt",
                    "title": "Début / fin des travaux",
                },
                {
                    "id": "codt_pp_talons_debut_fin_travaux.odt",
                    "title": "Talons à découper",
                },
                {
                    "id": "codt_pp_implantation_cautionnement_lettre_demandeur.odt",
                    "title": "Courrier au demandeur - suivi cautionnement et implantation",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionDecisionEvent",
                "Products.urban.interfaces.ITheLicenceEvent",
            ),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {
                    "id": "codt_pp_demande_avis.odt",
                    "title": "Courrier de demande d'avis",
                },
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "fiche-recap-registre",
            "title": "Fiche récapitulative pour registre",
            "activatedFields": (),
            "podTemplates": (
                {"id": "codt_pp_fiche_recapitulative.odt", "title": "Fiche registre"},
            ),
        },
        {
            "id": "recours-decision-conseil-etat",
            "title": "Recours contre la décision au Conseil d’État",
            "activatedFields": (),
            "podTemplates": (),
        },
        {
            "id": "recours-decision-RW",
            "title": "Recours contre la décision au Gouvernement Wallon",
            "activatedFields": (),
            "podTemplates": (),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "codt_commerciallicence": (
        {
            "id": "depot-demande",
            "title": "Dépôt de la demande",
            "eventDateLabel": "Date de transmis",
            "activatedFields": ("receiptDate",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic_recepisse_depot_demande.odt",
                    "title": "Récépissé d'introduction de demande",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "evaluation-incidences",
            "title": "Evaluation des incidences environnementales",
            "eventDateLabel": "",
            "TALCondition": "python: licence.getFolderCategory() != 'dic'",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "transmis-fic",
            "title": "Transmis de la demande au FIC",
            "deadLineDelay": 10,
            "eventDateLabel": "Date de transmis",
            "TALCondition": "python: licence.getFolderCategory() != 'dic'",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "pic_transmis_demande_fic.odt", "title": "Transmis au FIC"},
                {
                    "id": "pic_information_demandeur.odt",
                    "title": "Transmis aux demandeurs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "premier-dossier-incomplet",
            "title": "Premier dossier incomplet",
            "eventDateLabel": "",
            "TALCondition": "python: licence.getFolderCategory() != 'dic' and licence.getAuthority() == 'college'",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre aux demandeurs)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
        },
        {
            "id": "recepisse-complement",
            "title": "Récépissé d'un complément",
            "activatedFields": (),
            "TALCondition": "python: licence.getFolderCategory() != 'dic' and licence.getAuthority() == 'college'",
            "isKeyEvent": False,
            "podTemplates": (
                {
                    "id": "pic_recepisse_complements_demande.odt",
                    "title": "Récépissé d'un complément",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": (),
            "TALCondition": "python: licence.getAuthority() == 'college'",
            "deadLineDelay": 0,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic-demande-irrecevable.odt",
                    "title": "Transmis de l'irrecevabilité aux demandeurs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
        },
        {
            "id": "dossier-complet-recevable",
            "title": "Dossier complet et recevable",
            "activatedFields": (),
            "TALCondition": "python: licence.getAuthority() == 'college'",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "explanationEndSDate",
            ),
            "TALCondition": "python: licence.getFolderCategory() != 'dic'",
            "deadLineDelay": 15,
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {"id": "pic-enq-avis.odt", "title": "Avis d'enquête publique"},
                {
                    "id": "pic-enq-recommandes.odt",
                    "title": "Recommandé aux propriétaires (étiquette Poste)",
                },
                {
                    "id": "pic-enq-transmis-FIC.odt",
                    "title": "PV enquête publique au FIC",
                },
                {
                    "id": "pic-enq-transmis-proprietaires.odt",
                    "title": "Transmis de l'avis d'enquête aux propriétaires",
                },
                {"id": "pic-enq-ordre-mission.odt", "title": "Ordre de mission"},
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {
                    "id": "pic-avis.odt",
                    "title": "Courrier de demande d'avis",
                    "context_variables": [
                        {"name": "publipostage", "value": "organismes"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "communes-limitrophes",
            "title": "Demande d'avis (Communes limitrophes)",
            "abbreviation": "Communes limitrophes",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "deadLineDelay": 30,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "demande-avis-fic",
            "title": "Demande d'avis (FIC)",
            "abbreviation": "Fonctionnaire des Implantations Commerciales",
            "description": RichTextValue(
                "<p>Direction des Implantations Commerciales<br /> Place de la Wallonie, 1 <br /> 5100 Jambes</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "deadLineDelay": 30,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "demande-avis-observatoire-commerce",
            "title": "Demande d'avis (Observatoire du Commerce)",
            "abbreviation": "Observatoire du Commerce",
            "description": RichTextValue(
                "<p>Observatoire du Commerce<br /> Rue du Vertbois, 13 C <br /> 4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "deadLineDelay": 30,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "demande-plans-modificatifs",
            "title": "Demande de plans modificatifs",
            "activatedFields": ("transmitDate",),
            "TALCondition": "python: licence.getFolderCategory() != 'dic' and licence.getAuthority() == 'college'",
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic_demande_plans_modificatifs.odt",
                    "title": "Demande de plans modificatifs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
        },
        {
            "id": "reception-plans-modificatifs",
            "title": "Réception de plans modificatifs",
            "activatedFields": ("transmitDate",),
            "TALCondition": "python: licence.getFolderCategory() != 'dic' and licence.getAuthority() == 'college'",
            "eventDateLabel": "Date de réception des plans modificatifs",
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic_recepisse_depot_demande-plans-modificatifs.odt",
                    "title": "Récépissé des plans modificatifs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus-codt",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
                "transmitDate",
            ),
            "deadLineDelay": 80,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic_transmis_decision_demandeur.odt",
                    "title": "Transmis de la décision du Collège aux demandeurs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "pic_transmis_decision_fic.odt",
                    "title": "Transmis de la décision du Collège au FIC",
                },
                {
                    "id": "pic_transmis_decision_communes_limitrophes.odt",
                    "title": "Transmis de la décision du Collège aux communes limitrophes",
                },
                {
                    "id": "pic_transmis_decision_observatoire_commerce.odt",
                    "title": "Transmis de la décision du Collège à l'Observatoire du Commerce",
                },
            ),
            "eventType": ("Products.urban.interfaces.ITheLicenceEvent",),
            "eventPortalType": "UrbanEventCollege",
        },
        {
            "id": "recours-contre-decision",
            "title": "Recours contre la décision",
            "activatedFields": [
                "receiptDate",
                "recourseDecision",
                "recourseDecisionDisplayDate",
            ],
            "TALCondition": "python: licence.getFolderCategory() != 'dic' ",
            "deadLineDelay": 20,
            "eventDateLabel": "Date de notification",
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pic_attestation_affichage_recours.odt",
                    "title": "Transmis décision recours",
                },
            ),
        },
        {
            "id": "affichage-decision",
            "title": "Affichage de la décision",
            "activatedFields": [
                "displayDateEnd",
            ],
            "TALCondition": "python: licence.getAuthority() == 'college'",
            "eventDateLabel": "Date d'affichage",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "pic_affichage_decision.odt", "title": "Affiche travaux"},
            ),
            "eventType": ("Products.urban.interfaces.IDisplayingTheDecisionEvent",),
        },
    ),
    "codt_notaryletter": (
        {
            "id": "notaryletter-codt",
            "title": "Lettre de notaire",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "activatedFields": ("receiptDate",),
            "isKeyEvent": True,
            "keyDates": (
                "receiptDate",
                "eventDate",
            ),
            "podTemplates": (
                {
                    "id": "codt_ln_infos-notariales.odt",
                    "title": "Lettre de notaire",
                    "context_variables": [
                        {"name": "publipostage", "value": "notaires"}
                    ],
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IDepositEvent",
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "codt_integratedlicence": (
        {
            "id": "depot-de-la-demande-codt",
            "title": "Dépôt de la demande",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pi_recepisse_depot_demande.odt",
                    "title": "Récépissé du dépôt de la demande",
                },
                {"id": "pi_entete_farde_dossier.odt", "title": "Entête farde dossier"},
                {"id": "pi_transmis_demande_dgo3.odt", "title": "Transmis à l'ARNE"},
                {"id": "pi_transmis_demande_dgo4.odt", "title": "Transmis au TLPE"},
                {
                    "id": "pi_transmis_demande_dgo6.odt",
                    "title": "Transmis au SPW Économie, Emploi, Recherche",
                },
                {
                    "id": "pi_information_demandeur.odt",
                    "title": "Lettre d'informations au demandeur",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "dossier-incomplet-codt",
            "title": "Dossier incomplet",
            "eventDateLabel": "Date de notification",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
        },
        {
            "id": "recepisse-complement-codt",
            "title": "Récépissé d'un complément au dépôt de la demande",
            "eventDateLabel": "Date de notification",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "dossier-irrecevable-codt",
            "title": "Dossier irrecevable",
            "eventDateLabel": "Date de notification",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
        },
        {
            "id": "dossier-complet-recevable",
            "title": "Dossier complet et recevable",
            "activatedFields": (),
            "eventDateLabel": "Date de notification",
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "dossier-recevable-par-defaut-codt",
            "title": "Dossier recevable par défaut",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "eventType": ("Products.urban.interfaces.IDefaultCODTAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "enquete-publique-codt",
            "title": "Enquête publique",
            "activatedFields": [
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ],
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {"id": "pi_annexe_26.odt", "title": "Affiche (annexe 26)"},
                {
                    "id": "pi_transmis_affichage_dgo3.odt",
                    "title": "Transmis de l'affichage de l'enquête publique à l'ARNE",
                },
                {
                    "id": "pi_transmis_affichage_dgo4.odt",
                    "title": "Transmis de l'affichage de l'enquête publique au SPW TLPE",
                },
                {
                    "id": "pi_transmis_affichage_dgo6.odt",
                    "title": "Transmis de l'affichage de l'enquête publique au SPW Économie, Emploi, Recherche",
                },
                {
                    "id": "pi_pv_cloture_enquete.odt",
                    "title": "Procès-verbal de clôture de l'enquête publique",
                },
                {
                    "id": "pi_attestation_affichage.odt",
                    "title": "Attestation d'affichage après enquête publique",
                },
                {
                    "id": "pi_transmis_elements_enquete_dgo3.odt",
                    "title": "Transmis des éléments de l'enquête à l'ARNE",
                },
                {
                    "id": "pi_transmis_elements_enquete_dgo4.odt",
                    "title": "Transmis des éléments de l'enquête au SPW TLPE",
                },
                {
                    "id": "pi_transmis_elements_enquete_dgo6.odt",
                    "title": "Transmis des éléments de l'enquête au SPW Économie, Emploi, Recherche",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "codt-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "ccatm",
            "title": "Demande d'avis à la CCATM",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>Adresse de la CCATM</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (
                {
                    "id": "pi_demande_avis_ccatm.odt",
                    "title": "Demande d'avis à la CCATM",
                },
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "id": "avis-prealable-college",
            "title": "Avis préalable du Collège",
            "activatedFields": ("collegeOpinion",),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "pi_rapport_college.odt", "title": "Rapport du Collège"},
                {
                    "id": "pi_transmis_rapport_college_dgo3.odt",
                    "title": "Transmis de l'avis préalable à l'ARNE",
                },
                {
                    "id": "pi_transmis_rapport_college_dgo4.odt",
                    "title": "Transmis de l'avis préalable au SPW TLPE",
                },
                {
                    "id": "pi_transmis_rapport_college_dgo6.odt",
                    "title": "Transmis de l'avis préalable au SPW Économie, Emploi, Recherche",
                },
            ),
        },
        {
            "id": "rapport-synthese",
            "title": "Rapport de synthèse",
            "activatedFields": (
                "decision",
                "decisionDate",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de réception du rapport",
            "eventType": ("Products.urban.interfaces.IDecisionProjectFromSPWEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "plans-modificatifs",
            "title": "Plans modificatifs",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pi_demande_plans_modificatifs.odt",
                    "title": "Demande de plans modificatifs",
                },
                {
                    "id": "pi_transmis_plans_modificatifs_dgo3.odt",
                    "title": "Transmis de la demande de plans modificatifs à l'ARNE",
                },
                {
                    "id": "pi_transmis_plans_modificatifs_dgo4.odt",
                    "title": "Transmis de la demande de plans modificatifs au SPW TLPE",
                },
                {
                    "id": "pi_transmis_plans_modificatifs_dgo6.odt",
                    "title": "Transmis de la demande de plans modificatifs au SPW Économie, Emploi, Recherche",
                },
            ),
        },
        {
            "id": "reception-plans-modificatifs",
            "title": "Réception de plans modificatifs",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de réception des plans modificatifs",
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "prorogation-codt",
            "title": "Délai de prorogation",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "python: here.getProrogation()",
            "eventType": ("Products.urban.interfaces.IProrogationEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus-codt",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
                "transmitDate",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pi_transmis_decision_demandeur.odt",
                    "title": "Transmis de la décision du Collège au demandeur",
                },
                {
                    "id": "pi_transmis_decision_dgo3.odt",
                    "title": "Transmis de la décision du Collège à l'ARNE",
                },
                {
                    "id": "pi_transmis_decision_dgo4.odt",
                    "title": "Transmis de la décision du Collège au SPW TLPE",
                },
                {
                    "id": "pi_transmis_decision_dgo6.odt",
                    "title": "Transmis de la décision du Collège au SPW Économie, Emploi, Recherche",
                },
            ),
            "eventType": ("Products.urban.interfaces.ITheLicenceEvent",),
            "eventPortalType": "UrbanEventCollege",
        },
        {
            "id": "affichage-decision",
            "title": "Affichage de la décision",
            "activatedFields": (
                "displayDate",
                "displayDateEnd",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "eventType": ("Products.urban.interfaces.IDisplayingTheDecisionEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pi_affichage_decision.odt",
                    "title": "Affichage de la décision",
                },
                {
                    "id": "pi_certificat_affichage_decision.odt",
                    "title": "Certificat d'affichage de la décision",
                },
            ),
        },
        {
            "id": "recours-contre-decision",
            "title": "Recours contre la décision",
            "activatedFields": [
                "receiptDate",
                "displayDate",
                "displayDateEnd",
                "recourseDecision",
                "recourseDecisionDisplayDate",
            ],
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pi_attestation_affichage_recours.odt",
                    "title": "Attestation d'affichage du recours",
                },
                {
                    "id": "pi_attestation_affichage_decision_recours.odt",
                    "title": "Attestation d'affichage de la décision du recours",
                },
                {
                    "id": "pi_transmis_pieces_cellule_recours.odt",
                    "title": "Transmis des pièces au CRIC",
                },
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "codt_urbancertificateone": (
        {
            "id": "annexe16",
            "title": "Annexe 16",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": ({"id": "codt_cu1_annexe16.odt", "title": "Annexe 16"},),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "codt_urbancertificatetwo": (
        {
            "id": "depot-demande",
            "title": "Dépôt de la demande",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de réception",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_depot_de_la_demande.odt",
                    "title": "Récépissé du dépôt de la demande",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_annexe_17_dossier_incomplet_demandeur.odt",
                    "title": "Dossier incomplet (lettre au demandeur, Annexe 17)",
                },
                {
                    "id": "codt_cu2_dossier_incomplet_architecte.odt",
                    "title": "Dossier incomplet (lettre à l'architecte)",
                },
                {
                    "id": "codt_cu2_dossier_incomplet_fd.odt",
                    "title": "Dossier incomplet (lettre au FD)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
        },
        {
            "id": "depot-complements",
            "title": "Dépôt de compléments",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de réception",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_recepisse_depot_complements.odt",
                    "title": "Récépissé de dépôt de compléments",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_dossier_incomplet_2eme_fois_irrecevable.odt",
                    "title": "Dossier irrecevable",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
        },
        {
            "id": "dossier-complet",
            "title": "Dossier complet (accusé de réception)",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_annexe_18_accuse_reception.odt",
                    "title": "Accusé de réception (annexe 18)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
        },
        {
            "id": "dossier-recevable-par-defaut",
            "title": "Dossier recevable par défaut",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDefaultCODTAcknowledgmentEvent",),
        },
        {
            "id": "notification-choix-procedure",
            "title": "Notification du choix de la procédure",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ICODTProcedureChoiceNotified",),
        },
        {
            "id": "reception-choix-procedure",
            "title": "Réception du choix de la procédure par le FD",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ICODTProcedureChoiceNotified",),
        },
        {
            "id": "transmis-primo-dossier",
            "title": "Transmis 1er dossier au SPW Territoire, Logement, Patrimoine, Energie",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_form_envoi_premier_dossier_rw.odt",
                    "title": "Formulaire d'envoi du premier dossier au SPW TLPE",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {
                    "id": "codt_cu2_courrier_demande_avis_gen.odt",
                    "title": "Courrier de demande d'avis",
                },
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "id": "annonce-de-projet",
            "title": "Annonce de projet",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "TALCondition": "here/mayAddAnnouncementEvent",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
            ),
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_annexe_25_affiche_verte.odt",
                    "title": "Affiche verte (annexe 25)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAnnouncementEvent",),
            "eventPortalType": "UrbanEventAnnouncement",
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": [
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ],
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_cu2_annexe_26_affiche_jaune.odt",
                    "title": "Affiche jaune (annexe 26)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus-codt",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_cu2_annexe_12_decision_octroi_refus.odt",
                    "title": "Décision (Octroi - Refus)",
                },
                {
                    "id": "codt_cu2_decision_octroi_refus_lettre_architecte.odt",
                    "title": "Décision (lettre à l'architecte)",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "buildlicence": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-recepisse.odt",
                    "title": "Récépissé de la demande (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "avis-etude-incidence",
            "title": "Avis sur l'étude d'incidence",
            "activatedFields": (),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getImpactStudy()",
            "podTemplates": (
                {
                    "id": "urb-avis-etude-incidence.odt",
                    "title": "Avis sur l'étude d'incidence",
                },
            ),
        },
        {
            "id": "recepisse-art15-complement",
            "title": "Récépissé d'un complément à une demande de permis (article 115)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art115-complement.odt",
                    "title": "Récépissé d'un complément à une demande de permis (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "recepisse-article-116",
            "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art116.odt",
                    "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
        },
        {
            "id": "fiche-technique-voirie",
            "title": "Fiche technique voirie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-voirie.odt",
                    "title": "Avis technique voirie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-energie",
            "title": "Fiche technique conseiller en énergie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-energie.odt",
                    "title": "Avis technique énergie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-urbanisme",
            "title": "Fiche technique urbanisme",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-urbanisme.odt",
                    "title": "Avis technique urbanisme",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet (avec listing des pièces manquantes - article 116 § 1)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre demandeur)",
                },
                {
                    "id": "urb-dossier-incomplet-archi.odt",
                    "title": "Dossier incomplet (lettre architecte)",
                },
            ),
        },
        {
            "id": "accuse-de-reception",
            "title": "Accusé de réception (dossier complet - article 116 § 1)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-accuse.odt", "title": "Accusé de réception"},
                {
                    "id": "urb-accuse-demande-paiement.odt",
                    "title": "Demande de paiement",
                },
            ),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-regularisation-delib-college-refus.odt",
                    "title": "Délibération refus de régularisation PU",
                },
            ),
        },
        {
            "id": "demande-complements-art116-6",
            "title": "Demande de compléments (article 116§6)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getLastAcknowledgment()",
            "podTemplates": (
                {
                    "id": "urb-demande-complements-art116-6.odt",
                    "title": "Lettre au demandeur",
                },
            ),
        },
        {
            "id": "transmis-1er-dossier-rw",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-envoi-premier-dossier-rw.odt",
                    "title": "Lettre d'envoi du premier dossier à la RW",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "urb-enq-avis-riverains-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - lettre riverains)",
                },
                {
                    "id": "urb-enq-certif-aff-annexe26.odt",
                    "title": "Certificat d'affichage (annexe 26)",
                },
                {
                    "id": "urb-enq-copie-rw-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - copie RW)",
                },
                {
                    "id": "urb-enq-annexe25-dem.odt",
                    "title": "Affiche (annexe 25 - lettre au demandeur)",
                },
                {"id": "urb-enq-annexe25.odt", "title": "Affiche (annexe 25)"},
                {"id": "urb-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "urb-enq-accuse-reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "urb-enq-reunion-clot.odt",
                    "title": "Réunion de clôture d'enquête",
                },
                {"id": "urb-enq-pv-clot.odt", "title": "PV de clôture enquête"},
                {"id": "urb-enq-frais.odt", "title": "Frais d'enquête"},
                {
                    "id": "urb-enq-recommandes.odt",
                    "title": "Recommandés aux riverains (étiquette Poste)",
                },
                {
                    "id": "urb-enq-art341-invit.odt",
                    "title": "Invitation séance de réclamation (article 341)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(
                        default_texts["investigationArticlesTextDefaultValue"]
                    ),
                    "fieldname": "investigationArticlesText",
                },
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "urb-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "urb-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-2eme-dossier-rw",
            "title": "Transmis 2eme dossier RW",
            "eventDateLabel": "Date de transmis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-envoi-second-dossier-rw.odt",
                    "title": "Lettre envoi deuxième dossier à la RW",
                },
                {
                    "id": "urb-envoi-second-dossier-demandeur.odt",
                    "title": "Information au demandeur envoi second dossier",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionOpinionRequestEvent",
            ),
        },
        {
            "id": "passage-conseil-communal",
            "title": "Passage au Conseil Communal",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-conseil-delib-college.odt",
                    "title": "Délibération passée au collège",
                },
                {
                    "id": "urb-conseil-delib-communale-creation.odt",
                    "title": "Délibération du conseil communal (ouverture de voirie)",
                },
                {
                    "id": "urb-conseil-delib-communale-modif.odt",
                    "title": "Délibération du conseil communal (modification de voirie)",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICommunalCouncilEvent",),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-decision-octroi-dem.odt",
                    "title": "Octroi du permis (lettre au demandeur)",
                },
                {
                    "id": "urb-decision-octroi-rw.odt",
                    "title": "Octroi du permis (lettre à l'Urbanisme)",
                },
                {
                    "id": "urb-decision-octroi-avis.odt",
                    "title": "Octroi du permis (lettre aux impétrants)",
                },
                {
                    "id": "urb-decision-transmis-reclamants.odt",
                    "title": "Décision du permis (transmis aux réclamants)",
                },
                {"id": "urb-decision-stats-mod3.odt", "title": "Statistiques modèle 3"},
                {
                    "id": "urb-decision-formulaire-a.odt",
                    "title": "Annexe 30 - Formulaire A",
                    "TALCondition": "python: portal.portal_urban.getUsePloneMeetingWSClient()",
                },
                {
                    "id": "urb-decision-egout-travaux.odt",
                    "title": "Demande de raccordement aux égouts avec travaux (formulaire à remplir par le demandeur)",
                },
                {"id": "urb-decision-frais.odt", "title": "Ventilation des frais"},
                {
                    "id": "urb-debut-travaux.odt",
                    "title": "Début des travaux (formulaire à remplir par le demandeur)",
                },
                {
                    "id": "urb-decision-deliberation-college.odt",
                    "title": "Delibération du collège d'octroi du permis",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "fiche-recap",
            "title": "Fiche récapitulative",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-fiche-recap.odt", "title": "Fiche récapitulative"},
            ),
        },
        {
            "id": "demande-raccordement-egout",
            "title": "Demande de raccordement à l'égout",
            "deadLineDelay": 15,
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-racc-egout-devis-egouttage.odt",
                    "title": "Devis raccordement égouttage",
                },
                {
                    "id": "urb-racc-egout-delib-college-avec-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal AVEC traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-sans-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal SANS traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-lotissement.odt",
                    "title": "Délibération du Collège raccordement égout dans un lotissement",
                },
            ),
        },
        {
            "id": "avis-technique-peb",
            "title": "Avis technique PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "avis-technique-peb.odt", "title": "Avis technique PEB"},
            ),
        },
        {
            "id": "peb-declaration-initiale",
            "title": "PEB: déclaration initiale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (),
        },
        {
            "id": "indication-implantation",
            "title": "Indication d'implantation",
            "deadLineDelay": 0,
            "activatedFields": ("receiptDate",),
            "TALCondition": "python: here.getImplantation()",
            "podTemplates": (),
        },
        {
            "id": "debut-des-travaux",
            "title": "Début des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkBeginningEvent",),
        },
        {
            "id": "fin-des-travaux",
            "title": "Fin des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkEndEvent",),
        },
        {
            "id": "peb-declaration-finale",
            "title": "PEB: déclaration finale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (
                {"id": "rapport-final-peb.odt", "title": "Rapport final PEB"},
            ),
        },
        {
            "id": "prorogation",
            "title": "Prorogation du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-prorogation.odt",
                    "title": "Délibération du Collège Communal concernant la prorogation du permis",
                },
                {
                    "id": "urb-prorogation-transmis-refus.odt",
                    "title": "Refus de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept.odt",
                    "title": "Acceptation de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept-fd.odt",
                    "title": "Acceptation de prorogation (lettre au fonctionnaire délégué)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IProrogationEvent",),
        },
        {
            "id": "suspension-du-permis",
            "title": "Suspension du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "suspensionReason",
                "suspensionEndDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-suspension-retrait-refus-dem.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre au demandeur)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw-recours.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW - direction des recours)",
                },
            ),
        },
        {
            "id": "enveloppes",
            "title": "Enveloppes",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-enveloppes-dem.odt", "title": "Enveloppes demandeurs"},
                {"id": "urb-enveloppes-archi.odt", "title": "Enveloppes architectes"},
            ),
        },
        {
            "id": "rappel-implantation",
            "title": "Rappel implantation",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "urb-rappel-implantation.odt", "title": "Rappel implantation"},
            ),
        },
        {
            "id": "rappel-decl-init-peb",
            "title": "Rappel déclaration initiale PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-decl-init-peb.odt",
                    "title": "Rappel déclaration initiale PEB",
                },
            ),
        },
        {
            "id": "rappel-implantation-peb",
            "title": "Rappel implantation et PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-implantation-peb.odt",
                    "title": "Rappel implantation et PEB",
                },
            ),
        },
        {
            "id": "demande-irrecevable-art159",
            "title": "Demande irrecevable (article 159 bis)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-demande-irrecevable-art159.odt",
                    "title": "Demande irrecevable (article 159 bis)",
                },
            ),
        },
        {
            "id": "recours-decision-au-conseil-etat",
            "title": "Recours du demandeur contre la décision au conseil d'état",
            "activatedFields": ("auditionDate",),
            "deadLineDelay": 0,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
        {
            "id": "recours-decision-au-gouvernement",
            "title": "Recours du demandeur contre la décision au gouvernement",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-recours-GW-demandeur-vs-FD.odt",
                    "title": "Recours du demandeur au GW contre décision du collège",
                },
                {
                    "id": "urb-recours-GW-ville-vs-FD.odt",
                    "title": "Recours de la ville au GW contre décision du FD",
                },
                {
                    "id": "urb-recours-GW-transmis-decision-GW-PU.odt",
                    "title": "Transmis au réclamant de la décision du GW concernant recours au GW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
    ),
    "codt_uniquelicence": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_recepisse_depot_demande.odt",
                    "title": "Récépissé du dépôt de la demande",
                },
                {"id": "codt_punq_entete_farde.odt", "title": "Entête farde dossier"},
                {
                    "id": "codt_punq_transmis_demande_dgo3.odt",
                    "title": "Transmis de la demande à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_demande_dgo4.odt",
                    "title": "Transmis de la demande au SPW TLPE",
                },
                {
                    "id": "codt_punq_information_demandeur.odt",
                    "title": "Information au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet",
            "eventDateLabel": "Date de notification",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "depot-complements-demande",
            "title": "Dépôt de compléments à la demande",
            "eventDateLabel": "Date de notification",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_recepisse_complements_demande.odt",
                    "title": "Récépissé de compléments à la demande",
                },
                {
                    "id": "codt_punq_transmis_complements_demande_dgo3.odt",
                    "title": "Transmis des compléments à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_complements_demande_dgo4.odt",
                    "title": "Transmis des compléments au SPW TLPE",
                },
                {
                    "id": "codt_punq_complements_information_demandeur.odt",
                    "title": "Information au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "eventDateLabel": "Date de notification",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-complet",
            "title": "Dossier complet",
            "eventDateLabel": "Date de notification",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "eventDateLabel": "Date de notification",
            "activatedFields": [
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ],
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "codt_punq_annexe_26.odt", "title": "Affiche d'enquête"},
                {
                    "id": "codt_punq_transmis_affichage_dgo3.odt",
                    "title": "Transmis de l'affichage à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_affichage_dgo4.odt",
                    "title": "Transmis de l'affichage au SPW TLPE",
                },
                {
                    "id": "codt_punq_attestation_affichage_apres_enquete.odt",
                    "title": "Attestation d'affichage après enquête",
                },
                {
                    "id": "codt_punq_pv_cloture_enquete.odt",
                    "title": "Procès-verbal de clôture d’enquête",
                },
                {
                    "id": "codt_punq_transmis_elements_enquete_dgo3.odt",
                    "title": "Transmis des éléments d'enquête à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_elements_enquete_dgo4.odt",
                    "title": "Transmis des éléments d'enquête au SPW TLPE",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "codt-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "id": "demande-davis-ccatm",
            "title": "Demande d'avis à la CCATM",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>Adresse de la CCATM</p>"),
            "activatedFields": [
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ],
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (
                {
                    "id": "codt_punq_demande_avis_ccatm.odt",
                    "title": "Demande d’avis à la CCATM",
                },
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
        },
        {
            "id": "avis-college",
            "title": "Avis préalable du Collège",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "collegeOpinion",
                "decisionDate",
                "transmitDate",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_rapport_college.odt",
                    "title": "Avis préalable du Collège",
                },
                {
                    "id": "codt_punq_transmis_avis_college_dgo3.odt",
                    "title": "Transmis des éléments de l’enquête à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_avis_college_dgo4.odt",
                    "title": "Transmis des éléments de l’enquête au SPW TLPE",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "rapport-synthese",
            "title": "Rapport de synthèse",
            "eventDateLabel": "Date de notification",
            "activatedFields": ("externalDecision",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDecisionProjectFromSPWEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "plans-modificatifs",
            "title": "Plans modificatifs",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "decisionDate",
                "transmitDate",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_demande_plans_modificatifs.odt",
                    "title": "Demande de plan modificatifs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "codt_punq_transmis_demande_modificatifs_dgo3.odt",
                    "title": "Transmis de la demande de plans modificatifs à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_demande_modificatifs_dgo4.odt",
                    "title": "Transmis de la demande de plans modificatifs au SPW TLPE",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "reception-plans-modificatifs",
            "title": "Réception de plans modificatifs",
            "eventDateLabel": "Date de réception",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_recepisse_plans_modificatifs_demandeur.odt",
                    "title": "Récépissé de plans modificatifs",
                },
                {
                    "id": "codt_punq_transmis_plans_modificatifs_dgo3.odt",
                    "title": "Transmis des plans modificatifs à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_plans_modificatifs_dgo4.odt",
                    "title": "Transmis des plans modificatifs au SPW TLPE",
                },
            ),
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "delivrance-permis",
            "title": "Délivrance du permis unique",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "decisionDate",
                "decision",
                "transmitDate",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_transmis_decision_demandeur.odt",
                    "title": "Transmis de la décision au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "codt_punq_transmis_decision_dgo3.odt",
                    "title": "Transmis de la décision à l'ARNE",
                },
                {
                    "id": "codt_punq_transmis_decision_dgo4.odt",
                    "title": "Transmis de la décision au SPW TLPE",
                },
            ),
            "eventType": ("Products.urban.interfaces.ITheLicenceEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "affichage-decision",
            "title": "Affichage de la décision",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "displayDate",
                "displayDateEnd",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_affichage_decision.odt",
                    "title": "Affichage de la décision",
                },
                {
                    "id": "codt_punq_attestation_affichage_decision.odt",
                    "title": "Attestation d'affichage de la décision",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDisplayingTheDecisionEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "recours-gouvernement",
            "title": "Recours au Gouvernement Wallon",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "transmitDate",
                "displayDate",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_transmis_pieces_recours_dgo3.odt",
                    "title": "Transmis des pièces à la cellule recours - ARNE",
                },
                {
                    "id": "codt_punq_transmis_pieces_recours_dgo4.odt",
                    "title": "Transmis des pièces à la cellule recours - TLPE",
                },
                {
                    "id": "codt_punq_attestation_affichage_recours.odt",
                    "title": "Attestation d’affichage du recours",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "decision-recours",
            "title": "Décision du recours",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "recourseDecision",
                "recourseDecisionDisplayDate",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_punq_attestation_affichage_decision_recours.odt",
                    "title": "Affichage de la décision",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
    ),
    "uniquelicence": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande (récépissé - article 115)",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-recepisse.odt",
                    "title": "Récépissé de la demande (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "avis-etude-incidence",
            "title": "Avis sur l'étude d'incidence",
            "activatedFields": (),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getImpactStudy()",
            "podTemplates": (
                {
                    "id": "urb-avis-etude-incidence.odt",
                    "title": "Avis sur l'étude d'incidence",
                },
            ),
        },
        {
            "id": "recepisse-art15-complement",
            "title": "Récépissé d'un complément à une demande de permis (article 115)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art115-complement.odt",
                    "title": "Récépissé d'un complément à une demande de permis (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "recepisse-article-116",
            "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art116.odt",
                    "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
        },
        {
            "id": "fiche-technique-voirie",
            "title": "Fiche technique voirie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-voirie.odt",
                    "title": "Avis technique voirie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-energie",
            "title": "Fiche technique conseiller en énergie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-energie.odt",
                    "title": "Avis technique énergie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-urbanisme",
            "title": "Fiche technique urbanisme",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-urbanisme.odt",
                    "title": "Avis technique urbanisme",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet (avec listing des pièces manquantes - article 116 § 1)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre demandeur)",
                },
                {
                    "id": "urb-dossier-incomplet-archi.odt",
                    "title": "Dossier incomplet (lettre architecte)",
                },
            ),
        },
        {
            "id": "accuse-de-reception",
            "title": "Accusé de réception (dossier complet - article 116 § 1)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-accuse.odt", "title": "Accusé de réception"},
                {
                    "id": "urb-accuse-demande-paiement.odt",
                    "title": "Demande de paiement",
                },
            ),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-regularisation-delib-college-refus.odt",
                    "title": "Délibération refus de régularisation PU",
                },
            ),
        },
        {
            "id": "demande-complements-art116-6",
            "title": "Demande de compléments (article 116§6)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getLastAcknowledgment()",
            "podTemplates": (
                {
                    "id": "urb-demande-complements-art116-6.odt",
                    "title": "Lettre au demandeur",
                },
            ),
        },
        {
            "id": "transmis-1er-dossier-rw",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-envoi-premier-dossier-rw.odt",
                    "title": "Lettre d'envoi du premier dossier à la RW",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "urb-enq-avis-riverains-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - lettre riverains)",
                },
                {
                    "id": "urb-enq-certif-aff-annexe26.odt",
                    "title": "Certificat d'affichage (annexe 26)",
                },
                {
                    "id": "urb-enq-copie-rw-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - copie RW)",
                },
                {
                    "id": "urb-enq-annexe25-dem.odt",
                    "title": "Affiche (annexe 25 - lettre au demandeur)",
                },
                {"id": "urb-enq-annexe25.odt", "title": "Affiche (annexe 25)"},
                {"id": "urb-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "urb-enq-accuse-reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "urb-enq-reunion-clot.odt",
                    "title": "Réunion de clôture d'enquête",
                },
                {"id": "urb-enq-pv-clot.odt", "title": "PV de clôture enquête"},
                {"id": "urb-enq-frais.odt", "title": "Frais d'enquête"},
                {
                    "id": "urb-enq-recommandes.odt",
                    "title": "Recommandés aux riverains (étiquette Poste)",
                },
                {
                    "id": "urb-enq-art341-invit.odt",
                    "title": "Invitation séance de réclamation (article 341)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(
                        default_texts["investigationArticlesTextDefaultValue"]
                    ),
                    "fieldname": "investigationArticlesText",
                },
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "urb-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "urb-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-2eme-dossier-rw",
            "title": "Transmis 2eme dossier RW",
            "eventDateLabel": "Date de transmis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-envoi-second-dossier-rw.odt",
                    "title": "Lettre envoi deuxième dossier à la RW",
                },
                {
                    "id": "urb-envoi-second-dossier-demandeur.odt",
                    "title": "Information au demandeur envoi second dossier",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionOpinionRequestEvent",
            ),
        },
        {
            "id": "passage-conseil-communal",
            "title": "Passage au Conseil Communal",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-conseil-delib-college.odt",
                    "title": "Délibération passée au collège",
                },
                {
                    "id": "urb-conseil-delib-communale-creation.odt",
                    "title": "Délibération du conseil communal (ouverture de voirie)",
                },
                {
                    "id": "urb-conseil-delib-communale-modif.odt",
                    "title": "Délibération du conseil communal (modification de voirie)",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICommunalCouncilEvent",),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-decision-octroi-dem.odt",
                    "title": "Octroi du permis (lettre au demandeur)",
                },
                {
                    "id": "urb-decision-octroi-rw.odt",
                    "title": "Octroi du permis (lettre à l'Urbanisme)",
                },
                {
                    "id": "urb-decision-octroi-avis.odt",
                    "title": "Octroi du permis (lettre aux impétrants)",
                },
                {
                    "id": "urb-decision-transmis-reclamants.odt",
                    "title": "Décision du permis (transmis aux réclamants)",
                },
                {"id": "urb-decision-stats-mod3.odt", "title": "Statistiques modèle 3"},
                {
                    "id": "urb-decision-formulaire-a.odt",
                    "title": "Annexe 30 - Formulaire A",
                    "TALCondition": "python: portal.portal_urban.getUsePloneMeetingWSClient()",
                },
                {
                    "id": "urb-decision-egout-travaux.odt",
                    "title": "Demande de raccordement aux égouts avec travaux (formulaire à remplir par le demandeur)",
                },
                {"id": "urb-decision-frais.odt", "title": "Ventilation des frais"},
                {
                    "id": "urb-debut-travaux.odt",
                    "title": "Début des travaux (formulaire à remplir par le demandeur)",
                },
                {
                    "id": "urb-decision-deliberation-college.odt",
                    "title": "Delibération du collège d'octroi du permis",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "fiche-recap",
            "title": "Fiche récapitulative",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-fiche-recap.odt", "title": "Fiche récapitulative"},
            ),
        },
        {
            "id": "demande-raccordement-egout",
            "title": "Demande de raccordement à l'égout",
            "deadLineDelay": 15,
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-racc-egout-devis-egouttage.odt",
                    "title": "Devis raccordement égouttage",
                },
                {
                    "id": "urb-racc-egout-delib-college-avec-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal AVEC traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-sans-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal SANS traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-lotissement.odt",
                    "title": "Délibération du Collège raccordement égout dans un lotissement",
                },
            ),
        },
        {
            "id": "avis-technique-peb",
            "title": "Avis technique PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "avis-technique-peb.odt", "title": "Avis technique PEB"},
            ),
        },
        {
            "id": "peb-declaration-initiale",
            "title": "PEB: déclaration initiale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (),
        },
        {
            "id": "indication-implantation",
            "title": "Indication d'implantation",
            "deadLineDelay": 0,
            "activatedFields": ("receiptDate",),
            "TALCondition": "python: here.getImplantation()",
            "podTemplates": (),
        },
        {
            "id": "debut-des-travaux",
            "title": "Début des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkBeginningEvent",),
        },
        {
            "id": "fin-des-travaux",
            "title": "Fin des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkEndEvent",),
        },
        {
            "id": "peb-declaration-finale",
            "title": "PEB: déclaration finale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (
                {"id": "rapport-final-peb.odt", "title": "Rapport final PEB"},
            ),
        },
        {
            "id": "prorogation",
            "title": "Prorogation du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-prorogation.odt",
                    "title": "Délibération du Collège Communal concernant la prorogation du permis",
                },
                {
                    "id": "urb-prorogation-transmis-refus.odt",
                    "title": "Refus de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept.odt",
                    "title": "Acceptation de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept-fd.odt",
                    "title": "Acceptation de prorogation (lettre au fonctionnaire délégué)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IProrogationEvent",),
        },
        {
            "id": "suspension-du-permis",
            "title": "Suspension du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "suspensionReason",
                "suspensionEndDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-suspension-retrait-refus-dem.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre au demandeur)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw-recours.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW - direction des recours)",
                },
            ),
        },
        {
            "id": "enveloppes",
            "title": "Enveloppes",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-enveloppes-dem.odt", "title": "Enveloppes demandeurs"},
                {"id": "urb-enveloppes-archi.odt", "title": "Enveloppes architectes"},
            ),
        },
        {
            "id": "rappel-implantation",
            "title": "Rappel implantation",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "urb-rappel-implantation.odt", "title": "Rappel implantation"},
            ),
        },
        {
            "id": "rappel-decl-init-peb",
            "title": "Rappel déclaration initiale PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-decl-init-peb.odt",
                    "title": "Rappel déclaration initiale PEB",
                },
            ),
        },
        {
            "id": "rappel-implantation-peb",
            "title": "Rappel implantation et PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-implantation-peb.odt",
                    "title": "Rappel implantation et PEB",
                },
            ),
        },
        {
            "id": "demande-irrecevable-art159",
            "title": "Demande irrecevable (article 159 bis)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-demande-irrecevable-art159.odt",
                    "title": "Demande irrecevable (article 159 bis)",
                },
            ),
        },
        {
            "id": "recours-decision-au-conseil-etat",
            "title": "Recours du demandeur contre la décision au conseil d'état",
            "activatedFields": ("auditionDate",),
            "deadLineDelay": 0,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
        {
            "id": "recours-decision-au-gouvernement",
            "title": "Recours du demandeur contre la décision au gouvernement",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-recours-GW-demandeur-vs-FD.odt",
                    "title": "Recours du demandeur au GW contre décision du collège",
                },
                {
                    "id": "urb-recours-GW-ville-vs-FD.odt",
                    "title": "Recours de la ville au GW contre décision du FD",
                },
                {
                    "id": "urb-recours-GW-transmis-decision-GW-PU.odt",
                    "title": "Transmis au réclamant de la décision du GW concernant recours au GW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
    ),
    "integratedlicence": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande (récépissé - article 115)",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-recepisse.odt",
                    "title": "Récépissé de la demande (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "avis-etude-incidence",
            "title": "Avis sur l'étude d'incidence",
            "activatedFields": (),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getImpactStudy()",
            "podTemplates": (
                {
                    "id": "urb-avis-etude-incidence.odt",
                    "title": "Avis sur l'étude d'incidence",
                },
            ),
        },
        {
            "id": "recepisse-art15-complement",
            "title": "Récépissé d'un complément à une demande de permis (article 115)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art115-complement.odt",
                    "title": "Récépissé d'un complément à une demande de permis (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "recepisse-article-116",
            "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art116.odt",
                    "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
        },
        {
            "id": "fiche-technique-voirie",
            "title": "Fiche technique voirie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-voirie.odt",
                    "title": "Avis technique voirie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-energie",
            "title": "Fiche technique conseiller en énergie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-energie.odt",
                    "title": "Avis technique énergie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-urbanisme",
            "title": "Fiche technique urbanisme",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-urbanisme.odt",
                    "title": "Avis technique urbanisme",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet (avec listing des pièces manquantes - article 116 § 1)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre demandeur)",
                },
                {
                    "id": "urb-dossier-incomplet-archi.odt",
                    "title": "Dossier incomplet (lettre architecte)",
                },
            ),
        },
        {
            "id": "accuse-de-reception",
            "title": "Accusé de réception (dossier complet - article 116 § 1)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-accuse.odt", "title": "Accusé de réception"},
                {
                    "id": "urb-accuse-demande-paiement.odt",
                    "title": "Demande de paiement",
                },
            ),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-regularisation-delib-college-refus.odt",
                    "title": "Délibération refus de régularisation PU",
                },
            ),
        },
        {
            "id": "demande-complements-art116-6",
            "title": "Demande de compléments (article 116§6)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getLastAcknowledgment()",
            "podTemplates": (
                {
                    "id": "urb-demande-complements-art116-6.odt",
                    "title": "Lettre au demandeur",
                },
            ),
        },
        {
            "id": "transmis-1er-dossier-rw",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-envoi-premier-dossier-rw.odt",
                    "title": "Lettre d'envoi du premier dossier à la RW",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "urb-enq-avis-riverains-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - lettre riverains)",
                },
                {
                    "id": "urb-enq-certif-aff-annexe26.odt",
                    "title": "Certificat d'affichage (annexe 26)",
                },
                {
                    "id": "urb-enq-copie-rw-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - copie RW)",
                },
                {
                    "id": "urb-enq-annexe25-dem.odt",
                    "title": "Affiche (annexe 25 - lettre au demandeur)",
                },
                {"id": "urb-enq-annexe25.odt", "title": "Affiche (annexe 25)"},
                {"id": "urb-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "urb-enq-accuse-reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "urb-enq-reunion-clot.odt",
                    "title": "Réunion de clôture d'enquête",
                },
                {"id": "urb-enq-pv-clot.odt", "title": "PV de clôture enquête"},
                {"id": "urb-enq-frais.odt", "title": "Frais d'enquête"},
                {
                    "id": "urb-enq-recommandes.odt",
                    "title": "Recommandés aux riverains (étiquette Poste)",
                },
                {
                    "id": "urb-enq-art341-invit.odt",
                    "title": "Invitation séance de réclamation (article 341)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(
                        default_texts["investigationArticlesTextDefaultValue"]
                    ),
                    "fieldname": "investigationArticlesText",
                },
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "urb-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "urb-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-2eme-dossier-rw",
            "title": "Transmis 2eme dossier RW",
            "eventDateLabel": "Date de transmis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-envoi-second-dossier-rw.odt",
                    "title": "Lettre envoi deuxième dossier à la RW",
                },
                {
                    "id": "urb-envoi-second-dossier-demandeur.odt",
                    "title": "Information au demandeur envoi second dossier",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionOpinionRequestEvent",
            ),
        },
        {
            "id": "passage-conseil-communal",
            "title": "Passage au Conseil Communal",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-conseil-delib-college.odt",
                    "title": "Délibération passée au collège",
                },
                {
                    "id": "urb-conseil-delib-communale-creation.odt",
                    "title": "Délibération du conseil communal (ouverture de voirie)",
                },
                {
                    "id": "urb-conseil-delib-communale-modif.odt",
                    "title": "Délibération du conseil communal (modification de voirie)",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICommunalCouncilEvent",),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-decision-octroi-dem.odt",
                    "title": "Octroi du permis (lettre au demandeur)",
                },
                {
                    "id": "urb-decision-octroi-rw.odt",
                    "title": "Octroi du permis (lettre à l'Urbanisme)",
                },
                {
                    "id": "urb-decision-octroi-avis.odt",
                    "title": "Octroi du permis (lettre aux impétrants)",
                },
                {
                    "id": "urb-decision-transmis-reclamants.odt",
                    "title": "Décision du permis (transmis aux réclamants)",
                },
                {"id": "urb-decision-stats-mod3.odt", "title": "Statistiques modèle 3"},
                {
                    "id": "urb-decision-formulaire-a.odt",
                    "title": "Annexe 30 - Formulaire A",
                    "TALCondition": "python: portal.portal_urban.getUsePloneMeetingWSClient()",
                },
                {
                    "id": "urb-decision-egout-travaux.odt",
                    "title": "Demande de raccordement aux égouts avec travaux (formulaire à remplir par le demandeur)",
                },
                {"id": "urb-decision-frais.odt", "title": "Ventilation des frais"},
                {
                    "id": "urb-debut-travaux.odt",
                    "title": "Début des travaux (formulaire à remplir par le demandeur)",
                },
                {
                    "id": "urb-decision-deliberation-college.odt",
                    "title": "Delibération du collège d'octroi du permis",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "fiche-recap",
            "title": "Fiche récapitulative",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-fiche-recap.odt", "title": "Fiche récapitulative"},
            ),
        },
        {
            "id": "demande-raccordement-egout",
            "title": "Demande de raccordement à l'égout",
            "deadLineDelay": 15,
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-racc-egout-devis-egouttage.odt",
                    "title": "Devis raccordement égouttage",
                },
                {
                    "id": "urb-racc-egout-delib-college-avec-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal AVEC traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-sans-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal SANS traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-lotissement.odt",
                    "title": "Délibération du Collège raccordement égout dans un lotissement",
                },
            ),
        },
        {
            "id": "avis-technique-peb",
            "title": "Avis technique PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "avis-technique-peb.odt", "title": "Avis technique PEB"},
            ),
        },
        {
            "id": "peb-declaration-initiale",
            "title": "PEB: déclaration initiale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (),
        },
        {
            "id": "indication-implantation",
            "title": "Indication d'implantation",
            "deadLineDelay": 0,
            "activatedFields": ("receiptDate",),
            "TALCondition": "python: here.getImplantation()",
            "podTemplates": (),
        },
        {
            "id": "debut-des-travaux",
            "title": "Début des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkBeginningEvent",),
        },
        {
            "id": "fin-des-travaux",
            "title": "Fin des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkEndEvent",),
        },
        {
            "id": "peb-declaration-finale",
            "title": "PEB: déclaration finale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (
                {"id": "rapport-final-peb.odt", "title": "Rapport final PEB"},
            ),
        },
        {
            "id": "prorogation",
            "title": "Prorogation du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-prorogation.odt",
                    "title": "Délibération du Collège Communal concernant la prorogation du permis",
                },
                {
                    "id": "urb-prorogation-transmis-refus.odt",
                    "title": "Refus de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept.odt",
                    "title": "Acceptation de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept-fd.odt",
                    "title": "Acceptation de prorogation (lettre au fonctionnaire délégué)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IProrogationEvent",),
        },
        {
            "id": "suspension-du-permis",
            "title": "Suspension du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "suspensionReason",
                "suspensionEndDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-suspension-retrait-refus-dem.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre au demandeur)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw-recours.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW - direction des recours)",
                },
            ),
        },
        {
            "id": "enveloppes",
            "title": "Enveloppes",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-enveloppes-dem.odt", "title": "Enveloppes demandeurs"},
                {"id": "urb-enveloppes-archi.odt", "title": "Enveloppes architectes"},
            ),
        },
        {
            "id": "rappel-implantation",
            "title": "Rappel implantation",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "urb-rappel-implantation.odt", "title": "Rappel implantation"},
            ),
        },
        {
            "id": "rappel-decl-init-peb",
            "title": "Rappel déclaration initiale PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-decl-init-peb.odt",
                    "title": "Rappel déclaration initiale PEB",
                },
            ),
        },
        {
            "id": "rappel-implantation-peb",
            "title": "Rappel implantation et PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-implantation-peb.odt",
                    "title": "Rappel implantation et PEB",
                },
            ),
        },
        {
            "id": "demande-irrecevable-art159",
            "title": "Demande irrecevable (article 159 bis)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-demande-irrecevable-art159.odt",
                    "title": "Demande irrecevable (article 159 bis)",
                },
            ),
        },
        {
            "id": "recours-decision-au-conseil-etat",
            "title": "Recours du demandeur contre la décision au conseil d'état",
            "activatedFields": ("auditionDate",),
            "deadLineDelay": 0,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
        {
            "id": "recours-decision-au-gouvernement",
            "title": "Recours du demandeur contre la décision au gouvernement",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-recours-GW-demandeur-vs-FD.odt",
                    "title": "Recours du demandeur au GW contre décision du collège",
                },
                {
                    "id": "urb-recours-GW-ville-vs-FD.odt",
                    "title": "Recours de la ville au GW contre décision du FD",
                },
                {
                    "id": "urb-recours-GW-transmis-decision-GW-PU.odt",
                    "title": "Transmis au réclamant de la décision du GW concernant recours au GW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
    ),
    "article127": (
        {
            "id": "procedure-erronee-art127",
            "title": "Procédure erronée (article 127)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-procedure-erronee-art127.odt",
                    "title": "Procédure erronée (article 127 - courrier au demandeur)",
                },
                {
                    "id": "urb-procedure-erronee-art127-rw.odt",
                    "title": "Procédure erronée (article 127 - courrier à la RW)",
                },
            ),
        },
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande (récépissé - article 115)",
            "eventDateLabel": "Date de dépôt",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-recepisse.odt",
                    "title": "Récépissé de la demande (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "avis-etude-incidence",
            "title": "Avis sur l'étude d'incidence",
            "activatedFields": (),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getImpactStudy()",
            "podTemplates": (
                {
                    "id": "urb-avis-etude-incidence.odt",
                    "title": "Avis sur l'étude d'incidence",
                },
            ),
        },
        {
            "id": "recepisse-art15-complement",
            "title": "Récépissé d'un complément à une demande de permis (article 115)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art115-complement.odt",
                    "title": "Récépissé d'un complément à une demande de permis (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IMissingPartDepositEvent",),
        },
        {
            "id": "recepisse-article-116",
            "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-recepisse-art116.odt",
                    "title": "Récépissé d'un modificatif à une demande de permis (article 116 - 6)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
        },
        {
            "id": "fiche-technique-voirie",
            "title": "Fiche technique voirie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-voirie.odt",
                    "title": "Avis technique voirie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-energie",
            "title": "Fiche technique conseiller en énergie",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-energie.odt",
                    "title": "Avis technique énergie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-urbanisme",
            "title": "Fiche technique urbanisme",
            "activatedFields": (
                "decision",
                "opinionText",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "urb-avis-technique-urbanisme.odt",
                    "title": "Avis technique urbanisme",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet (avec listing des pièces manquantes - article 116 § 1)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre demandeur)",
                },
                {
                    "id": "urb-dossier-incomplet-archi.odt",
                    "title": "Dossier incomplet (lettre architecte)",
                },
            ),
        },
        {
            "id": "accuse-de-reception",
            "title": "Accusé de réception (dossier complet - article 116 § 1)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-accuse.odt", "title": "Accusé de réception"},
                {
                    "id": "urb-accuse-demande-paiement.odt",
                    "title": "Demande de paiement",
                },
            ),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-regularisation-delib-college-refus.odt",
                    "title": "Délibération refus de régularisation PU",
                },
            ),
        },
        {
            "id": "demande-complements-art116-6",
            "title": "Demande de compléments (article 116§6)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getLastAcknowledgment()",
            "podTemplates": (
                {
                    "id": "urb-demande-complements-art116-6.odt",
                    "title": "Lettre au demandeur",
                },
            ),
        },
        {
            "id": "transmis-1er-dossier-rw",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-envoi-premier-dossier-art127-rw.odt",
                    "title": "Lettre d'envoi du dossier (article 127) à la RW",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "urb-enq-avis-riverains-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - lettre riverains)",
                },
                {
                    "id": "urb-enq-certif-aff-annexe26.odt",
                    "title": "Certificat d'affichage (annexe 26)",
                },
                {
                    "id": "urb-enq-copie-rw-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - copie RW)",
                },
                {
                    "id": "urb-enq-annexe25-dem.odt",
                    "title": "Affiche (annexe 25 - lettre au demandeur)",
                },
                {"id": "urb-enq-annexe25.odt", "title": "Affiche (annexe 25)"},
                {"id": "urb-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "urb-enq-accuse-reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "urb-enq-reunion-clot.odt",
                    "title": "Réunion de clôture d'enquête",
                },
                {"id": "urb-enq-pv-clot.odt", "title": "PV de clôture enquête"},
                {"id": "urb-enq-frais.odt", "title": "Frais d'enquête"},
                {
                    "id": "urb-enq-recommandes.odt",
                    "title": "Recommandés aux riverains (étiquette Poste)",
                },
                {
                    "id": "urb-enq-art341-invit.odt",
                    "title": "Invitation séance de réclamation (article 341)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(
                        default_texts["investigationArticlesTextDefaultValue"]
                    ),
                    "fieldname": "investigationArticlesText",
                },
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "urb-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "urb-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "urb-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-2eme-dossier-rw",
            "title": "Transmis 2eme dossier RW",
            "eventDateLabel": "Date de transmis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-envoi-second-dossier-rw.odt",
                    "title": "Lettre envoi deuxième dossier à la RW",
                },
                {
                    "id": "urb-envoi-second-dossier-demandeur.odt",
                    "title": "Information au demandeur envoi second dossier",
                },
                {
                    "id": "urb-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionOpinionRequestEvent",
            ),
        },
        {
            "id": "passage-conseil-communal",
            "title": "Passage au Conseil Communal",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "urb-conseil-delib-college.odt",
                    "title": "Délibération passée au collège",
                },
                {
                    "id": "urb-conseil-delib-communale-creation.odt",
                    "title": "Délibération du conseil communal (ouverture de voirie)",
                },
                {
                    "id": "urb-conseil-delib-communale-modif.odt",
                    "title": "Délibération du conseil communal (modification de voirie)",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICommunalCouncilEvent",),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus",
            "title": "Délivrance du permis (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "urb-decision-octroi-dem.odt",
                    "title": "Octroi du permis (lettre au demandeur)",
                },
                {
                    "id": "urb-decision-octroi-rw.odt",
                    "title": "Octroi du permis (lettre à l'Urbanisme)",
                },
                {
                    "id": "urb-decision-transmis-reclamants.odt",
                    "title": "Décision du permis (transmis aux réclamants)",
                },
                {"id": "urb-decision-stats-mod3.odt", "title": "Statistiques modèle 3"},
                {
                    "id": "urb-decision-formulaire-a.odt",
                    "title": "Annexe 30 - Formulaire A",
                    "TALCondition": "python: portal.portal_urban.getUsePloneMeetingWSClient()",
                },
                {
                    "id": "urb-decision-egout-travaux.odt",
                    "title": "Demande de raccordement aux égouts avec travaux (formulaire à remplir par le demandeur)",
                },
                {"id": "urb-decision-frais.odt", "title": "Ventilation des frais"},
                {
                    "id": "urb-debut-travaux.odt",
                    "title": "Début des travaux (formulaire à remplir par le demandeur)",
                },
                {
                    "id": "urb-decision-deliberation-college.odt",
                    "title": "Delibération du collège d'octroi du permis",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "fiche-recap",
            "title": "Fiche récapitulative",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-fiche-recap.odt", "title": "Fiche récapitulative"},
            ),
        },
        {
            "id": "demande-raccordement-egout",
            "title": "Demande de raccordement à l'égout",
            "deadLineDelay": 15,
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "urb-racc-egout-devis-egouttage.odt",
                    "title": "Devis raccordement égouttage",
                },
                {
                    "id": "urb-racc-egout-delib-college-avec-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal AVEC traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-sans-traversee-voirie.odt",
                    "title": "Délibération du Collège Communal SANS traversée de voirie",
                },
                {
                    "id": "urb-racc-egout-delib-college-lotissement.odt",
                    "title": "Délibération du Collège raccordement égout dans un lotissement",
                },
            ),
        },
        {
            "id": "avis-technique-peb",
            "title": "Avis technique PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "avis-technique-peb.odt", "title": "Avis technique PEB"},
            ),
        },
        {
            "id": "peb-declaration-initiale",
            "title": "PEB: déclaration initiale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (),
        },
        {
            "id": "indication-implantation",
            "title": "Indication d'implantation",
            "deadLineDelay": 0,
            "activatedFields": ("receiptDate",),
            "TALCondition": "python: here.getImplantation()",
            "podTemplates": (),
        },
        {
            "id": "debut-des-travaux",
            "title": "Début des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkBeginningEvent",),
        },
        {
            "id": "fin-des-travaux",
            "title": "Fin des travaux",
            "deadLineDelay": 15,
            "activatedFields": (),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IWorkEndEvent",),
        },
        {
            "id": "peb-declaration-finale",
            "title": "PEB: déclaration finale",
            "activatedFields": ("receiptDate",),
            "deadLineDelay": 0,
            "TALCondition": "python: here.getPebType() == 'complete_process'",
            "podTemplates": (
                {"id": "rapport-final-peb.odt", "title": "Rapport final PEB"},
            ),
        },
        {
            "id": "prorogation",
            "title": "Prorogation du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-prorogation.odt",
                    "title": "Délibération du Collège Communal concernant la prorogation du permis",
                },
                {
                    "id": "urb-prorogation-transmis-refus.odt",
                    "title": "Refus de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept.odt",
                    "title": "Acceptation de prorogation (lettre au demandeur)",
                },
                {
                    "id": "urb-prorogation-transmis-accept-fd.odt",
                    "title": "Acceptation de prorogation (lettre au fonctionnaire délégué)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IProrogationEvent",),
        },
        {
            "id": "suspension-du-permis",
            "title": "Suspension du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "suspensionReason",
                "suspensionEndDate",
            ),
            "podTemplates": (
                {
                    "id": "urb-suspension-retrait-refus-dem.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre au demandeur)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW)",
                },
                {
                    "id": "urb-suspension-retrait-refus-rw-recours.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW - direction des recours)",
                },
            ),
        },
        {
            "id": "enveloppes",
            "title": "Enveloppes",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-enveloppes-dem.odt", "title": "Enveloppes demandeurs"},
                {"id": "urb-enveloppes-archi.odt", "title": "Enveloppes architectes"},
            ),
        },
        {
            "id": "rappel-implantation",
            "title": "Rappel implantation",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {"id": "urb-rappel-implantation.odt", "title": "Rappel implantation"},
            ),
        },
        {
            "id": "rappel-decl-init-peb",
            "title": "Rappel déclaration initiale PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-decl-init-peb.odt",
                    "title": "Rappel déclaration initiale PEB",
                },
            ),
        },
        {
            "id": "rappel-implantation-peb",
            "title": "Rappel implantation et PEB",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-rappel-implantation-peb.odt",
                    "title": "Rappel implantation et PEB",
                },
            ),
        },
        {
            "id": "demande-irrecevable-art159",
            "title": "Demande irrecevable (article 159 bis)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-demande-irrecevable-art159.odt",
                    "title": "Demande irrecevable (article 159 bis)",
                },
            ),
        },
        {
            "id": "recours-decision-au-conseil-etat",
            "title": "Recours du demandeur contre la décision au conseil d'état",
            "activatedFields": ("auditionDate",),
            "deadLineDelay": 0,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
        {
            "id": "recours-decision-au-gouvernement",
            "title": "Recours du demandeur contre la décision au gouvernement",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "urb-recours-GW-demandeur-vs-FD.odt",
                    "title": "Recours du demandeur au GW contre décision du collège",
                },
                {
                    "id": "urb-recours-GW-ville-vs-FD.odt",
                    "title": "Recours de la ville au GW contre décision du FD",
                },
                {
                    "id": "urb-recours-GW-transmis-decision-FD-art127.odt",
                    "title": "Transmis au réclamant de la décision du FD concernant recours au GW contre art 127",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
    ),
    "declaration": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "decl-recepisse.odt", "title": "Récepissé de la déclaration"},
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "avis-technique",
            "title": "Avis technique",
            "activatedFields": ("transmitDate",),
            "eventDateLabel": "Date de retour souhaitée",
            "deadLineDelay": 15,
            "podTemplates": (
                {"id": "decl-avis-technique.odt", "title": "Avis technique urbanisme"},
            ),
        },
        {
            "id": "deliberation-college",
            "title": "Délibération collège",
            "activatedFields": ("decision",),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de la séance collège",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "decl-delib-college.odt", "title": "Délibération collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-decision",
            "title": "Transmis décision au FD et demandeur",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "decl-transmis-decision-fd.odt",
                    "title": "Transmis décision au FD",
                },
                {
                    "id": "decl-transmis-decision-demandeur.odt",
                    "title": "Transmis décision au demandeur",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
    ),
    "urbancertificateone": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": ("receivedDocumentReference",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "cu1-recepisse.odt", "title": "Récépissé de la demande"},
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "fiche-technique-voirie",
            "title": "Fiche technique voirie",
            "activatedFields": (
                "decision",
                "opinionText",
                "receiptDate",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "cu1-avis-technique-voirie.odt",
                    "title": "Avis technique voirie",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "fiche-technique-urbanisme",
            "title": "Fiche technique urbanisme",
            "activatedFields": (
                "decision",
                "opinionText",
                "receiptDate",
            ),
            "deadLineDelay": 0,
            "TALCondition": "",
            "podTemplates": (
                {
                    "id": "cu1-avis-technique-urbanisme.odt",
                    "title": "Avis technique urbanisme",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITechnicalServiceOpinionRequestEvent",
            ),
        },
        {
            "id": "transmis-dossier-rw",
            "title": "Transmis du dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "cu1-envoi-dossier-rw.odt",
                    "title": "Lettre d'envoi du dossier à la RW",
                },
                {
                    "id": "cu1-envoi-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "octroi-cu1",
            "title": "Octroi du certificat",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "cu1-lettre-notaire.odt",
                    "title": "Lettre au notaire (ou demandeur) (octroi)",
                    "context_variables": [
                        {"name": "publipostage", "value": "notaires"}
                    ],
                },
                {
                    "id": "cu1-certif.odt",
                    "title": "Certificat d'urbanisme 1 (annexe 35 formulaire I B)",
                },
                {"id": "cu1-demande-paiement.odt", "title": "Demande de paiement"},
                {"id": "cu1-rappel-demande-paiement.odt", "title": "Rappel paiement"},
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
    ),
    "urbancertificatetwo": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "cu2-recepisse.odt", "title": "Récépissé de la demande"},
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet (avec listing des pièces manquantes)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "podTemplates": (
                {
                    "id": "cu2-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre demandeur)",
                },
            ),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "cu2-enq-avis-riverains-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - lettre riverains)",
                },
                {
                    "id": "cu2-enq-certif-aff-annexe26.odt",
                    "title": "Certificat d'affichage (annexe 26)",
                },
                {
                    "id": "cu2-enq-copie-rw-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - copie RW)",
                },
                {
                    "id": "cu2-enq-annexe25-dem.odt",
                    "title": "Affiche (annexe 25 - lettre au demandeur)",
                },
                {"id": "cu2-enq-annexe25.odt", "title": "Affiche (annexe 25)"},
                {"id": "cu2-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "cu2-enq-accuse-reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "cu2-enq-reunion-clot.odt",
                    "title": "Réunion de clôture d'enquête",
                },
                {"id": "cu2-enq-pv-clot.odt", "title": "PV de clôture enquête"},
                {"id": "cu2-enq-frais.odt", "title": "Frais d'enquête"},
                {
                    "id": "cu2-enq-recommandes.odt",
                    "title": "Recommandés aux riverains (étiquette Poste)",
                },
                {
                    "id": "cu2-enq-art341-invit.odt",
                    "title": "Invitation séance de réclamation (article 341)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": [
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                }
            ],
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "cu2-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {"id": "cu2-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "cu2-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-dossier-rw",
            "title": "Transmis du dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "cu2-envoi-dossier-rw.odt",
                    "title": "Lettre d'envoi du dossier à la RW",
                },
                {
                    "id": "cu2-envoi-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "octroi-cu2",
            "title": "Octroi du certificat",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "cu2-decision-octroi-dem.odt",
                    "title": "Octroi du certificat (lettre au demandeur)",
                },
                {
                    "id": "cu2-decision-octroi-rw.odt",
                    "title": "Octroi du certificat (lettre à l'Urbanisme)",
                },
                {
                    "id": "cu2-decision-transmis-reclamants.odt",
                    "title": "Décision du certificat (transmis aux réclamants)",
                },
                {"id": "cu2-decision-frais.odt", "title": "Ventilation des frais"},
                {
                    "id": "cu2-decision-deliberation-college.odt",
                    "title": "Delibération du collège d'octroi du certificat",
                    "TALCondition": "python: portal.portal_urban.getUsePloneMeetingWSClient()",
                },
                {
                    "id": "cu2-certif.odt",
                    "title": "Certificat d'urbanisme 2 (annexe 35 formulaire II B)",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
    ),
    "division": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "div-recepisse.odt", "title": "Récépissé de la demande"},
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "decision-octroi-refus",
            "title": "Octroi/refus de la division",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "div-decision.odt", "title": "Octroi/refus de la division"},
                {"id": "div-decision-incomplet.odt", "title": "Dossier incomplet"},
                {
                    "id": "div-transmis-decision.odt",
                    "title": "Octroi/refus de la division (transmis au notaire)",
                    "context_variables": [
                        {"name": "publipostage", "value": "notaires"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.ITheLicenceEvent",),
        },
    ),
    "notaryletter": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 40,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "octroi-lettre-notaire",
            "title": "Octroi de la lettre d'information notariale",
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "not-lettre-information-notariale.odt",
                    "title": "Lettre d'information notariale (annexe 49 formulaire III)",
                    "context_variables": [
                        {"name": "publipostage", "value": "notaires"}
                    ],
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
    ),
    "envclassone": (
        {
            "id": "etude-dincidence",
            "title": "Étude d'incidence",
            "activatedFields": ("officeCoordinate",),
            "eventDateLabel": "Date de la RIP",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "cession-permis",
            "title": "Cession de permis",
            "activatedFields": (
                "transferType",
                "transferDescription",
            ),
            "eventDateLabel": "Date de la cession",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": (
                "Products.urban.interfaces.ITransferOfLicenceEvent",
                "Products.urban.interfaces.ICollegeEvent",
            ),
            "TALCondition": "here/mayAddTransferOfLicenceEvent",
        },
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 3,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "env1-recepisse.odt",
                    "title": "Récepissé du permis",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "envoi-demande-FT",
            "title": "Envoi de la demande au FT",
            "activatedFields": (),
            "deadLineDelay": 20,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "env1-transmis-demande-ft.odt",
                    "title": "Transmis de la demande au FT",
                },
            ),
            "eventType": ("Products.urban.interfaces.ITransmitToSPWEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet",
            "activatedFields": (),
            "deadLineDelay": 0,
            "isKeyEvent": False,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "recepisse-complement",
            "title": "Récépissé d'un complément",
            "activatedFields": (),
            "isKeyEvent": False,
            "podTemplates": (
                {
                    "id": "env1-recepisse-complement.odt",
                    "title": "Récépissé d'un complément",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "env1-transmis-complement-ft.odt",
                    "title": "Transmis d'un complément au FT",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IMissingPartDepositEvent",
                "Products.urban.interfaces.IMissingPartTransmitToSPWEvent",
            ),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": (),
            "deadLineDelay": 0,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "env1-dossier-irrecevable-ft.odt",
                    "title": "Transmis de l'irrecevabilité au FT",
                },
            ),
        },
        {
            "id": "dossier-complet-recevable",
            "title": "Dossier complet et recevable",
            "activatedFields": (),
            "deadLineDelay": 5,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "TALCondition": "here/mayAddInquiryEvent",
            "podTemplates": (
                {"id": "env1-enq-avis.odt", "title": "Avis d'enquête publique"},
                {
                    "id": "env1-enq-recommandes.odt",
                    "title": "Recommandé aux propriétaires (étiquette Poste)",
                },
                {
                    "id": "env1-enq-transmis-FT.odt",
                    "title": "Transmis de l'avis d'enquête au FT",
                },
                {
                    "id": "env1-enq-transmis-college.odt",
                    "title": "Transmis de l'avis d'enquête aux propriétaires",
                },
                {"id": "env1-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": [
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                }
            ],
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "env3-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "pre-decision",
            "title": "Avis préalable du collège",
            "activatedFields": ("collegeOpinion",),
            "eventDateLabel": "Date de l'avis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventPortalType": "UrbanEventCollege",
            "eventType": ("Products.urban.interfaces.ICollegeOpinionEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "township-council",
            "title": "Passage au conseil communal",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getPublicRoadModifications()",
            "podTemplates": (),
        },
        {
            "id": "rapport-synthese",
            "title": "Rapport de synthèse",
            "eventDateLabel": "Date de réception",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDecisionProjectFromSPWEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "modified-blueprints",
            "title": "Plans modificatifs",
            "activatedFields": ("transmitDate",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "env1-demande-plans-modificatifs.odt",
                    "title": "Demande de plans modificatifs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "env1-transmis-demande-plans-modificatifs-ft.odt",
                    "title": "Transmis de la demande de plans modificatifs au FT",
                },
                {
                    "id": "env1-transmis-plans-modificatifs-ft.odt",
                    "title": "Transmis de plans modificatifs au FT",
                },
            ),
        },
        {
            "id": "decision",
            "title": "Décision (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getAuthority() == 'college'",
            "podTemplates": (
                {
                    "id": "env1-transmis-decision.odt",
                    "title": "Transmis de la décision (demandeur)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "env1-transmis-decision-FT.odt",
                    "title": "Transmis de la décision (FT)",
                },
                {
                    "id": "env1-transmis-decision-impetrants-ft.odt",
                    "title": "Transmis de la décision (Instances)",
                    "context_variables": [
                        {"name": "publipostage", "value": "organismes"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.ILicenceDeliveryEvent",),
            "eventPortalType": "UrbanEventCollege",
        },
        {
            "id": "decision-transmit-FT",
            "title": "Réception de la décision de l'ARNE",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getAuthority() == 'ft'",
            "podTemplates": (
                {
                    "id": "env1-transmis-decision.odt",
                    "title": "Transmis de la décision (demandeur)",
                },
                {
                    "id": "env1-transmis-decision-impetrants-ft.odt",
                    "title": "Transmis de la décision (Instances)",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionDecisionEvent",
                "Products.urban.interfaces.ILicenceDeliveryEvent",
            ),
        },
        {
            "id": "affichage-decision",
            "title": "Affichage de la décision",
            "eventDateLabel": "Date d'affichage",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "env1-affiche-decision.odt", "title": "Affiche"},
                {"id": "env1-affichage-mission.odt", "title": "Demande de mission"},
                {
                    "id": "env1-certificat-decision.odt",
                    "title": "Certificat d'affichage de la décision",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDisplayingTheDecisionEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "affichage-recours",
            "title": "Recours",
            "eventDateLabel": "Date d'affichage du recours",
            "activatedFields": (
                "recourseDecisionDisplayDate",
                "recourseDecision",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
    ),
    "envclasstwo": (
        {
            "id": "etude-dincidence",
            "title": "Étude d'incidence",
            "activatedFields": ("officeCoordinate",),
            "eventDateLabel": "Date de la RIP",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "cession-permis",
            "title": "Cession de permis",
            "activatedFields": (
                "transferType",
                "transferDescription",
            ),
            "eventDateLabel": "Date de la cession",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": (
                "Products.urban.interfaces.ITransferOfLicenceEvent",
                "Products.urban.interfaces.ICollegeEvent",
            ),
            "TALCondition": "here/mayAddTransferOfLicenceEvent",
        },
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 3,
            "eventDateLabel": "Date de dépôt",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pe_recepisse_depot_demande.odt",
                    "title": "Récépissé du dépôt de la demande",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {"id": "pe_entete_farde_dossier.odt", "title": "Entête farde dossier"},
                {
                    "id": "pe_transmis_demande_dgo3.odt",
                    "title": "Transmis de la demande à l'ARNE",
                },
                {
                    "id": "pe_info_demandeur.odt",
                    "title": "Information au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "envoi-demande-FT",
            "title": "Transmis du dossier au SPW",
            "activatedFields": (),
            "deadLineDelay": 0,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ITransmitToSPWEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet",
            "activatedFields": (),
            "deadLineDelay": 0,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "recepisse-complement",
            "title": "Dépôt de compléments à une demande",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 3,
            "eventDateLabel": "Date de dépôt",
            "isKeyEvent": True,
            "podTemplates": (
                {
                    "id": "pe_complements_recepisse_depot_demande.odt",
                    "title": "Récépissé d'un dépôt de compléments",
                },
                {
                    "id": "pe_complements_transmis_demande_dgo3.odt",
                    "title": "Transmis à l'ARNE",
                },
                {
                    "id": "pe_complements_info_demandeur.odt",
                    "title": "Information au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "pe_complements_transmis_demande_dgo3.odt",
                    "title": "Transmis d'un complément au FT",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IMissingPartDepositEvent",
                "Products.urban.interfaces.IMissingPartTransmitToSPWEvent",
            ),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 0,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pe_irrecevabilite_hors_delai.odt",
                    "title": "Transmis de l'irrecevabilité à l'ARNE",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "dossier-complet-recevable",
            "title": "Dossier recevable",
            "activatedFields": (),
            "deadLineDelay": 5,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": (
                "investigationStart",
                "investigationEnd",
            ),
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "TALCondition": "here/mayAddInquiryEvent",
            "podTemplates": (
                {"id": "pe_affiche_annexe_26.odt", "title": "Affiche (annexe 26)"},
                {
                    "id": "pe_avis_enquete_riverains.odt",
                    "title": "Avis d'enquête aux riverains",
                },
                {
                    "id": "pe_attestation_affichage.odt",
                    "title": "Attestation d'affichage après enquête",
                },
                {
                    "id": "pe_pv_cloture_enquete.odt",
                    "title": "Procès-verbal de clôture d'enquête publique",
                },
                {
                    "id": "pe_transmis_avis_dgo3.odt",
                    "title": "Transmis de l'avis d'enquête à l'ARNE",
                },
                {
                    "id": "pe_transmis_elements_dgo3.odt",
                    "title": "Transmis des éléments de l'enquête à l'ARNE",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": [
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                }
            ],
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "env3-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "pre-decision",
            "title": "Avis préalable du Collège",
            "activatedFields": (),
            "eventDateLabel": "Date de l'avis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "eventPortalType": "UrbanEventCollege",
            "podTemplates": (
                {
                    "id": "pe_transmis_avis_prealable_dgo3.odt",
                    "title": "Transmis de l'avis Collège à l'ARNE",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICollegeOpinionEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "rapport-synthese",
            "title": "Rapport de synthèse",
            "eventDateLabel": "Date de réception",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDecisionProjectFromSPWEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "modified-blueprints",
            "title": "Plans modificatifs",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pe_demande_plans_modificatifs.odt",
                    "title": "Demande de plans modificatifs",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "pe_transmis_plans_modificatifs_dgo3.odt",
                    "title": "Transmis de la demande de plans modificatifs à l'ARNE",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "reception-plans-modificatifs",
            "title": "Réception des plans modificatifs",
            "activatedFields": (),
            "eventDateLabel": "Date de réception",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IModificationDepositEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "decision",
            "title": "Décision du Collège (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
                "transmitDate",
            ),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getAuthority() == 'college'",
            "podTemplates": (
                {
                    "id": "pe_notification_decision_demandeur.odt",
                    "title": "Transmis de la décision au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "pe_transmis_decision_dgo3.odt",
                    "title": "Transmis de la décision à l'ARNE",
                },
                {
                    "id": "pe_transmis_decision_instances.odt",
                    "title": "Transmis de la décision aux instances",
                    "context_variables": [
                        {"name": "publipostage", "value": "organismes"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.ILicenceDeliveryEvent",),
            "eventPortalType": "UrbanEventCollege",
        },
        {
            "id": "reception-decision-dgo3",
            "title": "Réception de la décision de l'ARNE",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "eventDateLabel": "Date de réception",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getAuthority() == 'ft'",
            "podTemplates": (),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionDecisionEvent",
                "Products.urban.interfaces.ILicenceDeliveryEvent",
            ),
        },
        {
            "id": "affichage-decision",
            "title": "Affichage de la décision",
            "eventDateLabel": "Date de notification",
            "activatedFields": ("displayDate",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pe_affichage_decision.odt",
                    "title": "Affichage de la décision",
                },
                {
                    "id": "pe_attestation_affichage_decision.odt",
                    "title": "Attestation d’affichage de la décision",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDisplayingTheDecisionEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "recours-au-gouvernement",
            "title": "Recours contre la décision au Gouvernement Wallon",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "transmitDate",
                "displayDate",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pe_transmis_pieces_recours.odt",
                    "title": "Transmis des pièces à la cellule recours de l'ARNE",
                },
                {
                    "id": "pe_attestation_affichage_recours.odt",
                    "title": "Attestation d'affichage du recours",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "decision-du-recours",
            "title": "Décision du recours",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "recourseDecisionDisplayDate",
                "recourseDecision",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "pe_affichage_decision_recours.odt",
                    "title": "Attestation d'affichage de la décision du recours",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
            "TALCondition": "python: licence.getProcedureChoice() != 'article65'",
        },
    ),
    "envclassthree": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de dépôt",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "dec3_recepisse_depot_demande.odt",
                    "title": "Récépissé de la déclaration",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "cession-permis",
            "title": "Cession de permis",
            "activatedFields": (
                "transferType",
                "transferDescription",
            ),
            "eventDateLabel": "Date de la cession",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": (
                "Products.urban.interfaces.ITransferOfLicenceEvent",
                "Products.urban.interfaces.ICollegeEvent",
            ),
            "TALCondition": "here/mayAddTransferOfLicenceEvent",
        },
        {
            "id": "refus-de-la-demande",
            "title": "Demande irrecevable",
            "activatedFields": (),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "dec3_demande_irrecevable.odt",
                    "title": "Demande irrecevable (lettre au demandeur)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRefusedIncompletenessEvent",),
        },
        {
            "id": "demande-de-paiement",
            "title": "Demande de paiement",
            "activatedFields": (),
            "isKeyEvent": True,
            "eventDateLabel": "Date de notification",
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "dec3_demande_paiement.odt",
                    "title": "Demande de paiement",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "env3-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "acceptation-de-la-demande-cond",
            "title": "Prise d'acte avec conditions",
            "activatedFields": (),
            "isKeyEvent": True,
            "eventDateLabel": "Date de prise d'acte",
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "dec3_recevable_conditions_demandeur.odt",
                    "title": "Déclaration recevable avec conditions complémentaires - Lettre au demandeur",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "dec3_recevable_conditions_dgo3dgo4.odt",
                    "title": "Déclaration recevable avec conditions complémentaires - Lettres ARNE et TLPE",
                },
            ),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
        },
        {
            "id": "passage-college",
            "title": "Passage au Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "dec3_transmis_sans_conditions_demandeur.odt",
                    "title": "Transmis décision sans conditions complémentaires (lettre au demandeur)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "dec3_transmis_conditions_demandeur.odt",
                    "title": "Transmis décision avec conditions complémentaires (lettre au demandeur)",
                    "context_variables": [
                        {"name": "publipostage", "value": "demandeurs"}
                    ],
                },
                {
                    "id": "dec3_transmis_sans_conditions_dgo3dgo4.odt",
                    "title": "Transmis décision sans conditions complémentaires (lettre au FD/FT)",
                },
                {
                    "id": "dec3_transmis_conditions_dgo3dgo4.odt",
                    "title": "Transmis décision avec conditions complémentaires (lettre au FD/FT)",
                },
            ),
        },
        {
            "id": "premiere-reunion-patrimoine",
            "title": "Première réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "deuxieme-reunion-patrimoine",
            "title": "Deuxième réunion patrimoine",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
        {
            "id": "reunion-patrimoine-supplementaire",
            "title": "Réunion patrimoine supplémentaire",
            "eventDateLabel": "Date de la réunion",
            "activatedFields": (
                "reportCreationDate",
                "reportReceptionDate",
                "misc_description",
            ),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IPatrimonyMeetingEvent",),
        },
    ),
    "miscdemand": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "miscdemand-recepisse.odt", "title": "Récepissé de la demande"},
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "lot-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Service interne XXX)",
            "abbreviation": "Service interne XXX",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "deliberation-college",
            "title": "Délibération collège",
            "activatedFields": ("decision",),
            "eventDateLabel": "Date de la séance collège",
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "miscdemand-delib-college.odt", "title": "Délibération collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-decision",
            "title": "Transmis décision au demandeur",
            "activatedFields": (),
            "deadLineDelay": 15,
            "eventDateLabel": "Date du transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "miscdemand-transmis-decision-demandeur.odt",
                    "title": "Transmis décision au demandeur",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
    ),
    "projectmeetings": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "isKeyEvent": True,
            "eventDateLabel": "Date de réception",
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "convocation",
            "title": "Convocation",
            "activatedFields": (),
            "isKeyEvent": True,
            "eventDateLabel": "Date d'envoi des convocations",
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "codt_RP_convocation_demandeur.odt",
                    "title": "Convocation au demandeur",
                },
                {
                    "id": "codt_RP_convocation_FD.odt",
                    "title": "Convocation au SPW TLPE",
                },
                {
                    "id": "codt_RP_convocation_architecte.odt",
                    "title": "Convocation à l’architecte",
                },
                {"id": "codt_RP_convocation_autre.odt", "title": "Convocation autre"},
            ),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
        },
    ),
    "preliminarynotice": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "miscdemand-recepisse.odt", "title": "Récepissé de la demande"},
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "analyse-technicien",
            "title": "Analyse Technicien",
            "activatedFields": ("analysis",),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "passage-college",
            "title": "passage-college",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
            "podTemplates": (),
        },
        {
            "id": "transmis-du-rapport",
            "title": "Transmis du rapport",
            "activatedFields": (),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "courrier-libre",
            "title": "Courrier libre",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
    ),
    "patrimonycertificate": (
        {
            "id": "convocation",
            "title": "Convocation",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "reunion",
            "title": "Réunion",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
        {
            "id": "decision",
            "title": "Décision",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
        },
    ),
    "parceloutlicence": (
        {
            "id": "depot-de-la-demande",
            "title": "Dépôt de la demande (récépissé - article 115)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "lot-recepisse.odt",
                    "title": "Récépissé de la demande (article 115)",
                },
            ),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "avis-etude-incidence",
            "title": "Avis sur l'étude d'incidence",
            "activatedFields": (),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getImpactStudy()",
            "podTemplates": (
                {
                    "id": "lot-avis-etude-incidence.odt",
                    "title": "Avis sur l'étude d'incidence",
                },
            ),
        },
        {
            "id": "dossier-incomplet",
            "title": "Dossier incomplet (avec listing des pièces manquantes - article 116 § 1)",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "eventType": ("Products.urban.interfaces.IMissingPartEvent",),
            "podTemplates": (
                {
                    "id": "lot-dossier-incomplet-demandeur.odt",
                    "title": "Dossier incomplet (lettre demandeur)",
                },
            ),
        },
        {
            "id": "accuse-de-reception",
            "title": "Accusé de réception (dossier complet - article 116 § 1)",
            "activatedFields": ("transmitDate",),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "eventType": ("Products.urban.interfaces.IAcknowledgmentEvent",),
            "podTemplates": (
                {"id": "lot-accuse.odt", "title": "Accusé de réception"},
                {
                    "id": "lot-accuse-demande-paiement.odt",
                    "title": "Demande de paiement",
                },
            ),
        },
        {
            "id": "dossier-irrecevable",
            "title": "Dossier irrecevable",
            "activatedFields": ("decisionDate",),
            "podTemplates": (
                {
                    "id": "lot-regularisation-delib-college-refus.odt",
                    "title": "Délibération refus de régularisation PU",
                },
            ),
        },
        {
            "id": "transmis-1er-dossier-rw",
            "title": "Transmis 1er dossier RW",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "eventDateLabel": "Date de transmis",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "lot-envoi-premier-dossier-rw.odt",
                    "title": "Lettre d'envoi du premier dossier à la RW",
                },
                {
                    "id": "lot-envoi-premier-dossier-art127-rw.odt",
                    "title": "Lettre d'envoi du dossier (article 127) à la RW",
                },
                {
                    "id": "lot-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IWalloonRegionPrimoEvent",),
        },
        {
            "id": "enquete-publique",
            "title": "Enquête publique",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "here/mayAddInquiryEvent",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "lot-enq-avis-riverains-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - lettre riverains)",
                },
                {
                    "id": "lot-enq-certif-aff-annexe26.odt",
                    "title": "Certificat d'affichage (annexe 26)",
                },
                {
                    "id": "lot-enq-copie-rw-annexe26.odt",
                    "title": "Avis enquête (annexe 26 - copie RW)",
                },
                {
                    "id": "lot-enq-annexe25-dem.odt",
                    "title": "Affiche (annexe 25 - lettre au demandeur)",
                },
                {"id": "lot-enq-annexe25.odt", "title": "Affiche (annexe 25)"},
                {"id": "lot-enq-ordre-mission.odt", "title": "Ordre de mission"},
                {
                    "id": "lot-enq-accuse-reclamation.odt",
                    "title": "Accusé de réception d'une réclamation",
                },
                {
                    "id": "lot-enq-reunion-clot.odt",
                    "title": "Réunion de clôture d'enquête",
                },
                {"id": "lot-enq-pv-clot.odt", "title": "PV de clôture enquête"},
                {"id": "lot-enq-frais.odt", "title": "Frais d'enquête"},
                {
                    "id": "lot-enq-recommandes.odt",
                    "title": "Recommandés aux riverains (étiquette Poste)",
                },
                {
                    "id": "lot-enq-art341-invit.odt",
                    "title": "Invitation séance de réclamation (article 341)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": [
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                }
            ],
        },
        {
            "id": "config-opinion-request",
            "title": "*** Demande d'avis CONFIG ***",
            "activatedFields": (),
            "TALCondition": "python: False",
            "podTemplates": (
                {"id": "lot-avis.odt", "title": "Courrier de demande d'avis"},
            ),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "service-pop",
            "title": "Demande d'avis (Service population)",
            "abbreviation": "Service population",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spw-dgo1",
            "title": "Demande d'avis (SPW-DGO1)",
            "abbreviation": "SPW-DGO1",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Département du réseau de Namur et du Luxembourg<br />District 131.12 - SPY<br />37, Route de Saussin<br />5190 Spy</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dgrne",
            "title": "Demande d'avis (DGRNE)",
            "abbreviation": "DGRNE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "dnf",
            "title": "Demande d'avis (DNF)",
            "abbreviation": "DNF",
            "description": RichTextValue(
                "<p>39, Avenue Reine Astrid<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "stp",
            "title": "Demande d'avis (Service Technique Provincial)",
            "abbreviation": "Service Technique Provincial",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pi",
            "title": "Demande d'avis (Prévention Incendie)",
            "abbreviation": "Prévention Incendie",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "bec",
            "title": "Demande d'avis (Bureau d'études communal)",
            "abbreviation": "Bureau d'études communal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "svp",
            "title": "Demande d'avis (Service Voyer Principal)",
            "abbreviation": "Service Voyer Principal",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "agriculture",
            "title": "Demande d'avis (Agriculture)",
            "abbreviation": "Agriculture",
            "description": RichTextValue(
                "<p>Direction Générale opérationnelle<br />Agriculture, Ressources naturelles et Environnement<br />Service extérieur de Wavre<br />4, Avenue Pasteur<br />1300 Wavre</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "pn",
            "title": "Demande d'avis (Parc Naturel)",
            "abbreviation": "Parc Naturel",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "crmsf",
            "title": "Demande d'avis (Commission Royale des Monuments, Sites et Fouilles)",
            "abbreviation": "Commission Royale des Monuments, Sites et Fouilles",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "swde",
            "title": "Demande d'avis (SWDE)",
            "abbreviation": "SWDE",
            "description": RichTextValue(
                "<p>14, Rue Joseph Saintraint<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "ccatm",
            "title": "Demande d'avis (CCATM)",
            "abbreviation": "CCATM",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "inasep",
            "title": "Demande d'avis (INASEP)",
            "abbreviation": "INASEP",
            "description": RichTextValue("<p>1b, Rue des Viaux<br />5100 Naninne</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "belgacom",
            "title": "Demande d'avis (Belgacom)",
            "abbreviation": "Belgacom",
            "description": RichTextValue(
                "<p>60, Rue Marie Henriette<br />5000 Namur</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "spge",
            "title": "Demande d'avis (SPGE)",
            "abbreviation": "SPGE",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "cibe",
            "title": "Demande d'avis (CIBE/Vivaqua)",
            "abbreviation": "CIBE/Vivaqua",
            "description": RichTextValue(
                "<p>70, Rue aux Laines<br />1000 Bruxelles</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "sncb",
            "title": "Demande d'avis (SNCB)",
            "abbreviation": "SNCB",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "infrabel",
            "title": "Demande d'avis (Infrabel)",
            "abbreviation": "Infrabel",
            "description": RichTextValue(
                "<p>Infrastructure ferroviaire<br />2/003, Place des Guillemins<br />4000 Liège</p>"
            ),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "portal_type": "OpinionEventConfig",
            "externalDirections": [
                "brabant_wallon",
                "eupen",
                "hainaut_1",
                "hainaut_2",
                "liege_1",
                "liege_2",
                "luxembourg",
                "namur",
            ],
            "id": "voo",
            "title": "Demande d'avis (VOO)",
            "abbreviation": "VOO",
            "description": RichTextValue("<p>1, Rue xxx<br />xxxx Commune</p>"),
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "adviceAgreementLevel",
                "isOptional",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: event.mayAddOpinionRequestEvent(here)",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "rapport-du-college",
            "title": "Rapport du Collège",
            "activatedFields": (
                "decisionDate",
                "decision",
                "decisionText",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {"id": "lot-rapp-service.odt", "title": "Rapport du Service"},
                {"id": "lot-rapp-college.odt", "title": "Rapport du Collège"},
            ),
            "eventType": ("Products.urban.interfaces.ICollegeReportEvent",),
        },
        {
            "id": "transmis-2eme-dossier-rw",
            "title": "Transmis 2eme dossier RW",
            "eventDateLabel": "Date de transmis",
            "activatedFields": (
                "decisionDate",
                "decision",
                "receiptDate",
            ),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "lot-envoi-second-dossier-rw.odt",
                    "title": "Lettre envoi deuxième dossier à la RW",
                },
                {
                    "id": "lot-envoi-second-dossier-demandeur.odt",
                    "title": "Information au demandeur envoi second dossier",
                },
                {
                    "id": "lot-envoi-premier-dossier-form-rw.odt",
                    "title": "Formulaire d'envoi d'un dossier à la RW",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.IWalloonRegionOpinionRequestEvent",
            ),
        },
        {
            "id": "passage-conseil-communal",
            "title": "Passage au Conseil Communal",
            "activatedFields": (),
            "deadLineDelay": 15,
            "podTemplates": (
                {
                    "id": "lot-conseil-delib-college.odt",
                    "title": "Délibération passée au collège",
                },
                {
                    "id": "lot-conseil-delib-communale-creation.odt",
                    "title": "Délibération du conseil communal (ouverture de voirie)",
                },
                {
                    "id": "lot-conseil-delib-communale-modif.odt",
                    "title": "Délibération du conseil communal (modification de voirie)",
                },
            ),
            "eventType": ("Products.urban.interfaces.ICommunalCouncilEvent",),
        },
        {
            "id": "delivrance-du-permis-octroi-ou-refus",
            "title": "Délivrance du permis (octroi ou refus)",
            "eventDateLabel": "Date de notification",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (
                {
                    "id": "lot-decision-octroi-dem.odt",
                    "title": "Octroi du permis (lettre au demandeur)",
                },
                {
                    "id": "lot-decision-octroi-rw.odt",
                    "title": "Octroi du permis (lettre à l'Urbanisme)",
                },
                {
                    "id": "lot-decision-transmis-reclamants.odt",
                    "title": "Décision du permis (transmis aux réclamants)",
                    "context_variables": [
                        {"name": "publipostage", "value": "derniers_reclamants"}
                    ],
                },
                {
                    "id": "lot-decision-formulaire-b.odt",
                    "title": "Annexe 31 - Formulaire B",
                    "TALCondition": "python: portal.portal_urban.getUsePloneMeetingWSClient()",
                },
                {"id": "lot-decision-frais.odt", "title": "Ventilation des frais"},
                {
                    "id": "lot-decision-deliberation-college.odt",
                    "title": "Delibération du collège d'octroi du permis",
                },
            ),
            "eventType": (
                "Products.urban.interfaces.ITheLicenceEvent",
                "Products.urban.interfaces.ILicenceNotificationEvent",
            ),
        },
        {
            "id": "suspension-du-permis",
            "title": "Suspension du permis",
            "deadLineDelay": 15,
            "activatedFields": (
                "suspensionReason",
                "suspensionEndDate",
            ),
            "podTemplates": (
                {
                    "id": "lot-suspension-retrait-refus-dem.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre au demandeur)",
                },
                {
                    "id": "lot-suspension-retrait-refus-rw.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW)",
                },
                {
                    "id": "lot-suspension-retrait-refus-rw-recours.odt",
                    "title": "Retrait et refus du permis d'urbanisme (lettre à la RW - direction des recours)",
                },
            ),
        },
        {
            "id": "enveloppes",
            "title": "Enveloppes",
            "deadLineDelay": 0,
            "activatedFields": (),
            "podTemplates": (
                {"id": "urb-enveloppes-dem.odt", "title": "Enveloppes demandeurs"},
                {"id": "lot-enveloppes-geo.odt", "title": "Enveloppes géomètres"},
            ),
        },
        {
            "id": "demande-irrecevable-art159",
            "title": "Demande irrecevable (article 159 bis)",
            "activatedFields": (),
            "deadLineDelay": 0,
            "podTemplates": (),
        },
        {
            "id": "recours-decision-au-conseil-etat",
            "title": "Recours du demandeur contre la décision au conseil d'état",
            "activatedFields": ("auditionDate",),
            "deadLineDelay": 0,
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
        {
            "id": "recours-decision-au-gouvernement",
            "title": "Recours du demandeur contre la décision au gouvernement",
            "activatedFields": (
                "transmitDate",
                "decisionDate",
                "decision",
            ),
            "deadLineDelay": 0,
            "podTemplates": (
                {
                    "id": "lot-recours-GW-demandeur-vs-FD.odt",
                    "title": "Recours du demandeur au GW contre décision du collège",
                },
                {
                    "id": "lot-recours-GW-ville-vs-FD.odt",
                    "title": "Recours de la ville au GW contre décision du FD",
                },
                {
                    "id": "lot-recours-GW-transmis-decision-FD-art127.odt",
                    "title": "Transmis au réclamant de la décision du FD concernant recours au GW contre art 127",
                },
                {
                    "id": "lot-recours-GW-transmis-decision-GW-PU.odt",
                    "title": "Transmis au réclamant de la décision du GW concernant recours au GW",
                },
            ),
            "eventType": ("Products.urban.interfaces.IRecourseEvent",),
        },
    ),
    "explosivespossession": (
        {
            "id": "reception-de-la-demande",
            "title": "Réception de la demande",
            "eventDateLabel": "Date de réception",
            "activatedFields": (),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDepositEvent",),
        },
        {
            "id": "enquete-publique-50",
            "title": "Enquête publique (50m)",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getClass == 'second'",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_26_enq_pub_avis_riverains_mailing.odt",
                    "title": "Avis enquête (Lettre riverains publipostable, Annexe 26)",
                    "context_variables": [
                        {
                            "name": "publipostage",
                            "value": "proprietaires_voisinage_enquete",
                        }
                    ],
                },
                {
                    "id": "codt_pu_annexe_26_affiche_jaune.odt",
                    "title": "Affiche jaune (annexe 26)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
                {
                    "id": "codt_pu_etiquettes_adresses_proprietaires.odt",
                    "title": "Etiquettes adresses propriétaires",
                    "context_variables": [
                        {
                            "name": "publipostage",
                            "value": "proprietaires_voisinage_enquete",
                        }
                    ],
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "enquete-publique-100",
            "title": "Enquête publique (100m)",
            "activatedFields": (
                "investigationStart",
                "investigationEnd",
                "claimsDate",
                "claimEndSDate",
                "explanationStartSDate",
                "explanationEndSDate",
                "claimsText",
            ),
            "deadLineDelay": 15,
            "TALCondition": "python: here.getClass == 'first'",
            "specialFunctionName": "Rechercher les propriétaires situés dans un rayon de 50m",
            "specialFunctionUrl": "addInvestigationPO",
            "podTemplates": (
                {
                    "id": "codt_pu_annexe_26_enq_pub_avis_riverains_mailing.odt",
                    "title": "Avis enquête (Lettre riverains publipostable, Annexe 26)",
                    "context_variables": [
                        {
                            "name": "publipostage",
                            "value": "proprietaires_voisinage_enquete",
                        }
                    ],
                },
                {
                    "id": "codt_pu_annexe_26_affiche_jaune.odt",
                    "title": "Affiche jaune (annexe 26)",
                },
                {
                    "id": "codt_pu_reclamations_reimport.ods",
                    "title": "Fichier réclamants pour réimport",
                },
            ),
            "eventType": ("Products.urban.interfaces.IInquiryEvent",),
            "eventPortalType": "UrbanEventInquiry",
            "textDefaultValues": (
                {
                    "text": "\n".join(default_texts["claimsTextDefaultValue"]),
                    "fieldname": "claimsText",
                },
            ),
        },
        {
            "id": "envoi-college-provincial",
            "title": "Envoi au Collège provincial de la clôture de l’enquête et de l’avis motivé du collège",
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getClass == 'first'",
            "podTemplates": (),
        },
        {
            "id": "envoi-SPF",
            "title": "Envoi au SPF Economie pour avis",
            "activatedFields": (
                "transmitDate",
                "receiptDate",
                "receivedDocumentReference",
                "externalDecision",
            ),
            "deadLineDelay": 15,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getClass == 'second'",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IOpinionRequestEvent",),
            "eventPortalType": "UrbanEventOpinionRequest",
        },
        {
            "id": "communal-college",
            "title": "Passage au collège communal",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getClass == 'second'",
            "podTemplates": (),
        },
        {
            "id": "decision",
            "title": "Décision (octroi ou refus)",
            "activatedFields": (
                "decisionDate",
                "decision",
            ),
            "eventDateLabel": "Date de notification",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ILicenceDeliveryEvent",),
        },
        {
            "id": "affichage-decision",
            "title": "Affichage de la décision",
            "eventDateLabel": "Date d'affichage",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.IDisplayingTheDecisionEvent",),
        },
        {
            "id": "notification-decision",
            "title": "Notification décision à l'exploitant",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ILicenceNotificationEvent",),
        },
        {
            "id": "notification-governor",
            "title": "Notification décision au gouverneur de la province",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getClass == 'second'",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ILicenceNotificationEvent",),
        },
        {
            "id": "notification-royal-attorney",
            "title": "Notification décision au procureur du Roi",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getClass == 'second'",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ILicenceNotificationEvent",),
        },
        {
            "id": "notification-spf",
            "title": "Notification décision au SPF Economie",
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: here.getClass == 'second'",
            "podTemplates": (),
            "eventType": ("Products.urban.interfaces.ILicenceNotificationEvent",),
        },
    ),
    "inspection": (
        {
            "portal_type": "EventConfig",
            "id": "rapport",
            "title": "Rapport",
            "eventDateLabel": "Date de la visite",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddInspectionReportEvent(here)",
            "podTemplates": (
                {"id": "inspection_rapport1.odt", "title": "Rapport d'inspection"},
            ),
            "eventType": ("Products.urban.interfaces.IInspectionReportEvent",),
            "eventPortalType": "UrbanEventInspectionReport",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "mise-en-demeure",
            "title": "Mise en demeure",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "rappel-mise-en-demeure",
            "title": "Rappel de mise en demeure",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "dernier-rappel-mise-en-demeure",
            "title": "Dernier rappel de mise en demeure",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "reponse-au-plaignant",
            "title": "Réponse au plaignant",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "demande-informations-complementaires",
            "title": "Demande d'informations complémentaires",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "courrier-au-FD",
            "title": "Courrier d'information au FD",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "constat-de-remise-en-etat",
            "title": "Courrier de constat de remise en état",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "division-immeuble-conformite-simple",
            "title": "Division immeuble - courrier conformité simple",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "division-immeuble-conformite-college",
            "title": "Division immeuble - courrier conformité Collège",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
        {
            "portal_type": "FollowUpEventConfig",
            "id": "other",
            "title": "Autre",
            "activatedFields": (),
            "showTitle": True,
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddFollowUpEvent(here)",
            "podTemplates": (),
            "eventPortalType": "UrbanEventFollowUp",
        },
    ),
    "ticket": (
        {
            "portal_type": "EventConfig",
            "id": "rapport",
            "title": "Rapport",
            "eventDateLabel": "Date de la visite",
            "activatedFields": (),
            "isKeyEvent": True,
            "keyDates": ("eventDate",),
            "TALCondition": "python: event.mayAddInspectionReportEvent(here)",
            "podTemplates": (
                {"id": "inspection_rapport1.odt", "title": "Rapport d'inspection"},
            ),
            "eventType": ("Products.urban.interfaces.IInspectionReportEvent",),
            "eventPortalType": "UrbanEventInspectionReport",
        },
    ),
}
