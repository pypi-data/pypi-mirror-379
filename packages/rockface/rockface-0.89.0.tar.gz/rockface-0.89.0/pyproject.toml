[project]
name = "rockface"
version = "0.89.0"
authors = [
	{ name = "Adventurous Machines Ltd.", email = "support@rockface.io" },
]
description = "Python library for the Rockface API"
readme = "README.md"
keywords = ["rockface", "acceptance-test", "electronics", "firmware", "bdd"]
classifiers = [
	"Intended Audience :: Developers",
	"Development Status :: 5 - Production/Stable",
	"License :: OSI Approved :: MIT License",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Topic :: Software Development :: Testing :: Acceptance",
	"Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
	"requests >= 2.31.0",
	"urllib3 >= 2.0.2",
	"pydantic ~= 2.11",
	"polars ~=1.31",
	"zstandard >= 0.21.0",
]
requires-python = ">=3.10"

[project.urls]
homepage = "https://rockface.io"
documentation = "https://docs.rockface.io/"


[project.optional-dependencies]
test = [
	"pytest ~=8.4",
	"pytest-mypy ~=1.0",
	"types-requests ~= 2.27",
	"requests-mock ==1.12.1",
]

[tool.setuptools.packages.find]
include = ["rockface*"]

[tool.setuptools.package-data]
"rockface" = ["py.typed"]

[build-system]
requires = ["setuptools~=76.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
# Enable all pyflake checks, errors, warnings, and checks
lint.select = [
	"F",
	"E",
	"W",
	"C",

	# Prohibit use of 'print' and 'pprint'
	"T",

	# pylint errors and warnings
	"PLE",
	"PLW",
	"PLR",

	# ruff-specific checks
	"RUF",
]

lint.ignore = [
	# Never enforce `E501` (line length violations)
	# black generally does what we need for that
	"E501",

	# Allow too many arguments to functions
	"PLR0913",

	# Allow magic values
	"PLR2004",
]
