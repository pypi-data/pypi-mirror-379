[project]
name = "day2"
version = "0.2.8"
description = "MontyCloud DAY2 SDK for Python"
readme = "README.md"
requires-python = ">=3.11"
authors = [{name = "MontyCloud", email = "info@montycloud.com"}]
dependencies = [
    "requests>=2.31.0",
    "pydantic>=2.5.0",
    "typing-extensions>=4.8.0",
    "tenacity>=8.2.3",
    "jsonschema>=4.19.0",
    "click>=8.1.7",
    "rich>=13.5.2",
    "typer>=0.9.0",
]

[tool.setuptools.packages.find]
include = ["day2*", "day2_cli*"]

[project.scripts]
day2 = "day2_cli.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "pylint>=2.17.5",
    "mypy>=1.5.1",
    "pre-commit>=3.3.3",
    "twine>=4.0.2",
    "build>=1.0.3",
    "types-requests>=2.31.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-autorefs>=0.5.0",
    "mkdocstrings>=0.22.0",
    "mkdocstrings-python>=1.7.0",
]
cli = [
    "click>=8.1.7",
    "rich>=13.5.2",
    "typer>=0.9.0",
]

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv]
# Note: This project requires uv to be installed globally
# See DEVELOPER.md for installation instructions
# Minimum version to ensure lock file compatibility
required-version = ">=0.7.0"

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["rich.*"]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "cli: marks tests as CLI tests",
]

[tool.coverage.run]
source = ["day2", "day2_cli"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/docs/*",
    "*/build/*",
    "*/dist/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = "coverage_html_report"
