name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    timeout-minutes: 15

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "0.7.12"

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        uv python install ${{ matrix.python-version }}
        uv python list
        uv python find ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --group dev
        uv run python -c "import sys; print(f'Python {sys.version}')"
        uv run python -c "import dococtopy; print('DocOctopy imported successfully')"

    - name: Run linting
      run: |
        uv run black --check src/ tests/
        uv run isort --check-only src/ tests/
        uv run mypy src/

    - name: Run tests with coverage
      run: uv run pytest --cov=src/dococtopy --cov-report=term-missing --cov-report=html tests/

  build:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "0.7.12"

    - name: Build package
      run: uv build -o dist

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
