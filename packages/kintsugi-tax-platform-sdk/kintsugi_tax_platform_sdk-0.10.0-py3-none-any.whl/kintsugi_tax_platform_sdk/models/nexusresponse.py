"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .countrycodeenum import CountryCodeEnum
from .currencyenum import CurrencyEnum
from .nexusstateenum import NexusStateEnum
from .nexusstatusenum import NexusStatusEnum
from .nexustypeenum import NexusTypeEnum
from .periodmodelenum import PeriodModelEnum
from .registrationsregimeenum import RegistrationsRegimeEnum
from .salesortransactionsenum import SalesOrTransactionsEnum
from .treatmentenum import TreatmentEnum
from datetime import date, datetime
from kintsugi_tax_platform_sdk.types import BaseModel
from kintsugi_tax_platform_sdk.utils import parse_datetime
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RegistrationTypedDict(TypedDict):
    pass


class Registration(BaseModel):
    pass


class NexusResponseTypedDict(TypedDict):
    country_code: CountryCodeEnum
    state_code: str
    state_name: str
    treatment_of_exempt_transactions: TreatmentEnum
    trigger: str
    sales_or_transactions: SalesOrTransactionsEnum
    threshold_sales: int
    threshold_transactions: int
    start_date: date
    period_model: PeriodModelEnum
    period_start_date: date
    period_end_date: date
    previous_period_start_date: str
    previous_period_end_date: str
    id: str
    created_at: datetime
    updated_at: datetime
    organization_id: str
    is_vda_eligible: bool
    nexus_type: NexusTypeEnum
    total_transactions: int
    total_transactions_included: int
    total_transactions_exempted: int
    total_transactions_marketplace: int
    marketplace_included: bool
    processing_status: NotRequired[NexusStatusEnum]
    status: NotRequired[NexusStateEnum]
    transaction_count: NotRequired[int]
    transactions_amount: NotRequired[str]
    previous_transaction_count: NotRequired[int]
    r"""Deprecated: transaction_count now includes both current and previous period values when period_model is CURRENT_OR_PREVIOUS"""
    previous_transactions_amount: NotRequired[str]
    r"""Deprecated: transactions_amount now includes both current and previous period values when period_model is CURRENT_OR_PREVIOUS"""
    calculated_tax_liability: NotRequired[str]
    imported_tax_liability: NotRequired[str]
    tax_liability: NotRequired[str]
    nexus_met: NotRequired[bool]
    nexus_met_date: NotRequired[str]
    economic_nexus_met: NotRequired[bool]
    economic_nexus_met_date: NotRequired[str]
    physical_nexus_met: NotRequired[bool]
    physical_nexus_met_date: NotRequired[str]
    collected_tax_nexus_met: NotRequired[bool]
    collected_tax_nexus_met_date: NotRequired[str]
    earliest_transaction_date: NotRequired[str]
    most_recent_transaction_date: NotRequired[str]
    earliest_collected_date: NotRequired[datetime]
    predicted_month_from_today: NotRequired[int]
    vda_eligible: NotRequired[bool]
    confidence_level: NotRequired[float]
    last_processed_at: NotRequired[str]
    last_tax_liability_processed_at: NotRequired[str]
    periods: NotRequired[List[Dict[str, Any]]]
    currency: NotRequired[CurrencyEnum]
    registration: NotRequired[RegistrationTypedDict]
    registration_regime: NotRequired[RegistrationsRegimeEnum]


class NexusResponse(BaseModel):
    country_code: CountryCodeEnum

    state_code: str

    state_name: str

    treatment_of_exempt_transactions: TreatmentEnum

    trigger: str

    sales_or_transactions: SalesOrTransactionsEnum

    threshold_sales: int

    threshold_transactions: int

    start_date: date

    period_model: PeriodModelEnum

    period_start_date: date

    period_end_date: date

    previous_period_start_date: str

    previous_period_end_date: str

    id: str

    created_at: datetime

    updated_at: datetime

    organization_id: str

    is_vda_eligible: bool

    nexus_type: NexusTypeEnum

    total_transactions: int

    total_transactions_included: int

    total_transactions_exempted: int

    total_transactions_marketplace: int

    marketplace_included: bool

    processing_status: Optional[NexusStatusEnum] = None

    status: Optional[NexusStateEnum] = None

    transaction_count: Optional[int] = 0

    transactions_amount: Optional[str] = "0.00"

    previous_transaction_count: Annotated[
        Optional[int],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ] = 0
    r"""Deprecated: transaction_count now includes both current and previous period values when period_model is CURRENT_OR_PREVIOUS"""

    previous_transactions_amount: Annotated[
        Optional[str],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ] = "0.00"
    r"""Deprecated: transactions_amount now includes both current and previous period values when period_model is CURRENT_OR_PREVIOUS"""

    calculated_tax_liability: Optional[str] = "0.00"

    imported_tax_liability: Optional[str] = "0.00"

    tax_liability: Optional[str] = "0.00"

    nexus_met: Optional[bool] = False

    nexus_met_date: Optional[str] = None

    economic_nexus_met: Optional[bool] = False

    economic_nexus_met_date: Optional[str] = None

    physical_nexus_met: Optional[bool] = False

    physical_nexus_met_date: Optional[str] = None

    collected_tax_nexus_met: Optional[bool] = False

    collected_tax_nexus_met_date: Optional[str] = None

    earliest_transaction_date: Optional[str] = None

    most_recent_transaction_date: Optional[str] = None

    earliest_collected_date: Optional[datetime] = parse_datetime("2018-01-01T00:00:00")

    predicted_month_from_today: Optional[int] = None

    vda_eligible: Optional[bool] = False

    confidence_level: Optional[float] = None

    last_processed_at: Optional[str] = None

    last_tax_liability_processed_at: Optional[str] = None

    periods: Optional[List[Dict[str, Any]]] = None

    currency: Optional[CurrencyEnum] = None

    registration: Optional[Registration] = None

    registration_regime: Optional[RegistrationsRegimeEnum] = None
