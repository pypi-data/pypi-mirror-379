"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from kintsugi_tax_platform_sdk.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ValidationAddressTypedDict(TypedDict):
    line1: NotRequired[str]
    r"""Primary address line, such as street name and number"""
    line2: NotRequired[str]
    r"""Additional address details, such as an apartment or suite number"""
    line3: NotRequired[str]
    r"""Additional address details for complex addresses"""
    city: NotRequired[str]
    r"""The city or town name for the address"""
    state: NotRequired[str]
    r"""State, province, or region of the address"""
    country: NotRequired[str]
    r"""Country code in ISO 3166-1 alpha-2 format (e.g., 'US' for the United States).
    Defaults to 'US'.
    should not be empty. Not validating here as the validation
    structure can be different for different providers
    """
    postal_code: NotRequired[str]
    r"""ZIP or postal code for the address. Can be empty for some locales.
    Not validating here as the validation structure can be different for different providers
    """
    id: NotRequired[int]
    r"""Unique identifier for the request, if applicable"""
    county: NotRequired[str]
    r"""County or district name for the address"""
    full_address: NotRequired[str]
    r"""A complete address string that can be used as an alternative to providing individual fields."""


class ValidationAddress(BaseModel):
    line1: Optional[str] = None
    r"""Primary address line, such as street name and number"""

    line2: Optional[str] = None
    r"""Additional address details, such as an apartment or suite number"""

    line3: Optional[str] = None
    r"""Additional address details for complex addresses"""

    city: Optional[str] = None
    r"""The city or town name for the address"""

    state: Optional[str] = None
    r"""State, province, or region of the address"""

    country: Optional[str] = "US"
    r"""Country code in ISO 3166-1 alpha-2 format (e.g., 'US' for the United States).
    Defaults to 'US'.
    should not be empty. Not validating here as the validation
    structure can be different for different providers
    """

    postal_code: Annotated[Optional[str], pydantic.Field(alias="postalCode")] = ""
    r"""ZIP or postal code for the address. Can be empty for some locales.
    Not validating here as the validation structure can be different for different providers
    """

    id: Optional[int] = None
    r"""Unique identifier for the request, if applicable"""

    county: Optional[str] = None
    r"""County or district name for the address"""

    full_address: Optional[str] = None
    r"""A complete address string that can be used as an alternative to providing individual fields."""
