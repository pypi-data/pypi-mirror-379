"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .countrycodeenum import CountryCodeEnum
from .currencyenum import CurrencyEnum
from .customerbasebase import CustomerBaseBase, CustomerBaseBaseTypedDict
from .exemption import Exemption, ExemptionTypedDict
from .exemptionrequired import ExemptionRequired, ExemptionRequiredTypedDict
from .sourceenum import SourceEnum
from .taxliabilitysourceenum import TaxLiabilitySourceEnum
from .transactionaddresspublic import (
    TransactionAddressPublic,
    TransactionAddressPublicTypedDict,
)
from .transactionexemptstatusenum import TransactionExemptStatusEnum
from .transactionitembuilder import (
    TransactionItemBuilder,
    TransactionItemBuilderTypedDict,
)
from .transactionrefundstatus import TransactionRefundStatus
from .transactionstatusenum import TransactionStatusEnum
from .transactiontypeenum import TransactionTypeEnum
from datetime import datetime
from kintsugi_tax_platform_sdk.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TransactionPublicRequestTypedDict(TypedDict):
    organization_id: str
    r"""Unique identifier of the organization."""
    external_id: str
    r"""External identifier of the transaction."""
    date_: datetime
    r"""Transaction date and time"""
    addresses: List[TransactionAddressPublicTypedDict]
    transaction_items: List[TransactionItemBuilderTypedDict]
    customer: CustomerBaseBaseTypedDict
    type: TransactionTypeEnum
    requires_exemption: NotRequired[ExemptionRequiredTypedDict]
    shop_date: NotRequired[str]
    r"""Transaction date in the shop's local timezone"""
    shop_date_tz: NotRequired[str]
    r"""Timezone of the shop"""
    status: NotRequired[TransactionStatusEnum]
    description: NotRequired[str]
    r"""Description of the transaction."""
    refund_status: NotRequired[TransactionRefundStatus]
    r"""Shopify has 2 order statuses for refund case: refunded and partially_refunded
    If the given order has different status from these 2, we will set the
    transaction's refund_status to PARTIALLY_REFUNDED by default.
    """
    total_amount: NotRequired[float]
    r"""Total amount of the transaction."""
    customer_id: NotRequired[str]
    r"""Unique identifier of the customer."""
    marketplace: NotRequired[bool]
    r"""Indicates if transaction is marketplace-based."""
    exempt: NotRequired[TransactionExemptStatusEnum]
    r"""Based on transaction item exempt status.
    NOT EXEMPT: None of the items are NOT EXEMPT
    PARTIALLY EXEMPT: At least some of the items are NOT EXEMPT
    FULLY_EXEMPT: All items sold in the transaction are EXEMPT
    """
    exemptions: NotRequired[List[ExemptionTypedDict]]
    r"""List of exemptions applied (if any)."""
    related_to: NotRequired[str]
    r"""Related transaction identifier."""
    secondary_external_id: NotRequired[str]
    r"""Secondary External Identifier."""
    secondary_source: NotRequired[str]
    r"""Secondary source information"""
    external_friendly_id: NotRequired[str]
    r"""Friendly identifier of the original item."""
    total_tax_amount_imported: NotRequired[float]
    r"""Imported tax amount."""
    tax_rate_imported: NotRequired[float]
    r"""Imported tax rate."""
    total_tax_amount_calculated: NotRequired[float]
    r"""Calculated tax amount."""
    tax_rate_calculated: NotRequired[float]
    r"""Calculated tax rate."""
    total_tax_liability_amount: NotRequired[float]
    r"""Total tax liability amount."""
    tax_liability_source: NotRequired[TaxLiabilitySourceEnum]
    taxable_amount: NotRequired[float]
    r"""Taxable amount."""
    currency: NotRequired[CurrencyEnum]
    locked: NotRequired[bool]
    r"""Transaction lock status."""
    source: NotRequired[SourceEnum]
    connection_id: NotRequired[str]
    r"""Connection Identifier"""
    filing_id: NotRequired[str]
    r"""Filing identifier."""
    city: NotRequired[str]
    r"""City of the transaction address."""
    county: NotRequired[str]
    r"""County of the transaction address."""
    state: NotRequired[str]
    r"""State of the transaction address."""
    country: NotRequired[CountryCodeEnum]
    postal_code: NotRequired[str]
    r"""Postal code of the transaction."""
    tax_id: NotRequired[str]
    r"""Tax ID associated with the transaction"""


class TransactionPublicRequest(BaseModel):
    organization_id: str
    r"""Unique identifier of the organization."""

    external_id: str
    r"""External identifier of the transaction."""

    date_: Annotated[datetime, pydantic.Field(alias="date")]
    r"""Transaction date and time"""

    addresses: List[TransactionAddressPublic]

    transaction_items: List[TransactionItemBuilder]

    customer: CustomerBaseBase

    type: TransactionTypeEnum

    requires_exemption: Optional[ExemptionRequired] = None

    shop_date: Optional[str] = None
    r"""Transaction date in the shop's local timezone"""

    shop_date_tz: Optional[str] = None
    r"""Timezone of the shop"""

    status: Optional[TransactionStatusEnum] = None

    description: Optional[str] = None
    r"""Description of the transaction."""

    refund_status: Optional[TransactionRefundStatus] = None
    r"""Shopify has 2 order statuses for refund case: refunded and partially_refunded
    If the given order has different status from these 2, we will set the
    transaction's refund_status to PARTIALLY_REFUNDED by default.
    """

    total_amount: Optional[float] = 0.00
    r"""Total amount of the transaction."""

    customer_id: Optional[str] = None
    r"""Unique identifier of the customer."""

    marketplace: Optional[bool] = False
    r"""Indicates if transaction is marketplace-based."""

    exempt: Optional[TransactionExemptStatusEnum] = None
    r"""Based on transaction item exempt status.
    NOT EXEMPT: None of the items are NOT EXEMPT
    PARTIALLY EXEMPT: At least some of the items are NOT EXEMPT
    FULLY_EXEMPT: All items sold in the transaction are EXEMPT
    """

    exemptions: Optional[List[Exemption]] = None
    r"""List of exemptions applied (if any)."""

    related_to: Optional[str] = None
    r"""Related transaction identifier."""

    secondary_external_id: Optional[str] = None
    r"""Secondary External Identifier."""

    secondary_source: Optional[str] = None
    r"""Secondary source information"""

    external_friendly_id: Optional[str] = None
    r"""Friendly identifier of the original item."""

    total_tax_amount_imported: Optional[float] = 0.00
    r"""Imported tax amount."""

    tax_rate_imported: Optional[float] = 0.00
    r"""Imported tax rate."""

    total_tax_amount_calculated: Optional[float] = 0.00
    r"""Calculated tax amount."""

    tax_rate_calculated: Optional[float] = 0.00
    r"""Calculated tax rate."""

    total_tax_liability_amount: Optional[float] = 0.00
    r"""Total tax liability amount."""

    tax_liability_source: Optional[TaxLiabilitySourceEnum] = None

    taxable_amount: Optional[float] = 0.00
    r"""Taxable amount."""

    currency: Optional[CurrencyEnum] = None

    locked: Optional[bool] = False
    r"""Transaction lock status."""

    source: Optional[SourceEnum] = None

    connection_id: Optional[str] = None
    r"""Connection Identifier"""

    filing_id: Optional[str] = None
    r"""Filing identifier."""

    city: Optional[str] = None
    r"""City of the transaction address."""

    county: Optional[str] = None
    r"""County of the transaction address."""

    state: Optional[str] = None
    r"""State of the transaction address."""

    country: Optional[CountryCodeEnum] = None

    postal_code: Optional[str] = None
    r"""Postal code of the transaction."""

    tax_id: Optional[str] = None
    r"""Tax ID associated with the transaction"""
