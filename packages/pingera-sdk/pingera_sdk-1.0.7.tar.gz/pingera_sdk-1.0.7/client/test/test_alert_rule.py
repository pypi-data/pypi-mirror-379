# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.alert_rule import AlertRule

class TestAlertRule(unittest.TestCase):
    """AlertRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertRule:
        """Test AlertRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertRule`
        """
        model = AlertRule()
        if include_optional:
            return AlertRule(
                condition_parameters = {"count":3},
                auto_resolve = True,
                condition = 'check_failed',
                severity = 'high',
                enabled = True,
                cooldown_period = 600,
                name = 'Production API Down Alert',
                channel_ids = ["chn_abc123","chn_def456"],
                created_at = '2024-01-15T10:00Z',
                check_id = 'check_def456ghi789',
                updated_at = '2024-01-15T14:00Z',
                check_name = Production API Health Check,
                channels = [
                    pingera.models.alert_channel.AlertChannel(
                        configuration = {"recipients":["admin@example.com","ops@example.com"]}, 
                        last_used_at = '2024-01-15T15:30Z', 
                        enabled = True, 
                        name = 'Production Email Alerts', 
                        created_at = '2024-01-15T10:00Z', 
                        updated_at = '2024-01-15T14:00Z', 
                        type = 'email', 
                        id = 'chn_abc123def456', )
                    ],
                id = 'rule_abc123def456'
            )
        else:
            return AlertRule(
                condition = 'check_failed',
                name = 'Production API Down Alert',
                channel_ids = ["chn_abc123","chn_def456"],
                check_id = 'check_def456ghi789',
        )
        """

    def testAlertRule(self):
        """Test AlertRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
