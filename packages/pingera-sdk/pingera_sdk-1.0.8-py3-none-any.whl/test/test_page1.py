# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.page1 import Page1

class TestPage1(unittest.TestCase):
    """Page1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Page1:
        """Test Page1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Page1`
        """
        model = Page1()
        if include_optional:
            return Page1(
                css_no_data = '#6c757d',
                time_zone = 'America/New_York',
                hidden_from_search = False,
                css_reds = '#dc3545',
                ip_restrictions = '192.168.1.0/24,10.0.0.0/8',
                css_oranges = '#fd7e14',
                css_button_border_color = '#007bff',
                organization_id = 'org123abc456',
                allow_sms_subscribers = False,
                notifications_email_footer = 'You are receiving this email because you are subscribed to updates from MyCompany.',
                country = 'Russia',
                allow_page_subscribers = True,
                updated_at = '2024-01-15T14:00Z',
                allow_rss_atom_feeds = True,
                page_description = 'Real-time status and performance monitoring for MyCompany services',
                css_blues = '#007bff',
                css_button_color = '#007bff',
                transactional_logo = 'https://example.com/email-logo.png',
                css_border_color = '#dee2e6',
                css_spinner_color = '#007bff',
                company_logo = 'https://example.com/logo.png',
                language = 'ru',
                allow_incident_subscribers = True,
                allow_webhook_subscribers = True,
                css_body_background_color = '#ffffff',
                viewers_must_be_team_members = False,
                template = Modern,
                city = 'New York',
                css_button_text_color = '#ffffff',
                email_logo = 'https://example.com/email-logo.png',
                template_id = 'tpl123abc456',
                subdomain = 'mycompany',
                url = 'https://mycompany.com',
                support_url = 'https://mycompany.com/support',
                css_yellows = '#ffc107',
                css_link_color = '#007bff',
                css_button_hover_color = '#0056b3',
                state = 'NY',
                favicon_logo = 'https://example.com/favicon.ico',
                css_light_font_color = '#666666',
                notifications_from_email = 'noreply@mycompany.com',
                css_font_color = '#333333',
                id = 'abc123def456',
                css_greens = '#28a745',
                name = 'MyCompany Status',
                hero_cover = 'https://example.com/hero.jpg',
                created_at = '2024-01-15T10:00Z',
                activity_score = 85,
                domain = 'status.mycompany.com',
                css_graph_color = '#6f42c1',
                allow_email_subscribers = True,
                headline = 'Real-time status and performance monitoring for MyCompany services'
            )
        else:
            return Page1(
        )
        """

    def testPage1(self):
        """Test Page1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
