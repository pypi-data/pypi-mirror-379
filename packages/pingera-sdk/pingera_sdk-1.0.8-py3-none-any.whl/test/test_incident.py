# coding: utf-8

"""
    Pingera API

     The official API for Pingera, a monitoring and status page platform. This API allows you to manage checks, organizations, incidents, and more.   Some useful links: * [Pingera website](https://pingera.ru?utm_source=api_docs) * [API documentation](https://docs.pingera.ru/api/overview) * [Application](https://app.pingera.ru) * [Status page](https://status.pingera.ru) 

    The version of the OpenAPI document: v1
    Contact: privet@pingera.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pingera.models.incident import Incident

class TestIncident(unittest.TestCase):
    """Incident unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Incident:
        """Test Incident
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Incident`
        """
        model = Incident()
        if include_optional:
            return Incident(
                impact = 'minor',
                incident_updates = [{"id":"upd_123","body":"We have identified the issue...","status":"identified"}],
                auto_transition_deliver_notifications_at_end = True,
                auto_transition_to_operational_state = True,
                updated_at = '2024-01-15T14:30Z',
                scheduled_remind_prior = True,
                postmortem_body = ## Root Cause
The database connection pool was exhausted due to...,
                postmortem_body_last_updated_at = 2024-01-16T10:00:00Z,
                resolved_at = 2024-01-15T15:00:00Z,
                auto_transition_deliver_notifications_at_start = True,
                status = 'investigating',
                scheduled_auto_in_progress = True,
                auto_transition_to_maintenance_state = True,
                scheduled_auto_completed = True,
                body = 'We are currently investigating issues with our database connections that may affect service availability.',
                scheduled_until = '2024-01-20T04:00Z',
                postmortem_published_at = 2024-01-16T12:00:00Z,
                scheduled_reminded_at = '2024-01-19T18:00Z',
                scheduled_for = '2024-01-20T02:00Z',
                id = 'abc123def456',
                metadata = {"severity":"high","team":"backend"},
                deliver_notifications = True,
                reminder_intervals = '24h,1h',
                monitoring_at = '2024-01-15T12:00Z',
                name = 'Database Connection Issues',
                components = [{"id":"comp_123","name":"API Server","status":"degraded_performance"}],
                created_at = '2024-01-15T10:00Z',
                page_id = 'abc123def456'
            )
        else:
            return Incident(
                status = 'investigating',
                name = 'Database Connection Issues',
        )
        """

    def testIncident(self):
        """Test Incident"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
