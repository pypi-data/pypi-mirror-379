name: CI, Build and Release - GUI

on:
  push:
    branches: [ "feature/gui" ]
    tags: [ "v*gui*" ]
  pull_request:
    branches: [ "feature/gui" ]
  workflow_dispatch: {}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev libargon2-dev netcat-openbsd lcov clang-format cppcheck
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install build twine ruff pytest pytest-cov coverage argon2-cffi flet pyinstaller
      - name: Code checks
        run: |
          ruff check .
      - name: Build C binaries
        run: make all
      - name: Python build
        run: python -m build
      - name: Install built wheel
        run: pip install dist/*.whl
      - name: Run coverage (C+Python)
        run: make coverage
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ming-drlms-dist
          path: dist/*
      - name: Upload coverage html
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage/html
      - name: Build GUI PoC bins
        run: make gui_poc_bins
      - name: Pack GUI via Flet
        run: |
          pip install flet
          flet pack gui_poc/app.py \
            --add-data "gui_poc/assets=assets" \
            --add-data "gui_poc/i18n=i18n" \
            --add-binary "gui_poc/assets/bin/linux/x86_64/*:assets/bin/linux/x86_64"
      - name: Upload GUI pack artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gui-poc-bundle
          path: dist/*

  publish-to-testpypi:
    if: github.ref == 'refs/heads/feature/gui'
    needs: build-and-test
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ming-drlms-dist
          path: dist
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-test
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ming-drlms-dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ming-drlms-dist
          path: dist
      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
