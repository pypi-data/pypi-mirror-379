[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "configuronic"
version = "0.2.3"
description = "Simple yet powerful \"Configuration as Code\" library"
readme = "README.md"
license = {file = "LICENSE.md"}
authors = [
    {name = "Positronic Robotics", email = "hi@positronic.ro"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
keywords = ["configuration", "config", "dependency-injection", "yaml"]
requires-python = ">=3.10"
dependencies = [
    "PyYAML",
    "fire"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "ruff",
    "numpy",  # for examples
    "ipython",  # for tests
]

[project.urls]
Homepage = "https://github.com/Positronic-Robotics/configuronic"
Repository = "https://github.com/Positronic-Robotics/configuronic"
Issues = "https://github.com/Positronic-Robotics/configuronic/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["configuronic*"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true
preview = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=configuronic",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.coverage.run]
source = ["configuronic"]
branch = true
omit = [
    "tests/*",
    "*/tests/*",
    "test_*.py",
    "*_test.py",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if False:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
