# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build Validation

on:
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --show-source --statistics --exit-zero
    - name: Pytest unit tests
      run: |
        pytest -m "not e2e" --verbose
    # Sidecar for running e2e tests requires Go SDK
    - name: Install Go SDK
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'
    # Install and run the durabletask-go sidecar for running e2e tests
    - name: Pytest e2e tests
      run: |
        go install github.com/dapr/durabletask-go@main
        durabletask-go --port 4001 &
        pytest -m "e2e" --verbose
  publish:
    needs: build
    if: startswith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: "__token__"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build
      - name: Build and publish Dapr Python SDK
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_PASS }}
        run: |
          python -m build
          twine upload dist/*