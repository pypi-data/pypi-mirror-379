[project]
name = "brock"
description = "Brock"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "build",
    "docker",
    "toolchain",
]
authors = [
   { name = "Bender Robotics s.r.o",  email = "opensource@benderrobotics.com" },
]

requires-python = ">=3.8"

dynamic = ["version"]

classifiers=[
    'Intended Audience :: Developers',
    'Development Status :: 4 - Beta',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Software Development',
    'Topic :: Software Development :: Build Tools',
    'Topic :: Software Development :: Embedded Systems',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'License :: OSI Approved :: MIT License',
]

dependencies = [
    'markupsafe==2.0.1',
    'colorama>=0.4.1',
    'click>=7.1.2',
    'hiyapyco~=0.7.0',
    'schema',
    'setuptools_scm>=7.0.0',
    'munch',
    'fabric',
    'docker>=7.1.0',
    'sentry-sdk~=1.39',
]

[project.urls]
Homepage = "https://www.benderrobotics.com"
Repository = "https://github.com/BenderRobotics/brock.git"
Issues = "https://github.com/BenderRobotics/brock/issues"

[project.optional-dependencies]
test = [
    'pytest',
    'pytest-cov'
]

[project.scripts]
brock = "brock.cli.main:main"

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]

[tool.setuptools_scm]
write_to = "src/brock/__version__.py"
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"
root = "."

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
addopts = "--cov=src/brock --cov-report xml --cov-report term"
testpaths = "./tests"

[tool.mypy]
ignore_missing_imports = true
