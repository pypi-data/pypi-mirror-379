[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "free-fermion-lib"
version = "1.1.0"
authors = [
    {name = "James D. Whitfield", email = "James.D.Whitfield@dartmouth.edu"},
]
description = "A comprehensive Python library for free fermion systems"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "quantum physics",
    "free fermions",
    "combinatorics",
    "graph theory",
    "pfaffian",
    "quantum computing",
    "linear algebra",
    "symplectic",
]
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "networkx>=2.6.0",
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
]

[project.urls]
Homepage = "https://github.com/jdwhitfield/free-fermion-lib"
Documentation = "https://free-fermion-lib.readthedocs.io/"
Repository = "https://github.com/jdwhitfield/free-fermion-lib"
"Bug Reports" = "https://github.com/jdwhitfield/free-fermion-lib/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.isort]  
skip = ["__init__.py"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers -m 'not slow'"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]


[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
    "networkx.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__","build","dist",".eggs","*.egg-info",".venv",".tox"]
per-file-ignores = ['__init__.py:F405,F403']
