# coding: utf-8

"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import pydantic_core
from datetime import datetime
import freeclimb
from freeclimb import *
from freeclimb.models.create_conference import CreateConference


class TestCreateConference(unittest.TestCase):
    """CreateConference unit test stubs"""

    def setUp(self):
        self.model = CreateConference(
            action_url="TS",
        )

    def test_action_url(self):
        """Test CreateConference.action_url"""
        self.model.action_url = "TEST_STRING"
        assert self.model.action_url == "TEST_STRING"

    def test_alias(self):
        """Test CreateConference.alias"""

        self.model.alias = "TEST_STRING"
        assert self.model.alias == "TEST_STRING"

    def test_play_beep(self):
        """Test CreateConference.play_beep"""
        self.model.play_beep = PlayBeep.ALWAYS
        assert self.model.play_beep == PlayBeep.ALWAYS
        self.model.play_beep = PlayBeep.NEVER
        assert self.model.play_beep == PlayBeep.NEVER
        self.model.play_beep = PlayBeep.ENTRY_ONLY
        assert self.model.play_beep == PlayBeep.ENTRY_ONLY
        self.model.play_beep = PlayBeep.EXIT_ONLY
        assert self.model.play_beep == PlayBeep.EXIT_ONLY

    def test_record(self):
        """Test CreateConference.record"""
        self.model.record = False
        assert self.model.record == False

    def test_status_callback_url(self):
        """Test CreateConference.status_callback_url"""
        self.model.status_callback_url = "TEST_STRING"
        assert self.model.status_callback_url == "TEST_STRING"

    def test_wait_url(self):
        """Test CreateConference.wait_url"""
        self.model.wait_url = "TEST_STRING"
        assert self.model.wait_url == "TEST_STRING"

    def test_parent_call_id(self):
        """Test CreateConference.parent_call_id"""

        self.model.parent_call_id = "TEST_STRING"
        assert self.model.parent_call_id == "TEST_STRING"


if __name__ == "__main__":
    unittest.main()
