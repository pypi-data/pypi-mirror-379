# coding: utf-8

"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import pydantic_core
from datetime import datetime
import freeclimb
from freeclimb import *
from freeclimb.models.log_result import LogResult


class TestLogResult(unittest.TestCase):
    """LogResult unit test stubs"""

    def setUp(self):
        self.model = LogResult()

    def test_timestamp(self):
        """Test LogResult.timestamp"""
        self.model.timestamp = 1
        assert self.model.timestamp == 1

    def test_level(self):
        """Test LogResult.level"""
        self.model.level = LogLevel.INFO
        assert self.model.level == LogLevel.INFO
        self.model.level = LogLevel.WARNING
        assert self.model.level == LogLevel.WARNING
        self.model.level = LogLevel.ERROR
        assert self.model.level == LogLevel.ERROR

    def test_request_id(self):
        """Test LogResult.request_id"""

        self.model.request_id = "TEST_STRING"
        assert self.model.request_id == "TEST_STRING"

    def test_account_id(self):
        """Test LogResult.account_id"""

        self.model.account_id = "TEST_STRING"
        assert self.model.account_id == "TEST_STRING"

    def test_call_id(self):
        """Test LogResult.call_id"""

        self.model.call_id = "TEST_STRING"
        assert self.model.call_id == "TEST_STRING"

    def test_message(self):
        """Test LogResult.message"""

        self.model.message = "TEST_STRING"
        assert self.model.message == "TEST_STRING"

    def test_metadata(self):
        """Test LogResult.metadata"""
        object = {}
        self.model.metadata = object
        assert self.model.metadata == object


if __name__ == "__main__":
    unittest.main()
