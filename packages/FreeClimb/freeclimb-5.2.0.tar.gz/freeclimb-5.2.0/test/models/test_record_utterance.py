# coding: utf-8

"""
    FreeClimb API

    FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.

    The version of the OpenAPI document: 1.0.0
    Contact: support@freeclimb.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import pydantic_core
from datetime import datetime
import freeclimb
from freeclimb import *
from freeclimb.models.record_utterance import RecordUtterance


class TestRecordUtterance(unittest.TestCase):
    """RecordUtterance unit test stubs"""

    def setUp(self):
        self.model = RecordUtterance(
            action_url="TS",
        )

    def test_action_url(self):
        """Test RecordUtterance.action_url"""
        self.model.action_url = "TEST_STRING"
        assert self.model.action_url == "TEST_STRING"

    def test_silence_timeout_ms(self):
        """Test RecordUtterance.silence_timeout_ms"""
        self.model.silence_timeout_ms = 1
        assert self.model.silence_timeout_ms == 1

    def test_finish_on_key(self):
        """Test RecordUtterance.finish_on_key"""

        self.model.finish_on_key = "TEST_STRING"
        assert self.model.finish_on_key == "TEST_STRING"

    def test_max_length_sec(self):
        """Test RecordUtterance.max_length_sec"""
        self.model.max_length_sec = 1
        assert self.model.max_length_sec == 1

    def test_play_beep(self):
        """Test RecordUtterance.play_beep"""
        self.model.play_beep = False
        assert self.model.play_beep == False

    def test_auto_start(self):
        """Test RecordUtterance.auto_start"""
        self.model.auto_start = False
        assert self.model.auto_start == False

    def test_privacy_mode(self):
        """Test RecordUtterance.privacy_mode"""
        self.model.privacy_mode = False
        assert self.model.privacy_mode == False


if __name__ == "__main__":
    unittest.main()
