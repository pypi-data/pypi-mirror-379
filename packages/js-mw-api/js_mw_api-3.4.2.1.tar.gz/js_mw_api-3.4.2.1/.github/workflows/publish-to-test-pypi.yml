name: Publish Python üêç distribution üì¶ to PyPI

on:
  # push:
  workflow_dispatch:

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'  # only publish to PyPI on tag pushes or manual runs
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/js_mw_api  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

##################################################################################################################
###################################     Signing Distrubution     #################################################

# If a release isn't defined, the above will create a release with a name & tag matching the repo name.
# This creates an issue as the release name, tag name, and branch name are all the same.
# Tag name cannot be same as branch name. Causes error until tag & release deleted.
# Tag needs to be deleted from repo and all offline copies before it will sync again. Really annoying.
# To avoid this, create a release and specify a new tag for the release before publishing.

# Howver, as the release is already defined, now the below hits an error as it's trying to create a release
# with the same name as the one it just used above to publish. idk who wrote this but it's super dumb and 
# hella annoying. Just commenting it out.
# Side effect is now the distribution files aren't returned to GitHub after publish. ü§∑‚Äç‚ôÇÔ∏è

  # github-release:
  #   name: >-
  #     Sign the Python üêç distribution üì¶ with Sigstore
  #     and upload them to GitHub Release
  #   needs:
  #   - publish-to-pypi
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: write  # IMPORTANT: mandatory for making GitHub Releases
  #     id-token: write  # IMPORTANT: mandatory for sigstore

  #   steps:
  #   - name: Download all the dists
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: python-package-distributions
  #       path: dist/
  #   - name: Sign the dists with Sigstore
  #     uses: sigstore/gh-action-sigstore-python@v3.0.0
  #     with:
  #       inputs: >-
  #         ./dist/*.tar.gz
  #         ./dist/*.whl
  #   - name: Create GitHub Release
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  #     run: >-
  #       gh release create
  #       "$GITHUB_REF_NAME"
  #       --repo "$GITHUB_REPOSITORY"
  #       --notes ""
  #   - name: Upload artifact signatures to GitHub Release
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  #     # Upload to GitHub Release using the `gh` CLI.
  #     # `dist/` contains the built packages, and the
  #     # sigstore-produced signatures and certificates.
  #     run: >-
  #       gh release upload
  #       "$GITHUB_REF_NAME" dist/**
  #       --repo "$GITHUB_REPOSITORY"

##################################################################################################################
###################################    Publishing to TestPypi    #################################################

  # publish-to-testpypi:
  #   name: Publish Python üêç distribution üì¶ to TestPyPI
  #   needs:
  #   - build
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/js_mw_api

  #   permissions:
  #     id-token: write  # IMPORTANT: mandatory for trusted publishing

  #   steps:
  #   - name: Download all the dists
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: python-package-distributions
  #       path: dist/
  #   - name: Publish distribution üì¶ to TestPyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       repository-url: https://test.pypi.org/legacy/
