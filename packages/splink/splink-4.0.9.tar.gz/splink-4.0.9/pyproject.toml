[tool.poetry]
name = "splink"
version = "4.0.9"
description = "Fast probabilistic data linkage at scale"
authors = ["Robin Linacre <robinlinacre@hotmail.com>", "Sam Lindsay", "Theodore Manassis", "Tom Hepworth", "Andy Bond", "Ross Kennedy"]
license = "MIT"
homepage = "https://github.com/moj-analytical-services/splink"
repository = "https://github.com/moj-analytical-services/splink"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8.0,<4.0.0"
jsonschema = ">=3.2"
# 1.3.5 is the last version supporting py 3.7.1
pandas = [
     { version = ">1.3.5", python = "<3.13" },
     { version = ">=2.2.3", python = ">=3.13" }
]
duckdb = ">=0.9.2"
sqlglot = ">=13.0.0"
# altair 5.5.0 is first with python 3.13 support
altair = [
    {version = ">=5.0.1", python = "<3.13"},
    {version = ">=5.5.0", python = ">=3.13"},
]
Jinja2 = ">=3.0.3"

# need to manually specify numpy versions suitable for CI
# 1.24.4 works with python 3.8, but not 3.12
numpy = [
    # version is minimum valid with above listed pandas version
    {version=">=1.17.3", python = "<3.12"},
    {version=">=1.26.0", python = ">=3.12"},
]


# Optional installs
# python >=3.12 requires pyspark >=4.0.0 - currently unreleased
pyspark = {version=">=3.2.1", optional=true}

awswrangler = [
    {version=">=3.0.0,<4.0.0", python = ">=3.8", optional=true}
]

psycopg2-binary = {version=">=2.8.0", optional=true}

# for graph metrics
igraph = ">=0.11.2"

[tool.poetry.group.dev]
[tool.poetry.group.dev.dependencies]
tabulate = ">=0.8.9"
pyspark = ">=3.2.1"
sqlalchemy = ">=1.4.0"
# temporarily use binary version, to avoid issues with pg_config path
psycopg2-binary = ">=2.8.0"
igraph = ">=0.11.2"
# 2.2.2 is first version that supports numpy >= 2.0.0
# if we don't constrain this, we can end up with numpy >= 2.0.0 and pandas < 2.2.2
# particularly in pythons 3.10 and 3.11
pandas = [
   {version= ">1.3.5", python = ">=3.8"},
   {version=">=2.2.2", python = ">=3.10"},
]

[tool.poetry.group.linting]
[tool.poetry.group.linting.dependencies]
ruff = "^0.4.2"

[tool.poetry.group.testing]
[tool.poetry.group.testing.dependencies]
# pin to reduce dependencies
pytest = ">=7.3"
# python 3.13 needs at least pyarrow 18.0.0
pyarrow = [
    { version = ">=7.0.0", python = "<3.13" },
    { version = ">=18.0.0", python = ">=3.13" }
]
networkx = ">=2.5.1"
rapidfuzz = ">=2.0.3"

[tool.poetry.group.typechecking]
optional = true
[tool.poetry.group.typechecking.dependencies]
mypy = "1.9.0"

[tool.poetry.extras]
pyspark = ["pyspark"]
spark = ["pyspark"]
athena = ["awswrangler"]
postgres = ["sqlalchemy", "psycopg2-binary"]

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 88
lint.select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001",
    # bugbear
    "B",
    # flake8-print
    "T20"
]
lint.ignore = [
    "B905", # `zip()` without an explicit `strict=` parameter
    "B006", # Do not use mutable data structures for argument defaults"
]

[tool.pytest.ini_options]
addopts = ["-m default"]
markers = [
# only tests where backend is irrelevant:
    "core",
# see tests/decorator.py::dialect_groups for group details:
    "default",
    "all",
# backend-specific sets
    "duckdb",
    "duckdb_only",
    "spark",
    "spark_only",
    "sqlite",
    "sqlite_only",
    "postgres",
    "postgres_only",
]

[tool.mypy]
python_version = "3.10"
packages = "splink"
# for now at least allow implicit optionals
# to cut down on noise. Easy to fix.
implicit_optional = true
# for now, ignore missing imports
# can remove later and install stubs, where existent
ignore_missing_imports = true

# options for strict mode
# too much to handle at once, so opt-in a little at a time
# https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
# don't worry about warning: https://github.com/python/mypy/issues/16189
strict_concatenate = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true
# further strict checks to add in:
# disallow_untyped_calls = true
disallow_incomplete_defs = true
# disallow_untyped_defs = true
