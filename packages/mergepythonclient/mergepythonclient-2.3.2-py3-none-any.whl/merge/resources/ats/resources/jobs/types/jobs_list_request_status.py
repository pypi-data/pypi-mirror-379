# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class JobsListRequestStatus(str, enum.Enum):
    ARCHIVED = "ARCHIVED"
    CLOSED = "CLOSED"
    DRAFT = "DRAFT"
    OPEN = "OPEN"
    PENDING = "PENDING"

    def visit(
        self,
        archived: typing.Callable[[], T_Result],
        closed: typing.Callable[[], T_Result],
        draft: typing.Callable[[], T_Result],
        open: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is JobsListRequestStatus.ARCHIVED:
            return archived()
        if self is JobsListRequestStatus.CLOSED:
            return closed()
        if self is JobsListRequestStatus.DRAFT:
            return draft()
        if self is JobsListRequestStatus.OPEN:
            return open()
        if self is JobsListRequestStatus.PENDING:
            return pending()
