# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ScorecardsListRequestExpand(str, enum.Enum):
    APPLICATION = "application"
    APPLICATION_INTERVIEW = "application,interview"
    APPLICATION_INTERVIEW_INTERVIEWER = "application,interview,interviewer"
    APPLICATION_INTERVIEWER = "application,interviewer"
    INTERVIEW = "interview"
    INTERVIEW_INTERVIEWER = "interview,interviewer"
    INTERVIEWER = "interviewer"

    def visit(
        self,
        application: typing.Callable[[], T_Result],
        application_interview: typing.Callable[[], T_Result],
        application_interview_interviewer: typing.Callable[[], T_Result],
        application_interviewer: typing.Callable[[], T_Result],
        interview: typing.Callable[[], T_Result],
        interview_interviewer: typing.Callable[[], T_Result],
        interviewer: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ScorecardsListRequestExpand.APPLICATION:
            return application()
        if self is ScorecardsListRequestExpand.APPLICATION_INTERVIEW:
            return application_interview()
        if self is ScorecardsListRequestExpand.APPLICATION_INTERVIEW_INTERVIEWER:
            return application_interview_interviewer()
        if self is ScorecardsListRequestExpand.APPLICATION_INTERVIEWER:
            return application_interviewer()
        if self is ScorecardsListRequestExpand.INTERVIEW:
            return interview()
        if self is ScorecardsListRequestExpand.INTERVIEW_INTERVIEWER:
            return interview_interviewer()
        if self is ScorecardsListRequestExpand.INTERVIEWER:
            return interviewer()
