# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CommentsListRequestExpand(str, enum.Enum):
    CONTACT = "contact"
    CONTACT_TICKET = "contact,ticket"
    TICKET = "ticket"
    USER = "user"
    USER_CONTACT = "user,contact"
    USER_CONTACT_TICKET = "user,contact,ticket"
    USER_TICKET = "user,ticket"

    def visit(
        self,
        contact: typing.Callable[[], T_Result],
        contact_ticket: typing.Callable[[], T_Result],
        ticket: typing.Callable[[], T_Result],
        user: typing.Callable[[], T_Result],
        user_contact: typing.Callable[[], T_Result],
        user_contact_ticket: typing.Callable[[], T_Result],
        user_ticket: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CommentsListRequestExpand.CONTACT:
            return contact()
        if self is CommentsListRequestExpand.CONTACT_TICKET:
            return contact_ticket()
        if self is CommentsListRequestExpand.TICKET:
            return ticket()
        if self is CommentsListRequestExpand.USER:
            return user()
        if self is CommentsListRequestExpand.USER_CONTACT:
            return user_contact()
        if self is CommentsListRequestExpand.USER_CONTACT_TICKET:
            return user_contact_ticket()
        if self is CommentsListRequestExpand.USER_TICKET:
            return user_ticket()
