# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OpportunitiesRetrieveRequestExpand(str, enum.Enum):
    ACCOUNT = "account"
    OWNER = "owner"
    OWNER_ACCOUNT = "owner,account"
    OWNER_STAGE = "owner,stage"
    OWNER_STAGE_ACCOUNT = "owner,stage,account"
    STAGE = "stage"
    STAGE_ACCOUNT = "stage,account"

    def visit(
        self,
        account: typing.Callable[[], T_Result],
        owner: typing.Callable[[], T_Result],
        owner_account: typing.Callable[[], T_Result],
        owner_stage: typing.Callable[[], T_Result],
        owner_stage_account: typing.Callable[[], T_Result],
        stage: typing.Callable[[], T_Result],
        stage_account: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OpportunitiesRetrieveRequestExpand.ACCOUNT:
            return account()
        if self is OpportunitiesRetrieveRequestExpand.OWNER:
            return owner()
        if self is OpportunitiesRetrieveRequestExpand.OWNER_ACCOUNT:
            return owner_account()
        if self is OpportunitiesRetrieveRequestExpand.OWNER_STAGE:
            return owner_stage()
        if self is OpportunitiesRetrieveRequestExpand.OWNER_STAGE_ACCOUNT:
            return owner_stage_account()
        if self is OpportunitiesRetrieveRequestExpand.STAGE:
            return stage()
        if self is OpportunitiesRetrieveRequestExpand.STAGE_ACCOUNT:
            return stage_account()
