[tool.poetry]
name = "neops_remote_lab"
version = "1.0.1"
description = "FastAPI-based Remote Lab Manager for Netlab topologies to enable remote testing of Neops Function Blocks against virtual networking labs"
authors = ["zebbra AG"]
readme = "README.md"
license = "Proprietary"
keywords = [
    "neops",
    "networking",
    "netlab",
    "remote",
    "lab",
    "fastapi",
    "pytest",
]

# Ensure non-Python assets ship with the package (wheel + sdist)
include = [
    "neops_remote_lab/logging_config.yaml",
    "neops_remote_lab/py.typed",
]

[tool.poetry.dependencies]
python = "^3.12"
python-dotenv = "^1.1"
neops-workflow-engine-client = "^0.41.12-beta.11"
fastapi = "^0.116.0"
starlette = ">=0.47.2"
uvicorn = "^0.29.0"
filelock = "^3.18.0"
urllib3 = ">=2.5.0"
pyyaml = "^6.0"
colorlog = "^6.8.2"
python-multipart = "^0.0.20"
pydantic = "^2.7"
requests = "^2.32.5"

[tool.poetry.group.dev.dependencies]
black = "*"
mypy = "*"
pylint = "*"
types-pyyaml = "^6.0.12.20250516"
colorlog = "^6.8.2"
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
httpx = "^0.28.1"
types-requests = "^2.32.4.20250913"


[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
addopts = [
    "--ignore=docs",
]

[tool.poetry.scripts]
neops-remote-lab = 'neops_remote_lab.__main__:main'


[tool.poetry.plugins."pytest11"]
neops-remote-lab = "neops_remote_lab.pytest_plugins"

[tool.black]
line-length = 120

[tool.mypy]
disallow_untyped_defs = true
check_untyped_defs  = true
disallow_incomplete_defs  = true
disallow_any_unimported  = true
disallow_any_decorated  = true
disallow_any_generics  = true
disallow_subclassing_any  = true
disallow_untyped_calls  = true
enable_incomplete_feature = "NewGenericSyntax"

[tool.pylint]
max-line-length = 120
disable = [
    "missing-docstring",
    "unused-argument",
    "line-too-long",
    "fixme",
    "protected-access",
    "too-few-public-methods",
    "redefined-outer-name",
    "broad-exception-caught",
    "too-many-instance-attributes",
    "arguments-renamed"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"