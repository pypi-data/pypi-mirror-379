#usda 1.0
(
    customLayerData = {
        dictionary renderSettings = {
        }
    }
    defaultPrim = "cartPole"
    metersPerUnit = 1
    kilogramsPerUnit = 1
    upAxis = "Z"
)

def SphereLight "SphereLight"
{
    float intensity = 20000
    float radius = 1
    double3 xformOp:translate = (-0.5, 1, 1.5)
    uniform token[] xformOpOrder = ["xformOp:translate"]
}

def PhysicsScene "physicsScene"
{
    float3 gravity = (0, 0, -9.81)
}

def Xform "cartPole" (
    prepend apiSchemas = ["PhysicsArticulationRootAPI", "PhysxArticulationAPI"]
)
{
    bool physxArticulation:enabledSelfCollisions = 0

    def Xform "rail" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI"]
    )
    {
        def Cube "rail" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double size = 1
            float3 xformOp:scale = (0.03, 8, 0.03)
            uniform token[] xformOpOrder = ["xformOp:scale"]
            color3f[] primvars:displayColor = [(0.9, 0.6, 0.2)]
        }
    }

    def Xform "cart" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
    )
    {
        float3 xformOp:translate = (0, 0, 0)
        float3 xformOp:scale = (0.2, 0.25, 0.2)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

		float3 physics:diagonalInertia = (0.1, 0.1, 0.1)
		float physics:mass = 1
		quatf physics:principalAxes = (1, 0, 0, 0)

        def Cube "cart" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double size = 1
			color3f[] primvars:displayColor = [(0.3, 0.5, 0.7)]
        }
    }

    def Xform "pole1" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
    )
    {
        float3 xformOp:translate = (0.11, 0, 0.5)
        float3 xformOp:scale = (0.04, 0.06, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        float3 physics:diagonalInertia = (0.1, 0.1, 0.1)
        float physics:mass = 0.25
        quatf physics:principalAxes = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)

        def Cube "pole1" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double size = 1
            color3f[] primvars:displayColor = [(0.1, 0.1, 0.3)]

        }
    }

    def Xform "pole2" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
    )
    {
        float3 xformOp:translate = (0.11, 0, 1.5)
        float3 xformOp:scale = (0.04, 0.06, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

        float3 physics:diagonalInertia = (0.1, 0.1, 0.1)
        float physics:mass = 0.25
        quatf physics:principalAxes = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)

        def Cube "pole2" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            double size = 1
            color3f[] primvars:displayColor = [(0.1, 0.1, 0.3)]

        }
    }
    # fixed base
    def PhysicsFixedJoint "rootJoint"
    {
        rel physics:body1 = </cartPole/rail>
    }

    def PhysicsPrismaticJoint "railCartJoint"
    {
        rel physics:body0 = </cartPole/rail>
        rel physics:body1 = </cartPole/cart>
        uniform token physics:axis = "Y"
        float physics:lowerLimit = -4
        float physics:upperLimit = 4
    }

    def PhysicsRevoluteJoint "cartPoleJoint"
    {
        rel physics:body0 = </cartPole/cart>
        rel physics:body1 = </cartPole/pole1>
        uniform token physics:axis = "X"
        point3f physics:localPos0 = (0.55, 0.0, 0)
        point3f physics:localPos1 = (0, 0, -0.5)
        quatf physics:localRot0 = (1, 0, 0, 0)
        quatf physics:localRot1 = (1, 0, 0, 0)
    }

    def PhysicsRevoluteJoint "polePoleJoint"
    {
        rel physics:body0 = </cartPole/pole1>
        rel physics:body1 = </cartPole/pole2>
        uniform token physics:axis = "X"
        point3f physics:localPos0 = (0, 0, 0.5)
        point3f physics:localPos1 = (0, 0, -0.5)
        quatf physics:localRot0 = (1, 0, 0, 0)
        quatf physics:localRot1 = (1, 0, 0, 0)
    }
}
