[project]
name = "openelectricity"
description = "OpenElectricity Python Client"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    { name = "Nik Cubrilovic", email = "git@nikcub.me" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ["version"]
dependencies = [
    "aiohttp[speedups]>=3.11.12",
    "pydantic>=2.10.3",
    "pydantic-settings>=2.7.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.3",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "build>=1.0.3"
]
analysis = [
    "polars>=0.20.5",
    "pyarrow>=15.0.0",  # Required for better performance with Polars
    "rich>=13.7.0",     # Required for formatted table output
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "openelectricity/__init__.py"

[tool.ruff]
target-version = "py312"
line-length = 130
exclude = [
  "docs",
]

[tool.ruff.lint]
select = [
  "F",   # flake8
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "C",   # flake8-comprehensions
  "B",   # flake8-bugbear
  "UP",  # pyupgrade
  "T",   # mypy
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "T201",  # ignore print
    "T203",  # ignore pprint
    "C901",  # ignore function too complex
    "E721",  # igmpre unsafe type comparison
]

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = 100

[tool.pyright]
include = ["opennem/**/*.py"]
python_version = "3.12"
reportMissingImports = "error"
reportMissingTypeStubs = false

[tool.pytest.ini_options]
log_cli = true
log_level = "DEBUG"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[dependency-groups]
dev = [
    "anyio>=4.10.0",
    "matplotlib>=3.10.5",
    "pyright>=1.1.394",
    "pytest-asyncio>=1.1.0",
    "pytest-sugar>=1.0.0",
    "ruff>=0.8.3",
    "seaborn>=0.13.2",
]
