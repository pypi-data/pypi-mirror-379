[build-system]
requires = [
    "setuptools >= 77.0.3",
    "setuptools-git-versioning>=2.0,<3",
    "wheel",
    "torch",
    "numpy",
]
build-backend = "setuptools.build_meta:__legacy__"

[tool.setuptools-git-versioning]
enabled = true
# change the file path
version_file = "philtorch/VERSION.txt"
count_commits_from_version_file = true                     # <--- enable commits tracking
dev_template = "{tag}.{branch}{ccount}"                    # suffix for versions will be .dev
dirty_template = "{tag}.{branch}{ccount}"                  # same thing here
branch_formatter = "philtorch._version:format_branch_name"

[tool.setuptools.package-data]
# include VERSION file to a package
philtorch = ["VERSION"]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests", "tests.*"]

[tool.setuptools]
# this package will read some included files in runtime, avoid installing it as .zip
zip-safe = false

[project]
dynamic = ["version"]
name = "philtorch"
dependencies = ["torch >= 2.0.0", "torchlpc >= 0.7.2"]
requires-python = ">=3.10"
authors = [{ name = "Chin-Yun Yu", email = "chin-yun.yu@qmul.ac.uk" }]
maintainers = [{ name = "Chin-Yun Yu", email = "chin-yun.yu@qmul.ac.uk" }]
description = "A PyTorch library for time-varying IIR filters."
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
dev = ["pytest >= 6.0", "scipy", "numpy", "pytest-cov"]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--tb=short",
    "--strict-markers",
    "--cov=philtorch",
    "--cov-report=term-missing:skip-covered",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
