name: build-and-publish

on:
  push:
    tags:
      - "*.*.*"
      - "v*.*.*"
  release:
    types: [published]
  workflow_dispatch: {} # optional manual runs

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install build tooling
        run: |
          python -m pip install -U pip
          pip install build setuptools setuptools-scm wheel
      - name: Build sdist and wheel
        run: python -m build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  testpypi-publish-token:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: testpypi
      url: https://test.pypi.org/p/gradgraph
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Publish to TestPyPI with token
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/
          skip-existing: true

  # testpypi-publish-oidc:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/gradgraph
  #   permissions:
  #     id-token: write
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: dist
  #         path: dist/
  #     - name: Publish to TestPyPI (OIDC)
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/
  #         packages-dir: dist/
  #         skip-existing: true

  pypi-publish-token:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/p/gradgraph
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Publish to PyPI with token
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist/
          skip-existing: true

  # pypi-publish-oidc:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/gradgraph
  #   permissions:
  #     id-token: write
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: dist
  #         path: dist/
  #     - name: Publish to PyPI (OIDC)
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist/
  #         skip-existing: true
