name: Release to PyPI

env:
  PKG_NAME: "aws-blackbelt-mcp-server"
  PYTHON_VERSION: "3.13"
  UV_VERSION: "0.8.18"

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: "testpypi"
        type: choice
        options:
          - testpypi
          - pypi

permissions: {}

jobs:
  validate-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: ${{ env.UV_VERSION }}

      - name: Install dependencies
        run: uv sync --frozen --dev

      - name: Check security
        run: uv run bandit --severity-level medium --confidence-level medium -c pyproject.toml -r src

      - name: Run tests
        run: uv run pytest -v

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [validate-release]
    environment:
      name: ${{ github.event.inputs.environment || 'pypi' }}
      url: ${{ github.event.inputs.environment == 'testpypi' && format('https://test.pypi.org/p/', env.PKG_NAME) || format('https://pypi.org/p/', env.PKG_NAME) }}
    permissions:
      id-token: write # For trusted publishing
      contents: read
      attestations: write # For build attestations
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: ${{ env.UV_VERSION }}

      - name: Build distributable
        run: uv build --sdist --wheel

      - name: Generate build attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: "dist/*"

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ github.event.inputs.environment == 'testpypi' && 'https://test.pypi.org/legacy/' || '' }}
          print-hash: true
          attestations: true
