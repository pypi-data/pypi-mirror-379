[tool.poetry]
name = "fown"
version = "0.1.12"
description = "Tiny Python CLI to automate GitHub labels and projects."
license = "MIT"
authors = ["bamjun <khy5116@naver.com>"]
readme = "README.md"
packages = [
  { include = "fown", from = "src" }
]
include = [
  "src/fown/data/default_config.yml",
  "src/fown/data/label_templates.json"
]


[tool.poetry.scripts]
fown = "fown.cli.main:main"

[tool.poetry.dependencies]
python = "^3.12"
click = "^8.1.7"
PyYAML = "^6.0"
rich = "^13.7.0"
rich-click = "^1.7.2"
textual = "^0.52.1"
requests = "^2.31.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.11.13"
mypy = "^1.16.0"
types-pyyaml = "^6.0.12.20250516"
pre-commit = "^4.2.0"
types-requests = "^2.31.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# 코드 한 줄 최대 길이
line-length = 100

# 검사에서 제외할 경로
exclude = [
    ".git",
    "__pycache__",
    "tests/*",
    "dist/*",
    "build/*",
    "*.egg-info/*"
]

# 린트 규칙: 무시할 규칙
lint.ignore = ["F401", "E402", "E501"]

# 린트 규칙: 선택할 규칙 그룹 (I: isort, E/F/W: PEP8, C90: 복잡성)
lint.select = ["I", "E", "F", "W", "C90"]


[tool.ruff.lint.isort]
known-first-party = ["fown"]
combine-as-imports = true
force-single-line = false

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"
indent-style = "space"
