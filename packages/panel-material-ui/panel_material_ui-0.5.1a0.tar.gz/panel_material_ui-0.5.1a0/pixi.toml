[project]
name = "panel-material-ui"
channels = ["pyviz/label/dev", "conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64", "win-64"]

[tasks]
install = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."
serve-dev = "panel serve examples/components.py --dev --port 0 --show"
serve-example = { cmd = "echo ", depends-on = ["install", "serve-dev"] }
compile = { cmd = "panel compile panel_material_ui --file-loader woff woff2", env = { PYTHONPATH = "./src:$PYTHONPATH" } }
compile-dev = { cmd = "panel compile panel_material_ui --build-dir build --file-loader woff woff2 --watch", env = { PYTHONPATH = "./src:$PYTHONPATH" } }
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run -a"

[dependencies]
python = ">=3.10"
panel = ">=1.8.0"
bokeh = ">=3.8.0"
packaging = "*"
watchfiles = "*"

[host-dependencies]
pip = "*"
setuptools = ">=61"
setuptools-scm = "*"
hatchling = "*"
hatch-vcs = "*"
nodejs = ">=18"
esbuild = "*"

[environments]
test-310 = ["py310", "compile", "test-core", "example", "test-example", "test-unit-task"]
test-311 = ["py311", "compile", "test-core", "example", "test-example", "test-unit-task"]
test-312 = ["py312", "compile", "test-core", "example", "test-example", "test-unit-task"]
test-ui = ["py312", "compile", "test-core", "test-ui"]
build = ["py312", "build", "compile"]
compile = ["py312", "compile"]
lint = { features = ["lint"], no-default-feature = true }
# docs = ["py311", "example", "doc"]
docs = ["py311", "doc"]

[feature.py310.dependencies]
python = "3.10.*"
[feature.py311.dependencies]
python = "3.11.*"
[feature.py312.dependencies]
python = "3.12.*"

[feature.example.dependencies]
jupyterlab = "*"

# =============================================
# ================== TEST =====================
# =============================================

[feature.test-core.dependencies]
pytest = ">=6"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-rerunfailures = "<16"
pytest-xdist = "*"
mypy = "*"
plotly = "*"

[feature.test-unit-task.tasks]
_install = "pip install --no-deps --disable-pip-version-check -e ."
test = { cmd = "pytest", depends-on = ["_install"] }
test-coverage = { cmd = "pytest --cov=panel_material_ui --cov-report=xml --cov-report=term-missing", depends-on = ["_install"] }

[feature.test-example.tasks]
test-example = 'pytest -n logical --dist loadscope --nbval-lax examples --ignore examples/homepage.ipynb'

[feature.test-example.dependencies]
nbval = "*"
bokeh_sampledata = "*"

[feature.test-ui]
channels = ["microsoft"]

[feature.test-ui.dependencies]
playwright = { version = "<1.51", channel = "microsoft" }
pytest-playwright = { version = "*", channel = "microsoft" }

[feature.test-ui.tasks]
_install = "pip install --no-deps --disable-pip-version-check -e ."
_install-ui = 'playwright install chromium'

[feature.test-ui.tasks.test-ui]
cmd = 'pytest ./tests/ui --ui --browser chromium -n logical --dist loadgroup --reruns 3 --reruns-delay 10'
depends-on = ["_install", "_install-ui"]

# =============================================
# =================== DOCS ====================
# =============================================
[feature.doc.activation.env]
MOZ_HEADLESS = "1"
PANEL_IPYWIDGET = "1"
OBJC_DISABLE_INITIALIZE_FORK_SAFETY = "YES"
SPHINX_APIDOC_OPTIONS = "members,show-inheritance"

[feature.doc.dependencies]
nbsite = ">=0.9.0a1"
numpydoc = "*"
matplotlib = "*"  # not optional in nbsite
hvplot = "*"
bokeh_sampledata = "*"
plotly = "*"

[feature.doc.tasks]
# _docs-refmanual = 'sphinx-apidoc -e -o doc/api/ panel/ --ext-autodoc --ext-intersphinx'
# _docs-convert-gallery = 'python scripts/gallery/convert_gallery.py'
_docs-generate = 'nbsite build --what=html --output=builtdocs --org holoviz --project-name panel-material-ui --disable-parallel'
_docs-generate-parallel = 'nbsite build --what=html --output=builtdocs --org holoviz --project-name panel-material-ui'
# _docs-copy-panel-dist = 'cp -r ./panel/dist ./builtdocs/panel_dist'
# _docs-pyodide = 'panel convert examples/gallery/*.ipynb doc/how_to/*/examples/*.md --to pyodide-worker --out ./builtdocs/pyodide/ --pwa --index --requirements doc/pyodide_dependencies.json --exclude examples/gallery/vtk*.ipynb'
docs-server = 'python -m http.server 5500 --directory ./builtdocs'

[feature.doc.tasks.docs-build]
depends-on = [
    # '_docs-refmanual',
    # '_docs-convert-gallery',
    '_docs-generate',
    # '_docs-copy-panel-dist',
    # '_docs-pyodide',
]

[feature.doc.tasks.docs-build-parallel]
depends-on = [
    # '_docs-refmanual',
    # '_docs-convert-gallery',
    '_docs-generate-parallel',
    # '_docs-copy-panel-dist',
    # '_docs-pyodide',
]

# =============================================
# ================== BUILD ====================
# =============================================

[feature.build.dependencies]
python-build = "*"
twine = "*"
wheel = "*"

[feature.build.tasks]
build-wheel = "python -m build --no-isolation ."
check-wheel = "twine check dist/*"

# =============================================
# ================= COMPILE ===================
# =============================================

[feature.compile.dependencies]
nodejs = ">=18"
esbuild = "*"

# =============================================
# ================== LINT =====================
# =============================================

[feature.lint.dependencies]
pre-commit = "*"

[feature.lint.tasks]
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run -a"
