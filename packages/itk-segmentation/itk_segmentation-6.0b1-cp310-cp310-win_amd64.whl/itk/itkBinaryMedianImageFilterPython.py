# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelVotingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryMedianImageFilterPython
else:
    import _itkBinaryMedianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkBinaryMedianImageFilterID2ID2_New():
    return itkBinaryMedianImageFilterID2ID2.New()

class itkBinaryMedianImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBinaryMedianImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterID2ID2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterID2ID2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterID2ID2

        Create a new object of the class itkBinaryMedianImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterID2ID2 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID2ID2_swigregister(itkBinaryMedianImageFilterID2ID2)

def itkBinaryMedianImageFilterID3ID3_New():
    return itkBinaryMedianImageFilterID3ID3.New()

class itkBinaryMedianImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBinaryMedianImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterID3ID3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterID3ID3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterID3ID3

        Create a new object of the class itkBinaryMedianImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterID3ID3 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID3ID3_swigregister(itkBinaryMedianImageFilterID3ID3)

def itkBinaryMedianImageFilterID4ID4_New():
    return itkBinaryMedianImageFilterID4ID4.New()

class itkBinaryMedianImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkBinaryMedianImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterID4ID4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterID4ID4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterID4ID4

        Create a new object of the class itkBinaryMedianImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterID4ID4 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterID4ID4_swigregister(itkBinaryMedianImageFilterID4ID4)

def itkBinaryMedianImageFilterIF2IF2_New():
    return itkBinaryMedianImageFilterIF2IF2.New()

class itkBinaryMedianImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBinaryMedianImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIF2IF2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIF2IF2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIF2IF2

        Create a new object of the class itkBinaryMedianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIF2IF2 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF2IF2_swigregister(itkBinaryMedianImageFilterIF2IF2)

def itkBinaryMedianImageFilterIF3IF3_New():
    return itkBinaryMedianImageFilterIF3IF3.New()

class itkBinaryMedianImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBinaryMedianImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIF3IF3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIF3IF3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIF3IF3

        Create a new object of the class itkBinaryMedianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIF3IF3 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF3IF3_swigregister(itkBinaryMedianImageFilterIF3IF3)

def itkBinaryMedianImageFilterIF4IF4_New():
    return itkBinaryMedianImageFilterIF4IF4.New()

class itkBinaryMedianImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkBinaryMedianImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIF4IF4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIF4IF4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIF4IF4

        Create a new object of the class itkBinaryMedianImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIF4IF4 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIF4IF4_swigregister(itkBinaryMedianImageFilterIF4IF4)

def itkBinaryMedianImageFilterISS2ISS2_New():
    return itkBinaryMedianImageFilterISS2ISS2.New()

class itkBinaryMedianImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryMedianImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterISS2ISS2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterISS2ISS2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterISS2ISS2

        Create a new object of the class itkBinaryMedianImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterISS2ISS2 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS2ISS2_swigregister(itkBinaryMedianImageFilterISS2ISS2)

def itkBinaryMedianImageFilterISS3ISS3_New():
    return itkBinaryMedianImageFilterISS3ISS3.New()

class itkBinaryMedianImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryMedianImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterISS3ISS3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterISS3ISS3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterISS3ISS3

        Create a new object of the class itkBinaryMedianImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterISS3ISS3 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS3ISS3_swigregister(itkBinaryMedianImageFilterISS3ISS3)

def itkBinaryMedianImageFilterISS4ISS4_New():
    return itkBinaryMedianImageFilterISS4ISS4.New()

class itkBinaryMedianImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkBinaryMedianImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterISS4ISS4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterISS4ISS4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterISS4ISS4

        Create a new object of the class itkBinaryMedianImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterISS4ISS4 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterISS4ISS4_swigregister(itkBinaryMedianImageFilterISS4ISS4)

def itkBinaryMedianImageFilterIUC2IUC2_New():
    return itkBinaryMedianImageFilterIUC2IUC2.New()

class itkBinaryMedianImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryMedianImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIUC2IUC2

        Create a new object of the class itkBinaryMedianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIUC2IUC2 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC2IUC2_swigregister(itkBinaryMedianImageFilterIUC2IUC2)

def itkBinaryMedianImageFilterIUC3IUC3_New():
    return itkBinaryMedianImageFilterIUC3IUC3.New()

class itkBinaryMedianImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryMedianImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIUC3IUC3

        Create a new object of the class itkBinaryMedianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIUC3IUC3 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC3IUC3_swigregister(itkBinaryMedianImageFilterIUC3IUC3)

def itkBinaryMedianImageFilterIUC4IUC4_New():
    return itkBinaryMedianImageFilterIUC4IUC4.New()

class itkBinaryMedianImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBinaryMedianImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIUC4IUC4

        Create a new object of the class itkBinaryMedianImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIUC4IUC4 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUC4IUC4_swigregister(itkBinaryMedianImageFilterIUC4IUC4)

def itkBinaryMedianImageFilterIUS2IUS2_New():
    return itkBinaryMedianImageFilterIUS2IUS2.New()

class itkBinaryMedianImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryMedianImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIUS2IUS2

        Create a new object of the class itkBinaryMedianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIUS2IUS2 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS2IUS2_swigregister(itkBinaryMedianImageFilterIUS2IUS2)

def itkBinaryMedianImageFilterIUS3IUS3_New():
    return itkBinaryMedianImageFilterIUS3IUS3.New()

class itkBinaryMedianImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryMedianImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIUS3IUS3

        Create a new object of the class itkBinaryMedianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIUS3IUS3 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS3IUS3_swigregister(itkBinaryMedianImageFilterIUS3IUS3)

def itkBinaryMedianImageFilterIUS4IUS4_New():
    return itkBinaryMedianImageFilterIUS4IUS4.New()

class itkBinaryMedianImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBinaryMedianImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMedianImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMedianImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_Clone(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short const &"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_GetForegroundValue(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_GenerateInputRequestedRegion(self)
    InputEqualityComparableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_SameDimensionCheck
    
    InputOStreamWritableCheck = _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryMedianImageFilterPython.delete_itkBinaryMedianImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMedianImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMedianImageFilterIUS4IUS4

        Create a new object of the class itkBinaryMedianImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMedianImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMedianImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMedianImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMedianImageFilterIUS4IUS4 in _itkBinaryMedianImageFilterPython:
_itkBinaryMedianImageFilterPython.itkBinaryMedianImageFilterIUS4IUS4_swigregister(itkBinaryMedianImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_median_image_filter(*args: itkt.ImageLike,  radius: Sequence[int]=..., background_value: float=..., foreground_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryMedianImageFilter"""
    import itk

    kwarg_typehints = { 'radius':radius,'background_value':background_value,'foreground_value':foreground_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryMedianImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_median_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelVoting.BinaryMedianImageFilter
    binary_median_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_median_image_filter.__doc__ = filter_object.__doc__



