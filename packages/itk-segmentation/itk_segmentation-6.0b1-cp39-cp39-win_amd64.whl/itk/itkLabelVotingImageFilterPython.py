# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelVotingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelVotingImageFilterPython
else:
    import _itkLabelVotingImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkLabelVotingImageFilterIUC2IUC2_New():
    return itkLabelVotingImageFilterIUC2IUC2.New()

class itkLabelVotingImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkLabelVotingImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelVotingImageFilterIUC2IUC2_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelVotingImageFilterIUC2IUC2_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_Clone(self)

    def SetLabelForUndecidedPixels(self, l):
        r"""
        SetLabelForUndecidedPixels(self, l)

        Parameters
        ----------
        l: unsigned char const

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_SetLabelForUndecidedPixels(self, l)

    def GetLabelForUndecidedPixels(self):
        r"""GetLabelForUndecidedPixels(self) -> unsigned char"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_GetLabelForUndecidedPixels(self)

    def UnsetLabelForUndecidedPixels(self):
        r"""UnsetLabelForUndecidedPixels(self)"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_UnsetLabelForUndecidedPixels(self)
    InputConvertibleToOutputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    IntConvertibleToInputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_SameDimensionCheck
    
    InputUnsignedIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_InputUnsignedIntCheck
    
    IntConvertibleToOutputPixelType = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_IntConvertibleToOutputPixelType
    
    InputPlusIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_InputPlusIntCheck
    
    InputIncrementDecrementOperatorsCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_InputIncrementDecrementOperatorsCheck
    
    OutputOStreamWritableCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkLabelVotingImageFilterPython.delete_itkLabelVotingImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelVotingImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelVotingImageFilterIUC2IUC2

        Create a new object of the class itkLabelVotingImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelVotingImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelVotingImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelVotingImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelVotingImageFilterIUC2IUC2 in _itkLabelVotingImageFilterPython:
_itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC2IUC2_swigregister(itkLabelVotingImageFilterIUC2IUC2)

def itkLabelVotingImageFilterIUC3IUC3_New():
    return itkLabelVotingImageFilterIUC3IUC3.New()

class itkLabelVotingImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkLabelVotingImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelVotingImageFilterIUC3IUC3_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelVotingImageFilterIUC3IUC3_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_Clone(self)

    def SetLabelForUndecidedPixels(self, l):
        r"""
        SetLabelForUndecidedPixels(self, l)

        Parameters
        ----------
        l: unsigned char const

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_SetLabelForUndecidedPixels(self, l)

    def GetLabelForUndecidedPixels(self):
        r"""GetLabelForUndecidedPixels(self) -> unsigned char"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_GetLabelForUndecidedPixels(self)

    def UnsetLabelForUndecidedPixels(self):
        r"""UnsetLabelForUndecidedPixels(self)"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_UnsetLabelForUndecidedPixels(self)
    InputConvertibleToOutputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    IntConvertibleToInputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_SameDimensionCheck
    
    InputUnsignedIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_InputUnsignedIntCheck
    
    IntConvertibleToOutputPixelType = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_IntConvertibleToOutputPixelType
    
    InputPlusIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_InputPlusIntCheck
    
    InputIncrementDecrementOperatorsCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_InputIncrementDecrementOperatorsCheck
    
    OutputOStreamWritableCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkLabelVotingImageFilterPython.delete_itkLabelVotingImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelVotingImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelVotingImageFilterIUC3IUC3

        Create a new object of the class itkLabelVotingImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelVotingImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelVotingImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelVotingImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelVotingImageFilterIUC3IUC3 in _itkLabelVotingImageFilterPython:
_itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC3IUC3_swigregister(itkLabelVotingImageFilterIUC3IUC3)

def itkLabelVotingImageFilterIUC4IUC4_New():
    return itkLabelVotingImageFilterIUC4IUC4.New()

class itkLabelVotingImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkLabelVotingImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelVotingImageFilterIUC4IUC4_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelVotingImageFilterIUC4IUC4_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_Clone(self)

    def SetLabelForUndecidedPixels(self, l):
        r"""
        SetLabelForUndecidedPixels(self, l)

        Parameters
        ----------
        l: unsigned char const

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_SetLabelForUndecidedPixels(self, l)

    def GetLabelForUndecidedPixels(self):
        r"""GetLabelForUndecidedPixels(self) -> unsigned char"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_GetLabelForUndecidedPixels(self)

    def UnsetLabelForUndecidedPixels(self):
        r"""UnsetLabelForUndecidedPixels(self)"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_UnsetLabelForUndecidedPixels(self)
    InputConvertibleToOutputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    IntConvertibleToInputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_SameDimensionCheck
    
    InputUnsignedIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_InputUnsignedIntCheck
    
    IntConvertibleToOutputPixelType = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_IntConvertibleToOutputPixelType
    
    InputPlusIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_InputPlusIntCheck
    
    InputIncrementDecrementOperatorsCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_InputIncrementDecrementOperatorsCheck
    
    OutputOStreamWritableCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkLabelVotingImageFilterPython.delete_itkLabelVotingImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelVotingImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelVotingImageFilterIUC4IUC4

        Create a new object of the class itkLabelVotingImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelVotingImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelVotingImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelVotingImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelVotingImageFilterIUC4IUC4 in _itkLabelVotingImageFilterPython:
_itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUC4IUC4_swigregister(itkLabelVotingImageFilterIUC4IUC4)

def itkLabelVotingImageFilterIUS2IUS2_New():
    return itkLabelVotingImageFilterIUS2IUS2.New()

class itkLabelVotingImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkLabelVotingImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelVotingImageFilterIUS2IUS2_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelVotingImageFilterIUS2IUS2_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_Clone(self)

    def SetLabelForUndecidedPixels(self, l):
        r"""
        SetLabelForUndecidedPixels(self, l)

        Parameters
        ----------
        l: unsigned short const

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_SetLabelForUndecidedPixels(self, l)

    def GetLabelForUndecidedPixels(self):
        r"""GetLabelForUndecidedPixels(self) -> unsigned short"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_GetLabelForUndecidedPixels(self)

    def UnsetLabelForUndecidedPixels(self):
        r"""UnsetLabelForUndecidedPixels(self)"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_UnsetLabelForUndecidedPixels(self)
    InputConvertibleToOutputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    IntConvertibleToInputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_SameDimensionCheck
    
    InputUnsignedIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_InputUnsignedIntCheck
    
    IntConvertibleToOutputPixelType = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_IntConvertibleToOutputPixelType
    
    InputPlusIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_InputPlusIntCheck
    
    InputIncrementDecrementOperatorsCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_InputIncrementDecrementOperatorsCheck
    
    OutputOStreamWritableCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkLabelVotingImageFilterPython.delete_itkLabelVotingImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelVotingImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelVotingImageFilterIUS2IUS2

        Create a new object of the class itkLabelVotingImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelVotingImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelVotingImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelVotingImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelVotingImageFilterIUS2IUS2 in _itkLabelVotingImageFilterPython:
_itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS2IUS2_swigregister(itkLabelVotingImageFilterIUS2IUS2)

def itkLabelVotingImageFilterIUS3IUS3_New():
    return itkLabelVotingImageFilterIUS3IUS3.New()

class itkLabelVotingImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkLabelVotingImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelVotingImageFilterIUS3IUS3_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelVotingImageFilterIUS3IUS3_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_Clone(self)

    def SetLabelForUndecidedPixels(self, l):
        r"""
        SetLabelForUndecidedPixels(self, l)

        Parameters
        ----------
        l: unsigned short const

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_SetLabelForUndecidedPixels(self, l)

    def GetLabelForUndecidedPixels(self):
        r"""GetLabelForUndecidedPixels(self) -> unsigned short"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_GetLabelForUndecidedPixels(self)

    def UnsetLabelForUndecidedPixels(self):
        r"""UnsetLabelForUndecidedPixels(self)"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_UnsetLabelForUndecidedPixels(self)
    InputConvertibleToOutputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    IntConvertibleToInputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_SameDimensionCheck
    
    InputUnsignedIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_InputUnsignedIntCheck
    
    IntConvertibleToOutputPixelType = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_IntConvertibleToOutputPixelType
    
    InputPlusIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_InputPlusIntCheck
    
    InputIncrementDecrementOperatorsCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_InputIncrementDecrementOperatorsCheck
    
    OutputOStreamWritableCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkLabelVotingImageFilterPython.delete_itkLabelVotingImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelVotingImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelVotingImageFilterIUS3IUS3

        Create a new object of the class itkLabelVotingImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelVotingImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelVotingImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelVotingImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelVotingImageFilterIUS3IUS3 in _itkLabelVotingImageFilterPython:
_itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS3IUS3_swigregister(itkLabelVotingImageFilterIUS3IUS3)

def itkLabelVotingImageFilterIUS4IUS4_New():
    return itkLabelVotingImageFilterIUS4IUS4.New()

class itkLabelVotingImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkLabelVotingImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelVotingImageFilterIUS4IUS4_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelVotingImageFilterIUS4IUS4_Pointer"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_Clone(self)

    def SetLabelForUndecidedPixels(self, l):
        r"""
        SetLabelForUndecidedPixels(self, l)

        Parameters
        ----------
        l: unsigned short const

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_SetLabelForUndecidedPixels(self, l)

    def GetLabelForUndecidedPixels(self):
        r"""GetLabelForUndecidedPixels(self) -> unsigned short"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_GetLabelForUndecidedPixels(self)

    def UnsetLabelForUndecidedPixels(self):
        r"""UnsetLabelForUndecidedPixels(self)"""
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_UnsetLabelForUndecidedPixels(self)
    InputConvertibleToOutputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    IntConvertibleToInputCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_IntConvertibleToInputCheck
    
    SameDimensionCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_SameDimensionCheck
    
    InputUnsignedIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_InputUnsignedIntCheck
    
    IntConvertibleToOutputPixelType = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_IntConvertibleToOutputPixelType
    
    InputPlusIntCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_InputPlusIntCheck
    
    InputIncrementDecrementOperatorsCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_InputIncrementDecrementOperatorsCheck
    
    OutputOStreamWritableCheck = _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkLabelVotingImageFilterPython.delete_itkLabelVotingImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelVotingImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelVotingImageFilterIUS4IUS4

        Create a new object of the class itkLabelVotingImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelVotingImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelVotingImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelVotingImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelVotingImageFilterIUS4IUS4 in _itkLabelVotingImageFilterPython:
_itkLabelVotingImageFilterPython.itkLabelVotingImageFilterIUS4IUS4_swigregister(itkLabelVotingImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_voting_image_filter(*args: itkt.ImageLike,  label_for_undecided_pixels: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelVotingImageFilter"""
    import itk

    kwarg_typehints = { 'label_for_undecided_pixels':label_for_undecided_pixels }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelVotingImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_voting_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelVoting.LabelVotingImageFilter
    label_voting_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_voting_image_filter.__doc__ = filter_object.__doc__



