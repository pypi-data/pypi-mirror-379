# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKClassifiersPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBayesianClassifierInitializationImageFilterPython
else:
    import _itkBayesianClassifierInitializationImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkBayesianClassifierInitializationImageFilterID2D_New():
    return itkBayesianClassifierInitializationImageFilterID2D.New()

class itkBayesianClassifierInitializationImageFilterID2D(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2VID2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterID2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterID2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterID2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterID2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterID2D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterID2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterID2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterID2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterID2D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2D_swigregister(itkBayesianClassifierInitializationImageFilterID2D)

def itkBayesianClassifierInitializationImageFilterID2F_New():
    return itkBayesianClassifierInitializationImageFilterID2F.New()

class itkBayesianClassifierInitializationImageFilterID2F(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2VIF2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterID2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterID2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterID2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterID2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterID2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterID2F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterID2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterID2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterID2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterID2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterID2F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID2F_swigregister(itkBayesianClassifierInitializationImageFilterID2F)

def itkBayesianClassifierInitializationImageFilterID3D_New():
    return itkBayesianClassifierInitializationImageFilterID3D.New()

class itkBayesianClassifierInitializationImageFilterID3D(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VID3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterID3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterID3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterID3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterID3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterID3D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterID3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterID3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterID3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterID3D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3D_swigregister(itkBayesianClassifierInitializationImageFilterID3D)

def itkBayesianClassifierInitializationImageFilterID3F_New():
    return itkBayesianClassifierInitializationImageFilterID3F.New()

class itkBayesianClassifierInitializationImageFilterID3F(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3VIF3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterID3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterID3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterID3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterID3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterID3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterID3F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterID3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterID3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterID3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterID3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterID3F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID3F_swigregister(itkBayesianClassifierInitializationImageFilterID3F)

def itkBayesianClassifierInitializationImageFilterID4D_New():
    return itkBayesianClassifierInitializationImageFilterID4D.New()

class itkBayesianClassifierInitializationImageFilterID4D(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4VID4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterID4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterID4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterID4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterID4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterID4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterID4D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterID4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterID4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterID4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterID4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterID4D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4D_swigregister(itkBayesianClassifierInitializationImageFilterID4D)

def itkBayesianClassifierInitializationImageFilterID4F_New():
    return itkBayesianClassifierInitializationImageFilterID4F.New()

class itkBayesianClassifierInitializationImageFilterID4F(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4VIF4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterID4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterID4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterID4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< double,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterID4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterID4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterID4F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterID4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterID4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterID4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterID4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterID4F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterID4F_swigregister(itkBayesianClassifierInitializationImageFilterID4F)

def itkBayesianClassifierInitializationImageFilterIF2D_New():
    return itkBayesianClassifierInitializationImageFilterIF2D.New()

class itkBayesianClassifierInitializationImageFilterIF2D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2VID2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIF2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIF2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIF2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIF2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIF2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIF2D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIF2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIF2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIF2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIF2D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2D_swigregister(itkBayesianClassifierInitializationImageFilterIF2D)

def itkBayesianClassifierInitializationImageFilterIF2F_New():
    return itkBayesianClassifierInitializationImageFilterIF2F.New()

class itkBayesianClassifierInitializationImageFilterIF2F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2VIF2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIF2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIF2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIF2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIF2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIF2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIF2F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIF2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIF2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIF2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIF2F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF2F_swigregister(itkBayesianClassifierInitializationImageFilterIF2F)

def itkBayesianClassifierInitializationImageFilterIF3D_New():
    return itkBayesianClassifierInitializationImageFilterIF3D.New()

class itkBayesianClassifierInitializationImageFilterIF3D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VID3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIF3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIF3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIF3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIF3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIF3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIF3D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIF3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIF3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIF3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIF3D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3D_swigregister(itkBayesianClassifierInitializationImageFilterIF3D)

def itkBayesianClassifierInitializationImageFilterIF3F_New():
    return itkBayesianClassifierInitializationImageFilterIF3F.New()

class itkBayesianClassifierInitializationImageFilterIF3F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3VIF3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIF3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIF3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIF3F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIF3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIF3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIF3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIF3F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF3F_swigregister(itkBayesianClassifierInitializationImageFilterIF3F)

def itkBayesianClassifierInitializationImageFilterIF4D_New():
    return itkBayesianClassifierInitializationImageFilterIF4D.New()

class itkBayesianClassifierInitializationImageFilterIF4D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4VID4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIF4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIF4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIF4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIF4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIF4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIF4D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIF4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIF4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIF4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIF4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIF4D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4D_swigregister(itkBayesianClassifierInitializationImageFilterIF4D)

def itkBayesianClassifierInitializationImageFilterIF4F_New():
    return itkBayesianClassifierInitializationImageFilterIF4F.New()

class itkBayesianClassifierInitializationImageFilterIF4F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4VIF4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIF4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIF4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIF4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< float,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIF4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIF4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIF4F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIF4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIF4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIF4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIF4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIF4F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIF4F_swigregister(itkBayesianClassifierInitializationImageFilterIF4F)

def itkBayesianClassifierInitializationImageFilterISS2D_New():
    return itkBayesianClassifierInitializationImageFilterISS2D.New()

class itkBayesianClassifierInitializationImageFilterISS2D(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2VID2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterISS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterISS2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterISS2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterISS2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterISS2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterISS2D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterISS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterISS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterISS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterISS2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterISS2D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2D_swigregister(itkBayesianClassifierInitializationImageFilterISS2D)

def itkBayesianClassifierInitializationImageFilterISS2F_New():
    return itkBayesianClassifierInitializationImageFilterISS2F.New()

class itkBayesianClassifierInitializationImageFilterISS2F(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2VIF2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterISS2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterISS2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterISS2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterISS2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterISS2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterISS2F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterISS2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterISS2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterISS2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterISS2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterISS2F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS2F_swigregister(itkBayesianClassifierInitializationImageFilterISS2F)

def itkBayesianClassifierInitializationImageFilterISS3D_New():
    return itkBayesianClassifierInitializationImageFilterISS3D.New()

class itkBayesianClassifierInitializationImageFilterISS3D(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VID3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterISS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterISS3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterISS3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterISS3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterISS3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterISS3D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterISS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterISS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterISS3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterISS3D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3D_swigregister(itkBayesianClassifierInitializationImageFilterISS3D)

def itkBayesianClassifierInitializationImageFilterISS3F_New():
    return itkBayesianClassifierInitializationImageFilterISS3F.New()

class itkBayesianClassifierInitializationImageFilterISS3F(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3VIF3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterISS3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterISS3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterISS3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterISS3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterISS3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterISS3F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterISS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterISS3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterISS3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterISS3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterISS3F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS3F_swigregister(itkBayesianClassifierInitializationImageFilterISS3F)

def itkBayesianClassifierInitializationImageFilterISS4D_New():
    return itkBayesianClassifierInitializationImageFilterISS4D.New()

class itkBayesianClassifierInitializationImageFilterISS4D(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4VID4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterISS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterISS4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterISS4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterISS4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterISS4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterISS4D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterISS4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterISS4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterISS4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterISS4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterISS4D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4D_swigregister(itkBayesianClassifierInitializationImageFilterISS4D)

def itkBayesianClassifierInitializationImageFilterISS4F_New():
    return itkBayesianClassifierInitializationImageFilterISS4F.New()

class itkBayesianClassifierInitializationImageFilterISS4F(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4VIF4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterISS4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterISS4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterISS4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterISS4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterISS4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterISS4F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterISS4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterISS4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterISS4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterISS4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterISS4F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterISS4F_swigregister(itkBayesianClassifierInitializationImageFilterISS4F)

def itkBayesianClassifierInitializationImageFilterIUC2D_New():
    return itkBayesianClassifierInitializationImageFilterIUC2D.New()

class itkBayesianClassifierInitializationImageFilterIUC2D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2VID2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUC2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUC2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUC2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUC2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUC2D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUC2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUC2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUC2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUC2D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2D_swigregister(itkBayesianClassifierInitializationImageFilterIUC2D)

def itkBayesianClassifierInitializationImageFilterIUC2F_New():
    return itkBayesianClassifierInitializationImageFilterIUC2F.New()

class itkBayesianClassifierInitializationImageFilterIUC2F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2VIF2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUC2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUC2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUC2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUC2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUC2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUC2F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUC2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUC2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUC2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUC2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUC2F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC2F_swigregister(itkBayesianClassifierInitializationImageFilterIUC2F)

def itkBayesianClassifierInitializationImageFilterIUC3D_New():
    return itkBayesianClassifierInitializationImageFilterIUC3D.New()

class itkBayesianClassifierInitializationImageFilterIUC3D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VID3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUC3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUC3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUC3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUC3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUC3D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUC3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUC3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUC3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUC3D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3D_swigregister(itkBayesianClassifierInitializationImageFilterIUC3D)

def itkBayesianClassifierInitializationImageFilterIUC3F_New():
    return itkBayesianClassifierInitializationImageFilterIUC3F.New()

class itkBayesianClassifierInitializationImageFilterIUC3F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3VIF3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUC3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUC3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUC3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUC3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUC3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUC3F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUC3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUC3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUC3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUC3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUC3F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC3F_swigregister(itkBayesianClassifierInitializationImageFilterIUC3F)

def itkBayesianClassifierInitializationImageFilterIUC4D_New():
    return itkBayesianClassifierInitializationImageFilterIUC4D.New()

class itkBayesianClassifierInitializationImageFilterIUC4D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4VID4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUC4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUC4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUC4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUC4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUC4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUC4D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUC4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUC4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUC4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUC4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUC4D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4D_swigregister(itkBayesianClassifierInitializationImageFilterIUC4D)

def itkBayesianClassifierInitializationImageFilterIUC4F_New():
    return itkBayesianClassifierInitializationImageFilterIUC4F.New()

class itkBayesianClassifierInitializationImageFilterIUC4F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4VIF4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUC4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUC4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUC4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned char,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUC4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUC4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUC4F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUC4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUC4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUC4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUC4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUC4F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUC4F_swigregister(itkBayesianClassifierInitializationImageFilterIUC4F)

def itkBayesianClassifierInitializationImageFilterIUS2D_New():
    return itkBayesianClassifierInitializationImageFilterIUS2D.New()

class itkBayesianClassifierInitializationImageFilterIUS2D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2VID2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUS2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUS2D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUS2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUS2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUS2D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUS2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUS2D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2D_swigregister(itkBayesianClassifierInitializationImageFilterIUS2D)

def itkBayesianClassifierInitializationImageFilterIUS2F_New():
    return itkBayesianClassifierInitializationImageFilterIUS2F.New()

class itkBayesianClassifierInitializationImageFilterIUS2F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2VIF2):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUS2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUS2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUS2F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUS2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUS2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUS2F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUS2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUS2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUS2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUS2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUS2F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS2F_swigregister(itkBayesianClassifierInitializationImageFilterIUS2F)

def itkBayesianClassifierInitializationImageFilterIUS3D_New():
    return itkBayesianClassifierInitializationImageFilterIUS3D.New()

class itkBayesianClassifierInitializationImageFilterIUS3D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VID3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUS3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUS3D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUS3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUS3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUS3D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUS3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUS3D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3D_swigregister(itkBayesianClassifierInitializationImageFilterIUS3D)

def itkBayesianClassifierInitializationImageFilterIUS3F_New():
    return itkBayesianClassifierInitializationImageFilterIUS3F.New()

class itkBayesianClassifierInitializationImageFilterIUS3F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3VIF3):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUS3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUS3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUS3F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUS3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUS3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUS3F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUS3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUS3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUS3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUS3F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS3F_swigregister(itkBayesianClassifierInitializationImageFilterIUS3F)

def itkBayesianClassifierInitializationImageFilterIUS4D_New():
    return itkBayesianClassifierInitializationImageFilterIUS4D.New()

class itkBayesianClassifierInitializationImageFilterIUS4D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4VID4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUS4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUS4D_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUS4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUS4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUS4D

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUS4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUS4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUS4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUS4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUS4D in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4D_swigregister(itkBayesianClassifierInitializationImageFilterIUS4D)

def itkBayesianClassifierInitializationImageFilterIUS4F_New():
    return itkBayesianClassifierInitializationImageFilterIUS4F.New()

class itkBayesianClassifierInitializationImageFilterIUS4F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4VIF4):
    r"""Proxy of C++ itkBayesianClassifierInitializationImageFilterIUS4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBayesianClassifierInitializationImageFilterIUS4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBayesianClassifierInitializationImageFilterIUS4F_Pointer"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_Clone(self)

    def SetMembershipFunctions(self, membershipFunction):
        r"""
        SetMembershipFunctions(self, membershipFunction)

        Parameters
        ----------
        membershipFunction: itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_SetMembershipFunctions(self, membershipFunction)

    def GetModifiableMembershipFunctionContainer(self):
        r"""GetModifiableMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_GetModifiableMembershipFunctionContainer(self)

    def GetMembershipFunctionContainer(self, *args):
        r"""
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > const
        GetMembershipFunctionContainer(self) -> itk::detail::VectorContainer< unsigned int,itk::SmartPointer< itk::Statistics::MembershipFunctionBase< itk::Vector< unsigned short,1 > > > > *
        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_GetMembershipFunctionContainer(self, *args)

    def SetNumberOfClasses(self, _arg):
        r"""
        SetNumberOfClasses(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_SetNumberOfClasses(self, _arg)

    def GetNumberOfClasses(self):
        r"""GetNumberOfClasses(self) -> unsigned int"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_GetNumberOfClasses(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_GenerateOutputInformation(self)
    InputMultiplyOperatorCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_InputMultiplyOperatorCheck
    
    DoubleConvertibleToProbabilityCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_DoubleConvertibleToProbabilityCheck
    
    InputHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_InputHasNumericTraitsCheck
    
    ProbabilityHasNumericTraitsCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_ProbabilityHasNumericTraitsCheck
    
    DoublePlusInputCheck = _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_DoublePlusInputCheck
    
    __swig_destroy__ = _itkBayesianClassifierInitializationImageFilterPython.delete_itkBayesianClassifierInitializationImageFilterIUS4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBayesianClassifierInitializationImageFilterIUS4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBayesianClassifierInitializationImageFilterIUS4F

        Create a new object of the class itkBayesianClassifierInitializationImageFilterIUS4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBayesianClassifierInitializationImageFilterIUS4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBayesianClassifierInitializationImageFilterIUS4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBayesianClassifierInitializationImageFilterIUS4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBayesianClassifierInitializationImageFilterIUS4F in _itkBayesianClassifierInitializationImageFilterPython:
_itkBayesianClassifierInitializationImageFilterPython.itkBayesianClassifierInitializationImageFilterIUS4F_swigregister(itkBayesianClassifierInitializationImageFilterIUS4F)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def bayesian_classifier_initialization_image_filter(*args: itkt.ImageLike,  membership_functions=..., number_of_classes: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BayesianClassifierInitializationImageFilter"""
    import itk

    kwarg_typehints = { 'membership_functions':membership_functions,'number_of_classes':number_of_classes }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BayesianClassifierInitializationImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def bayesian_classifier_initialization_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKClassifiers.BayesianClassifierInitializationImageFilter
    bayesian_classifier_initialization_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    bayesian_classifier_initialization_image_filter.__doc__ = filter_object.__doc__



