# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelVotingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVotingBinaryIterativeHoleFillingImageFilterPython
else:
    import _itkVotingBinaryIterativeHoleFillingImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkVotingBinaryIterativeHoleFillingImageFilterISS2_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterISS2.New()

class itkVotingBinaryIterativeHoleFillingImageFilterISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterISS2_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterISS2_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterISS2

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterISS2 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS2_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterISS2)

def itkVotingBinaryIterativeHoleFillingImageFilterISS3_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterISS3.New()

class itkVotingBinaryIterativeHoleFillingImageFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterISS3_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterISS3_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterISS3

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterISS3 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS3_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterISS3)

def itkVotingBinaryIterativeHoleFillingImageFilterISS4_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterISS4.New()

class itkVotingBinaryIterativeHoleFillingImageFilterISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterISS4_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterISS4_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterISS4

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterISS4 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterISS4_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterISS4)

def itkVotingBinaryIterativeHoleFillingImageFilterIUC2_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterIUC2.New()

class itkVotingBinaryIterativeHoleFillingImageFilterIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterIUC2

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterIUC2 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC2_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterIUC2)

def itkVotingBinaryIterativeHoleFillingImageFilterIUC3_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterIUC3.New()

class itkVotingBinaryIterativeHoleFillingImageFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterIUC3

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterIUC3 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC3_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterIUC3)

def itkVotingBinaryIterativeHoleFillingImageFilterIUC4_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterIUC4.New()

class itkVotingBinaryIterativeHoleFillingImageFilterIUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterIUC4_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterIUC4_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterIUC4

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterIUC4 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUC4_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterIUC4)

def itkVotingBinaryIterativeHoleFillingImageFilterIUS2_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterIUS2.New()

class itkVotingBinaryIterativeHoleFillingImageFilterIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterIUS2

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterIUS2 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS2_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterIUS2)

def itkVotingBinaryIterativeHoleFillingImageFilterIUS3_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterIUS3.New()

class itkVotingBinaryIterativeHoleFillingImageFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterIUS3

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterIUS3 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS3_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterIUS3)

def itkVotingBinaryIterativeHoleFillingImageFilterIUS4_New():
    return itkVotingBinaryIterativeHoleFillingImageFilterIUS4.New()

class itkVotingBinaryIterativeHoleFillingImageFilterIUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkVotingBinaryIterativeHoleFillingImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVotingBinaryIterativeHoleFillingImageFilterIUS4_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVotingBinaryIterativeHoleFillingImageFilterIUS4_Pointer"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_Clone(self)

    def GetMaximumNumberOfIterations(self):
        r"""GetMaximumNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetMaximumNumberOfIterations(self)

    def SetMaximumNumberOfIterations(self, _arg):
        r"""
        SetMaximumNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_SetMaximumNumberOfIterations(self, _arg)

    def GetCurrentNumberOfIterations(self):
        r"""GetCurrentNumberOfIterations(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetCurrentNumberOfIterations(self)

    def SetCurrentNumberOfIterations(self, _arg):
        r"""
        SetCurrentNumberOfIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_SetCurrentNumberOfIterations(self, _arg)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetRadius(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_SetBackgroundValue(self, _arg)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_SetForegroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetBackgroundValue(self)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetForegroundValue(self)

    def GetMajorityThreshold(self):
        r"""GetMajorityThreshold(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetMajorityThreshold(self)

    def SetMajorityThreshold(self, _arg):
        r"""
        SetMajorityThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_SetMajorityThreshold(self, _arg)

    def GetNumberOfPixelsChanged(self):
        r"""GetNumberOfPixelsChanged(self) -> unsigned int const &"""
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_GetNumberOfPixelsChanged(self)
    InputEqualityComparableCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_InputEqualityComparableCheck
    
    InputOStreamWritableeCheck = _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_InputOStreamWritableeCheck
    
    __swig_destroy__ = _itkVotingBinaryIterativeHoleFillingImageFilterPython.delete_itkVotingBinaryIterativeHoleFillingImageFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVotingBinaryIterativeHoleFillingImageFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVotingBinaryIterativeHoleFillingImageFilterIUS4

        Create a new object of the class itkVotingBinaryIterativeHoleFillingImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVotingBinaryIterativeHoleFillingImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVotingBinaryIterativeHoleFillingImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVotingBinaryIterativeHoleFillingImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVotingBinaryIterativeHoleFillingImageFilterIUS4 in _itkVotingBinaryIterativeHoleFillingImageFilterPython:
_itkVotingBinaryIterativeHoleFillingImageFilterPython.itkVotingBinaryIterativeHoleFillingImageFilterIUS4_swigregister(itkVotingBinaryIterativeHoleFillingImageFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def voting_binary_iterative_hole_filling_image_filter(*args: itkt.ImageLike,  maximum_number_of_iterations: int=..., current_number_of_iterations: int=..., radius: Sequence[int]=..., background_value: int=..., foreground_value: int=..., majority_threshold: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VotingBinaryIterativeHoleFillingImageFilter"""
    import itk

    kwarg_typehints = { 'maximum_number_of_iterations':maximum_number_of_iterations,'current_number_of_iterations':current_number_of_iterations,'radius':radius,'background_value':background_value,'foreground_value':foreground_value,'majority_threshold':majority_threshold }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VotingBinaryIterativeHoleFillingImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def voting_binary_iterative_hole_filling_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelVoting.VotingBinaryIterativeHoleFillingImageFilter
    voting_binary_iterative_hole_filling_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    voting_binary_iterative_hole_filling_image_filter.__doc__ = filter_object.__doc__



