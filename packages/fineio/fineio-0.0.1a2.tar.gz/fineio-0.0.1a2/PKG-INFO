Metadata-Version: 2.4
Name: fineio
Version: 0.0.1a2
Summary: FineIO: User-friendly sync/async Python execution
Author-email: Abdulmajid Yunusov <you@example.com>
License: MIT
Project-URL: Homepage, https://github.com/goldendevuz/fineio
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# FineIO

**FineIO** â€” async foundation library for [finesql](https://pypi.org/project/finesql) and [fynor](https://pypi.org/project/fynor).  
It provides helpers that work in both **sync** and **async** code, making it easy to adopt async gradually.

## Installation

```bash
pip install fineio
```

## Quick Start

### Hello Example

```python
from fineio import hello

# âœ… Sync usage
print(hello())  # -> "fineio is alive!"

# âœ… Async usage
import asyncio

async def main():
    print(await hello())  # -> "fineio is alive!"

asyncio.run(main())
```

## How It Works

The same function **`hello()`** works in both contexts:

- If called **outside** an event loop â†’ it runs async code with `asyncio.run()` and returns the result directly.  
- If called **inside** an event loop â†’ it returns a coroutine, so you can `await` it.  

This dual-mode design makes it possible to:
- Start with **synchronous code**.  
- Move to **async gradually** without changing APIs.  

## Roadmap

- âœ… `hello()` demo function with dual sync/async support.  
- ðŸš§ Core utilities for running coroutines from sync code.  
- ðŸš§ Async helpers for finesql (database operations).  
- ðŸš§ Integration with fynor (web framework).

## License

This project is licensed under the [MIT License](LICENSE).
