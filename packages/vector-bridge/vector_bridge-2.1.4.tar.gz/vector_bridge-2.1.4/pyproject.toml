[tool.poetry]
name = "vector-bridge"
version = "2.1.4"
description = "A client library for accessing VectorBridge.ai: API"
authors = []
readme = "README.md"
packages = [
    {include = "vector_bridge"},
]
exclude = ["tests*"]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.32.3"
aiohttp = "^3.12.14"
aiofiles = "^24.1.0"
weaviate-client = "^4.10.4"
redis = "^6.2.0"
pydantic = "^2.10.6"
python-dateutil = "2.9.0.post0"
stdlib-list = "0.11.1"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
ruff = "^0.13.0"
mypy = "^1.18.1"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py311"]
include = '\.(py|pyi)$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
  | node_modules
)/
'''

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["vector_bridge"]
skip = ["venv", ".venv", "build", "dist"]

[tool.ruff]
line-length = 120
target-version = "py311"
src = ["vector_bridge"]
extend-exclude = ["alembic/"]

[tool.ruff.lint]
select = ["E", "F", "I", "B"]
ignore = [
    "E501",  # line length
    "E203",  # whitespace before ':'
    "W291",  # trailing whitespace
    "W293",  # blank line whitespace
    "I001",  # import formatting
    "B007",  # Black overlap
    "B008",
]

[tool.mypy]
files = ["vector_bridge"]
disable_error_code = ["attr-defined", "import-untyped", "var-annotated", "annotation-unchecked", "misc", "union-attr", "call-overload", "valid-type", "return-value"]
