{% macro database_server_create(obj) %}
DatabaseServer.Postgres.Create(
    {%- for key, val in obj.items() %}
    {{ key }}={% if val.type == "Ref" %}{{val.ref}}("{{val.value}}"){% elif val.type == "Non_Ref_Secret" %}{{val.value}}{% else %} "{{val.value}}" {% endif %},
    {%- endfor %}
)
{% endmacro %}

{% macro database_create(obj) %}
Database.Postgres.Create(
    {%- for key, val in obj.items() %}
    {{ key }}={% if val.type == "Ref" %}{{val.ref}}("{{val.value}}"){% elif val.type == "Non_Ref_Secret" %}{{val.value}}{% else %} "{{val.value}}" {% endif %},
    {%- endfor %}
)
{% endmacro %}

{% macro time_machine_create(obj) %}
TimeMachine.Postgres.Create(
    {%- for key, val in obj.items() %}
    {{ key }}={% if val.type == "Ref" %}{{val.ref}}("{{val.value}}"){% elif val.type == "Non_Ref_Secret" %}{{val.value}}{% else %} "{{val.value}}" {% endif %},
    {%- endfor %}
)
{% endmacro %}

{% macro tag_create(obj) %}
Tag.Create(
    {%- for key, obj_val in obj.items() %}
    {{ key }}=[
    {%- for val in obj_val.value %}
    {{obj_val.ref}}("{{val.name}}", "{{val.value}}"),
    {%- endfor %}
    ],
    {%- endfor %}
)
{% endmacro %}

{% macro output_vars_create(obj) %}
PostgresDatabaseOutputVariables.Create(
    {%- for key, val in obj.items() %}
    {{ key }}="{{ val }}",
    {%- endfor %}
)
{% endmacro %}

{% macro nutanix_db_postgres_create(obj) %}
CalmTask.NutanixDB.PostgresDatabase.Create(
    name="{{ obj.name }}",
    account=Ref.Account("{{ obj.account }}"),
    database_server_config={{ database_server_create(obj.database_server) }},
    instance_config={{ database_create(obj.database) }},
    timemachine_config={{ time_machine_create(obj.time_machine) }},
    tag_config={{ tag_create(obj.tag) }},
    outargs={{ output_vars_create(obj.output_vars) }}

)
{% endmacro %}

{{ nutanix_db_postgres_create(obj) }}
