[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=67.0", "setuptools_scm[toml]>=7.1"]

[project]
authors = [{"name" = "nabin bagale"}]
description = "AI models based on AIRCHECK data"
dynamic = ["version"]
license = {"file" = "LICENSE"}
name = "aircheck_test_model"
readme = {file = "README.md", content-type = "text/markdown"}
dependencies = [
  "jinja2",
  "pydantic~=2.0",
  "pydantic-settings",
  "typer",
  "numpy",
  "pandas",
  "pympler",
  "scikit-learn",
  "gdown",
  "catboost",
  "scikit-optimize",
  "lightgbm",
  "rdkit",
  "pyarrow",
  "greenlet",
  "pyyaml",
  "tqdm",
]

[project.optional-dependencies]
dev = [
  "build",
  "dapperdata",
  "glom",
  "mypy",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-pretty",
  "ruamel.yaml",
  "ruff",
  "toml-sort",
  "uv",
  "types-PyYAML",
  "pandas-stubs",
  "types-tqdm",
]

[project.scripts]
aircheck_test_model = "aircheck_test_model.cli:app"

[tool.coverage.run]
omit = [
  "./aircheck_test_model/_version.py",
  "./aircheck_test_model/__init__.py",
  "./tests/*",
  "./data/*"
]
concurrency = ["thread", "greenlet"]

[tool.mypy]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "rdkit.*",
    "sklearn.*"
]
ignore_errors = true


[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
exclude = [".venv", "./aircheck__testmodel/_version.py", "./data/", "venv"]
line-length = 120

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}

[tool.setuptools.package-data]
aircheck_test_model = ["py.typed"]

[tool.setuptools.packages]
find = {}

[tool.setuptools_scm]
fallback_version = "0.0.0-dev"
write_to = "aircheck_test_model/_version.py"
