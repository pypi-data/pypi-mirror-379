variables:
  REGISTRY_BASE: "registry.hzdr.de/cosmos/neptoon"
  PLATFORMS: "linux/amd64,linux/arm64"

# Test Builds
docker-test-image-gui:
  stage: docker
  image: docker:24.0.5
  tags:
    - dind
  services:
    - name: docker:24.0.5-dind
      command: ["--experimental"]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    DOCKER_CLI_EXPERIMENTAL: enabled
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker info
    - docker context create tls-environment
    - docker buildx create --name multiarch-builder --use tls-environment
    - docker buildx inspect --bootstrap
  script:
    - |
      docker buildx build \
        --platform $PLATFORMS \
        --file .dock-gui.Dockerfile \
        --tag "$REGISTRY_BASE/neptoon-gui-test:$CI_COMMIT_SHORT_SHA" \
        --push \
        .
    - echo "Test image pushed - registry.hzdr.de/cosmos/neptoon/neptoon-gui-test:$CI_COMMIT_SHORT_SHA"
  after_script:
    - docker buildx rm multiarch-builder || true
    - docker context rm tls-environment || true
  rules:
    - if: $CI_COMMIT_TAG =~ /^docker-test/

docker-test-image-cli:
  stage: docker
  image: docker:24.0.5
  tags:
    - dind
  services:
    - name: docker:24.0.5-dind
      command: ["--experimental"]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    DOCKER_CLI_EXPERIMENTAL: enabled
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker info
    - docker context create tls-environment
    - docker buildx create --name multiarch-builder --use tls-environment
    - docker buildx inspect --bootstrap
  script:
    - |
      docker buildx build \
        --platform $PLATFORMS \
        --file .dock-cli.Dockerfile \
        --tag "$REGISTRY_BASE/neptoon-cli-test:$CI_COMMIT_SHORT_SHA" \
        --push \
        .
    - echo "âœ… Multi-platform test image pushed - registry.hzdr.de/cosmos/neptoon/neptoon-cli-test:$CI_COMMIT_SHORT_SHA"
  after_script:
    - docker buildx rm multiarch-builder || true
    - docker context rm tls-environment || true
  rules:
    - if: $CI_COMMIT_TAG =~ /^docker-test/

# Production build
docker-build-image-gui:
  stage: docker
  image: docker:24.0.5
  tags:
    - dind
  services:
    - name: docker:24.0.5-dind
      command: ["--experimental"]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    DOCKER_CLI_EXPERIMENTAL: enabled
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker info
    - docker context create tls-environment
    - docker buildx create --name multiarch-builder --use tls-environment
    - docker buildx inspect --bootstrap
  script:
    - |
      docker buildx build \
        --platform $PLATFORMS \
        --file .dock-gui.Dockerfile \
        --tag "$REGISTRY_BASE/neptoon-gui:$CI_COMMIT_TAG" \
        --tag "$REGISTRY_BASE/neptoon-gui:latest" \
        --push \
        .
    - echo "GUI Image pushed - $REGISTRY_BASE/neptoon-gui:$CI_COMMIT_TAG"
  after_script:
    - docker buildx rm multiarch-builder || true
    - docker context rm tls-environment || true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v/

docker-build-image-cli:
  stage: docker
  image: docker:24.0.5
  tags:
    - dind
  services:
    - name: docker:24.0.5-dind
      command: ["--experimental"]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
    DOCKER_CLI_EXPERIMENTAL: enabled
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker info
    - docker context create tls-environment
    - docker buildx create --name multiarch-builder --use tls-environment
    - docker buildx inspect --bootstrap
  script:
    - |
      docker buildx build \
        --platform $PLATFORMS \
        --file .dock-cli.Dockerfile \
        --tag "$REGISTRY_BASE/neptoon-cli:$CI_COMMIT_TAG" \
        --tag "$REGISTRY_BASE/neptoon-cli:latest" \
        --push \
        .
    - echo "CLI Image pushed - $REGISTRY_BASE/neptoon-cli:$CI_COMMIT_TAG"
  after_script:
    - docker buildx rm multiarch-builder || true
    - docker context rm tls-environment || true
  rules:
    - if: $CI_COMMIT_TAG =~ /^v/
