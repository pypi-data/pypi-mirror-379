[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "drsai_ui"
license = "MIT"
dynamic = ["version"]
description = "This is the UI backend for the dr.sai project."
readme = "README.md"
requires-python = ">=3.11"
keywords = []
authors = [
    { name = "hepai" }
]
urls = { "Homepage" = "https://github.com/hepaihub/drsai" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "drsai>=1.0.0",
    "autogen-ext[docker,file-surfer,web-surfer,magentic-one,task-centric-memory]==0.5.7",
    "aioconsole",
    "nest_asyncio",
    "playwright==1.51",
    "tldextract",

    # web_surfer
    "docker",
    "typer",
    "aiofiles",
    "websockets",
    "sqlmodel",
    "psycopg",
    "alembic",
    "pyyaml",
    "html2text",
    "psutil",

    # SSO
    "hepai>=1.1.36",
    "damei",
    "dotmap",
    "authlib",
    "itsdangerous",
    "pycryptodome",
    "python-jose",
]

[project.optional-dependencies]
eval = [
    "huggingface_hub",
    "pandas",
    "scipy",
]

azure = [
    "autogen-ext[azure]==0.5.7"
]

ollama = [
    "autogen-ext[ollama]==0.5.7"
]


[project.scripts]
drsai = "drsai_ui.run_ui:run"

[tool.uv]
dev-dependencies = [
    "poethepoet",
    "pyright==1.1.389",
    "mypy==1.13.0",
    "ruff==0.4.8",
    "pytest_asyncio",
    "pytest-cov",
    "pytest",
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "types-aiofiles",
    "types-docker",
    "types-PyYaml"
]


[tool.hatch.metadata]
allow-direct-references = true

[tool.poe.tasks]
fmt = "ruff format src"
format.ref = "fmt src"
lint = "ruff check src"
mypy = "mypy src"
pyright = "pyright src"
test.env = { PYTHONPATH = "src" }
test.sequence = [
    "playwright install",
    "pytest tests --cov=src --cov-report=xml --cov-report=term-missing",
]
test.default_item_type = "cmd"
check = ["fmt", "lint", "pyright", "test"]

[tool.mypy]
strict = true
python_version = "3.12"
ignore_missing_imports = true

# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = false

disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true
exclude = ["ui_backend/eval"]

[tool.pyright]
include = ["src", "tests", "samples"]
exclude = ["src/drsai_ui/ui_backend/eval/benchmarks/assistantbench/evaluate_utils", "src/drsai_ui/agent_factory/magentic_one/agents/web_surfer/_cua_web_surfer.py", "src/drsai_ui/ui_backend/backend/web/routes"]
typeCheckingMode = "off"
reportUnnecessaryIsInstance = false
reportMissingTypeStubs = false


[tool.hatch.build.targets.wheel]
include-package-data = true
packages = [
    "src/drsai_ui",
    ]

[tool.hatch.version]
path = "src/drsai_ui/ui_backend/version.py"

[tool.hatch.build]
include = [
  "src/drsai_ui/**/*.py",
  "src/drsai_ui/**/*.yaml",
  "src/drsai_ui/**/*.json",
  "src/drsai_ui/**/*.js",
  "src/drsai_ui/ui_backend/backend/web/ui/**/*", 
  "src/drsai_ui/agent_factory/magentic_one/docker/**/*",
]
exclude = [
  "src/drsai_ui/tests/**",
  "**/__pycache__",
  "**/.*.swp",
]
ignore-vcs = true 
