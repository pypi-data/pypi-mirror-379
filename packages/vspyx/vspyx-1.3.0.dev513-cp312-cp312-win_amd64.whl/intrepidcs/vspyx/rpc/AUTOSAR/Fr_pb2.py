# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: intrepidcs/vspyx/rpc/AUTOSAR/Fr.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'intrepidcs/vspyx/rpc/AUTOSAR/Fr.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%intrepidcs/vspyx/rpc/AUTOSAR/Fr.proto\x12\x1cintrepidcs.vspyx.rpc.AUTOSAR\"\xdf\x02\n\rFrGeneralType\x12\x17\n\x0f\x46rCtrlTestCount\x18\x01 \x01(\x04\x12\x18\n\x10\x46rDevErrorDetect\x18\x02 \x01(\x08\x12\x1c\n\x14\x46rDisableLPduSupport\x18\x03 \x01(\x08\x12\x1f\n\x17\x46rExtendedLPduReporting\x18\x04 \x01(\x08\x12\x0f\n\x07\x46rIndex\x18\x05 \x01(\x04\x12\x1a\n\x12\x46rNumCtrlSupported\x18\x06 \x01(\x04\x12\x1c\n\x14\x46rPrepareLPduSupport\x18\x07 \x01(\x08\x12\x1d\n\x15\x46rReconfigLPduSupport\x18\x08 \x01(\x08\x12\x1a\n\x12\x46rRxStringentCheck\x18\t \x01(\x08\x12 \n\x18\x46rRxStringentLengthCheck\x18\n \x01(\x08\x12\x18\n\x10\x46rVersionInfoApi\x18\x0b \x01(\x08\x12\x1a\n\x12\x46rEcucPartitionRef\x18\x0c \x03(\t\",\n\x13\x46rAbsoluteTimerType\x12\x15\n\rFrAbsTimerIdx\x18\x01 \x01(\x04\"E\n%FrControllerDemEventParameterRefsType\x12\x1c\n\x14\x46R_E_CTRL_TESTRESULT\x18\x01 \x01(\t\"5\n\x0b\x46rRangeType\x12\x12\n\nFrRangeMax\x18\x01 \x01(\x04\x12\x12\n\nFrRangeMin\x18\x02 \x01(\x04\"\x98\x03\n\nFrFifoType\x12:\n\x07\x46rRange\x18\x01 \x03(\x0b\x32).intrepidcs.vspyx.rpc.AUTOSAR.FrRangeType\x12\x1f\n\x17\x46rAdmitWithoutMessageId\x18\x02 \x01(\x08\x12\x13\n\x0b\x46rBaseCycle\x18\x03 \x01(\x04\x12\x19\n\x11\x46rCycleRepetition\x18\x04 \x01(\x04\x12\x13\n\x0b\x46rFifoDepth\x18\x05 \x01(\x04\x12\x13\n\x0b\x46rMsgIdMask\x18\x06 \x01(\x04\x12\x14\n\x0c\x46rMsgIdMatch\x18\x07 \x01(\x04\x12O\n\nFrChannels\x18\x08 \x01(\x0e\x32;.intrepidcs.vspyx.rpc.AUTOSAR.FrFifoType.FrChannelsEnumType\"l\n\x12\x46rChannelsEnumType\x12\x1b\n\x17\x46rChannels_FR_CHANNEL_A\x10\x00\x12\x1c\n\x18\x46rChannels_FR_CHANNEL_AB\x10\x01\x12\x1b\n\x17\x46rChannels_FR_CHANNEL_B\x10\x02\"\x8e\x10\n\x10\x46rControllerType\x12J\n\x0f\x46rAbsoluteTimer\x18\x01 \x03(\x0b\x32\x31.intrepidcs.vspyx.rpc.AUTOSAR.FrAbsoluteTimerType\x12n\n!FrControllerDemEventParameterRefs\x18\x02 \x01(\x0b\x32\x43.intrepidcs.vspyx.rpc.AUTOSAR.FrControllerDemEventParameterRefsType\x12\x38\n\x06\x46rFifo\x18\x03 \x03(\x0b\x32(.intrepidcs.vspyx.rpc.AUTOSAR.FrFifoType\x12\x11\n\tFrCtrlIdx\x18\x04 \x01(\x04\x12\x1e\n\x16\x46rPAllowHaltDueToClock\x18\x05 \x01(\x08\x12\x1f\n\x17\x46rPAllowPassiveToActive\x18\x06 \x01(\x04\x12\x1e\n\x16\x46rPClusterDriftDamping\x18\x07 \x01(\x04\x12 \n\x18\x46rPdAcceptedStartupRange\x18\x08 \x01(\x04\x12\x1d\n\x15\x46rPDecodingCorrection\x18\t \x01(\x04\x12\x1d\n\x15\x46rPDelayCompensationA\x18\n \x01(\x04\x12\x1d\n\x15\x46rPDelayCompensationB\x18\x0b \x01(\x04\x12\x19\n\x11\x46rPdListenTimeout\x18\x0c \x01(\x04\x12\x17\n\x0f\x46rPExternalSync\x18\r \x01(\x08\x12\x1b\n\x13\x46rPFallBackInternal\x18\x0e \x01(\x08\x12\x14\n\x0c\x46rPKeySlotId\x18\x0f \x01(\x04\x12\x1d\n\x15\x46rPKeySlotOnlyEnabled\x18\x10 \x01(\x08\x12 \n\x18\x46rPKeySlotUsedForStartup\x18\x11 \x01(\x08\x12\x1d\n\x15\x46rPKeySlotUsedForSync\x18\x12 \x01(\x08\x12\x13\n\x0b\x46rPLatestTx\x18\x13 \x01(\x04\x12\x1e\n\x16\x46rPMacroInitialOffsetA\x18\x14 \x01(\x04\x12\x1e\n\x16\x46rPMacroInitialOffsetB\x18\x15 \x01(\x04\x12\x1e\n\x16\x46rPMicroInitialOffsetA\x18\x16 \x01(\x04\x12\x1e\n\x16\x46rPMicroInitialOffsetB\x18\x17 \x01(\x04\x12\x18\n\x10\x46rPMicroPerCycle\x18\x18 \x01(\x04\x12\x1e\n\x16\x46rPNmVectorEarlyUpdate\x18\x19 \x01(\x08\x12\x1e\n\x16\x46rPOffsetCorrectionOut\x18\x1a \x01(\x04\x12 \n\x18\x46rPOffsetCorrectionStart\x18\x1b \x01(\x04\x12\x1e\n\x16\x46rPPayloadLengthDynMax\x18\x1c \x01(\x04\x12\x1c\n\x14\x46rPRateCorrectionOut\x18\x1d \x01(\x04\x12\x1a\n\x12\x46rPSecondKeySlotId\x18\x1e \x01(\x04\x12\x19\n\x11\x46rPTwoKeySlotMode\x18\x1f \x01(\x08\x12\x18\n\x10\x46rPWakeupPattern\x18  \x01(\x04\x12\x1e\n\x16\x46rCtrlEcucPartitionRef\x18! \x01(\t\x12W\n\x0b\x46rPChannels\x18\" \x01(\x0e\x32\x42.intrepidcs.vspyx.rpc.AUTOSAR.FrControllerType.FrPChannelsEnumType\x12[\n\rFrPdMicrotick\x18# \x01(\x0e\x32\x44.intrepidcs.vspyx.rpc.AUTOSAR.FrControllerType.FrPdMicrotickEnumType\x12m\n\x16\x46rPSamplesPerMicrotick\x18$ \x01(\x0e\x32M.intrepidcs.vspyx.rpc.AUTOSAR.FrControllerType.FrPSamplesPerMicrotickEnumType\x12\x61\n\x10\x46rPWakeupChannel\x18% \x01(\x0e\x32G.intrepidcs.vspyx.rpc.AUTOSAR.FrControllerType.FrPWakeupChannelEnumType\"p\n\x13\x46rPChannelsEnumType\x12\x1c\n\x18\x46rPChannels_FR_CHANNEL_A\x10\x00\x12\x1d\n\x19\x46rPChannels_FR_CHANNEL_AB\x10\x01\x12\x1c\n\x18\x46rPChannels_FR_CHANNEL_B\x10\x02\"\x98\x01\n\x15\x46rPdMicrotickEnumType\x12\x18\n\x14\x46rPdMicrotick_T100NS\x10\x00\x12\x19\n\x15\x46rPdMicrotick_T12_5NS\x10\x01\x12\x18\n\x14\x46rPdMicrotick_T200NS\x10\x02\x12\x17\n\x13\x46rPdMicrotick_T25NS\x10\x03\x12\x17\n\x13\x46rPdMicrotick_T50NS\x10\x04\"\x92\x01\n\x1e\x46rPSamplesPerMicrotickEnumType\x12$\n FrPSamplesPerMicrotick_N1SAMPLES\x10\x00\x12$\n FrPSamplesPerMicrotick_N2SAMPLES\x10\x01\x12$\n FrPSamplesPerMicrotick_N4SAMPLES\x10\x02\"`\n\x18\x46rPWakeupChannelEnumType\x12!\n\x1d\x46rPWakeupChannel_FR_CHANNEL_A\x10\x00\x12!\n\x1d\x46rPWakeupChannel_FR_CHANNEL_B\x10\x01\"c\n\x1b\x46rMultipleConfigurationType\x12\x44\n\x0c\x46rController\x18\x01 \x03(\x0b\x32..intrepidcs.vspyx.rpc.AUTOSAR.FrControllerType\"\xa4\x01\n\x06\x46rType\x12>\n\tFrGeneral\x18\x01 \x01(\x0b\x32+.intrepidcs.vspyx.rpc.AUTOSAR.FrGeneralType\x12Z\n\x17\x46rMultipleConfiguration\x18\x02 \x01(\x0b\x32\x39.intrepidcs.vspyx.rpc.AUTOSAR.FrMultipleConfigurationTypeB\"Z intrepidcs.com/vspyx/rpc/autosarb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'intrepidcs.vspyx.rpc.AUTOSAR.Fr_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z intrepidcs.com/vspyx/rpc/autosar'
  _globals['_FRGENERALTYPE']._serialized_start=72
  _globals['_FRGENERALTYPE']._serialized_end=423
  _globals['_FRABSOLUTETIMERTYPE']._serialized_start=425
  _globals['_FRABSOLUTETIMERTYPE']._serialized_end=469
  _globals['_FRCONTROLLERDEMEVENTPARAMETERREFSTYPE']._serialized_start=471
  _globals['_FRCONTROLLERDEMEVENTPARAMETERREFSTYPE']._serialized_end=540
  _globals['_FRRANGETYPE']._serialized_start=542
  _globals['_FRRANGETYPE']._serialized_end=595
  _globals['_FRFIFOTYPE']._serialized_start=598
  _globals['_FRFIFOTYPE']._serialized_end=1006
  _globals['_FRFIFOTYPE_FRCHANNELSENUMTYPE']._serialized_start=898
  _globals['_FRFIFOTYPE_FRCHANNELSENUMTYPE']._serialized_end=1006
  _globals['_FRCONTROLLERTYPE']._serialized_start=1009
  _globals['_FRCONTROLLERTYPE']._serialized_end=3071
  _globals['_FRCONTROLLERTYPE_FRPCHANNELSENUMTYPE']._serialized_start=2557
  _globals['_FRCONTROLLERTYPE_FRPCHANNELSENUMTYPE']._serialized_end=2669
  _globals['_FRCONTROLLERTYPE_FRPDMICROTICKENUMTYPE']._serialized_start=2672
  _globals['_FRCONTROLLERTYPE_FRPDMICROTICKENUMTYPE']._serialized_end=2824
  _globals['_FRCONTROLLERTYPE_FRPSAMPLESPERMICROTICKENUMTYPE']._serialized_start=2827
  _globals['_FRCONTROLLERTYPE_FRPSAMPLESPERMICROTICKENUMTYPE']._serialized_end=2973
  _globals['_FRCONTROLLERTYPE_FRPWAKEUPCHANNELENUMTYPE']._serialized_start=2975
  _globals['_FRCONTROLLERTYPE_FRPWAKEUPCHANNELENUMTYPE']._serialized_end=3071
  _globals['_FRMULTIPLECONFIGURATIONTYPE']._serialized_start=3073
  _globals['_FRMULTIPLECONFIGURATIONTYPE']._serialized_end=3172
  _globals['_FRTYPE']._serialized_start=3175
  _globals['_FRTYPE']._serialized_end=3339
# @@protoc_insertion_point(module_scope)
