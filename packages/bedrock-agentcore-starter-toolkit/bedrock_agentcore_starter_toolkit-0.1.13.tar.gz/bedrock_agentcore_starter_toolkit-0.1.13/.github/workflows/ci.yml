name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy

    - name: Run ruff
      run: |
        ruff check src/ || true  # Don't fail on style issues
        ruff format --check src/ || true

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies for TOML handling
      run: |
        python -m pip install --upgrade pip
        pip install toml
        if python -c "import sys; sys.exit(0 if sys.version_info < (3, 11) else 1)"; then
          pip install tomli
        fi

    - name: Install package and dependencies
      run: |
        pip install -e .
        pip install pytest pytest-cov pytest-asyncio pytest-mock

    - name: Run basic import tests
      run: |
        python -c "from bedrock_agentcore_starter_toolkit.cli.cli import main; print('✓ CLI import successful')"
        python -c "from bedrock_agentcore_starter_toolkit import Runtime; print('✓ Runtime import successful')"

    - name: Run unit tests
      env:
        TERM: dumb # disable ANSI escape sequences
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=html --cov-precision=2

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint]  # Don't require tests to pass for now

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine toml
        if python -c "import sys; sys.exit(0 if sys.version_info < (3, 11) else 1)"; then
          pip install tomli
        fi

    - name: Build package
      run: python -m build

    - name: Check package
      run: |
        twine check dist/*
        echo "=== Package contents preview ==="
        python -m zipfile -l dist/*.whl | head -30
        echo
        echo "=== Checking for wheelhouse ==="
        python -m zipfile -l dist/*.whl | grep -i wheelhouse && echo "❌ Found wheelhouse!" && exit 1 || echo "✓ No wheelhouse in package"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/

    - name: Test basic installation
      run: |
        python -m venv test-env
        source test-env/bin/activate
        pip install dist/*.whl || echo "::warning::Installation requires additional dependencies"
        python -c "import bedrock_agentcore_starter_toolkit; print('✓ Package imports successfully')" || true
