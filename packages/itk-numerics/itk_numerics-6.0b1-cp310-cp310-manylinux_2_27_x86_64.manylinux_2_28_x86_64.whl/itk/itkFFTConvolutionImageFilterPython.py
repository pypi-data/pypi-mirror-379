# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKConvolutionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFFTConvolutionImageFilterPython
else:
    import _itkFFTConvolutionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkConvolutionImageFilterBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageBoundaryConditionPython

def itkFFTConvolutionImageFilterID2ID2_New():
    return itkFFTConvolutionImageFilterID2ID2.New()

class itkFFTConvolutionImageFilterID2ID2(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID2ID2):
    r"""Proxy of C++ itkFFTConvolutionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterID2ID2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterID2ID2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterID2ID2

        Create a new object of the class itkFFTConvolutionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterID2ID2 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID2ID2_swigregister(itkFFTConvolutionImageFilterID2ID2)

def itkFFTConvolutionImageFilterID3ID3_New():
    return itkFFTConvolutionImageFilterID3ID3.New()

class itkFFTConvolutionImageFilterID3ID3(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID3ID3):
    r"""Proxy of C++ itkFFTConvolutionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterID3ID3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterID3ID3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterID3ID3

        Create a new object of the class itkFFTConvolutionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterID3ID3 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID3ID3_swigregister(itkFFTConvolutionImageFilterID3ID3)

def itkFFTConvolutionImageFilterID4ID4_New():
    return itkFFTConvolutionImageFilterID4ID4.New()

class itkFFTConvolutionImageFilterID4ID4(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseID4ID4):
    r"""Proxy of C++ itkFFTConvolutionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterID4ID4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterID4ID4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID4ID4_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID4ID4_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID4ID4_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterID4ID4

        Create a new object of the class itkFFTConvolutionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterID4ID4 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterID4ID4_swigregister(itkFFTConvolutionImageFilterID4ID4)

def itkFFTConvolutionImageFilterIF2IF2_New():
    return itkFFTConvolutionImageFilterIF2IF2.New()

class itkFFTConvolutionImageFilterIF2IF2(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF2IF2):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIF2IF2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIF2IF2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIF2IF2

        Create a new object of the class itkFFTConvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIF2IF2 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF2IF2_swigregister(itkFFTConvolutionImageFilterIF2IF2)

def itkFFTConvolutionImageFilterIF3IF3_New():
    return itkFFTConvolutionImageFilterIF3IF3.New()

class itkFFTConvolutionImageFilterIF3IF3(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF3IF3):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIF3IF3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIF3IF3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIF3IF3

        Create a new object of the class itkFFTConvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIF3IF3 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF3IF3_swigregister(itkFFTConvolutionImageFilterIF3IF3)

def itkFFTConvolutionImageFilterIF4IF4_New():
    return itkFFTConvolutionImageFilterIF4IF4.New()

class itkFFTConvolutionImageFilterIF4IF4(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIF4IF4):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIF4IF4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIF4IF4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF4IF4_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF4IF4_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF4IF4_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIF4IF4

        Create a new object of the class itkFFTConvolutionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIF4IF4 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIF4IF4_swigregister(itkFFTConvolutionImageFilterIF4IF4)

def itkFFTConvolutionImageFilterISS2ISS2_New():
    return itkFFTConvolutionImageFilterISS2ISS2.New()

class itkFFTConvolutionImageFilterISS2ISS2(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS2ISS2):
    r"""Proxy of C++ itkFFTConvolutionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterISS2ISS2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterISS2ISS2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterISS2ISS2

        Create a new object of the class itkFFTConvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterISS2ISS2 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS2ISS2_swigregister(itkFFTConvolutionImageFilterISS2ISS2)

def itkFFTConvolutionImageFilterISS3ISS3_New():
    return itkFFTConvolutionImageFilterISS3ISS3.New()

class itkFFTConvolutionImageFilterISS3ISS3(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS3ISS3):
    r"""Proxy of C++ itkFFTConvolutionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterISS3ISS3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterISS3ISS3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterISS3ISS3

        Create a new object of the class itkFFTConvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterISS3ISS3 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS3ISS3_swigregister(itkFFTConvolutionImageFilterISS3ISS3)

def itkFFTConvolutionImageFilterISS4ISS4_New():
    return itkFFTConvolutionImageFilterISS4ISS4.New()

class itkFFTConvolutionImageFilterISS4ISS4(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseISS4ISS4):
    r"""Proxy of C++ itkFFTConvolutionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterISS4ISS4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterISS4ISS4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS4ISS4_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS4ISS4_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS4ISS4_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterISS4ISS4

        Create a new object of the class itkFFTConvolutionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterISS4ISS4 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterISS4ISS4_swigregister(itkFFTConvolutionImageFilterISS4ISS4)

def itkFFTConvolutionImageFilterIUC2IUC2_New():
    return itkFFTConvolutionImageFilterIUC2IUC2.New()

class itkFFTConvolutionImageFilterIUC2IUC2(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC2IUC2):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIUC2IUC2

        Create a new object of the class itkFFTConvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIUC2IUC2 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC2IUC2_swigregister(itkFFTConvolutionImageFilterIUC2IUC2)

def itkFFTConvolutionImageFilterIUC3IUC3_New():
    return itkFFTConvolutionImageFilterIUC3IUC3.New()

class itkFFTConvolutionImageFilterIUC3IUC3(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC3IUC3):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIUC3IUC3

        Create a new object of the class itkFFTConvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIUC3IUC3 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC3IUC3_swigregister(itkFFTConvolutionImageFilterIUC3IUC3)

def itkFFTConvolutionImageFilterIUC4IUC4_New():
    return itkFFTConvolutionImageFilterIUC4IUC4.New()

class itkFFTConvolutionImageFilterIUC4IUC4(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUC4IUC4):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIUC4IUC4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIUC4IUC4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC4IUC4_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC4IUC4_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC4IUC4_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIUC4IUC4

        Create a new object of the class itkFFTConvolutionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIUC4IUC4 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUC4IUC4_swigregister(itkFFTConvolutionImageFilterIUC4IUC4)

def itkFFTConvolutionImageFilterIUS2IUS2_New():
    return itkFFTConvolutionImageFilterIUS2IUS2.New()

class itkFFTConvolutionImageFilterIUS2IUS2(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS2IUS2):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIUS2IUS2

        Create a new object of the class itkFFTConvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIUS2IUS2 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS2IUS2_swigregister(itkFFTConvolutionImageFilterIUS2IUS2)

def itkFFTConvolutionImageFilterIUS3IUS3_New():
    return itkFFTConvolutionImageFilterIUS3IUS3.New()

class itkFFTConvolutionImageFilterIUS3IUS3(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS3IUS3):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIUS3IUS3

        Create a new object of the class itkFFTConvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIUS3IUS3 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS3IUS3_swigregister(itkFFTConvolutionImageFilterIUS3IUS3)

def itkFFTConvolutionImageFilterIUS4IUS4_New():
    return itkFFTConvolutionImageFilterIUS4IUS4.New()

class itkFFTConvolutionImageFilterIUS4IUS4(itk.itkConvolutionImageFilterBasePython.itkConvolutionImageFilterBaseIUS4IUS4):
    r"""Proxy of C++ itkFFTConvolutionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTConvolutionImageFilterIUS4IUS4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTConvolutionImageFilterIUS4IUS4_Pointer"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS4IUS4_Clone(self)

    def SetSizeGreatestPrimeFactor(self, _arg):
        r"""
        SetSizeGreatestPrimeFactor(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS4IUS4_SetSizeGreatestPrimeFactor(self, _arg)

    def GetSizeGreatestPrimeFactor(self):
        r"""GetSizeGreatestPrimeFactor(self) -> unsigned long"""
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS4IUS4_GetSizeGreatestPrimeFactor(self)
    __swig_destroy__ = _itkFFTConvolutionImageFilterPython.delete_itkFFTConvolutionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTConvolutionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTConvolutionImageFilterIUS4IUS4

        Create a new object of the class itkFFTConvolutionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTConvolutionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTConvolutionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTConvolutionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTConvolutionImageFilterIUS4IUS4 in _itkFFTConvolutionImageFilterPython:
_itkFFTConvolutionImageFilterPython.itkFFTConvolutionImageFilterIUS4IUS4_swigregister(itkFFTConvolutionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def fft_convolution_image_filter(*args: itkt.ImageLike,  size_greatest_prime_factor: int=..., boundary_condition: itkt.ImageBoundaryCondition=..., kernel_image: itkt.Image=..., normalize: bool=..., output_region_mode=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FFTConvolutionImageFilter"""
    import itk

    kwarg_typehints = { 'size_greatest_prime_factor':size_greatest_prime_factor,'boundary_condition':boundary_condition,'kernel_image':kernel_image,'normalize':normalize,'output_region_mode':output_region_mode }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FFTConvolutionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def fft_convolution_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKConvolution.FFTConvolutionImageFilter
    fft_convolution_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    fft_convolution_image_filter.__doc__ = filter_object.__doc__



