# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorMagnitudeImageFilterPython
else:
    import _itkVectorMagnitudeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkVectorMagnitudeImageFilterICVF22ID2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22ID2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22ID2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ID2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22ID2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22ID2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ID2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ID2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22ID2_Superclass)

def itkVectorMagnitudeImageFilterICVF22IF2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22IF2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22IF2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IF2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22IF2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22IF2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IF2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IF2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22IF2_Superclass)

def itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22ISS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22ISS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ISS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ISS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22ISS2_Superclass)

def itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22IUC2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUC2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUC2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUC2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22IUC2_Superclass)

def itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF22IUS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF22IUS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF22IUS2_Superclass)

def itkVectorMagnitudeImageFilterICVF23ID3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23ID3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23ID3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23ID3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23ID3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23ID3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ID3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ID3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23ID3_Superclass)

def itkVectorMagnitudeImageFilterICVF23IF3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23IF3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23IF3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23IF3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23IF3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23IF3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IF3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IF3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23IF3_Superclass)

def itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23ISS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23ISS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ISS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ISS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23ISS3_Superclass)

def itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23IUC3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23IUC3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUC3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUC3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23IUC3_Superclass)

def itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF23IUS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF23IUS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF23IUS3_Superclass)

def itkVectorMagnitudeImageFilterICVF24ID4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF24ID4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF24ID4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF24ID4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24ID4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24ID4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24ID4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24ID4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF24ID4_Superclass)

def itkVectorMagnitudeImageFilterICVF24IF4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF24IF4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF24IF4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF24IF4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24IF4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24IF4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24IF4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24IF4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF24IF4_Superclass)

def itkVectorMagnitudeImageFilterICVF24ISS4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF24ISS4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF24ISS4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF24ISS4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24ISS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24ISS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24ISS4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24ISS4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF24ISS4_Superclass)

def itkVectorMagnitudeImageFilterICVF24IUC4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF24IUC4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF24IUC4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF24IUC4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24IUC4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24IUC4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24IUC4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24IUC4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF24IUC4_Superclass)

def itkVectorMagnitudeImageFilterICVF24IUS4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF24IUS4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF24IUS4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF24IUS4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24IUS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24IUS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24IUS4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24IUS4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF24IUS4_Superclass)

def itkVectorMagnitudeImageFilterICVF32ID2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32ID2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32ID2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32ID2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32ID2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32ID2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ID2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ID2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32ID2_Superclass)

def itkVectorMagnitudeImageFilterICVF32IF2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32IF2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32IF2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32IF2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32IF2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32IF2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IF2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IF2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32IF2_Superclass)

def itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32ISS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32ISS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ISS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ISS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32ISS2_Superclass)

def itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32IUC2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32IUC2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUC2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUC2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32IUC2_Superclass)

def itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF32IUS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF32IUS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF32IUS2_Superclass)

def itkVectorMagnitudeImageFilterICVF33ID3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33ID3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33ID3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ID3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33ID3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33ID3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ID3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ID3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33ID3_Superclass)

def itkVectorMagnitudeImageFilterICVF33IF3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33IF3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33IF3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IF3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33IF3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33IF3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IF3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IF3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33IF3_Superclass)

def itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33ISS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33ISS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ISS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ISS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33ISS3_Superclass)

def itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33IUC3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUC3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUC3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUC3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33IUC3_Superclass)

def itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF33IUS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF33IUS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF33IUS3_Superclass)

def itkVectorMagnitudeImageFilterICVF34ID4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF34ID4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF34ID4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF34ID4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34ID4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34ID4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34ID4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34ID4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF34ID4_Superclass)

def itkVectorMagnitudeImageFilterICVF34IF4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF34IF4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF34IF4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF34IF4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34IF4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34IF4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34IF4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34IF4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF34IF4_Superclass)

def itkVectorMagnitudeImageFilterICVF34ISS4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF34ISS4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF34ISS4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF34ISS4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34ISS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34ISS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34ISS4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34ISS4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF34ISS4_Superclass)

def itkVectorMagnitudeImageFilterICVF34IUC4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF34IUC4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF34IUC4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF34IUC4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34IUC4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34IUC4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34IUC4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34IUC4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF34IUC4_Superclass)

def itkVectorMagnitudeImageFilterICVF34IUS4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF34IUS4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF34IUS4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF34IUS4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34IUS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34IUS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34IUS4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34IUS4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF34IUS4_Superclass)

def itkVectorMagnitudeImageFilterICVF42ID2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42ID2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42ID2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42ID2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42ID2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42ID2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ID2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ID2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42ID2_Superclass)

def itkVectorMagnitudeImageFilterICVF42IF2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42IF2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42IF2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42IF2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42IF2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42IF2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IF2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IF2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42IF2_Superclass)

def itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42ISS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42ISS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ISS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ISS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42ISS2_Superclass)

def itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42IUC2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42IUC2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUC2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUC2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42IUC2_Superclass)

def itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.New()

class itkVectorMagnitudeImageFilterICVF42IUS2_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF42IUS2):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUS2_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUS2_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF42IUS2_Superclass)

def itkVectorMagnitudeImageFilterICVF43ID3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43ID3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43ID3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43ID3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43ID3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43ID3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ID3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ID3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43ID3_Superclass)

def itkVectorMagnitudeImageFilterICVF43IF3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43IF3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43IF3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43IF3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43IF3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43IF3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IF3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IF3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43IF3_Superclass)

def itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43ISS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43ISS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ISS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ISS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43ISS3_Superclass)

def itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43IUC3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43IUC3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUC3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUC3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43IUC3_Superclass)

def itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.New()

class itkVectorMagnitudeImageFilterICVF43IUS3_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF43IUS3):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUS3_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUS3_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF43IUS3_Superclass)

def itkVectorMagnitudeImageFilterICVF44ID4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF44ID4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF44ID4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF44ID4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44ID4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44ID4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44ID4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44ID4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF44ID4_Superclass)

def itkVectorMagnitudeImageFilterICVF44IF4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF44IF4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF44IF4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF44IF4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44IF4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44IF4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44IF4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44IF4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF44IF4_Superclass)

def itkVectorMagnitudeImageFilterICVF44ISS4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF44ISS4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF44ISS4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF44ISS4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44ISS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44ISS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44ISS4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44ISS4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF44ISS4_Superclass)

def itkVectorMagnitudeImageFilterICVF44IUC4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF44IUC4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF44IUC4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF44IUC4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44IUC4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44IUC4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44IUC4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44IUC4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF44IUC4_Superclass)

def itkVectorMagnitudeImageFilterICVF44IUS4_Superclass_New():
    return itkVectorMagnitudeImageFilterICVF44IUS4_Superclass.New()

class itkVectorMagnitudeImageFilterICVF44IUS4_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICVF44IUS4):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44IUS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44IUS4_Superclass_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_Superclass_Clone(self)
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44IUS4_Superclass

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44IUS4_Superclass in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_Superclass_swigregister(itkVectorMagnitudeImageFilterICVF44IUS4_Superclass)

def itkVectorMagnitudeImageFilterICVF22ID2_New():
    return itkVectorMagnitudeImageFilterICVF22ID2.New()

class itkVectorMagnitudeImageFilterICVF22ID2(itkVectorMagnitudeImageFilterICVF22ID2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22ID2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22ID2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ID2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ID2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_swigregister(itkVectorMagnitudeImageFilterICVF22ID2)

def itkVectorMagnitudeImageFilterICVF22IF2_New():
    return itkVectorMagnitudeImageFilterICVF22IF2.New()

class itkVectorMagnitudeImageFilterICVF22IF2(itkVectorMagnitudeImageFilterICVF22IF2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22IF2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22IF2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IF2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IF2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_swigregister(itkVectorMagnitudeImageFilterICVF22IF2)

def itkVectorMagnitudeImageFilterICVF22ISS2_New():
    return itkVectorMagnitudeImageFilterICVF22ISS2.New()

class itkVectorMagnitudeImageFilterICVF22ISS2(itkVectorMagnitudeImageFilterICVF22ISS2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22ISS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22ISS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22ISS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22ISS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ISS2_swigregister(itkVectorMagnitudeImageFilterICVF22ISS2)

def itkVectorMagnitudeImageFilterICVF22IUC2_New():
    return itkVectorMagnitudeImageFilterICVF22IUC2.New()

class itkVectorMagnitudeImageFilterICVF22IUC2(itkVectorMagnitudeImageFilterICVF22IUC2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22IUC2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22IUC2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUC2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUC2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUC2_swigregister(itkVectorMagnitudeImageFilterICVF22IUC2)

def itkVectorMagnitudeImageFilterICVF22IUS2_New():
    return itkVectorMagnitudeImageFilterICVF22IUS2.New()

class itkVectorMagnitudeImageFilterICVF22IUS2(itkVectorMagnitudeImageFilterICVF22IUS2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF22IUS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF22IUS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF22IUS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF22IUS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IUS2_swigregister(itkVectorMagnitudeImageFilterICVF22IUS2)

def itkVectorMagnitudeImageFilterICVF23ID3_New():
    return itkVectorMagnitudeImageFilterICVF23ID3.New()

class itkVectorMagnitudeImageFilterICVF23ID3(itkVectorMagnitudeImageFilterICVF23ID3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23ID3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23ID3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ID3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ID3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_swigregister(itkVectorMagnitudeImageFilterICVF23ID3)

def itkVectorMagnitudeImageFilterICVF23IF3_New():
    return itkVectorMagnitudeImageFilterICVF23IF3.New()

class itkVectorMagnitudeImageFilterICVF23IF3(itkVectorMagnitudeImageFilterICVF23IF3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23IF3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23IF3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IF3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IF3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_swigregister(itkVectorMagnitudeImageFilterICVF23IF3)

def itkVectorMagnitudeImageFilterICVF23ISS3_New():
    return itkVectorMagnitudeImageFilterICVF23ISS3.New()

class itkVectorMagnitudeImageFilterICVF23ISS3(itkVectorMagnitudeImageFilterICVF23ISS3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23ISS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23ISS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23ISS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23ISS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ISS3_swigregister(itkVectorMagnitudeImageFilterICVF23ISS3)

def itkVectorMagnitudeImageFilterICVF23IUC3_New():
    return itkVectorMagnitudeImageFilterICVF23IUC3.New()

class itkVectorMagnitudeImageFilterICVF23IUC3(itkVectorMagnitudeImageFilterICVF23IUC3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23IUC3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23IUC3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUC3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUC3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUC3_swigregister(itkVectorMagnitudeImageFilterICVF23IUC3)

def itkVectorMagnitudeImageFilterICVF23IUS3_New():
    return itkVectorMagnitudeImageFilterICVF23IUS3.New()

class itkVectorMagnitudeImageFilterICVF23IUS3(itkVectorMagnitudeImageFilterICVF23IUS3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF23IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF23IUS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF23IUS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF23IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF23IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF23IUS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF23IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF23IUS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IUS3_swigregister(itkVectorMagnitudeImageFilterICVF23IUS3)

def itkVectorMagnitudeImageFilterICVF24ID4_New():
    return itkVectorMagnitudeImageFilterICVF24ID4.New()

class itkVectorMagnitudeImageFilterICVF24ID4(itkVectorMagnitudeImageFilterICVF24ID4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24ID4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24ID4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24ID4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24ID4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_swigregister(itkVectorMagnitudeImageFilterICVF24ID4)

def itkVectorMagnitudeImageFilterICVF24IF4_New():
    return itkVectorMagnitudeImageFilterICVF24IF4.New()

class itkVectorMagnitudeImageFilterICVF24IF4(itkVectorMagnitudeImageFilterICVF24IF4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24IF4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24IF4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24IF4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24IF4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_swigregister(itkVectorMagnitudeImageFilterICVF24IF4)

def itkVectorMagnitudeImageFilterICVF24ISS4_New():
    return itkVectorMagnitudeImageFilterICVF24ISS4.New()

class itkVectorMagnitudeImageFilterICVF24ISS4(itkVectorMagnitudeImageFilterICVF24ISS4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24ISS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24ISS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24ISS4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24ISS4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ISS4_swigregister(itkVectorMagnitudeImageFilterICVF24ISS4)

def itkVectorMagnitudeImageFilterICVF24IUC4_New():
    return itkVectorMagnitudeImageFilterICVF24IUC4.New()

class itkVectorMagnitudeImageFilterICVF24IUC4(itkVectorMagnitudeImageFilterICVF24IUC4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24IUC4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24IUC4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24IUC4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24IUC4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUC4_swigregister(itkVectorMagnitudeImageFilterICVF24IUC4)

def itkVectorMagnitudeImageFilterICVF24IUS4_New():
    return itkVectorMagnitudeImageFilterICVF24IUS4.New()

class itkVectorMagnitudeImageFilterICVF24IUS4(itkVectorMagnitudeImageFilterICVF24IUS4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF24IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF24IUS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF24IUS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF24IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF24IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF24IUS4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF24IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF24IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF24IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF24IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF24IUS4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IUS4_swigregister(itkVectorMagnitudeImageFilterICVF24IUS4)

def itkVectorMagnitudeImageFilterICVF32ID2_New():
    return itkVectorMagnitudeImageFilterICVF32ID2.New()

class itkVectorMagnitudeImageFilterICVF32ID2(itkVectorMagnitudeImageFilterICVF32ID2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32ID2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32ID2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ID2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ID2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_swigregister(itkVectorMagnitudeImageFilterICVF32ID2)

def itkVectorMagnitudeImageFilterICVF32IF2_New():
    return itkVectorMagnitudeImageFilterICVF32IF2.New()

class itkVectorMagnitudeImageFilterICVF32IF2(itkVectorMagnitudeImageFilterICVF32IF2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32IF2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32IF2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IF2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IF2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_swigregister(itkVectorMagnitudeImageFilterICVF32IF2)

def itkVectorMagnitudeImageFilterICVF32ISS2_New():
    return itkVectorMagnitudeImageFilterICVF32ISS2.New()

class itkVectorMagnitudeImageFilterICVF32ISS2(itkVectorMagnitudeImageFilterICVF32ISS2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32ISS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32ISS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32ISS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32ISS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ISS2_swigregister(itkVectorMagnitudeImageFilterICVF32ISS2)

def itkVectorMagnitudeImageFilterICVF32IUC2_New():
    return itkVectorMagnitudeImageFilterICVF32IUC2.New()

class itkVectorMagnitudeImageFilterICVF32IUC2(itkVectorMagnitudeImageFilterICVF32IUC2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32IUC2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32IUC2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUC2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUC2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUC2_swigregister(itkVectorMagnitudeImageFilterICVF32IUC2)

def itkVectorMagnitudeImageFilterICVF32IUS2_New():
    return itkVectorMagnitudeImageFilterICVF32IUS2.New()

class itkVectorMagnitudeImageFilterICVF32IUS2(itkVectorMagnitudeImageFilterICVF32IUS2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF32IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF32IUS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF32IUS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF32IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF32IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF32IUS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF32IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF32IUS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IUS2_swigregister(itkVectorMagnitudeImageFilterICVF32IUS2)

def itkVectorMagnitudeImageFilterICVF33ID3_New():
    return itkVectorMagnitudeImageFilterICVF33ID3.New()

class itkVectorMagnitudeImageFilterICVF33ID3(itkVectorMagnitudeImageFilterICVF33ID3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33ID3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33ID3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ID3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ID3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_swigregister(itkVectorMagnitudeImageFilterICVF33ID3)

def itkVectorMagnitudeImageFilterICVF33IF3_New():
    return itkVectorMagnitudeImageFilterICVF33IF3.New()

class itkVectorMagnitudeImageFilterICVF33IF3(itkVectorMagnitudeImageFilterICVF33IF3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33IF3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33IF3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IF3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IF3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_swigregister(itkVectorMagnitudeImageFilterICVF33IF3)

def itkVectorMagnitudeImageFilterICVF33ISS3_New():
    return itkVectorMagnitudeImageFilterICVF33ISS3.New()

class itkVectorMagnitudeImageFilterICVF33ISS3(itkVectorMagnitudeImageFilterICVF33ISS3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33ISS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33ISS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33ISS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33ISS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ISS3_swigregister(itkVectorMagnitudeImageFilterICVF33ISS3)

def itkVectorMagnitudeImageFilterICVF33IUC3_New():
    return itkVectorMagnitudeImageFilterICVF33IUC3.New()

class itkVectorMagnitudeImageFilterICVF33IUC3(itkVectorMagnitudeImageFilterICVF33IUC3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33IUC3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33IUC3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUC3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUC3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUC3_swigregister(itkVectorMagnitudeImageFilterICVF33IUC3)

def itkVectorMagnitudeImageFilterICVF33IUS3_New():
    return itkVectorMagnitudeImageFilterICVF33IUS3.New()

class itkVectorMagnitudeImageFilterICVF33IUS3(itkVectorMagnitudeImageFilterICVF33IUS3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF33IUS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF33IUS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF33IUS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF33IUS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IUS3_swigregister(itkVectorMagnitudeImageFilterICVF33IUS3)

def itkVectorMagnitudeImageFilterICVF34ID4_New():
    return itkVectorMagnitudeImageFilterICVF34ID4.New()

class itkVectorMagnitudeImageFilterICVF34ID4(itkVectorMagnitudeImageFilterICVF34ID4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34ID4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34ID4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34ID4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34ID4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_swigregister(itkVectorMagnitudeImageFilterICVF34ID4)

def itkVectorMagnitudeImageFilterICVF34IF4_New():
    return itkVectorMagnitudeImageFilterICVF34IF4.New()

class itkVectorMagnitudeImageFilterICVF34IF4(itkVectorMagnitudeImageFilterICVF34IF4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34IF4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34IF4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34IF4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34IF4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_swigregister(itkVectorMagnitudeImageFilterICVF34IF4)

def itkVectorMagnitudeImageFilterICVF34ISS4_New():
    return itkVectorMagnitudeImageFilterICVF34ISS4.New()

class itkVectorMagnitudeImageFilterICVF34ISS4(itkVectorMagnitudeImageFilterICVF34ISS4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34ISS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34ISS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34ISS4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34ISS4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ISS4_swigregister(itkVectorMagnitudeImageFilterICVF34ISS4)

def itkVectorMagnitudeImageFilterICVF34IUC4_New():
    return itkVectorMagnitudeImageFilterICVF34IUC4.New()

class itkVectorMagnitudeImageFilterICVF34IUC4(itkVectorMagnitudeImageFilterICVF34IUC4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34IUC4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34IUC4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34IUC4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34IUC4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUC4_swigregister(itkVectorMagnitudeImageFilterICVF34IUC4)

def itkVectorMagnitudeImageFilterICVF34IUS4_New():
    return itkVectorMagnitudeImageFilterICVF34IUS4.New()

class itkVectorMagnitudeImageFilterICVF34IUS4(itkVectorMagnitudeImageFilterICVF34IUS4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF34IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF34IUS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF34IUS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF34IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF34IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF34IUS4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF34IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF34IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF34IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF34IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF34IUS4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IUS4_swigregister(itkVectorMagnitudeImageFilterICVF34IUS4)

def itkVectorMagnitudeImageFilterICVF42ID2_New():
    return itkVectorMagnitudeImageFilterICVF42ID2.New()

class itkVectorMagnitudeImageFilterICVF42ID2(itkVectorMagnitudeImageFilterICVF42ID2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42ID2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42ID2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ID2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ID2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_swigregister(itkVectorMagnitudeImageFilterICVF42ID2)

def itkVectorMagnitudeImageFilterICVF42IF2_New():
    return itkVectorMagnitudeImageFilterICVF42IF2.New()

class itkVectorMagnitudeImageFilterICVF42IF2(itkVectorMagnitudeImageFilterICVF42IF2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42IF2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42IF2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IF2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IF2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_swigregister(itkVectorMagnitudeImageFilterICVF42IF2)

def itkVectorMagnitudeImageFilterICVF42ISS2_New():
    return itkVectorMagnitudeImageFilterICVF42ISS2.New()

class itkVectorMagnitudeImageFilterICVF42ISS2(itkVectorMagnitudeImageFilterICVF42ISS2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42ISS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42ISS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42ISS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42ISS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ISS2_swigregister(itkVectorMagnitudeImageFilterICVF42ISS2)

def itkVectorMagnitudeImageFilterICVF42IUC2_New():
    return itkVectorMagnitudeImageFilterICVF42IUC2.New()

class itkVectorMagnitudeImageFilterICVF42IUC2(itkVectorMagnitudeImageFilterICVF42IUC2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42IUC2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42IUC2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUC2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUC2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUC2_swigregister(itkVectorMagnitudeImageFilterICVF42IUC2)

def itkVectorMagnitudeImageFilterICVF42IUS2_New():
    return itkVectorMagnitudeImageFilterICVF42IUS2.New()

class itkVectorMagnitudeImageFilterICVF42IUS2(itkVectorMagnitudeImageFilterICVF42IUS2_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF42IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF42IUS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF42IUS2_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF42IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF42IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF42IUS2

        Create a new object of the class itkVectorMagnitudeImageFilterICVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF42IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF42IUS2 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IUS2_swigregister(itkVectorMagnitudeImageFilterICVF42IUS2)

def itkVectorMagnitudeImageFilterICVF43ID3_New():
    return itkVectorMagnitudeImageFilterICVF43ID3.New()

class itkVectorMagnitudeImageFilterICVF43ID3(itkVectorMagnitudeImageFilterICVF43ID3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43ID3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43ID3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ID3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ID3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_swigregister(itkVectorMagnitudeImageFilterICVF43ID3)

def itkVectorMagnitudeImageFilterICVF43IF3_New():
    return itkVectorMagnitudeImageFilterICVF43IF3.New()

class itkVectorMagnitudeImageFilterICVF43IF3(itkVectorMagnitudeImageFilterICVF43IF3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43IF3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43IF3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IF3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IF3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_swigregister(itkVectorMagnitudeImageFilterICVF43IF3)

def itkVectorMagnitudeImageFilterICVF43ISS3_New():
    return itkVectorMagnitudeImageFilterICVF43ISS3.New()

class itkVectorMagnitudeImageFilterICVF43ISS3(itkVectorMagnitudeImageFilterICVF43ISS3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43ISS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43ISS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43ISS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43ISS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ISS3_swigregister(itkVectorMagnitudeImageFilterICVF43ISS3)

def itkVectorMagnitudeImageFilterICVF43IUC3_New():
    return itkVectorMagnitudeImageFilterICVF43IUC3.New()

class itkVectorMagnitudeImageFilterICVF43IUC3(itkVectorMagnitudeImageFilterICVF43IUC3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43IUC3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43IUC3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUC3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUC3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUC3_swigregister(itkVectorMagnitudeImageFilterICVF43IUC3)

def itkVectorMagnitudeImageFilterICVF43IUS3_New():
    return itkVectorMagnitudeImageFilterICVF43IUS3.New()

class itkVectorMagnitudeImageFilterICVF43IUS3(itkVectorMagnitudeImageFilterICVF43IUS3_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF43IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF43IUS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF43IUS3_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF43IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF43IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF43IUS3

        Create a new object of the class itkVectorMagnitudeImageFilterICVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF43IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF43IUS3 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IUS3_swigregister(itkVectorMagnitudeImageFilterICVF43IUS3)

def itkVectorMagnitudeImageFilterICVF44ID4_New():
    return itkVectorMagnitudeImageFilterICVF44ID4.New()

class itkVectorMagnitudeImageFilterICVF44ID4(itkVectorMagnitudeImageFilterICVF44ID4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44ID4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44ID4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44ID4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44ID4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_swigregister(itkVectorMagnitudeImageFilterICVF44ID4)

def itkVectorMagnitudeImageFilterICVF44IF4_New():
    return itkVectorMagnitudeImageFilterICVF44IF4.New()

class itkVectorMagnitudeImageFilterICVF44IF4(itkVectorMagnitudeImageFilterICVF44IF4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44IF4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44IF4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44IF4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44IF4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_swigregister(itkVectorMagnitudeImageFilterICVF44IF4)

def itkVectorMagnitudeImageFilterICVF44ISS4_New():
    return itkVectorMagnitudeImageFilterICVF44ISS4.New()

class itkVectorMagnitudeImageFilterICVF44ISS4(itkVectorMagnitudeImageFilterICVF44ISS4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44ISS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44ISS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44ISS4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44ISS4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ISS4_swigregister(itkVectorMagnitudeImageFilterICVF44ISS4)

def itkVectorMagnitudeImageFilterICVF44IUC4_New():
    return itkVectorMagnitudeImageFilterICVF44IUC4.New()

class itkVectorMagnitudeImageFilterICVF44IUC4(itkVectorMagnitudeImageFilterICVF44IUC4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44IUC4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44IUC4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44IUC4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44IUC4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUC4_swigregister(itkVectorMagnitudeImageFilterICVF44IUC4)

def itkVectorMagnitudeImageFilterICVF44IUS4_New():
    return itkVectorMagnitudeImageFilterICVF44IUS4.New()

class itkVectorMagnitudeImageFilterICVF44IUS4(itkVectorMagnitudeImageFilterICVF44IUS4_Superclass):
    r"""Proxy of C++ itkVectorMagnitudeImageFilterICVF44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorMagnitudeImageFilterICVF44IUS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorMagnitudeImageFilterICVF44IUS4_Pointer"""
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorMagnitudeImageFilterPython.delete_itkVectorMagnitudeImageFilterICVF44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorMagnitudeImageFilterICVF44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorMagnitudeImageFilterICVF44IUS4

        Create a new object of the class itkVectorMagnitudeImageFilterICVF44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorMagnitudeImageFilterICVF44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorMagnitudeImageFilterICVF44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorMagnitudeImageFilterICVF44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorMagnitudeImageFilterICVF44IUS4 in _itkVectorMagnitudeImageFilterPython:
_itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IUS4_swigregister(itkVectorMagnitudeImageFilterICVF44IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def vector_magnitude_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VectorMagnitudeImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VectorMagnitudeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def vector_magnitude_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.VectorMagnitudeImageFilter
    vector_magnitude_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    vector_magnitude_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_generator_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryGeneratorImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryGeneratorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_generator_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.UnaryGeneratorImageFilter
    unary_generator_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_generator_image_filter.__doc__ = filter_object.__doc__



