# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkInvertIntensityImageFilterPython
else:
    import _itkInvertIntensityImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkInPlaceImageFilterAPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkInvertIntensityImageFilterID2ID2_Superclass_New():
    return itkInvertIntensityImageFilterID2ID2_Superclass.New()

class itkInvertIntensityImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkInvertIntensityImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterID2ID2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterID2ID2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< double,double >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< double,double > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< double,double > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID2ID2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID2ID2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Superclass_swigregister(itkInvertIntensityImageFilterID2ID2_Superclass)

def itkInvertIntensityImageFilterID3ID3_Superclass_New():
    return itkInvertIntensityImageFilterID3ID3_Superclass.New()

class itkInvertIntensityImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkInvertIntensityImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterID3ID3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterID3ID3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< double,double >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< double,double > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< double,double > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID3ID3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID3ID3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Superclass_swigregister(itkInvertIntensityImageFilterID3ID3_Superclass)

def itkInvertIntensityImageFilterID4ID4_Superclass_New():
    return itkInvertIntensityImageFilterID4ID4_Superclass.New()

class itkInvertIntensityImageFilterID4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkInvertIntensityImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterID4ID4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterID4ID4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< double,double >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< double,double > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< double,double > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID4ID4_Superclass

        Create a new object of the class itkInvertIntensityImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID4ID4_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Superclass_swigregister(itkInvertIntensityImageFilterID4ID4_Superclass)

def itkInvertIntensityImageFilterIF2IF2_Superclass_New():
    return itkInvertIntensityImageFilterIF2IF2_Superclass.New()

class itkInvertIntensityImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIF2IF2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIF2IF2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< float,float >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< float,float > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< float,float > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF2IF2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF2IF2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Superclass_swigregister(itkInvertIntensityImageFilterIF2IF2_Superclass)

def itkInvertIntensityImageFilterIF3IF3_Superclass_New():
    return itkInvertIntensityImageFilterIF3IF3_Superclass.New()

class itkInvertIntensityImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIF3IF3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIF3IF3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< float,float >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< float,float > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< float,float > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF3IF3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF3IF3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Superclass_swigregister(itkInvertIntensityImageFilterIF3IF3_Superclass)

def itkInvertIntensityImageFilterIF4IF4_Superclass_New():
    return itkInvertIntensityImageFilterIF4IF4_Superclass.New()

class itkInvertIntensityImageFilterIF4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIF4IF4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIF4IF4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< float,float >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< float,float > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< float,float > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF4IF4_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF4IF4_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Superclass_swigregister(itkInvertIntensityImageFilterIF4IF4_Superclass)

def itkInvertIntensityImageFilterISS2ISS2_Superclass_New():
    return itkInvertIntensityImageFilterISS2ISS2_Superclass.New()

class itkInvertIntensityImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< short,short >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< short,short > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< short,short > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS2ISS2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS2ISS2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Superclass_swigregister(itkInvertIntensityImageFilterISS2ISS2_Superclass)

def itkInvertIntensityImageFilterISS3ISS3_Superclass_New():
    return itkInvertIntensityImageFilterISS3ISS3_Superclass.New()

class itkInvertIntensityImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< short,short >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< short,short > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< short,short > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS3ISS3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS3ISS3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Superclass_swigregister(itkInvertIntensityImageFilterISS3ISS3_Superclass)

def itkInvertIntensityImageFilterISS4ISS4_Superclass_New():
    return itkInvertIntensityImageFilterISS4ISS4_Superclass.New()

class itkInvertIntensityImageFilterISS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< short,short >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< short,short > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< short,short > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS4ISS4_Superclass

        Create a new object of the class itkInvertIntensityImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS4ISS4_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Superclass_swigregister(itkInvertIntensityImageFilterISS4ISS4_Superclass)

def itkInvertIntensityImageFilterIUC2IUC2_Superclass_New():
    return itkInvertIntensityImageFilterIUC2IUC2_Superclass.New()

class itkInvertIntensityImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned char,unsigned char > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< unsigned char,unsigned char > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC2IUC2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Superclass_swigregister(itkInvertIntensityImageFilterIUC2IUC2_Superclass)

def itkInvertIntensityImageFilterIUC3IUC3_Superclass_New():
    return itkInvertIntensityImageFilterIUC3IUC3_Superclass.New()

class itkInvertIntensityImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned char,unsigned char > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< unsigned char,unsigned char > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC3IUC3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Superclass_swigregister(itkInvertIntensityImageFilterIUC3IUC3_Superclass)

def itkInvertIntensityImageFilterIUC4IUC4_Superclass_New():
    return itkInvertIntensityImageFilterIUC4IUC4_Superclass.New()

class itkInvertIntensityImageFilterIUC4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned char,unsigned char > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< unsigned char,unsigned char > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC4IUC4_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Superclass_swigregister(itkInvertIntensityImageFilterIUC4IUC4_Superclass)

def itkInvertIntensityImageFilterIUS2IUS2_Superclass_New():
    return itkInvertIntensityImageFilterIUS2IUS2_Superclass.New()

class itkInvertIntensityImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned short,unsigned short > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< unsigned short,unsigned short > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS2IUS2_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Superclass_swigregister(itkInvertIntensityImageFilterIUS2IUS2_Superclass)

def itkInvertIntensityImageFilterIUS3IUS3_Superclass_New():
    return itkInvertIntensityImageFilterIUS3IUS3_Superclass.New()

class itkInvertIntensityImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned short,unsigned short > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< unsigned short,unsigned short > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS3IUS3_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Superclass_swigregister(itkInvertIntensityImageFilterIUS3IUS3_Superclass)

def itkInvertIntensityImageFilterIUS4IUS4_Superclass_New():
    return itkInvertIntensityImageFilterIUS4IUS4_Superclass.New()

class itkInvertIntensityImageFilterIUS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::InvertIntensityTransform< unsigned short,unsigned short > const &
        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::InvertIntensityTransform< unsigned short,unsigned short > const &

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkInvertIntensityImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS4IUS4_Superclass in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Superclass_swigregister(itkInvertIntensityImageFilterIUS4IUS4_Superclass)

def itkInvertIntensityImageFilterID2ID2_New():
    return itkInvertIntensityImageFilterID2ID2.New()

class itkInvertIntensityImageFilterID2ID2(itkInvertIntensityImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterID2ID2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterID2ID2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> double const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID2ID2

        Create a new object of the class itkInvertIntensityImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID2ID2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID2ID2_swigregister(itkInvertIntensityImageFilterID2ID2)

def itkInvertIntensityImageFilterID3ID3_New():
    return itkInvertIntensityImageFilterID3ID3.New()

class itkInvertIntensityImageFilterID3ID3(itkInvertIntensityImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterID3ID3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterID3ID3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> double const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID3ID3

        Create a new object of the class itkInvertIntensityImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID3ID3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID3ID3_swigregister(itkInvertIntensityImageFilterID3ID3)

def itkInvertIntensityImageFilterID4ID4_New():
    return itkInvertIntensityImageFilterID4ID4.New()

class itkInvertIntensityImageFilterID4ID4(itkInvertIntensityImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterID4ID4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterID4ID4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> double const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterID4ID4

        Create a new object of the class itkInvertIntensityImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterID4ID4 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterID4ID4_swigregister(itkInvertIntensityImageFilterID4ID4)

def itkInvertIntensityImageFilterIF2IF2_New():
    return itkInvertIntensityImageFilterIF2IF2.New()

class itkInvertIntensityImageFilterIF2IF2(itkInvertIntensityImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIF2IF2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIF2IF2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> float const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF2IF2

        Create a new object of the class itkInvertIntensityImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF2IF2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF2IF2_swigregister(itkInvertIntensityImageFilterIF2IF2)

def itkInvertIntensityImageFilterIF3IF3_New():
    return itkInvertIntensityImageFilterIF3IF3.New()

class itkInvertIntensityImageFilterIF3IF3(itkInvertIntensityImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIF3IF3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIF3IF3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> float const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF3IF3

        Create a new object of the class itkInvertIntensityImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF3IF3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF3IF3_swigregister(itkInvertIntensityImageFilterIF3IF3)

def itkInvertIntensityImageFilterIF4IF4_New():
    return itkInvertIntensityImageFilterIF4IF4.New()

class itkInvertIntensityImageFilterIF4IF4(itkInvertIntensityImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIF4IF4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIF4IF4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> float const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIF4IF4

        Create a new object of the class itkInvertIntensityImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIF4IF4 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIF4IF4_swigregister(itkInvertIntensityImageFilterIF4IF4)

def itkInvertIntensityImageFilterISS2ISS2_New():
    return itkInvertIntensityImageFilterISS2ISS2.New()

class itkInvertIntensityImageFilterISS2ISS2(itkInvertIntensityImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterISS2ISS2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterISS2ISS2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> short const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS2ISS2

        Create a new object of the class itkInvertIntensityImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS2ISS2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS2ISS2_swigregister(itkInvertIntensityImageFilterISS2ISS2)

def itkInvertIntensityImageFilterISS3ISS3_New():
    return itkInvertIntensityImageFilterISS3ISS3.New()

class itkInvertIntensityImageFilterISS3ISS3(itkInvertIntensityImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterISS3ISS3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterISS3ISS3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> short const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS3ISS3

        Create a new object of the class itkInvertIntensityImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS3ISS3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS3ISS3_swigregister(itkInvertIntensityImageFilterISS3ISS3)

def itkInvertIntensityImageFilterISS4ISS4_New():
    return itkInvertIntensityImageFilterISS4ISS4.New()

class itkInvertIntensityImageFilterISS4ISS4(itkInvertIntensityImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterISS4ISS4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterISS4ISS4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> short const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterISS4ISS4

        Create a new object of the class itkInvertIntensityImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterISS4ISS4 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterISS4ISS4_swigregister(itkInvertIntensityImageFilterISS4ISS4)

def itkInvertIntensityImageFilterIUC2IUC2_New():
    return itkInvertIntensityImageFilterIUC2IUC2.New()

class itkInvertIntensityImageFilterIUC2IUC2(itkInvertIntensityImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUC2IUC2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUC2IUC2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned char const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC2IUC2

        Create a new object of the class itkInvertIntensityImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC2IUC2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC2IUC2_swigregister(itkInvertIntensityImageFilterIUC2IUC2)

def itkInvertIntensityImageFilterIUC3IUC3_New():
    return itkInvertIntensityImageFilterIUC3IUC3.New()

class itkInvertIntensityImageFilterIUC3IUC3(itkInvertIntensityImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUC3IUC3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUC3IUC3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned char const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC3IUC3

        Create a new object of the class itkInvertIntensityImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC3IUC3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC3IUC3_swigregister(itkInvertIntensityImageFilterIUC3IUC3)

def itkInvertIntensityImageFilterIUC4IUC4_New():
    return itkInvertIntensityImageFilterIUC4IUC4.New()

class itkInvertIntensityImageFilterIUC4IUC4(itkInvertIntensityImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUC4IUC4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUC4IUC4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned char const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUC4IUC4

        Create a new object of the class itkInvertIntensityImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUC4IUC4 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUC4IUC4_swigregister(itkInvertIntensityImageFilterIUC4IUC4)

def itkInvertIntensityImageFilterIUS2IUS2_New():
    return itkInvertIntensityImageFilterIUS2IUS2.New()

class itkInvertIntensityImageFilterIUS2IUS2(itkInvertIntensityImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUS2IUS2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUS2IUS2_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned short const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS2IUS2

        Create a new object of the class itkInvertIntensityImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS2IUS2 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS2IUS2_swigregister(itkInvertIntensityImageFilterIUS2IUS2)

def itkInvertIntensityImageFilterIUS3IUS3_New():
    return itkInvertIntensityImageFilterIUS3IUS3.New()

class itkInvertIntensityImageFilterIUS3IUS3(itkInvertIntensityImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUS3IUS3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUS3IUS3_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned short const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS3IUS3

        Create a new object of the class itkInvertIntensityImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS3IUS3 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS3IUS3_swigregister(itkInvertIntensityImageFilterIUS3IUS3)

def itkInvertIntensityImageFilterIUS4IUS4_New():
    return itkInvertIntensityImageFilterIUS4IUS4.New()

class itkInvertIntensityImageFilterIUS4IUS4(itkInvertIntensityImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkInvertIntensityImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkInvertIntensityImageFilterIUS4IUS4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkInvertIntensityImageFilterIUS4IUS4_Pointer"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_Clone(self)

    def SetMaximum(self, _arg):
        r"""
        SetMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_SetMaximum(self, _arg)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned short const &"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_GetMaximum(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_PrintSelf(self, os, indent)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_BeforeThreadedGenerateData(self)
    InputHasNumericTraitsCheck = _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkInvertIntensityImageFilterPython.delete_itkInvertIntensityImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInvertIntensityImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkInvertIntensityImageFilterIUS4IUS4

        Create a new object of the class itkInvertIntensityImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkInvertIntensityImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkInvertIntensityImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkInvertIntensityImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkInvertIntensityImageFilterIUS4IUS4 in _itkInvertIntensityImageFilterPython:
_itkInvertIntensityImageFilterPython.itkInvertIntensityImageFilterIUS4IUS4_swigregister(itkInvertIntensityImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def invert_intensity_image_filter(*args: itkt.ImageLike,  maximum: int=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for InvertIntensityImageFilter"""
    import itk

    kwarg_typehints = { 'maximum':maximum,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.InvertIntensityImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def invert_intensity_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.InvertIntensityImageFilter
    invert_intensity_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    invert_intensity_image_filter.__doc__ = filter_object.__doc__



