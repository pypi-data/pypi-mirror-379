# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCurvatureFlowPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMinMaxCurvatureFlowImageFilterPython
else:
    import _itkMinMaxCurvatureFlowImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCurvatureFlowImageFilterPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkMinMaxCurvatureFlowImageFilterID2ID2_New():
    return itkMinMaxCurvatureFlowImageFilterID2ID2.New()

class itkMinMaxCurvatureFlowImageFilterID2ID2(itk.itkCurvatureFlowImageFilterPython.itkCurvatureFlowImageFilterID2ID2):
    r"""Proxy of C++ itkMinMaxCurvatureFlowImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinMaxCurvatureFlowImageFilterID2ID2_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinMaxCurvatureFlowImageFilterID2ID2_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_Clone(self)

    def SetStencilRadius(self, _arg):
        r"""
        SetStencilRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_SetStencilRadius(self, _arg)

    def GetStencilRadius(self):
        r"""GetStencilRadius(self) -> unsigned long"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_GetStencilRadius(self)
    UnsignedLongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_UnsignedLongConvertibleToOutputCheck
    
    OutputLessThanComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_OutputLessThanComparableCheck
    
    LongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_LongConvertibleToOutputCheck
    
    OutputDoubleComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_OutputDoubleComparableCheck
    
    OutputDoubleMultiplyAndAssignOperatorCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_OutputDoubleMultiplyAndAssignOperatorCheck
    
    OutputGreaterThanUnsignedLongCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_OutputGreaterThanUnsignedLongCheck
    
    UnsignedLongOutputAditiveOperatorsCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_UnsignedLongOutputAditiveOperatorsCheck
    
    __swig_destroy__ = _itkMinMaxCurvatureFlowImageFilterPython.delete_itkMinMaxCurvatureFlowImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinMaxCurvatureFlowImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinMaxCurvatureFlowImageFilterID2ID2

        Create a new object of the class itkMinMaxCurvatureFlowImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinMaxCurvatureFlowImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinMaxCurvatureFlowImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinMaxCurvatureFlowImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinMaxCurvatureFlowImageFilterID2ID2 in _itkMinMaxCurvatureFlowImageFilterPython:
_itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID2ID2_swigregister(itkMinMaxCurvatureFlowImageFilterID2ID2)

def itkMinMaxCurvatureFlowImageFilterID3ID3_New():
    return itkMinMaxCurvatureFlowImageFilterID3ID3.New()

class itkMinMaxCurvatureFlowImageFilterID3ID3(itk.itkCurvatureFlowImageFilterPython.itkCurvatureFlowImageFilterID3ID3):
    r"""Proxy of C++ itkMinMaxCurvatureFlowImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinMaxCurvatureFlowImageFilterID3ID3_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinMaxCurvatureFlowImageFilterID3ID3_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_Clone(self)

    def SetStencilRadius(self, _arg):
        r"""
        SetStencilRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_SetStencilRadius(self, _arg)

    def GetStencilRadius(self):
        r"""GetStencilRadius(self) -> unsigned long"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_GetStencilRadius(self)
    UnsignedLongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_UnsignedLongConvertibleToOutputCheck
    
    OutputLessThanComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_OutputLessThanComparableCheck
    
    LongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_LongConvertibleToOutputCheck
    
    OutputDoubleComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_OutputDoubleComparableCheck
    
    OutputDoubleMultiplyAndAssignOperatorCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_OutputDoubleMultiplyAndAssignOperatorCheck
    
    OutputGreaterThanUnsignedLongCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_OutputGreaterThanUnsignedLongCheck
    
    UnsignedLongOutputAditiveOperatorsCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_UnsignedLongOutputAditiveOperatorsCheck
    
    __swig_destroy__ = _itkMinMaxCurvatureFlowImageFilterPython.delete_itkMinMaxCurvatureFlowImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinMaxCurvatureFlowImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinMaxCurvatureFlowImageFilterID3ID3

        Create a new object of the class itkMinMaxCurvatureFlowImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinMaxCurvatureFlowImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinMaxCurvatureFlowImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinMaxCurvatureFlowImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinMaxCurvatureFlowImageFilterID3ID3 in _itkMinMaxCurvatureFlowImageFilterPython:
_itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID3ID3_swigregister(itkMinMaxCurvatureFlowImageFilterID3ID3)

def itkMinMaxCurvatureFlowImageFilterID4ID4_New():
    return itkMinMaxCurvatureFlowImageFilterID4ID4.New()

class itkMinMaxCurvatureFlowImageFilterID4ID4(itk.itkCurvatureFlowImageFilterPython.itkCurvatureFlowImageFilterID4ID4):
    r"""Proxy of C++ itkMinMaxCurvatureFlowImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinMaxCurvatureFlowImageFilterID4ID4_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinMaxCurvatureFlowImageFilterID4ID4_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_Clone(self)

    def SetStencilRadius(self, _arg):
        r"""
        SetStencilRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_SetStencilRadius(self, _arg)

    def GetStencilRadius(self):
        r"""GetStencilRadius(self) -> unsigned long"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_GetStencilRadius(self)
    UnsignedLongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_UnsignedLongConvertibleToOutputCheck
    
    OutputLessThanComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_OutputLessThanComparableCheck
    
    LongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_LongConvertibleToOutputCheck
    
    OutputDoubleComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_OutputDoubleComparableCheck
    
    OutputDoubleMultiplyAndAssignOperatorCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_OutputDoubleMultiplyAndAssignOperatorCheck
    
    OutputGreaterThanUnsignedLongCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_OutputGreaterThanUnsignedLongCheck
    
    UnsignedLongOutputAditiveOperatorsCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_UnsignedLongOutputAditiveOperatorsCheck
    
    __swig_destroy__ = _itkMinMaxCurvatureFlowImageFilterPython.delete_itkMinMaxCurvatureFlowImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinMaxCurvatureFlowImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinMaxCurvatureFlowImageFilterID4ID4

        Create a new object of the class itkMinMaxCurvatureFlowImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinMaxCurvatureFlowImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinMaxCurvatureFlowImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinMaxCurvatureFlowImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinMaxCurvatureFlowImageFilterID4ID4 in _itkMinMaxCurvatureFlowImageFilterPython:
_itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterID4ID4_swigregister(itkMinMaxCurvatureFlowImageFilterID4ID4)

def itkMinMaxCurvatureFlowImageFilterIF2IF2_New():
    return itkMinMaxCurvatureFlowImageFilterIF2IF2.New()

class itkMinMaxCurvatureFlowImageFilterIF2IF2(itk.itkCurvatureFlowImageFilterPython.itkCurvatureFlowImageFilterIF2IF2):
    r"""Proxy of C++ itkMinMaxCurvatureFlowImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinMaxCurvatureFlowImageFilterIF2IF2_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinMaxCurvatureFlowImageFilterIF2IF2_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_Clone(self)

    def SetStencilRadius(self, _arg):
        r"""
        SetStencilRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_SetStencilRadius(self, _arg)

    def GetStencilRadius(self):
        r"""GetStencilRadius(self) -> unsigned long"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_GetStencilRadius(self)
    UnsignedLongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_UnsignedLongConvertibleToOutputCheck
    
    OutputLessThanComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_OutputLessThanComparableCheck
    
    LongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_LongConvertibleToOutputCheck
    
    OutputDoubleComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_OutputDoubleComparableCheck
    
    OutputDoubleMultiplyAndAssignOperatorCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_OutputDoubleMultiplyAndAssignOperatorCheck
    
    OutputGreaterThanUnsignedLongCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_OutputGreaterThanUnsignedLongCheck
    
    UnsignedLongOutputAditiveOperatorsCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_UnsignedLongOutputAditiveOperatorsCheck
    
    __swig_destroy__ = _itkMinMaxCurvatureFlowImageFilterPython.delete_itkMinMaxCurvatureFlowImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinMaxCurvatureFlowImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinMaxCurvatureFlowImageFilterIF2IF2

        Create a new object of the class itkMinMaxCurvatureFlowImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinMaxCurvatureFlowImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinMaxCurvatureFlowImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinMaxCurvatureFlowImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinMaxCurvatureFlowImageFilterIF2IF2 in _itkMinMaxCurvatureFlowImageFilterPython:
_itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF2IF2_swigregister(itkMinMaxCurvatureFlowImageFilterIF2IF2)

def itkMinMaxCurvatureFlowImageFilterIF3IF3_New():
    return itkMinMaxCurvatureFlowImageFilterIF3IF3.New()

class itkMinMaxCurvatureFlowImageFilterIF3IF3(itk.itkCurvatureFlowImageFilterPython.itkCurvatureFlowImageFilterIF3IF3):
    r"""Proxy of C++ itkMinMaxCurvatureFlowImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinMaxCurvatureFlowImageFilterIF3IF3_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinMaxCurvatureFlowImageFilterIF3IF3_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_Clone(self)

    def SetStencilRadius(self, _arg):
        r"""
        SetStencilRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_SetStencilRadius(self, _arg)

    def GetStencilRadius(self):
        r"""GetStencilRadius(self) -> unsigned long"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_GetStencilRadius(self)
    UnsignedLongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_UnsignedLongConvertibleToOutputCheck
    
    OutputLessThanComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_OutputLessThanComparableCheck
    
    LongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_LongConvertibleToOutputCheck
    
    OutputDoubleComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_OutputDoubleComparableCheck
    
    OutputDoubleMultiplyAndAssignOperatorCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_OutputDoubleMultiplyAndAssignOperatorCheck
    
    OutputGreaterThanUnsignedLongCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_OutputGreaterThanUnsignedLongCheck
    
    UnsignedLongOutputAditiveOperatorsCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_UnsignedLongOutputAditiveOperatorsCheck
    
    __swig_destroy__ = _itkMinMaxCurvatureFlowImageFilterPython.delete_itkMinMaxCurvatureFlowImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinMaxCurvatureFlowImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinMaxCurvatureFlowImageFilterIF3IF3

        Create a new object of the class itkMinMaxCurvatureFlowImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinMaxCurvatureFlowImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinMaxCurvatureFlowImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinMaxCurvatureFlowImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinMaxCurvatureFlowImageFilterIF3IF3 in _itkMinMaxCurvatureFlowImageFilterPython:
_itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF3IF3_swigregister(itkMinMaxCurvatureFlowImageFilterIF3IF3)

def itkMinMaxCurvatureFlowImageFilterIF4IF4_New():
    return itkMinMaxCurvatureFlowImageFilterIF4IF4.New()

class itkMinMaxCurvatureFlowImageFilterIF4IF4(itk.itkCurvatureFlowImageFilterPython.itkCurvatureFlowImageFilterIF4IF4):
    r"""Proxy of C++ itkMinMaxCurvatureFlowImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinMaxCurvatureFlowImageFilterIF4IF4_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinMaxCurvatureFlowImageFilterIF4IF4_Pointer"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_Clone(self)

    def SetStencilRadius(self, _arg):
        r"""
        SetStencilRadius(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_SetStencilRadius(self, _arg)

    def GetStencilRadius(self):
        r"""GetStencilRadius(self) -> unsigned long"""
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_GetStencilRadius(self)
    UnsignedLongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_UnsignedLongConvertibleToOutputCheck
    
    OutputLessThanComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_OutputLessThanComparableCheck
    
    LongConvertibleToOutputCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_LongConvertibleToOutputCheck
    
    OutputDoubleComparableCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_OutputDoubleComparableCheck
    
    OutputDoubleMultiplyAndAssignOperatorCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_OutputDoubleMultiplyAndAssignOperatorCheck
    
    OutputGreaterThanUnsignedLongCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_OutputGreaterThanUnsignedLongCheck
    
    UnsignedLongOutputAditiveOperatorsCheck = _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_UnsignedLongOutputAditiveOperatorsCheck
    
    __swig_destroy__ = _itkMinMaxCurvatureFlowImageFilterPython.delete_itkMinMaxCurvatureFlowImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinMaxCurvatureFlowImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinMaxCurvatureFlowImageFilterIF4IF4

        Create a new object of the class itkMinMaxCurvatureFlowImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinMaxCurvatureFlowImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinMaxCurvatureFlowImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinMaxCurvatureFlowImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinMaxCurvatureFlowImageFilterIF4IF4 in _itkMinMaxCurvatureFlowImageFilterPython:
_itkMinMaxCurvatureFlowImageFilterPython.itkMinMaxCurvatureFlowImageFilterIF4IF4_swigregister(itkMinMaxCurvatureFlowImageFilterIF4IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def min_max_curvature_flow_image_filter(*args: itkt.ImageLike,  stencil_radius: int=..., time_step: float=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MinMaxCurvatureFlowImageFilter"""
    import itk

    kwarg_typehints = { 'stencil_radius':stencil_radius,'time_step':time_step,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MinMaxCurvatureFlowImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def min_max_curvature_flow_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKCurvatureFlow.MinMaxCurvatureFlowImageFilter
    min_max_curvature_flow_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    min_max_curvature_flow_image_filter.__doc__ = filter_object.__doc__



