# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkKittlerIllingworthThresholdImageFilterPython
else:
    import _itkKittlerIllingworthThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkHistogramThresholdImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToHistogramFilterPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkImageSinkPython
import itk.itkHistogramThresholdCalculatorPython

def itkKittlerIllingworthThresholdImageFilterID2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterID2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterID2ISS2)

def itkKittlerIllingworthThresholdImageFilterID2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterID2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterID2IUC2)

def itkKittlerIllingworthThresholdImageFilterID2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterID2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterID2IUS2)

def itkKittlerIllingworthThresholdImageFilterID3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterID3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterID3ISS3)

def itkKittlerIllingworthThresholdImageFilterID3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterID3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterID3IUC3)

def itkKittlerIllingworthThresholdImageFilterID3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterID3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterID3IUS3)

def itkKittlerIllingworthThresholdImageFilterID4ISS4_New():
    return itkKittlerIllingworthThresholdImageFilterID4ISS4.New()

class itkKittlerIllingworthThresholdImageFilterID4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4ISS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID4ISS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID4ISS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4ISS4_swigregister(itkKittlerIllingworthThresholdImageFilterID4ISS4)

def itkKittlerIllingworthThresholdImageFilterID4IUC4_New():
    return itkKittlerIllingworthThresholdImageFilterID4IUC4.New()

class itkKittlerIllingworthThresholdImageFilterID4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUC4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID4IUC4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID4IUC4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUC4_swigregister(itkKittlerIllingworthThresholdImageFilterID4IUC4)

def itkKittlerIllingworthThresholdImageFilterID4IUS4_New():
    return itkKittlerIllingworthThresholdImageFilterID4IUS4.New()

class itkKittlerIllingworthThresholdImageFilterID4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterID4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterID4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID4IUS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID4IUS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID4IUS4_swigregister(itkKittlerIllingworthThresholdImageFilterID4IUS4)

def itkKittlerIllingworthThresholdImageFilterIF2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2ISS2)

def itkKittlerIllingworthThresholdImageFilterIF2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUC2)

def itkKittlerIllingworthThresholdImageFilterIF2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterIF2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUS2)

def itkKittlerIllingworthThresholdImageFilterIF3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3ISS3)

def itkKittlerIllingworthThresholdImageFilterIF3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUC3)

def itkKittlerIllingworthThresholdImageFilterIF3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterIF3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUS3)

def itkKittlerIllingworthThresholdImageFilterIF4ISS4_New():
    return itkKittlerIllingworthThresholdImageFilterIF4ISS4.New()

class itkKittlerIllingworthThresholdImageFilterIF4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4ISS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF4ISS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF4ISS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4ISS4_swigregister(itkKittlerIllingworthThresholdImageFilterIF4ISS4)

def itkKittlerIllingworthThresholdImageFilterIF4IUC4_New():
    return itkKittlerIllingworthThresholdImageFilterIF4IUC4.New()

class itkKittlerIllingworthThresholdImageFilterIF4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUC4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF4IUC4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF4IUC4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUC4_swigregister(itkKittlerIllingworthThresholdImageFilterIF4IUC4)

def itkKittlerIllingworthThresholdImageFilterIF4IUS4_New():
    return itkKittlerIllingworthThresholdImageFilterIF4IUS4.New()

class itkKittlerIllingworthThresholdImageFilterIF4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIF4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIF4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF4IUS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF4IUS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF4IUS4_swigregister(itkKittlerIllingworthThresholdImageFilterIF4IUS4)

def itkKittlerIllingworthThresholdImageFilterISS2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2ISS2)

def itkKittlerIllingworthThresholdImageFilterISS2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUC2)

def itkKittlerIllingworthThresholdImageFilterISS2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterISS2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUS2)

def itkKittlerIllingworthThresholdImageFilterISS3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3ISS3)

def itkKittlerIllingworthThresholdImageFilterISS3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUC3)

def itkKittlerIllingworthThresholdImageFilterISS3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterISS3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUS3)

def itkKittlerIllingworthThresholdImageFilterISS4ISS4_New():
    return itkKittlerIllingworthThresholdImageFilterISS4ISS4.New()

class itkKittlerIllingworthThresholdImageFilterISS4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS4ISS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS4ISS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4ISS4_swigregister(itkKittlerIllingworthThresholdImageFilterISS4ISS4)

def itkKittlerIllingworthThresholdImageFilterISS4IUC4_New():
    return itkKittlerIllingworthThresholdImageFilterISS4IUC4.New()

class itkKittlerIllingworthThresholdImageFilterISS4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUC4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS4IUC4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS4IUC4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUC4_swigregister(itkKittlerIllingworthThresholdImageFilterISS4IUC4)

def itkKittlerIllingworthThresholdImageFilterISS4IUS4_New():
    return itkKittlerIllingworthThresholdImageFilterISS4IUS4.New()

class itkKittlerIllingworthThresholdImageFilterISS4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterISS4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterISS4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS4IUS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS4IUS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS4IUS4_swigregister(itkKittlerIllingworthThresholdImageFilterISS4IUS4)

def itkKittlerIllingworthThresholdImageFilterIUC2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2ISS2)

def itkKittlerIllingworthThresholdImageFilterIUC2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUC2)

def itkKittlerIllingworthThresholdImageFilterIUC2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUS2)

def itkKittlerIllingworthThresholdImageFilterIUC3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3ISS3)

def itkKittlerIllingworthThresholdImageFilterIUC3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUC3)

def itkKittlerIllingworthThresholdImageFilterIUC3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUS3)

def itkKittlerIllingworthThresholdImageFilterIUC4ISS4_New():
    return itkKittlerIllingworthThresholdImageFilterIUC4ISS4.New()

class itkKittlerIllingworthThresholdImageFilterIUC4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4ISS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC4ISS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC4ISS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4ISS4_swigregister(itkKittlerIllingworthThresholdImageFilterIUC4ISS4)

def itkKittlerIllingworthThresholdImageFilterIUC4IUC4_New():
    return itkKittlerIllingworthThresholdImageFilterIUC4IUC4.New()

class itkKittlerIllingworthThresholdImageFilterIUC4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC4IUC4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC4IUC4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUC4_swigregister(itkKittlerIllingworthThresholdImageFilterIUC4IUC4)

def itkKittlerIllingworthThresholdImageFilterIUC4IUS4_New():
    return itkKittlerIllingworthThresholdImageFilterIUC4IUS4.New()

class itkKittlerIllingworthThresholdImageFilterIUC4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUC4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUC4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC4IUS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC4IUS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC4IUS4_swigregister(itkKittlerIllingworthThresholdImageFilterIUC4IUS4)

def itkKittlerIllingworthThresholdImageFilterIUS2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2ISS2)

def itkKittlerIllingworthThresholdImageFilterIUS2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2IUC2)

def itkKittlerIllingworthThresholdImageFilterIUS2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2IUS2)

def itkKittlerIllingworthThresholdImageFilterIUS3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3ISS3)

def itkKittlerIllingworthThresholdImageFilterIUS3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3IUC3)

def itkKittlerIllingworthThresholdImageFilterIUS3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3IUS3)

def itkKittlerIllingworthThresholdImageFilterIUS4ISS4_New():
    return itkKittlerIllingworthThresholdImageFilterIUS4ISS4.New()

class itkKittlerIllingworthThresholdImageFilterIUS4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS4ISS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4ISS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS4ISS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS4ISS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4ISS4_swigregister(itkKittlerIllingworthThresholdImageFilterIUS4ISS4)

def itkKittlerIllingworthThresholdImageFilterIUS4IUC4_New():
    return itkKittlerIllingworthThresholdImageFilterIUS4IUC4.New()

class itkKittlerIllingworthThresholdImageFilterIUS4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUC4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS4IUC4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS4IUC4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUC4_swigregister(itkKittlerIllingworthThresholdImageFilterIUS4IUC4)

def itkKittlerIllingworthThresholdImageFilterIUS4IUS4_New():
    return itkKittlerIllingworthThresholdImageFilterIUS4IUS4.New()

class itkKittlerIllingworthThresholdImageFilterIUS4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4):
    r"""Proxy of C++ itkKittlerIllingworthThresholdImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkKittlerIllingworthThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkKittlerIllingworthThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkKittlerIllingworthThresholdImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS4IUS4

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS4IUS4 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS4IUS4_swigregister(itkKittlerIllingworthThresholdImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def kittler_illingworth_threshold_image_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., outside_value: int=..., inside_value: int=..., number_of_histogram_bins: int=..., auto_minimum_maximum: bool=..., mask_output: bool=..., mask_value: int=..., calculator=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for KittlerIllingworthThresholdImageFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'outside_value':outside_value,'inside_value':inside_value,'number_of_histogram_bins':number_of_histogram_bins,'auto_minimum_maximum':auto_minimum_maximum,'mask_output':mask_output,'mask_value':mask_value,'calculator':calculator }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.KittlerIllingworthThresholdImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def kittler_illingworth_threshold_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.KittlerIllingworthThresholdImageFilter
    kittler_illingworth_threshold_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    kittler_illingworth_threshold_image_filter.__doc__ = filter_object.__doc__



