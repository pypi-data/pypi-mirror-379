# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaximumImageFilterPython
else:
    import _itkMaximumImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkBinaryGeneratorImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkArrayPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython

def itkMaximumImageFilterID2ID2ID2_New():
    return itkMaximumImageFilterID2ID2ID2.New()

class itkMaximumImageFilterID2ID2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2):
    r"""Proxy of C++ itkMaximumImageFilterID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterID2ID2ID2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterID2ID2ID2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterID2ID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterID2ID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterID2ID2ID2

        Create a new object of the class itkMaximumImageFilterID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterID2ID2ID2 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterID2ID2ID2_swigregister(itkMaximumImageFilterID2ID2ID2)

def itkMaximumImageFilterID3ID3ID3_New():
    return itkMaximumImageFilterID3ID3ID3.New()

class itkMaximumImageFilterID3ID3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3):
    r"""Proxy of C++ itkMaximumImageFilterID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterID3ID3ID3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterID3ID3ID3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterID3ID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterID3ID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterID3ID3ID3

        Create a new object of the class itkMaximumImageFilterID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterID3ID3ID3 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterID3ID3ID3_swigregister(itkMaximumImageFilterID3ID3ID3)

def itkMaximumImageFilterID4ID4ID4_New():
    return itkMaximumImageFilterID4ID4ID4.New()

class itkMaximumImageFilterID4ID4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4ID4ID4):
    r"""Proxy of C++ itkMaximumImageFilterID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterID4ID4ID4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterID4ID4ID4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterID4ID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterID4ID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterID4ID4ID4

        Create a new object of the class itkMaximumImageFilterID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterID4ID4ID4 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterID4ID4ID4_swigregister(itkMaximumImageFilterID4ID4ID4)

def itkMaximumImageFilterIF2IF2IF2_New():
    return itkMaximumImageFilterIF2IF2IF2.New()

class itkMaximumImageFilterIF2IF2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2):
    r"""Proxy of C++ itkMaximumImageFilterIF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIF2IF2IF2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIF2IF2IF2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIF2IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIF2IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIF2IF2IF2

        Create a new object of the class itkMaximumImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIF2IF2IF2 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIF2IF2IF2_swigregister(itkMaximumImageFilterIF2IF2IF2)

def itkMaximumImageFilterIF3IF3IF3_New():
    return itkMaximumImageFilterIF3IF3IF3.New()

class itkMaximumImageFilterIF3IF3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3):
    r"""Proxy of C++ itkMaximumImageFilterIF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIF3IF3IF3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIF3IF3IF3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIF3IF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIF3IF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIF3IF3IF3

        Create a new object of the class itkMaximumImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIF3IF3IF3 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIF3IF3IF3_swigregister(itkMaximumImageFilterIF3IF3IF3)

def itkMaximumImageFilterIF4IF4IF4_New():
    return itkMaximumImageFilterIF4IF4IF4.New()

class itkMaximumImageFilterIF4IF4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IF4IF4):
    r"""Proxy of C++ itkMaximumImageFilterIF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIF4IF4IF4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIF4IF4IF4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIF4IF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIF4IF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIF4IF4IF4

        Create a new object of the class itkMaximumImageFilterIF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIF4IF4IF4 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIF4IF4IF4_swigregister(itkMaximumImageFilterIF4IF4IF4)

def itkMaximumImageFilterISS2ISS2ISS2_New():
    return itkMaximumImageFilterISS2ISS2ISS2.New()

class itkMaximumImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""Proxy of C++ itkMaximumImageFilterISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterISS2ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterISS2ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterISS2ISS2ISS2

        Create a new object of the class itkMaximumImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterISS2ISS2ISS2 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterISS2ISS2ISS2_swigregister(itkMaximumImageFilterISS2ISS2ISS2)

def itkMaximumImageFilterISS3ISS3ISS3_New():
    return itkMaximumImageFilterISS3ISS3ISS3.New()

class itkMaximumImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""Proxy of C++ itkMaximumImageFilterISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterISS3ISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterISS3ISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterISS3ISS3ISS3

        Create a new object of the class itkMaximumImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterISS3ISS3ISS3 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterISS3ISS3ISS3_swigregister(itkMaximumImageFilterISS3ISS3ISS3)

def itkMaximumImageFilterISS4ISS4ISS4_New():
    return itkMaximumImageFilterISS4ISS4ISS4.New()

class itkMaximumImageFilterISS4ISS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4ISS4ISS4):
    r"""Proxy of C++ itkMaximumImageFilterISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterISS4ISS4ISS4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterISS4ISS4ISS4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterISS4ISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterISS4ISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterISS4ISS4ISS4

        Create a new object of the class itkMaximumImageFilterISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterISS4ISS4ISS4 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterISS4ISS4ISS4_swigregister(itkMaximumImageFilterISS4ISS4ISS4)

def itkMaximumImageFilterIUC2IUC2IUC2_New():
    return itkMaximumImageFilterIUC2IUC2IUC2.New()

class itkMaximumImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""Proxy of C++ itkMaximumImageFilterIUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIUC2IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIUC2IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIUC2IUC2IUC2

        Create a new object of the class itkMaximumImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIUC2IUC2IUC2 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIUC2IUC2IUC2_swigregister(itkMaximumImageFilterIUC2IUC2IUC2)

def itkMaximumImageFilterIUC3IUC3IUC3_New():
    return itkMaximumImageFilterIUC3IUC3IUC3.New()

class itkMaximumImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""Proxy of C++ itkMaximumImageFilterIUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIUC3IUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIUC3IUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIUC3IUC3IUC3

        Create a new object of the class itkMaximumImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIUC3IUC3IUC3 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIUC3IUC3IUC3_swigregister(itkMaximumImageFilterIUC3IUC3IUC3)

def itkMaximumImageFilterIUC4IUC4IUC4_New():
    return itkMaximumImageFilterIUC4IUC4IUC4.New()

class itkMaximumImageFilterIUC4IUC4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUC4IUC4):
    r"""Proxy of C++ itkMaximumImageFilterIUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIUC4IUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIUC4IUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIUC4IUC4IUC4

        Create a new object of the class itkMaximumImageFilterIUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIUC4IUC4IUC4 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIUC4IUC4IUC4_swigregister(itkMaximumImageFilterIUC4IUC4IUC4)

def itkMaximumImageFilterIUS2IUS2IUS2_New():
    return itkMaximumImageFilterIUS2IUS2IUS2.New()

class itkMaximumImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""Proxy of C++ itkMaximumImageFilterIUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIUS2IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIUS2IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIUS2IUS2IUS2

        Create a new object of the class itkMaximumImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIUS2IUS2IUS2 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIUS2IUS2IUS2_swigregister(itkMaximumImageFilterIUS2IUS2IUS2)

def itkMaximumImageFilterIUS3IUS3IUS3_New():
    return itkMaximumImageFilterIUS3IUS3IUS3.New()

class itkMaximumImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""Proxy of C++ itkMaximumImageFilterIUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIUS3IUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIUS3IUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIUS3IUS3IUS3

        Create a new object of the class itkMaximumImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIUS3IUS3IUS3 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIUS3IUS3IUS3_swigregister(itkMaximumImageFilterIUS3IUS3IUS3)

def itkMaximumImageFilterIUS4IUS4IUS4_New():
    return itkMaximumImageFilterIUS4IUS4IUS4.New()

class itkMaximumImageFilterIUS4IUS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUS4IUS4):
    r"""Proxy of C++ itkMaximumImageFilterIUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4_Clone(self)
    Input1ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4_Input1ConvertibleToOutputCheck
    
    Input2ConvertibleToOutputCheck = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4_Input2ConvertibleToOutputCheck
    
    Input1GreaterThanInput2Check = _itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4_Input1GreaterThanInput2Check
    
    __swig_destroy__ = _itkMaximumImageFilterPython.delete_itkMaximumImageFilterIUS4IUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumImageFilterIUS4IUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumImageFilterIUS4IUS4IUS4

        Create a new object of the class itkMaximumImageFilterIUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumImageFilterIUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumImageFilterIUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumImageFilterIUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumImageFilterIUS4IUS4IUS4 in _itkMaximumImageFilterPython:
_itkMaximumImageFilterPython.itkMaximumImageFilterIUS4IUS4IUS4_swigregister(itkMaximumImageFilterIUS4IUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def maximum_image_filter(*args: itkt.ImageLike,  constant1: int=..., constant2: int=..., constant: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MaximumImageFilter"""
    import itk

    kwarg_typehints = { 'constant1':constant1,'constant2':constant2,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MaximumImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def maximum_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.MaximumImageFilter
    maximum_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    maximum_image_filter.__doc__ = filter_object.__doc__



