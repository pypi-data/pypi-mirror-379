# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShiftScaleImageFilterPython
else:
    import _itkShiftScaleImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkShiftScaleImageFilterID2ID2_New():
    return itkShiftScaleImageFilterID2ID2.New()

class itkShiftScaleImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkShiftScaleImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterID2ID2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterID2ID2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID2ID2

        Create a new object of the class itkShiftScaleImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterID2ID2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID2ID2_swigregister(itkShiftScaleImageFilterID2ID2)

def itkShiftScaleImageFilterID3ID3_New():
    return itkShiftScaleImageFilterID3ID3.New()

class itkShiftScaleImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkShiftScaleImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterID3ID3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterID3ID3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID3ID3

        Create a new object of the class itkShiftScaleImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterID3ID3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID3ID3_swigregister(itkShiftScaleImageFilterID3ID3)

def itkShiftScaleImageFilterID4ID4_New():
    return itkShiftScaleImageFilterID4ID4.New()

class itkShiftScaleImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkShiftScaleImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterID4ID4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterID4ID4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterID4ID4

        Create a new object of the class itkShiftScaleImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterID4ID4 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterID4ID4_swigregister(itkShiftScaleImageFilterID4ID4)

def itkShiftScaleImageFilterIF2IF2_New():
    return itkShiftScaleImageFilterIF2IF2.New()

class itkShiftScaleImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkShiftScaleImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIF2IF2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIF2IF2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF2IF2

        Create a new object of the class itkShiftScaleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIF2IF2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF2IF2_swigregister(itkShiftScaleImageFilterIF2IF2)

def itkShiftScaleImageFilterIF3IF3_New():
    return itkShiftScaleImageFilterIF3IF3.New()

class itkShiftScaleImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkShiftScaleImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIF3IF3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIF3IF3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF3IF3

        Create a new object of the class itkShiftScaleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIF3IF3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF3IF3_swigregister(itkShiftScaleImageFilterIF3IF3)

def itkShiftScaleImageFilterIF4IF4_New():
    return itkShiftScaleImageFilterIF4IF4.New()

class itkShiftScaleImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkShiftScaleImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIF4IF4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIF4IF4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIF4IF4

        Create a new object of the class itkShiftScaleImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIF4IF4 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIF4IF4_swigregister(itkShiftScaleImageFilterIF4IF4)

def itkShiftScaleImageFilterISS2ISS2_New():
    return itkShiftScaleImageFilterISS2ISS2.New()

class itkShiftScaleImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkShiftScaleImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterISS2ISS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterISS2ISS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS2ISS2

        Create a new object of the class itkShiftScaleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterISS2ISS2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS2ISS2_swigregister(itkShiftScaleImageFilterISS2ISS2)

def itkShiftScaleImageFilterISS3ISS3_New():
    return itkShiftScaleImageFilterISS3ISS3.New()

class itkShiftScaleImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkShiftScaleImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterISS3ISS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterISS3ISS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS3ISS3

        Create a new object of the class itkShiftScaleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterISS3ISS3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS3ISS3_swigregister(itkShiftScaleImageFilterISS3ISS3)

def itkShiftScaleImageFilterISS4ISS4_New():
    return itkShiftScaleImageFilterISS4ISS4.New()

class itkShiftScaleImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkShiftScaleImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterISS4ISS4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterISS4ISS4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterISS4ISS4

        Create a new object of the class itkShiftScaleImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterISS4ISS4 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterISS4ISS4_swigregister(itkShiftScaleImageFilterISS4ISS4)

def itkShiftScaleImageFilterIUC2IUC2_New():
    return itkShiftScaleImageFilterIUC2IUC2.New()

class itkShiftScaleImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkShiftScaleImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIUC2IUC2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIUC2IUC2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC2IUC2

        Create a new object of the class itkShiftScaleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUC2IUC2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC2IUC2_swigregister(itkShiftScaleImageFilterIUC2IUC2)

def itkShiftScaleImageFilterIUC3IUC3_New():
    return itkShiftScaleImageFilterIUC3IUC3.New()

class itkShiftScaleImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkShiftScaleImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIUC3IUC3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIUC3IUC3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC3IUC3

        Create a new object of the class itkShiftScaleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUC3IUC3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC3IUC3_swigregister(itkShiftScaleImageFilterIUC3IUC3)

def itkShiftScaleImageFilterIUC4IUC4_New():
    return itkShiftScaleImageFilterIUC4IUC4.New()

class itkShiftScaleImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkShiftScaleImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIUC4IUC4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIUC4IUC4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUC4IUC4

        Create a new object of the class itkShiftScaleImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUC4IUC4 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUC4IUC4_swigregister(itkShiftScaleImageFilterIUC4IUC4)

def itkShiftScaleImageFilterIUS2IUS2_New():
    return itkShiftScaleImageFilterIUS2IUS2.New()

class itkShiftScaleImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkShiftScaleImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIUS2IUS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIUS2IUS2_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS2IUS2

        Create a new object of the class itkShiftScaleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUS2IUS2 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS2IUS2_swigregister(itkShiftScaleImageFilterIUS2IUS2)

def itkShiftScaleImageFilterIUS3IUS3_New():
    return itkShiftScaleImageFilterIUS3IUS3.New()

class itkShiftScaleImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkShiftScaleImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIUS3IUS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIUS3IUS3_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS3IUS3

        Create a new object of the class itkShiftScaleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUS3IUS3 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS3IUS3_swigregister(itkShiftScaleImageFilterIUS3IUS3)

def itkShiftScaleImageFilterIUS4IUS4_New():
    return itkShiftScaleImageFilterIUS4IUS4.New()

class itkShiftScaleImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkShiftScaleImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShiftScaleImageFilterIUS4IUS4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShiftScaleImageFilterIUS4IUS4_Pointer"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_Clone(self)

    def SetShift(self, _arg):
        r"""
        SetShift(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_SetShift(self, _arg)

    def GetShift(self):
        r"""GetShift(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_GetShift(self)

    def SetScale(self, _arg):
        r"""
        SetScale(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_SetScale(self, _arg)

    def GetScale(self):
        r"""GetScale(self) -> double"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_GetScale(self)

    def GetUnderflowCount(self):
        r"""GetUnderflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_GetUnderflowCount(self)

    def GetOverflowCount(self):
        r"""GetOverflowCount(self) -> unsigned long"""
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_GetOverflowCount(self)
    OutputHasNumericTraitsCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_OutputHasNumericTraitsCheck
    
    InputPlusRealTypeCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_InputPlusRealTypeCheck
    
    RealTypeMultiplyOperatorCheck = _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_RealTypeMultiplyOperatorCheck
    
    __swig_destroy__ = _itkShiftScaleImageFilterPython.delete_itkShiftScaleImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShiftScaleImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShiftScaleImageFilterIUS4IUS4

        Create a new object of the class itkShiftScaleImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShiftScaleImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShiftScaleImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShiftScaleImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShiftScaleImageFilterIUS4IUS4 in _itkShiftScaleImageFilterPython:
_itkShiftScaleImageFilterPython.itkShiftScaleImageFilterIUS4IUS4_swigregister(itkShiftScaleImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def shift_scale_image_filter(*args: itkt.ImageLike,  shift: float=..., scale: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ShiftScaleImageFilter"""
    import itk

    kwarg_typehints = { 'shift':shift,'scale':scale }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ShiftScaleImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def shift_scale_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.ShiftScaleImageFilter
    shift_scale_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    shift_scale_image_filter.__doc__ = filter_object.__doc__



