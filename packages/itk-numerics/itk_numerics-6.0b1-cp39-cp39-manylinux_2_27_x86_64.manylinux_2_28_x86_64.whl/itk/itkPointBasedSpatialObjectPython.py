# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPointBasedSpatialObjectPython
else:
    import _itkPointBasedSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSpatialObjectPointPython
import itk.itkRGBAPixelPython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
class listitkPointBasedSpatialObject2_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObject2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::size_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObject2_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObject2_Pointer,std::allocator< itkPointBasedSpatialObject2_Pointer > > const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObject2_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObject2_Pointer,std::allocator< itkPointBasedSpatialObject2_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject2_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::value_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::size_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObject2_Pointer > &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::reverse_iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::reverse_iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::allocator_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject2_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObject2_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObject2_Pointer >::iterator

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObject2_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObject2_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObject2_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObject2_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObject2_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_swiginit(self, _itkPointBasedSpatialObjectPython.new_listitkPointBasedSpatialObject2_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObject2_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObject2_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObject2_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject2_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject2_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObject2_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject2_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_reverse(self)
    __swig_destroy__ = _itkPointBasedSpatialObjectPython.delete_listitkPointBasedSpatialObject2_Pointer

# Register listitkPointBasedSpatialObject2_Pointer in _itkPointBasedSpatialObjectPython:
_itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject2_Pointer_swigregister(listitkPointBasedSpatialObject2_Pointer)
class listitkPointBasedSpatialObject3_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObject3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::size_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObject3_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObject3_Pointer,std::allocator< itkPointBasedSpatialObject3_Pointer > > const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObject3_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObject3_Pointer,std::allocator< itkPointBasedSpatialObject3_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject3_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::value_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::size_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObject3_Pointer > &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::reverse_iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::reverse_iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::allocator_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject3_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObject3_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObject3_Pointer >::iterator

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObject3_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObject3_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObject3_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObject3_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObject3_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_swiginit(self, _itkPointBasedSpatialObjectPython.new_listitkPointBasedSpatialObject3_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObject3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObject3_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObject3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject3_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject3_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObject3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject3_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_reverse(self)
    __swig_destroy__ = _itkPointBasedSpatialObjectPython.delete_listitkPointBasedSpatialObject3_Pointer

# Register listitkPointBasedSpatialObject3_Pointer in _itkPointBasedSpatialObjectPython:
_itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject3_Pointer_swigregister(listitkPointBasedSpatialObject3_Pointer)
class listitkPointBasedSpatialObject4_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObject4_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::size_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObject4_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObject4_Pointer,std::allocator< itkPointBasedSpatialObject4_Pointer > > const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObject4_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObject4_Pointer,std::allocator< itkPointBasedSpatialObject4_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObject4_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::value_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::size_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObject4_Pointer > &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::reverse_iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::reverse_iterator"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::allocator_type"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject4_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObject4_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObject4_Pointer >::iterator

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObject4_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObject4_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObject4_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObject4_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObject4_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_swiginit(self, _itkPointBasedSpatialObjectPython.new_listitkPointBasedSpatialObject4_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObject4_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObject4_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObject4_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject4_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObject4_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObject4_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObject4_Pointer >::value_type const &

        """
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_reverse(self)
    __swig_destroy__ = _itkPointBasedSpatialObjectPython.delete_listitkPointBasedSpatialObject4_Pointer

# Register listitkPointBasedSpatialObject4_Pointer in _itkPointBasedSpatialObjectPython:
_itkPointBasedSpatialObjectPython.listitkPointBasedSpatialObject4_Pointer_swigregister(listitkPointBasedSpatialObject4_Pointer)

def itkPointBasedSpatialObject2_New():
    return itkPointBasedSpatialObject2.New()

class itkPointBasedSpatialObject2(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""Proxy of C++ itkPointBasedSpatialObject2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObject2_Pointer"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObject2_Pointer"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkSpatialObjectPoint2 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkSpatialObjectPoint2,std::allocator< itkSpatialObjectPoint2 > > const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkSpatialObjectPoint2
        GetPoints(self) -> vectoritkSpatialObjectPoint2
        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkSpatialObjectPoint2

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkSpatialObjectPoint2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkSpatialObjectPoint2

        Parameters
        ----------
        point: itkPointD2 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkSpatialObjectPoint2

        Parameters
        ----------
        point: itkPointD2 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkPointBasedSpatialObjectPython.delete_itkPointBasedSpatialObject2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObject2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObject2

        Create a new object of the class itkPointBasedSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObject2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObject2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObject2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObject2 in _itkPointBasedSpatialObjectPython:
_itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2_swigregister(itkPointBasedSpatialObject2)

def itkPointBasedSpatialObject3_New():
    return itkPointBasedSpatialObject3.New()

class itkPointBasedSpatialObject3(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""Proxy of C++ itkPointBasedSpatialObject3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObject3_Pointer"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObject3_Pointer"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkSpatialObjectPoint3 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkSpatialObjectPoint3,std::allocator< itkSpatialObjectPoint3 > > const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkSpatialObjectPoint3
        GetPoints(self) -> vectoritkSpatialObjectPoint3
        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkSpatialObjectPoint3

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkSpatialObjectPoint3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkSpatialObjectPoint3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkSpatialObjectPoint3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkPointBasedSpatialObjectPython.delete_itkPointBasedSpatialObject3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObject3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObject3

        Create a new object of the class itkPointBasedSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObject3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObject3 in _itkPointBasedSpatialObjectPython:
_itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3_swigregister(itkPointBasedSpatialObject3)

def itkPointBasedSpatialObject4_New():
    return itkPointBasedSpatialObject4.New()

class itkPointBasedSpatialObject4(itk.itkSpatialObjectBasePython.itkSpatialObject4):
    r"""Proxy of C++ itkPointBasedSpatialObject4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObject4_Pointer"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObject4_Pointer"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkSpatialObjectPoint4 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkSpatialObjectPoint4,std::allocator< itkSpatialObjectPoint4 > > const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkSpatialObjectPoint4
        GetPoints(self) -> vectoritkSpatialObjectPoint4
        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkSpatialObjectPoint4

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkSpatialObjectPoint4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkSpatialObjectPoint4

        Parameters
        ----------
        point: itkPointD4 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkSpatialObjectPoint4

        Parameters
        ----------
        point: itkPointD4 const &

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkPointBasedSpatialObjectPython.delete_itkPointBasedSpatialObject4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObject4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObject4

        Create a new object of the class itkPointBasedSpatialObject4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObject4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObject4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObject4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObject4 in _itkPointBasedSpatialObjectPython:
_itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4_swigregister(itkPointBasedSpatialObject4)

