# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDisplacementFieldPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTransformToDisplacementFieldFilterPython
else:
    import _itkTransformToDisplacementFieldFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython

def itkTransformToDisplacementFieldFilterICVF22D_New():
    return itkTransformToDisplacementFieldFilterICVF22D.New()

class itkTransformToDisplacementFieldFilterICVF22D(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterICVF22D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterICVF22D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTD22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase2 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF22D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterICVF22D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF22D

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF22D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF22D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF22D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF22D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_swigregister(itkTransformToDisplacementFieldFilterICVF22D)

def itkTransformToDisplacementFieldFilterICVF22F_New():
    return itkTransformToDisplacementFieldFilterICVF22F.New()

class itkTransformToDisplacementFieldFilterICVF22F(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF22F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterICVF22F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterICVF22F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTF22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTF22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTF22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformF22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTF22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformF22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase2 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF22F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterICVF22F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF22F

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF22F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF22F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF22F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF22F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_swigregister(itkTransformToDisplacementFieldFilterICVF22F)

def itkTransformToDisplacementFieldFilterICVF33D_New():
    return itkTransformToDisplacementFieldFilterICVF33D.New()

class itkTransformToDisplacementFieldFilterICVF33D(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterICVF33D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterICVF33D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTD33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase3 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF33D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterICVF33D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF33D

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF33D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF33D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF33D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF33D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_swigregister(itkTransformToDisplacementFieldFilterICVF33D)

def itkTransformToDisplacementFieldFilterICVF33F_New():
    return itkTransformToDisplacementFieldFilterICVF33F.New()

class itkTransformToDisplacementFieldFilterICVF33F(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF33F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterICVF33F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterICVF33F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTF33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTF33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTF33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformF33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTF33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformF33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase3 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF33F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterICVF33F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF33F

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF33F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF33F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF33F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF33F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_swigregister(itkTransformToDisplacementFieldFilterICVF33F)

def itkTransformToDisplacementFieldFilterICVF44D_New():
    return itkTransformToDisplacementFieldFilterICVF44D.New()

class itkTransformToDisplacementFieldFilterICVF44D(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterICVF44D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterICVF44D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTD44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase4 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF44D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterICVF44D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF44D

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF44D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF44D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF44D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF44D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF44D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_swigregister(itkTransformToDisplacementFieldFilterICVF44D)

def itkTransformToDisplacementFieldFilterICVF44F_New():
    return itkTransformToDisplacementFieldFilterICVF44F.New()

class itkTransformToDisplacementFieldFilterICVF44F(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF44F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterICVF44F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterICVF44F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTF44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTF44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTF44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformF44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTF44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformF44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase4 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF44F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterICVF44F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF44F

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF44F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF44F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF44F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF44F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF44F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_swigregister(itkTransformToDisplacementFieldFilterICVF44F)

def itkTransformToDisplacementFieldFilterIVF22D_New():
    return itkTransformToDisplacementFieldFilterIVF22D.New()

class itkTransformToDisplacementFieldFilterIVF22D(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterIVF22D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterIVF22D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTD22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase2 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF22D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterIVF22D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF22D

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF22D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF22D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF22D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF22D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_swigregister(itkTransformToDisplacementFieldFilterIVF22D)

def itkTransformToDisplacementFieldFilterIVF22F_New():
    return itkTransformToDisplacementFieldFilterIVF22F.New()

class itkTransformToDisplacementFieldFilterIVF22F(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF22F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterIVF22F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterIVF22F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTF22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTF22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTF22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformF22 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTF22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformF22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD22"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase2 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase2"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF22F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterIVF22F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF22F

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF22F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF22F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF22F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF22F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_swigregister(itkTransformToDisplacementFieldFilterIVF22F)

def itkTransformToDisplacementFieldFilterIVF33D_New():
    return itkTransformToDisplacementFieldFilterIVF33D.New()

class itkTransformToDisplacementFieldFilterIVF33D(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterIVF33D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterIVF33D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTD33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase3 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF33D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterIVF33D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF33D

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF33D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF33D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF33D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF33D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_swigregister(itkTransformToDisplacementFieldFilterIVF33D)

def itkTransformToDisplacementFieldFilterIVF33F_New():
    return itkTransformToDisplacementFieldFilterIVF33F.New()

class itkTransformToDisplacementFieldFilterIVF33F(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF33F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterIVF33F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterIVF33F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTF33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTF33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTF33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformF33 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTF33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformF33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD33"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase3 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase3"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF33F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterIVF33F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF33F

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF33F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF33F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF33F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF33F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_swigregister(itkTransformToDisplacementFieldFilterIVF33F)

def itkTransformToDisplacementFieldFilterIVF44D_New():
    return itkTransformToDisplacementFieldFilterIVF44D.New()

class itkTransformToDisplacementFieldFilterIVF44D(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterIVF44D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterIVF44D_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTD44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTD44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase4 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF44D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterIVF44D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF44D

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF44D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF44D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF44D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF44D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF44D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_swigregister(itkTransformToDisplacementFieldFilterIVF44D)

def itkTransformToDisplacementFieldFilterIVF44F_New():
    return itkTransformToDisplacementFieldFilterIVF44F.New()

class itkTransformToDisplacementFieldFilterIVF44F(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF44F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTransformToDisplacementFieldFilterIVF44F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTransformToDisplacementFieldFilterIVF44F_Pointer"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkDataObjectDecoratorTF44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetInput(self, input)

    def GetInput(self):
        r"""GetInput(self) -> itkDataObjectDecoratorTF44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetInput(self)

    def SetTransformInput(self, _arg):
        r"""
        SetTransformInput(self, _arg)

        Parameters
        ----------
        _arg: itkDataObjectDecoratorTF44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetTransformInput(self, _arg)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformF44 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetTransform(self, _arg)

    def GetTransformInput(self):
        r"""GetTransformInput(self) -> itkDataObjectDecoratorTF44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetTransformInput(self)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformF44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetTransform(self)

    def SetOutputStartIndex(self, _arg):
        r"""
        SetOutputStartIndex(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputStartIndex(self, _arg)

    def GetOutputStartIndex(self):
        r"""GetOutputStartIndex(self) -> itkIndex4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputStartIndex(self)

    def SetSize(self, _arg):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetSize(self, _arg)

    def GetSize(self):
        r"""GetSize(self) -> itkSize4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetSize(self)

    def SetOutputSpacing(self, *args):
        r"""
        SetOutputSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetOutputSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputSpacing(self, *args)

    def GetOutputSpacing(self):
        r"""GetOutputSpacing(self) -> itkVectorD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputSpacing(self)

    def SetOutputOrigin(self, *args):
        r"""
        SetOutputOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOutputOrigin(self, origin)

        Parameters
        ----------
        origin: double const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputOrigin(self, *args)

    def GetOutputOrigin(self):
        r"""GetOutputOrigin(self) -> itkPointD4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputOrigin(self)

    def SetOutputDirection(self, _arg):
        r"""
        SetOutputDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputDirection(self, _arg)

    def GetOutputDirection(self):
        r"""GetOutputDirection(self) -> itkMatrixD44"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputDirection(self)

    def SetReferenceImage(self, _arg):
        r"""
        SetReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageBase4 const *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetReferenceImage(self, _arg)

    def GetReferenceImage(self):
        r"""GetReferenceImage(self) -> itkImageBase4"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetReferenceImage(self)

    def SetUseReferenceImage(self, _arg):
        r"""
        SetUseReferenceImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetUseReferenceImage(self, _arg)

    def UseReferenceImageOn(self):
        r"""UseReferenceImageOn(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_UseReferenceImageOn(self)

    def UseReferenceImageOff(self):
        r"""UseReferenceImageOff(self)"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_UseReferenceImageOff(self)

    def GetUseReferenceImage(self):
        r"""GetUseReferenceImage(self) -> bool"""
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetUseReferenceImage(self)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF44F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTransformToDisplacementFieldFilterIVF44F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF44F

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF44F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF44F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF44F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF44F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF44F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_swigregister(itkTransformToDisplacementFieldFilterIVF44F)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def transform_to_displacement_field_filter(*args,  transform_input=..., transform: itkt.Transform=..., output_start_index: Sequence[int]=..., size: Sequence[int]=..., output_spacing: Sequence[float]=..., output_origin: Sequence[float]=..., output_direction=..., reference_image: itkt.ImageBase=..., use_reference_image: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TransformToDisplacementFieldFilter"""
    import itk

    kwarg_typehints = { 'transform_input':transform_input,'transform':transform,'output_start_index':output_start_index,'size':size,'output_spacing':output_spacing,'output_origin':output_origin,'output_direction':output_direction,'reference_image':reference_image,'use_reference_image':use_reference_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    transform = None
    if len(args):
        transform = args[0]
    elif 'transform' in kwargs:
        transform = kwargs.pop('transform')
    elif 'transform_input' in kwargs:
        transform = kwargs.pop('transform_input')
    else:
        raise ValueError('A transform is required. Pass as the first argument.')

    input_dim = transform.GetInputSpaceDimension()
    output_dim = transform.GetOutputSpaceDimension()
    ParametersType = itk.template(transform)[1][0]

    decorator = itk.DataObjectDecorator[itk.Transform[ParametersType, input_dim, output_dim]].New()
    decorator.Set(transform)

    FieldType = itk.Image[itk.Vector[itk.F, output_dim], output_dim]

    args = (decorator,)
    instance = itk.TransformToDisplacementFieldFilter[FieldType, ParametersType].New(*args, **kwargs)

    return instance.__internal_call__()

def transform_to_displacement_field_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDisplacementField.TransformToDisplacementFieldFilter
    transform_to_displacement_field_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    transform_to_displacement_field_filter.__doc__ = filter_object.__doc__



