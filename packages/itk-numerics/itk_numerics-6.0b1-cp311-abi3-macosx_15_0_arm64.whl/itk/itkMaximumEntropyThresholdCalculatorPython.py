# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaximumEntropyThresholdCalculatorPython
else:
    import _itkMaximumEntropyThresholdCalculatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython

def itkMaximumEntropyThresholdCalculatorHDD_New():
    return itkMaximumEntropyThresholdCalculatorHDD.New()

class itkMaximumEntropyThresholdCalculatorHDD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDD):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHDD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHDD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHDD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDD

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHDD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHDD in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDD_swigregister(itkMaximumEntropyThresholdCalculatorHDD)

def itkMaximumEntropyThresholdCalculatorHDF_New():
    return itkMaximumEntropyThresholdCalculatorHDF.New()

class itkMaximumEntropyThresholdCalculatorHDF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHDF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHDF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHDF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDF

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHDF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHDF in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDF_swigregister(itkMaximumEntropyThresholdCalculatorHDF)

def itkMaximumEntropyThresholdCalculatorHDSS_New():
    return itkMaximumEntropyThresholdCalculatorHDSS.New()

class itkMaximumEntropyThresholdCalculatorHDSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHDSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHDSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHDSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDSS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHDSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHDSS in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDSS_swigregister(itkMaximumEntropyThresholdCalculatorHDSS)

def itkMaximumEntropyThresholdCalculatorHDUC_New():
    return itkMaximumEntropyThresholdCalculatorHDUC.New()

class itkMaximumEntropyThresholdCalculatorHDUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHDUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHDUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHDUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDUC

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHDUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHDUC in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUC_swigregister(itkMaximumEntropyThresholdCalculatorHDUC)

def itkMaximumEntropyThresholdCalculatorHDUS_New():
    return itkMaximumEntropyThresholdCalculatorHDUS.New()

class itkMaximumEntropyThresholdCalculatorHDUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHDUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHDUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHDUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHDUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHDUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHDUS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHDUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHDUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHDUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHDUS in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHDUS_swigregister(itkMaximumEntropyThresholdCalculatorHDUS)

def itkMaximumEntropyThresholdCalculatorHFD_New():
    return itkMaximumEntropyThresholdCalculatorHFD.New()

class itkMaximumEntropyThresholdCalculatorHFD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFD):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHFD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHFD_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHFD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFD

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHFD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHFD in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFD_swigregister(itkMaximumEntropyThresholdCalculatorHFD)

def itkMaximumEntropyThresholdCalculatorHFF_New():
    return itkMaximumEntropyThresholdCalculatorHFF.New()

class itkMaximumEntropyThresholdCalculatorHFF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHFF_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHFF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFF

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHFF in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFF_swigregister(itkMaximumEntropyThresholdCalculatorHFF)

def itkMaximumEntropyThresholdCalculatorHFSS_New():
    return itkMaximumEntropyThresholdCalculatorHFSS.New()

class itkMaximumEntropyThresholdCalculatorHFSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHFSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHFSS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHFSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFSS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHFSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHFSS in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFSS_swigregister(itkMaximumEntropyThresholdCalculatorHFSS)

def itkMaximumEntropyThresholdCalculatorHFUC_New():
    return itkMaximumEntropyThresholdCalculatorHFUC.New()

class itkMaximumEntropyThresholdCalculatorHFUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHFUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHFUC_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHFUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFUC

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHFUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHFUC in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUC_swigregister(itkMaximumEntropyThresholdCalculatorHFUC)

def itkMaximumEntropyThresholdCalculatorHFUS_New():
    return itkMaximumEntropyThresholdCalculatorHFUS.New()

class itkMaximumEntropyThresholdCalculatorHFUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    r"""Proxy of C++ itkMaximumEntropyThresholdCalculatorHFUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaximumEntropyThresholdCalculatorHFUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaximumEntropyThresholdCalculatorHFUS_Pointer"""
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_Clone(self)
    __swig_destroy__ = _itkMaximumEntropyThresholdCalculatorPython.delete_itkMaximumEntropyThresholdCalculatorHFUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaximumEntropyThresholdCalculatorHFUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaximumEntropyThresholdCalculatorHFUS

        Create a new object of the class itkMaximumEntropyThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaximumEntropyThresholdCalculatorHFUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaximumEntropyThresholdCalculatorHFUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaximumEntropyThresholdCalculatorHFUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaximumEntropyThresholdCalculatorHFUS in _itkMaximumEntropyThresholdCalculatorPython:
_itkMaximumEntropyThresholdCalculatorPython.itkMaximumEntropyThresholdCalculatorHFUS_swigregister(itkMaximumEntropyThresholdCalculatorHFUS)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def maximum_entropy_threshold_calculator(*args, **kwargs):
    """Functional interface for MaximumEntropyThresholdCalculator"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MaximumEntropyThresholdCalculator.New(*args, **kwargs)

    return instance.__internal_call__()

def maximum_entropy_threshold_calculator_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.MaximumEntropyThresholdCalculator
    maximum_entropy_threshold_calculator.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    maximum_entropy_threshold_calculator.__doc__ = filter_object.__doc__



