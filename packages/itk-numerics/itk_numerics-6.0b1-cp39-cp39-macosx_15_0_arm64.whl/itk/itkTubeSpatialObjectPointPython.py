# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTubeSpatialObjectPointPython
else:
    import _itkTubeSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkTransformBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
class vectoritkTubeSpatialObjectPoint2(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkTubeSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkTubeSpatialObjectPoint2 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkTubeSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint2 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint2 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint2 >::difference_type
        v: std::vector< itkTubeSpatialObjectPoint2,std::allocator< itkTubeSpatialObjectPoint2 > > const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint2 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkTubeSpatialObjectPoint2

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkTubeSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkTubeSpatialObjectPoint2,std::allocator< itkTubeSpatialObjectPoint2 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint2 >::difference_type
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkTubeSpatialObjectPoint2"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkTubeSpatialObjectPoint2 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkTubeSpatialObjectPoint2 > &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkTubeSpatialObjectPoint2 >::iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkTubeSpatialObjectPoint2 >::iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkTubeSpatialObjectPoint2 >::reverse_iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkTubeSpatialObjectPoint2 >::reverse_iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkTubeSpatialObjectPoint2 >::allocator_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkTubeSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint2 >::iterator

        erase(self, first, last) -> std::vector< itkTubeSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        first: std::vector< itkTubeSpatialObjectPoint2 >::iterator
        last: std::vector< itkTubeSpatialObjectPoint2 >::iterator

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkTubeSpatialObjectPoint2
        __init__(self, other) -> vectoritkTubeSpatialObjectPoint2

        Parameters
        ----------
        other: std::vector< itkTubeSpatialObjectPoint2 > const &

        __init__(self, size) -> vectoritkTubeSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkTubeSpatialObjectPoint2 >::size_type

        __init__(self, size, value) -> vectoritkTubeSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkTubeSpatialObjectPoint2 >::size_type
        value: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_swiginit(self, _itkTubeSpatialObjectPointPython.new_vectoritkTubeSpatialObjectPoint2(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_push_back(self, x)

    def front(self):
        r"""front(self) -> itkTubeSpatialObjectPoint2"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_front(self)

    def back(self):
        r"""back(self) -> itkTubeSpatialObjectPoint2"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkTubeSpatialObjectPoint2 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkTubeSpatialObjectPoint2 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkTubeSpatialObjectPoint2 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkTubeSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint2 >::iterator
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint2 >::iterator
        n: std::vector< itkTubeSpatialObjectPoint2 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint2 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkTubeSpatialObjectPoint2 >::size_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkTubeSpatialObjectPoint2 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_capacity(self)
    __swig_destroy__ = _itkTubeSpatialObjectPointPython.delete_vectoritkTubeSpatialObjectPoint2

# Register vectoritkTubeSpatialObjectPoint2 in _itkTubeSpatialObjectPointPython:
_itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint2_swigregister(vectoritkTubeSpatialObjectPoint2)
class vectoritkTubeSpatialObjectPoint3(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkTubeSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkTubeSpatialObjectPoint3 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkTubeSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint3 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint3 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint3 >::difference_type
        v: std::vector< itkTubeSpatialObjectPoint3,std::allocator< itkTubeSpatialObjectPoint3 > > const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint3 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkTubeSpatialObjectPoint3

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkTubeSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkTubeSpatialObjectPoint3,std::allocator< itkTubeSpatialObjectPoint3 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint3 >::difference_type
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkTubeSpatialObjectPoint3"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkTubeSpatialObjectPoint3 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkTubeSpatialObjectPoint3 > &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkTubeSpatialObjectPoint3 >::iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkTubeSpatialObjectPoint3 >::iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkTubeSpatialObjectPoint3 >::reverse_iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkTubeSpatialObjectPoint3 >::reverse_iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkTubeSpatialObjectPoint3 >::allocator_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkTubeSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint3 >::iterator

        erase(self, first, last) -> std::vector< itkTubeSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        first: std::vector< itkTubeSpatialObjectPoint3 >::iterator
        last: std::vector< itkTubeSpatialObjectPoint3 >::iterator

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkTubeSpatialObjectPoint3
        __init__(self, other) -> vectoritkTubeSpatialObjectPoint3

        Parameters
        ----------
        other: std::vector< itkTubeSpatialObjectPoint3 > const &

        __init__(self, size) -> vectoritkTubeSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkTubeSpatialObjectPoint3 >::size_type

        __init__(self, size, value) -> vectoritkTubeSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkTubeSpatialObjectPoint3 >::size_type
        value: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_swiginit(self, _itkTubeSpatialObjectPointPython.new_vectoritkTubeSpatialObjectPoint3(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_push_back(self, x)

    def front(self):
        r"""front(self) -> itkTubeSpatialObjectPoint3"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_front(self)

    def back(self):
        r"""back(self) -> itkTubeSpatialObjectPoint3"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkTubeSpatialObjectPoint3 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkTubeSpatialObjectPoint3 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkTubeSpatialObjectPoint3 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkTubeSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint3 >::iterator
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint3 >::iterator
        n: std::vector< itkTubeSpatialObjectPoint3 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint3 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkTubeSpatialObjectPoint3 >::size_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkTubeSpatialObjectPoint3 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_capacity(self)
    __swig_destroy__ = _itkTubeSpatialObjectPointPython.delete_vectoritkTubeSpatialObjectPoint3

# Register vectoritkTubeSpatialObjectPoint3 in _itkTubeSpatialObjectPointPython:
_itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint3_swigregister(vectoritkTubeSpatialObjectPoint3)
class vectoritkTubeSpatialObjectPoint4(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkTubeSpatialObjectPoint4 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkTubeSpatialObjectPoint4 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkTubeSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint4 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint4 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint4 >::difference_type
        v: std::vector< itkTubeSpatialObjectPoint4,std::allocator< itkTubeSpatialObjectPoint4 > > const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type
        j: std::vector< itkTubeSpatialObjectPoint4 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkTubeSpatialObjectPoint4

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkTubeSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkTubeSpatialObjectPoint4,std::allocator< itkTubeSpatialObjectPoint4 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkTubeSpatialObjectPoint4 >::difference_type
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkTubeSpatialObjectPoint4"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkTubeSpatialObjectPoint4 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkTubeSpatialObjectPoint4 > &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkTubeSpatialObjectPoint4 >::iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkTubeSpatialObjectPoint4 >::iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkTubeSpatialObjectPoint4 >::reverse_iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkTubeSpatialObjectPoint4 >::reverse_iterator"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkTubeSpatialObjectPoint4 >::allocator_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkTubeSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint4 >::iterator

        erase(self, first, last) -> std::vector< itkTubeSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        first: std::vector< itkTubeSpatialObjectPoint4 >::iterator
        last: std::vector< itkTubeSpatialObjectPoint4 >::iterator

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkTubeSpatialObjectPoint4
        __init__(self, other) -> vectoritkTubeSpatialObjectPoint4

        Parameters
        ----------
        other: std::vector< itkTubeSpatialObjectPoint4 > const &

        __init__(self, size) -> vectoritkTubeSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkTubeSpatialObjectPoint4 >::size_type

        __init__(self, size, value) -> vectoritkTubeSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkTubeSpatialObjectPoint4 >::size_type
        value: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_swiginit(self, _itkTubeSpatialObjectPointPython.new_vectoritkTubeSpatialObjectPoint4(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_push_back(self, x)

    def front(self):
        r"""front(self) -> itkTubeSpatialObjectPoint4"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_front(self)

    def back(self):
        r"""back(self) -> itkTubeSpatialObjectPoint4"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkTubeSpatialObjectPoint4 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkTubeSpatialObjectPoint4 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkTubeSpatialObjectPoint4 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkTubeSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint4 >::iterator
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkTubeSpatialObjectPoint4 >::iterator
        n: std::vector< itkTubeSpatialObjectPoint4 >::size_type
        x: std::vector< itkTubeSpatialObjectPoint4 >::value_type const &

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkTubeSpatialObjectPoint4 >::size_type

        """
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkTubeSpatialObjectPoint4 >::size_type"""
        return _itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_capacity(self)
    __swig_destroy__ = _itkTubeSpatialObjectPointPython.delete_vectoritkTubeSpatialObjectPoint4

# Register vectoritkTubeSpatialObjectPoint4 in _itkTubeSpatialObjectPointPython:
_itkTubeSpatialObjectPointPython.vectoritkTubeSpatialObjectPoint4_swigregister(vectoritkTubeSpatialObjectPoint4)
class itkTubeSpatialObjectPoint2(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint2):
    r"""Proxy of C++ itkTubeSpatialObjectPoint2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkTubeSpatialObjectPoint2

        Parameters
        ----------
        arg0: itkTubeSpatialObjectPoint2 const &

        __init__(self) -> itkTubeSpatialObjectPoint2
        """
        _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_swiginit(self, _itkTubeSpatialObjectPointPython.new_itkTubeSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkTubeSpatialObjectPointPython.delete_itkTubeSpatialObjectPoint2

    def GetRadiusInObjectSpace(self):
        r"""GetRadiusInObjectSpace(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetRadiusInObjectSpace(self)

    def GetRadiusInWorldSpace(self):
        r"""GetRadiusInWorldSpace(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetRadiusInWorldSpace(self)

    def SetRadiusInObjectSpace(self, newR):
        r"""
        SetRadiusInObjectSpace(self, newR)

        Parameters
        ----------
        newR: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetRadiusInObjectSpace(self, newR)

    def SetRadiusInWorldSpace(self, newR):
        r"""
        SetRadiusInWorldSpace(self, newR)

        Parameters
        ----------
        newR: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetRadiusInWorldSpace(self, newR)

    def GetTangentInObjectSpace(self):
        r"""GetTangentInObjectSpace(self) -> itkVectorD2"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetTangentInObjectSpace(self)

    def GetTangentInWorldSpace(self):
        r"""GetTangentInWorldSpace(self) -> itkVectorD2"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetTangentInWorldSpace(self)

    def SetTangentInObjectSpace(self, newT):
        r"""
        SetTangentInObjectSpace(self, newT)

        Parameters
        ----------
        newT: itkVectorD2 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetTangentInObjectSpace(self, newT)

    def SetTangentInWorldSpace(self, newT):
        r"""
        SetTangentInWorldSpace(self, newT)

        Parameters
        ----------
        newT: itkVectorD2 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetTangentInWorldSpace(self, newT)

    def GetNormal1InObjectSpace(self):
        r"""GetNormal1InObjectSpace(self) -> itkCovariantVectorD2"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetNormal1InObjectSpace(self)

    def GetNormal1InWorldSpace(self):
        r"""GetNormal1InWorldSpace(self) -> itkCovariantVectorD2"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetNormal1InWorldSpace(self)

    def SetNormal1InObjectSpace(self, newV1):
        r"""
        SetNormal1InObjectSpace(self, newV1)

        Parameters
        ----------
        newV1: itkCovariantVectorD2 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetNormal1InObjectSpace(self, newV1)

    def SetNormal1InWorldSpace(self, newV1):
        r"""
        SetNormal1InWorldSpace(self, newV1)

        Parameters
        ----------
        newV1: itkCovariantVectorD2 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetNormal1InWorldSpace(self, newV1)

    def GetNormal2InObjectSpace(self):
        r"""GetNormal2InObjectSpace(self) -> itkCovariantVectorD2"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetNormal2InObjectSpace(self)

    def GetNormal2InWorldSpace(self):
        r"""GetNormal2InWorldSpace(self) -> itkCovariantVectorD2"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetNormal2InWorldSpace(self)

    def SetNormal2InObjectSpace(self, newV2):
        r"""
        SetNormal2InObjectSpace(self, newV2)

        Parameters
        ----------
        newV2: itkCovariantVectorD2 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetNormal2InObjectSpace(self, newV2)

    def SetNormal2InWorldSpace(self, newV2):
        r"""
        SetNormal2InWorldSpace(self, newV2)

        Parameters
        ----------
        newV2: itkCovariantVectorD2 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetNormal2InWorldSpace(self, newV2)

    def SetRidgeness(self, ridgeness):
        r"""
        SetRidgeness(self, ridgeness)

        Parameters
        ----------
        ridgeness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetRidgeness(self, ridgeness)

    def GetRidgeness(self):
        r"""GetRidgeness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetRidgeness(self)

    def SetCurvature(self, curvature):
        r"""
        SetCurvature(self, curvature)

        Parameters
        ----------
        curvature: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetCurvature(self, curvature)

    def GetCurvature(self):
        r"""GetCurvature(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetCurvature(self)

    def SetLevelness(self, levelness):
        r"""
        SetLevelness(self, levelness)

        Parameters
        ----------
        levelness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetLevelness(self, levelness)

    def GetLevelness(self):
        r"""GetLevelness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetLevelness(self)

    def SetRoundness(self, roundness):
        r"""
        SetRoundness(self, roundness)

        Parameters
        ----------
        roundness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetRoundness(self, roundness)

    def GetRoundness(self):
        r"""GetRoundness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetRoundness(self)

    def SetIntensity(self, intensity):
        r"""
        SetIntensity(self, intensity)

        Parameters
        ----------
        intensity: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetIntensity(self, intensity)

    def GetIntensity(self):
        r"""GetIntensity(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetIntensity(self)

    def SetMedialness(self, medialness):
        r"""
        SetMedialness(self, medialness)

        Parameters
        ----------
        medialness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetMedialness(self, medialness)

    def GetMedialness(self):
        r"""GetMedialness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetMedialness(self)

    def SetBranchness(self, branchness):
        r"""
        SetBranchness(self, branchness)

        Parameters
        ----------
        branchness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetBranchness(self, branchness)

    def GetBranchness(self):
        r"""GetBranchness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetBranchness(self)

    def SetAlpha1(self, alpha1):
        r"""
        SetAlpha1(self, alpha1)

        Parameters
        ----------
        alpha1: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetAlpha1(self, alpha1)

    def GetAlpha1(self):
        r"""GetAlpha1(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetAlpha1(self)

    def SetAlpha2(self, alpha2):
        r"""
        SetAlpha2(self, alpha2)

        Parameters
        ----------
        alpha2: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetAlpha2(self, alpha2)

    def GetAlpha2(self):
        r"""GetAlpha2(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetAlpha2(self)

    def SetAlpha3(self, alpha3):
        r"""
        SetAlpha3(self, alpha3)

        Parameters
        ----------
        alpha3: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_SetAlpha3(self, alpha3)

    def GetAlpha3(self):
        r"""GetAlpha3(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_GetAlpha3(self)

# Register itkTubeSpatialObjectPoint2 in _itkTubeSpatialObjectPointPython:
_itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint2_swigregister(itkTubeSpatialObjectPoint2)
class itkTubeSpatialObjectPoint3(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint3):
    r"""Proxy of C++ itkTubeSpatialObjectPoint3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkTubeSpatialObjectPoint3

        Parameters
        ----------
        arg0: itkTubeSpatialObjectPoint3 const &

        __init__(self) -> itkTubeSpatialObjectPoint3
        """
        _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_swiginit(self, _itkTubeSpatialObjectPointPython.new_itkTubeSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkTubeSpatialObjectPointPython.delete_itkTubeSpatialObjectPoint3

    def GetRadiusInObjectSpace(self):
        r"""GetRadiusInObjectSpace(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetRadiusInObjectSpace(self)

    def GetRadiusInWorldSpace(self):
        r"""GetRadiusInWorldSpace(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetRadiusInWorldSpace(self)

    def SetRadiusInObjectSpace(self, newR):
        r"""
        SetRadiusInObjectSpace(self, newR)

        Parameters
        ----------
        newR: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetRadiusInObjectSpace(self, newR)

    def SetRadiusInWorldSpace(self, newR):
        r"""
        SetRadiusInWorldSpace(self, newR)

        Parameters
        ----------
        newR: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetRadiusInWorldSpace(self, newR)

    def GetTangentInObjectSpace(self):
        r"""GetTangentInObjectSpace(self) -> itkVectorD3"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetTangentInObjectSpace(self)

    def GetTangentInWorldSpace(self):
        r"""GetTangentInWorldSpace(self) -> itkVectorD3"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetTangentInWorldSpace(self)

    def SetTangentInObjectSpace(self, newT):
        r"""
        SetTangentInObjectSpace(self, newT)

        Parameters
        ----------
        newT: itkVectorD3 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetTangentInObjectSpace(self, newT)

    def SetTangentInWorldSpace(self, newT):
        r"""
        SetTangentInWorldSpace(self, newT)

        Parameters
        ----------
        newT: itkVectorD3 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetTangentInWorldSpace(self, newT)

    def GetNormal1InObjectSpace(self):
        r"""GetNormal1InObjectSpace(self) -> itkCovariantVectorD3"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetNormal1InObjectSpace(self)

    def GetNormal1InWorldSpace(self):
        r"""GetNormal1InWorldSpace(self) -> itkCovariantVectorD3"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetNormal1InWorldSpace(self)

    def SetNormal1InObjectSpace(self, newV1):
        r"""
        SetNormal1InObjectSpace(self, newV1)

        Parameters
        ----------
        newV1: itkCovariantVectorD3 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetNormal1InObjectSpace(self, newV1)

    def SetNormal1InWorldSpace(self, newV1):
        r"""
        SetNormal1InWorldSpace(self, newV1)

        Parameters
        ----------
        newV1: itkCovariantVectorD3 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetNormal1InWorldSpace(self, newV1)

    def GetNormal2InObjectSpace(self):
        r"""GetNormal2InObjectSpace(self) -> itkCovariantVectorD3"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetNormal2InObjectSpace(self)

    def GetNormal2InWorldSpace(self):
        r"""GetNormal2InWorldSpace(self) -> itkCovariantVectorD3"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetNormal2InWorldSpace(self)

    def SetNormal2InObjectSpace(self, newV2):
        r"""
        SetNormal2InObjectSpace(self, newV2)

        Parameters
        ----------
        newV2: itkCovariantVectorD3 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetNormal2InObjectSpace(self, newV2)

    def SetNormal2InWorldSpace(self, newV2):
        r"""
        SetNormal2InWorldSpace(self, newV2)

        Parameters
        ----------
        newV2: itkCovariantVectorD3 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetNormal2InWorldSpace(self, newV2)

    def SetRidgeness(self, ridgeness):
        r"""
        SetRidgeness(self, ridgeness)

        Parameters
        ----------
        ridgeness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetRidgeness(self, ridgeness)

    def GetRidgeness(self):
        r"""GetRidgeness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetRidgeness(self)

    def SetCurvature(self, curvature):
        r"""
        SetCurvature(self, curvature)

        Parameters
        ----------
        curvature: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetCurvature(self, curvature)

    def GetCurvature(self):
        r"""GetCurvature(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetCurvature(self)

    def SetLevelness(self, levelness):
        r"""
        SetLevelness(self, levelness)

        Parameters
        ----------
        levelness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetLevelness(self, levelness)

    def GetLevelness(self):
        r"""GetLevelness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetLevelness(self)

    def SetRoundness(self, roundness):
        r"""
        SetRoundness(self, roundness)

        Parameters
        ----------
        roundness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetRoundness(self, roundness)

    def GetRoundness(self):
        r"""GetRoundness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetRoundness(self)

    def SetIntensity(self, intensity):
        r"""
        SetIntensity(self, intensity)

        Parameters
        ----------
        intensity: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetIntensity(self, intensity)

    def GetIntensity(self):
        r"""GetIntensity(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetIntensity(self)

    def SetMedialness(self, medialness):
        r"""
        SetMedialness(self, medialness)

        Parameters
        ----------
        medialness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetMedialness(self, medialness)

    def GetMedialness(self):
        r"""GetMedialness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetMedialness(self)

    def SetBranchness(self, branchness):
        r"""
        SetBranchness(self, branchness)

        Parameters
        ----------
        branchness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetBranchness(self, branchness)

    def GetBranchness(self):
        r"""GetBranchness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetBranchness(self)

    def SetAlpha1(self, alpha1):
        r"""
        SetAlpha1(self, alpha1)

        Parameters
        ----------
        alpha1: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetAlpha1(self, alpha1)

    def GetAlpha1(self):
        r"""GetAlpha1(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetAlpha1(self)

    def SetAlpha2(self, alpha2):
        r"""
        SetAlpha2(self, alpha2)

        Parameters
        ----------
        alpha2: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetAlpha2(self, alpha2)

    def GetAlpha2(self):
        r"""GetAlpha2(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetAlpha2(self)

    def SetAlpha3(self, alpha3):
        r"""
        SetAlpha3(self, alpha3)

        Parameters
        ----------
        alpha3: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_SetAlpha3(self, alpha3)

    def GetAlpha3(self):
        r"""GetAlpha3(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_GetAlpha3(self)

# Register itkTubeSpatialObjectPoint3 in _itkTubeSpatialObjectPointPython:
_itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint3_swigregister(itkTubeSpatialObjectPoint3)
class itkTubeSpatialObjectPoint4(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint4):
    r"""Proxy of C++ itkTubeSpatialObjectPoint4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkTubeSpatialObjectPoint4

        Parameters
        ----------
        arg0: itkTubeSpatialObjectPoint4 const &

        __init__(self) -> itkTubeSpatialObjectPoint4
        """
        _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_swiginit(self, _itkTubeSpatialObjectPointPython.new_itkTubeSpatialObjectPoint4(*args))
    __swig_destroy__ = _itkTubeSpatialObjectPointPython.delete_itkTubeSpatialObjectPoint4

    def GetRadiusInObjectSpace(self):
        r"""GetRadiusInObjectSpace(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetRadiusInObjectSpace(self)

    def GetRadiusInWorldSpace(self):
        r"""GetRadiusInWorldSpace(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetRadiusInWorldSpace(self)

    def SetRadiusInObjectSpace(self, newR):
        r"""
        SetRadiusInObjectSpace(self, newR)

        Parameters
        ----------
        newR: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetRadiusInObjectSpace(self, newR)

    def SetRadiusInWorldSpace(self, newR):
        r"""
        SetRadiusInWorldSpace(self, newR)

        Parameters
        ----------
        newR: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetRadiusInWorldSpace(self, newR)

    def GetTangentInObjectSpace(self):
        r"""GetTangentInObjectSpace(self) -> itkVectorD4"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetTangentInObjectSpace(self)

    def GetTangentInWorldSpace(self):
        r"""GetTangentInWorldSpace(self) -> itkVectorD4"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetTangentInWorldSpace(self)

    def SetTangentInObjectSpace(self, newT):
        r"""
        SetTangentInObjectSpace(self, newT)

        Parameters
        ----------
        newT: itkVectorD4 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetTangentInObjectSpace(self, newT)

    def SetTangentInWorldSpace(self, newT):
        r"""
        SetTangentInWorldSpace(self, newT)

        Parameters
        ----------
        newT: itkVectorD4 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetTangentInWorldSpace(self, newT)

    def GetNormal1InObjectSpace(self):
        r"""GetNormal1InObjectSpace(self) -> itkCovariantVectorD4"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetNormal1InObjectSpace(self)

    def GetNormal1InWorldSpace(self):
        r"""GetNormal1InWorldSpace(self) -> itkCovariantVectorD4"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetNormal1InWorldSpace(self)

    def SetNormal1InObjectSpace(self, newV1):
        r"""
        SetNormal1InObjectSpace(self, newV1)

        Parameters
        ----------
        newV1: itkCovariantVectorD4 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetNormal1InObjectSpace(self, newV1)

    def SetNormal1InWorldSpace(self, newV1):
        r"""
        SetNormal1InWorldSpace(self, newV1)

        Parameters
        ----------
        newV1: itkCovariantVectorD4 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetNormal1InWorldSpace(self, newV1)

    def GetNormal2InObjectSpace(self):
        r"""GetNormal2InObjectSpace(self) -> itkCovariantVectorD4"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetNormal2InObjectSpace(self)

    def GetNormal2InWorldSpace(self):
        r"""GetNormal2InWorldSpace(self) -> itkCovariantVectorD4"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetNormal2InWorldSpace(self)

    def SetNormal2InObjectSpace(self, newV2):
        r"""
        SetNormal2InObjectSpace(self, newV2)

        Parameters
        ----------
        newV2: itkCovariantVectorD4 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetNormal2InObjectSpace(self, newV2)

    def SetNormal2InWorldSpace(self, newV2):
        r"""
        SetNormal2InWorldSpace(self, newV2)

        Parameters
        ----------
        newV2: itkCovariantVectorD4 const &

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetNormal2InWorldSpace(self, newV2)

    def SetRidgeness(self, ridgeness):
        r"""
        SetRidgeness(self, ridgeness)

        Parameters
        ----------
        ridgeness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetRidgeness(self, ridgeness)

    def GetRidgeness(self):
        r"""GetRidgeness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetRidgeness(self)

    def SetCurvature(self, curvature):
        r"""
        SetCurvature(self, curvature)

        Parameters
        ----------
        curvature: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetCurvature(self, curvature)

    def GetCurvature(self):
        r"""GetCurvature(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetCurvature(self)

    def SetLevelness(self, levelness):
        r"""
        SetLevelness(self, levelness)

        Parameters
        ----------
        levelness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetLevelness(self, levelness)

    def GetLevelness(self):
        r"""GetLevelness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetLevelness(self)

    def SetRoundness(self, roundness):
        r"""
        SetRoundness(self, roundness)

        Parameters
        ----------
        roundness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetRoundness(self, roundness)

    def GetRoundness(self):
        r"""GetRoundness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetRoundness(self)

    def SetIntensity(self, intensity):
        r"""
        SetIntensity(self, intensity)

        Parameters
        ----------
        intensity: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetIntensity(self, intensity)

    def GetIntensity(self):
        r"""GetIntensity(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetIntensity(self)

    def SetMedialness(self, medialness):
        r"""
        SetMedialness(self, medialness)

        Parameters
        ----------
        medialness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetMedialness(self, medialness)

    def GetMedialness(self):
        r"""GetMedialness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetMedialness(self)

    def SetBranchness(self, branchness):
        r"""
        SetBranchness(self, branchness)

        Parameters
        ----------
        branchness: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetBranchness(self, branchness)

    def GetBranchness(self):
        r"""GetBranchness(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetBranchness(self)

    def SetAlpha1(self, alpha1):
        r"""
        SetAlpha1(self, alpha1)

        Parameters
        ----------
        alpha1: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetAlpha1(self, alpha1)

    def GetAlpha1(self):
        r"""GetAlpha1(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetAlpha1(self)

    def SetAlpha2(self, alpha2):
        r"""
        SetAlpha2(self, alpha2)

        Parameters
        ----------
        alpha2: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetAlpha2(self, alpha2)

    def GetAlpha2(self):
        r"""GetAlpha2(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetAlpha2(self)

    def SetAlpha3(self, alpha3):
        r"""
        SetAlpha3(self, alpha3)

        Parameters
        ----------
        alpha3: double

        """
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_SetAlpha3(self, alpha3)

    def GetAlpha3(self):
        r"""GetAlpha3(self) -> double"""
        return _itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_GetAlpha3(self)

# Register itkTubeSpatialObjectPoint4 in _itkTubeSpatialObjectPointPython:
_itkTubeSpatialObjectPointPython.itkTubeSpatialObjectPoint4_swigregister(itkTubeSpatialObjectPoint4)

