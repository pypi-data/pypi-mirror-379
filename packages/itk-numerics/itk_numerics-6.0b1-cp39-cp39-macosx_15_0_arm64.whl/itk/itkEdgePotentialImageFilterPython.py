# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkEdgePotentialImageFilterPython
else:
    import _itkEdgePotentialImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorMagnitudeImageFilterPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkEdgePotentialImageFilterICVF22ID2_New():
    return itkEdgePotentialImageFilterICVF22ID2.New()

class itkEdgePotentialImageFilterICVF22ID2(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22ID2_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF22ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF22ID2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF22ID2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF22ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF22ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF22ID2

        Create a new object of the class itkEdgePotentialImageFilterICVF22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF22ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF22ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF22ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF22ID2 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22ID2_swigregister(itkEdgePotentialImageFilterICVF22ID2)

def itkEdgePotentialImageFilterICVF22IF2_New():
    return itkEdgePotentialImageFilterICVF22IF2.New()

class itkEdgePotentialImageFilterICVF22IF2(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF22IF2_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF22IF2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF22IF2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF22IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF22IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF22IF2

        Create a new object of the class itkEdgePotentialImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF22IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF22IF2 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF22IF2_swigregister(itkEdgePotentialImageFilterICVF22IF2)

def itkEdgePotentialImageFilterICVF23ID3_New():
    return itkEdgePotentialImageFilterICVF23ID3.New()

class itkEdgePotentialImageFilterICVF23ID3(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23ID3_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF23ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF23ID3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF23ID3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF23ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF23ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF23ID3

        Create a new object of the class itkEdgePotentialImageFilterICVF23ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF23ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF23ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF23ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF23ID3 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23ID3_swigregister(itkEdgePotentialImageFilterICVF23ID3)

def itkEdgePotentialImageFilterICVF23IF3_New():
    return itkEdgePotentialImageFilterICVF23IF3.New()

class itkEdgePotentialImageFilterICVF23IF3(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF23IF3_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF23IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF23IF3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF23IF3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF23IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF23IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF23IF3

        Create a new object of the class itkEdgePotentialImageFilterICVF23IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF23IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF23IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF23IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF23IF3 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF23IF3_swigregister(itkEdgePotentialImageFilterICVF23IF3)

def itkEdgePotentialImageFilterICVF24ID4_New():
    return itkEdgePotentialImageFilterICVF24ID4.New()

class itkEdgePotentialImageFilterICVF24ID4(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24ID4_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF24ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF24ID4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF24ID4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF24ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF24ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF24ID4

        Create a new object of the class itkEdgePotentialImageFilterICVF24ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF24ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF24ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF24ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF24ID4 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24ID4_swigregister(itkEdgePotentialImageFilterICVF24ID4)

def itkEdgePotentialImageFilterICVF24IF4_New():
    return itkEdgePotentialImageFilterICVF24IF4.New()

class itkEdgePotentialImageFilterICVF24IF4(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF24IF4_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF24IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF24IF4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF24IF4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF24IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF24IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF24IF4

        Create a new object of the class itkEdgePotentialImageFilterICVF24IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF24IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF24IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF24IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF24IF4 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF24IF4_swigregister(itkEdgePotentialImageFilterICVF24IF4)

def itkEdgePotentialImageFilterICVF32ID2_New():
    return itkEdgePotentialImageFilterICVF32ID2.New()

class itkEdgePotentialImageFilterICVF32ID2(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32ID2_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF32ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF32ID2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF32ID2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF32ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF32ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF32ID2

        Create a new object of the class itkEdgePotentialImageFilterICVF32ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF32ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF32ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF32ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF32ID2 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32ID2_swigregister(itkEdgePotentialImageFilterICVF32ID2)

def itkEdgePotentialImageFilterICVF32IF2_New():
    return itkEdgePotentialImageFilterICVF32IF2.New()

class itkEdgePotentialImageFilterICVF32IF2(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF32IF2_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF32IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF32IF2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF32IF2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF32IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF32IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF32IF2

        Create a new object of the class itkEdgePotentialImageFilterICVF32IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF32IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF32IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF32IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF32IF2 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF32IF2_swigregister(itkEdgePotentialImageFilterICVF32IF2)

def itkEdgePotentialImageFilterICVF33ID3_New():
    return itkEdgePotentialImageFilterICVF33ID3.New()

class itkEdgePotentialImageFilterICVF33ID3(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33ID3_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF33ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF33ID3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF33ID3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF33ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF33ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF33ID3

        Create a new object of the class itkEdgePotentialImageFilterICVF33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF33ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF33ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF33ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF33ID3 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33ID3_swigregister(itkEdgePotentialImageFilterICVF33ID3)

def itkEdgePotentialImageFilterICVF33IF3_New():
    return itkEdgePotentialImageFilterICVF33IF3.New()

class itkEdgePotentialImageFilterICVF33IF3(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF33IF3_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF33IF3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF33IF3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF33IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF33IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF33IF3

        Create a new object of the class itkEdgePotentialImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF33IF3 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF33IF3_swigregister(itkEdgePotentialImageFilterICVF33IF3)

def itkEdgePotentialImageFilterICVF34ID4_New():
    return itkEdgePotentialImageFilterICVF34ID4.New()

class itkEdgePotentialImageFilterICVF34ID4(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34ID4_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF34ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF34ID4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF34ID4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF34ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF34ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF34ID4

        Create a new object of the class itkEdgePotentialImageFilterICVF34ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF34ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF34ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF34ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF34ID4 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34ID4_swigregister(itkEdgePotentialImageFilterICVF34ID4)

def itkEdgePotentialImageFilterICVF34IF4_New():
    return itkEdgePotentialImageFilterICVF34IF4.New()

class itkEdgePotentialImageFilterICVF34IF4(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF34IF4_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF34IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF34IF4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF34IF4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF34IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF34IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF34IF4

        Create a new object of the class itkEdgePotentialImageFilterICVF34IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF34IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF34IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF34IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF34IF4 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF34IF4_swigregister(itkEdgePotentialImageFilterICVF34IF4)

def itkEdgePotentialImageFilterICVF42ID2_New():
    return itkEdgePotentialImageFilterICVF42ID2.New()

class itkEdgePotentialImageFilterICVF42ID2(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42ID2_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF42ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF42ID2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF42ID2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF42ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF42ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF42ID2

        Create a new object of the class itkEdgePotentialImageFilterICVF42ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF42ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF42ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF42ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF42ID2 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42ID2_swigregister(itkEdgePotentialImageFilterICVF42ID2)

def itkEdgePotentialImageFilterICVF42IF2_New():
    return itkEdgePotentialImageFilterICVF42IF2.New()

class itkEdgePotentialImageFilterICVF42IF2(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF42IF2_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF42IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF42IF2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF42IF2_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF42IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF42IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF42IF2

        Create a new object of the class itkEdgePotentialImageFilterICVF42IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF42IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF42IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF42IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF42IF2 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF42IF2_swigregister(itkEdgePotentialImageFilterICVF42IF2)

def itkEdgePotentialImageFilterICVF43ID3_New():
    return itkEdgePotentialImageFilterICVF43ID3.New()

class itkEdgePotentialImageFilterICVF43ID3(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43ID3_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF43ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF43ID3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF43ID3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF43ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF43ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF43ID3

        Create a new object of the class itkEdgePotentialImageFilterICVF43ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF43ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF43ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF43ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF43ID3 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43ID3_swigregister(itkEdgePotentialImageFilterICVF43ID3)

def itkEdgePotentialImageFilterICVF43IF3_New():
    return itkEdgePotentialImageFilterICVF43IF3.New()

class itkEdgePotentialImageFilterICVF43IF3(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF43IF3_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF43IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF43IF3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF43IF3_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF43IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF43IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF43IF3

        Create a new object of the class itkEdgePotentialImageFilterICVF43IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF43IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF43IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF43IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF43IF3 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF43IF3_swigregister(itkEdgePotentialImageFilterICVF43IF3)

def itkEdgePotentialImageFilterICVF44ID4_New():
    return itkEdgePotentialImageFilterICVF44ID4.New()

class itkEdgePotentialImageFilterICVF44ID4(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44ID4_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF44ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF44ID4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF44ID4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF44ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF44ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF44ID4

        Create a new object of the class itkEdgePotentialImageFilterICVF44ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF44ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF44ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF44ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF44ID4 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44ID4_swigregister(itkEdgePotentialImageFilterICVF44ID4)

def itkEdgePotentialImageFilterICVF44IF4_New():
    return itkEdgePotentialImageFilterICVF44IF4.New()

class itkEdgePotentialImageFilterICVF44IF4(itk.itkVectorMagnitudeImageFilterPython.itkVectorMagnitudeImageFilterICVF44IF4_Superclass):
    r"""Proxy of C++ itkEdgePotentialImageFilterICVF44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkEdgePotentialImageFilterICVF44IF4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkEdgePotentialImageFilterICVF44IF4_Pointer"""
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkEdgePotentialImageFilterPython.delete_itkEdgePotentialImageFilterICVF44IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkEdgePotentialImageFilterICVF44IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkEdgePotentialImageFilterICVF44IF4

        Create a new object of the class itkEdgePotentialImageFilterICVF44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkEdgePotentialImageFilterICVF44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkEdgePotentialImageFilterICVF44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkEdgePotentialImageFilterICVF44IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkEdgePotentialImageFilterICVF44IF4 in _itkEdgePotentialImageFilterPython:
_itkEdgePotentialImageFilterPython.itkEdgePotentialImageFilterICVF44IF4_swigregister(itkEdgePotentialImageFilterICVF44IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def edge_potential_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for EdgePotentialImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.EdgePotentialImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def edge_potential_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.EdgePotentialImageFilter
    edge_potential_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    edge_potential_image_filter.__doc__ = filter_object.__doc__



