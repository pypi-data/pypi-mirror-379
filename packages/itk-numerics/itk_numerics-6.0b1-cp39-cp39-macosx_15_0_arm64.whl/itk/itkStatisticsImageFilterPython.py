# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkStatisticsImageFilterPython
else:
    import _itkStatisticsImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkSimpleDataObjectDecoratorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.itkArrayPython
import itk.itkRGBPixelPython
import itk.itkImageSinkPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkStatisticsImageFilterID2_New():
    return itkStatisticsImageFilterID2.New()

class itkStatisticsImageFilterID2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""Proxy of C++ itkStatisticsImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterID2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterID2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterID2

        Create a new object of the class itkStatisticsImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterID2 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterID2_swigregister(itkStatisticsImageFilterID2)

def itkStatisticsImageFilterID3_New():
    return itkStatisticsImageFilterID3.New()

class itkStatisticsImageFilterID3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""Proxy of C++ itkStatisticsImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterID3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterID3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterID3

        Create a new object of the class itkStatisticsImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterID3 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterID3_swigregister(itkStatisticsImageFilterID3)

def itkStatisticsImageFilterID4_New():
    return itkStatisticsImageFilterID4.New()

class itkStatisticsImageFilterID4(itk.itkImageSinkPython.itkImageSinkID4):
    r"""Proxy of C++ itkStatisticsImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterID4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterID4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterID4

        Create a new object of the class itkStatisticsImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterID4 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterID4_swigregister(itkStatisticsImageFilterID4)

def itkStatisticsImageFilterIF2_New():
    return itkStatisticsImageFilterIF2.New()

class itkStatisticsImageFilterIF2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""Proxy of C++ itkStatisticsImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIF2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIF2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIF2

        Create a new object of the class itkStatisticsImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIF2 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF2_swigregister(itkStatisticsImageFilterIF2)

def itkStatisticsImageFilterIF3_New():
    return itkStatisticsImageFilterIF3.New()

class itkStatisticsImageFilterIF3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""Proxy of C++ itkStatisticsImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIF3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIF3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIF3

        Create a new object of the class itkStatisticsImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIF3 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF3_swigregister(itkStatisticsImageFilterIF3)

def itkStatisticsImageFilterIF4_New():
    return itkStatisticsImageFilterIF4.New()

class itkStatisticsImageFilterIF4(itk.itkImageSinkPython.itkImageSinkIF4):
    r"""Proxy of C++ itkStatisticsImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIF4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIF4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> float const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIF4

        Create a new object of the class itkStatisticsImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIF4 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIF4_swigregister(itkStatisticsImageFilterIF4)

def itkStatisticsImageFilterISS2_New():
    return itkStatisticsImageFilterISS2.New()

class itkStatisticsImageFilterISS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""Proxy of C++ itkStatisticsImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterISS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterISS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterISS2

        Create a new object of the class itkStatisticsImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterISS2 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS2_swigregister(itkStatisticsImageFilterISS2)

def itkStatisticsImageFilterISS3_New():
    return itkStatisticsImageFilterISS3.New()

class itkStatisticsImageFilterISS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""Proxy of C++ itkStatisticsImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterISS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterISS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterISS3

        Create a new object of the class itkStatisticsImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterISS3 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS3_swigregister(itkStatisticsImageFilterISS3)

def itkStatisticsImageFilterISS4_New():
    return itkStatisticsImageFilterISS4.New()

class itkStatisticsImageFilterISS4(itk.itkImageSinkPython.itkImageSinkISS4):
    r"""Proxy of C++ itkStatisticsImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterISS4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterISS4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterISS4

        Create a new object of the class itkStatisticsImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterISS4 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterISS4_swigregister(itkStatisticsImageFilterISS4)

def itkStatisticsImageFilterIUC2_New():
    return itkStatisticsImageFilterIUC2.New()

class itkStatisticsImageFilterIUC2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""Proxy of C++ itkStatisticsImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIUC2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIUC2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUC2

        Create a new object of the class itkStatisticsImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIUC2 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC2_swigregister(itkStatisticsImageFilterIUC2)

def itkStatisticsImageFilterIUC3_New():
    return itkStatisticsImageFilterIUC3.New()

class itkStatisticsImageFilterIUC3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""Proxy of C++ itkStatisticsImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIUC3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIUC3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUC3

        Create a new object of the class itkStatisticsImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIUC3 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC3_swigregister(itkStatisticsImageFilterIUC3)

def itkStatisticsImageFilterIUC4_New():
    return itkStatisticsImageFilterIUC4.New()

class itkStatisticsImageFilterIUC4(itk.itkImageSinkPython.itkImageSinkIUC4):
    r"""Proxy of C++ itkStatisticsImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIUC4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIUC4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned char const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUC4

        Create a new object of the class itkStatisticsImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIUC4 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUC4_swigregister(itkStatisticsImageFilterIUC4)

def itkStatisticsImageFilterIUS2_New():
    return itkStatisticsImageFilterIUS2.New()

class itkStatisticsImageFilterIUS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""Proxy of C++ itkStatisticsImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIUS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIUS2_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUS2

        Create a new object of the class itkStatisticsImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIUS2 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS2_swigregister(itkStatisticsImageFilterIUS2)

def itkStatisticsImageFilterIUS3_New():
    return itkStatisticsImageFilterIUS3.New()

class itkStatisticsImageFilterIUS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""Proxy of C++ itkStatisticsImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIUS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIUS3_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUS3

        Create a new object of the class itkStatisticsImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIUS3 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS3_swigregister(itkStatisticsImageFilterIUS3)

def itkStatisticsImageFilterIUS4_New():
    return itkStatisticsImageFilterIUS4.New()

class itkStatisticsImageFilterIUS4(itk.itkImageSinkPython.itkImageSinkIUS4):
    r"""Proxy of C++ itkStatisticsImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsImageFilterIUS4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsImageFilterIUS4_Pointer"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_Clone(self)

    def GetMinimumOutput(self):
        r"""GetMinimumOutput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetMinimumOutput(self)

    def GetMinimum(self):
        r"""GetMinimum(self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetMinimum(self)

    def GetMaximumOutput(self):
        r"""GetMaximumOutput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetMaximumOutput(self)

    def GetMaximum(self):
        r"""GetMaximum(self) -> unsigned short const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetMaximum(self)

    def GetMeanOutput(self):
        r"""GetMeanOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetMeanOutput(self)

    def GetMean(self):
        r"""GetMean(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetMean(self)

    def GetSigmaOutput(self):
        r"""GetSigmaOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetSigmaOutput(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetSigma(self)

    def GetVarianceOutput(self):
        r"""GetVarianceOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetVarianceOutput(self)

    def GetVariance(self):
        r"""GetVariance(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetVariance(self)

    def GetSumOutput(self):
        r"""GetSumOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetSumOutput(self)

    def GetSum(self):
        r"""GetSum(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetSum(self)

    def GetSumOfSquaresOutput(self):
        r"""GetSumOfSquaresOutput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetSumOfSquaresOutput(self)

    def GetSumOfSquares(self):
        r"""GetSumOfSquares(self) -> double const &"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetSumOfSquares(self)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_GetNumberOfStreamDivisions(self)
    InputHasNumericTraitsCheck = _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStatisticsImageFilterPython.delete_itkStatisticsImageFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsImageFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsImageFilterIUS4

        Create a new object of the class itkStatisticsImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsImageFilterIUS4 in _itkStatisticsImageFilterPython:
_itkStatisticsImageFilterPython.itkStatisticsImageFilterIUS4_swigregister(itkStatisticsImageFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def statistics_image_filter(*args: itkt.ImageLike,  number_of_stream_divisions: int=...,**kwargs):
    """Functional interface for StatisticsImageFilter"""
    import itk

    kwarg_typehints = { 'number_of_stream_divisions':number_of_stream_divisions }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.StatisticsImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def statistics_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.StatisticsImageFilter
    statistics_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    statistics_image_filter.__doc__ = filter_object.__doc__



