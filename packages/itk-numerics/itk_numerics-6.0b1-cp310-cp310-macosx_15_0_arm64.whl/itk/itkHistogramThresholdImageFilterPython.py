# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHistogramThresholdImageFilterPython
else:
    import _itkHistogramThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkArrayPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkImageToHistogramFilterPython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkHistogramThresholdImageFilterID2ISS2_New():
    return itkHistogramThresholdImageFilterID2ISS2.New()

class itkHistogramThresholdImageFilterID2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2_swigregister(itkHistogramThresholdImageFilterID2ISS2)

def itkHistogramThresholdImageFilterID2IUC2_New():
    return itkHistogramThresholdImageFilterID2IUC2.New()

class itkHistogramThresholdImageFilterID2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2_swigregister(itkHistogramThresholdImageFilterID2IUC2)

def itkHistogramThresholdImageFilterID2IUS2_New():
    return itkHistogramThresholdImageFilterID2IUS2.New()

class itkHistogramThresholdImageFilterID2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2_swigregister(itkHistogramThresholdImageFilterID2IUS2)

def itkHistogramThresholdImageFilterID3ISS3_New():
    return itkHistogramThresholdImageFilterID3ISS3.New()

class itkHistogramThresholdImageFilterID3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3_swigregister(itkHistogramThresholdImageFilterID3ISS3)

def itkHistogramThresholdImageFilterID3IUC3_New():
    return itkHistogramThresholdImageFilterID3IUC3.New()

class itkHistogramThresholdImageFilterID3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3_swigregister(itkHistogramThresholdImageFilterID3IUC3)

def itkHistogramThresholdImageFilterID3IUS3_New():
    return itkHistogramThresholdImageFilterID3IUS3.New()

class itkHistogramThresholdImageFilterID3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3_swigregister(itkHistogramThresholdImageFilterID3IUS3)

def itkHistogramThresholdImageFilterID4ISS4_New():
    return itkHistogramThresholdImageFilterID4ISS4.New()

class itkHistogramThresholdImageFilterID4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID4ISS4

        Create a new object of the class itkHistogramThresholdImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID4ISS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4_swigregister(itkHistogramThresholdImageFilterID4ISS4)

def itkHistogramThresholdImageFilterID4IUC4_New():
    return itkHistogramThresholdImageFilterID4IUC4.New()

class itkHistogramThresholdImageFilterID4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID4IUC4

        Create a new object of the class itkHistogramThresholdImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID4IUC4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4_swigregister(itkHistogramThresholdImageFilterID4IUC4)

def itkHistogramThresholdImageFilterID4IUS4_New():
    return itkHistogramThresholdImageFilterID4IUS4.New()

class itkHistogramThresholdImageFilterID4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterID4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterID4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDD *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDD"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDD
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterID4IUS4

        Create a new object of the class itkHistogramThresholdImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterID4IUS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4_swigregister(itkHistogramThresholdImageFilterID4IUS4)

def itkHistogramThresholdImageFilterIF2ISS2_New():
    return itkHistogramThresholdImageFilterIF2ISS2.New()

class itkHistogramThresholdImageFilterIF2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2_swigregister(itkHistogramThresholdImageFilterIF2ISS2)

def itkHistogramThresholdImageFilterIF2IUC2_New():
    return itkHistogramThresholdImageFilterIF2IUC2.New()

class itkHistogramThresholdImageFilterIF2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2_swigregister(itkHistogramThresholdImageFilterIF2IUC2)

def itkHistogramThresholdImageFilterIF2IUS2_New():
    return itkHistogramThresholdImageFilterIF2IUS2.New()

class itkHistogramThresholdImageFilterIF2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2_swigregister(itkHistogramThresholdImageFilterIF2IUS2)

def itkHistogramThresholdImageFilterIF3ISS3_New():
    return itkHistogramThresholdImageFilterIF3ISS3.New()

class itkHistogramThresholdImageFilterIF3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3_swigregister(itkHistogramThresholdImageFilterIF3ISS3)

def itkHistogramThresholdImageFilterIF3IUC3_New():
    return itkHistogramThresholdImageFilterIF3IUC3.New()

class itkHistogramThresholdImageFilterIF3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3_swigregister(itkHistogramThresholdImageFilterIF3IUC3)

def itkHistogramThresholdImageFilterIF3IUS3_New():
    return itkHistogramThresholdImageFilterIF3IUS3.New()

class itkHistogramThresholdImageFilterIF3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3_swigregister(itkHistogramThresholdImageFilterIF3IUS3)

def itkHistogramThresholdImageFilterIF4ISS4_New():
    return itkHistogramThresholdImageFilterIF4ISS4.New()

class itkHistogramThresholdImageFilterIF4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF4ISS4

        Create a new object of the class itkHistogramThresholdImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF4ISS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4_swigregister(itkHistogramThresholdImageFilterIF4ISS4)

def itkHistogramThresholdImageFilterIF4IUC4_New():
    return itkHistogramThresholdImageFilterIF4IUC4.New()

class itkHistogramThresholdImageFilterIF4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF4IUC4

        Create a new object of the class itkHistogramThresholdImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF4IUC4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4_swigregister(itkHistogramThresholdImageFilterIF4IUC4)

def itkHistogramThresholdImageFilterIF4IUS4_New():
    return itkHistogramThresholdImageFilterIF4IUS4.New()

class itkHistogramThresholdImageFilterIF4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIF4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIF4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDF *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDF"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDF
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIF4IUS4

        Create a new object of the class itkHistogramThresholdImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIF4IUS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4_swigregister(itkHistogramThresholdImageFilterIF4IUS4)

def itkHistogramThresholdImageFilterISS2ISS2_New():
    return itkHistogramThresholdImageFilterISS2ISS2.New()

class itkHistogramThresholdImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2_swigregister(itkHistogramThresholdImageFilterISS2ISS2)

def itkHistogramThresholdImageFilterISS2IUC2_New():
    return itkHistogramThresholdImageFilterISS2IUC2.New()

class itkHistogramThresholdImageFilterISS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2_swigregister(itkHistogramThresholdImageFilterISS2IUC2)

def itkHistogramThresholdImageFilterISS2IUS2_New():
    return itkHistogramThresholdImageFilterISS2IUS2.New()

class itkHistogramThresholdImageFilterISS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2_swigregister(itkHistogramThresholdImageFilterISS2IUS2)

def itkHistogramThresholdImageFilterISS3ISS3_New():
    return itkHistogramThresholdImageFilterISS3ISS3.New()

class itkHistogramThresholdImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3_swigregister(itkHistogramThresholdImageFilterISS3ISS3)

def itkHistogramThresholdImageFilterISS3IUC3_New():
    return itkHistogramThresholdImageFilterISS3IUC3.New()

class itkHistogramThresholdImageFilterISS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3_swigregister(itkHistogramThresholdImageFilterISS3IUC3)

def itkHistogramThresholdImageFilterISS3IUS3_New():
    return itkHistogramThresholdImageFilterISS3IUS3.New()

class itkHistogramThresholdImageFilterISS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3_swigregister(itkHistogramThresholdImageFilterISS3IUS3)

def itkHistogramThresholdImageFilterISS4ISS4_New():
    return itkHistogramThresholdImageFilterISS4ISS4.New()

class itkHistogramThresholdImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS4ISS4

        Create a new object of the class itkHistogramThresholdImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS4ISS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4_swigregister(itkHistogramThresholdImageFilterISS4ISS4)

def itkHistogramThresholdImageFilterISS4IUC4_New():
    return itkHistogramThresholdImageFilterISS4IUC4.New()

class itkHistogramThresholdImageFilterISS4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS4IUC4

        Create a new object of the class itkHistogramThresholdImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS4IUC4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4_swigregister(itkHistogramThresholdImageFilterISS4IUC4)

def itkHistogramThresholdImageFilterISS4IUS4_New():
    return itkHistogramThresholdImageFilterISS4IUS4.New()

class itkHistogramThresholdImageFilterISS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterISS4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterISS4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDSS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDSS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDSS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterISS4IUS4

        Create a new object of the class itkHistogramThresholdImageFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterISS4IUS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4_swigregister(itkHistogramThresholdImageFilterISS4IUS4)

def itkHistogramThresholdImageFilterIUC2ISS2_New():
    return itkHistogramThresholdImageFilterIUC2ISS2.New()

class itkHistogramThresholdImageFilterIUC2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2_swigregister(itkHistogramThresholdImageFilterIUC2ISS2)

def itkHistogramThresholdImageFilterIUC2IUC2_New():
    return itkHistogramThresholdImageFilterIUC2IUC2.New()

class itkHistogramThresholdImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2_swigregister(itkHistogramThresholdImageFilterIUC2IUC2)

def itkHistogramThresholdImageFilterIUC2IUS2_New():
    return itkHistogramThresholdImageFilterIUC2IUS2.New()

class itkHistogramThresholdImageFilterIUC2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2_swigregister(itkHistogramThresholdImageFilterIUC2IUS2)

def itkHistogramThresholdImageFilterIUC3ISS3_New():
    return itkHistogramThresholdImageFilterIUC3ISS3.New()

class itkHistogramThresholdImageFilterIUC3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3_swigregister(itkHistogramThresholdImageFilterIUC3ISS3)

def itkHistogramThresholdImageFilterIUC3IUC3_New():
    return itkHistogramThresholdImageFilterIUC3IUC3.New()

class itkHistogramThresholdImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3_swigregister(itkHistogramThresholdImageFilterIUC3IUC3)

def itkHistogramThresholdImageFilterIUC3IUS3_New():
    return itkHistogramThresholdImageFilterIUC3IUS3.New()

class itkHistogramThresholdImageFilterIUC3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3_swigregister(itkHistogramThresholdImageFilterIUC3IUS3)

def itkHistogramThresholdImageFilterIUC4ISS4_New():
    return itkHistogramThresholdImageFilterIUC4ISS4.New()

class itkHistogramThresholdImageFilterIUC4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC4ISS4

        Create a new object of the class itkHistogramThresholdImageFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC4ISS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4_swigregister(itkHistogramThresholdImageFilterIUC4ISS4)

def itkHistogramThresholdImageFilterIUC4IUC4_New():
    return itkHistogramThresholdImageFilterIUC4IUC4.New()

class itkHistogramThresholdImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC4IUC4

        Create a new object of the class itkHistogramThresholdImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC4IUC4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4_swigregister(itkHistogramThresholdImageFilterIUC4IUC4)

def itkHistogramThresholdImageFilterIUC4IUS4_New():
    return itkHistogramThresholdImageFilterIUC4IUS4.New()

class itkHistogramThresholdImageFilterIUC4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUC4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUC4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUC *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUC"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUC
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUC4IUS4

        Create a new object of the class itkHistogramThresholdImageFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUC4IUS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4_swigregister(itkHistogramThresholdImageFilterIUC4IUS4)

def itkHistogramThresholdImageFilterIUS2ISS2_New():
    return itkHistogramThresholdImageFilterIUS2ISS2.New()

class itkHistogramThresholdImageFilterIUS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2ISS2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS2ISS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2_swigregister(itkHistogramThresholdImageFilterIUS2ISS2)

def itkHistogramThresholdImageFilterIUS2IUC2_New():
    return itkHistogramThresholdImageFilterIUS2IUC2.New()

class itkHistogramThresholdImageFilterIUS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2IUC2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS2IUC2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2_swigregister(itkHistogramThresholdImageFilterIUS2IUC2)

def itkHistogramThresholdImageFilterIUS2IUS2_New():
    return itkHistogramThresholdImageFilterIUS2IUS2.New()

class itkHistogramThresholdImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS2IUS2

        Create a new object of the class itkHistogramThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS2IUS2 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2_swigregister(itkHistogramThresholdImageFilterIUS2IUS2)

def itkHistogramThresholdImageFilterIUS3ISS3_New():
    return itkHistogramThresholdImageFilterIUS3ISS3.New()

class itkHistogramThresholdImageFilterIUS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3ISS3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS3ISS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3_swigregister(itkHistogramThresholdImageFilterIUS3ISS3)

def itkHistogramThresholdImageFilterIUS3IUC3_New():
    return itkHistogramThresholdImageFilterIUS3IUC3.New()

class itkHistogramThresholdImageFilterIUS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3IUC3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS3IUC3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3_swigregister(itkHistogramThresholdImageFilterIUS3IUC3)

def itkHistogramThresholdImageFilterIUS3IUS3_New():
    return itkHistogramThresholdImageFilterIUS3IUS3.New()

class itkHistogramThresholdImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS3IUS3

        Create a new object of the class itkHistogramThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS3IUS3 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3_swigregister(itkHistogramThresholdImageFilterIUS3IUS3)

def itkHistogramThresholdImageFilterIUS4ISS4_New():
    return itkHistogramThresholdImageFilterIUS4ISS4.New()

class itkHistogramThresholdImageFilterIUS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS4ISS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS4ISS4

        Create a new object of the class itkHistogramThresholdImageFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS4ISS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4_swigregister(itkHistogramThresholdImageFilterIUS4ISS4)

def itkHistogramThresholdImageFilterIUS4IUC4_New():
    return itkHistogramThresholdImageFilterIUS4IUC4.New()

class itkHistogramThresholdImageFilterIUS4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS4IUC4

        Create a new object of the class itkHistogramThresholdImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS4IUC4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4_swigregister(itkHistogramThresholdImageFilterIUS4IUC4)

def itkHistogramThresholdImageFilterIUS4IUS4_New():
    return itkHistogramThresholdImageFilterIUS4IUS4.New()

class itkHistogramThresholdImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkHistogramThresholdImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHistogramThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHistogramThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetMaskImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetInput2(self, input)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetInsideValue(self)

    def SetNumberOfHistogramBins(self, _arg):
        r"""
        SetNumberOfHistogramBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetNumberOfHistogramBins(self, _arg)

    def GetNumberOfHistogramBins(self):
        r"""GetNumberOfHistogramBins(self) -> unsigned int"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetNumberOfHistogramBins(self)

    def SetAutoMinimumMaximum(self, _arg):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetAutoMinimumMaximum(self, _arg)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_AutoMinimumMaximumOff(self)

    def SetMaskOutput(self, _arg):
        r"""
        SetMaskOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetMaskOutput(self, _arg)

    def GetMaskOutput(self):
        r"""GetMaskOutput(self) -> bool"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetMaskOutput(self)

    def MaskOutputOn(self):
        r"""MaskOutputOn(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_MaskOutputOn(self)

    def MaskOutputOff(self):
        r"""MaskOutputOff(self)"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_MaskOutputOff(self)

    def SetMaskValue(self, _arg):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetMaskValue(self, _arg)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetMaskValue(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetThreshold(self)

    def SetCalculator(self, _arg):
        r"""
        SetCalculator(self, _arg)

        Parameters
        ----------
        _arg: itkHistogramThresholdCalculatorHDUS *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_SetCalculator(self, _arg)

    def GetModifiableCalculator(self):
        r"""GetModifiableCalculator(self) -> itkHistogramThresholdCalculatorHDUS"""
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetModifiableCalculator(self)

    def GetCalculator(self, *args):
        r"""
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        GetCalculator(self) -> itkHistogramThresholdCalculatorHDUS
        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_GetCalculator(self, *args)
    OutputEqualityComparableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_OutputEqualityComparableCheck
    
    InputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkHistogramThresholdImageFilterPython.delete_itkHistogramThresholdImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHistogramThresholdImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHistogramThresholdImageFilterIUS4IUS4

        Create a new object of the class itkHistogramThresholdImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHistogramThresholdImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHistogramThresholdImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHistogramThresholdImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHistogramThresholdImageFilterIUS4IUS4 in _itkHistogramThresholdImageFilterPython:
_itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4_swigregister(itkHistogramThresholdImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def histogram_threshold_image_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., outside_value: int=..., inside_value: int=..., number_of_histogram_bins: int=..., auto_minimum_maximum: bool=..., mask_output: bool=..., mask_value: int=..., calculator=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for HistogramThresholdImageFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'outside_value':outside_value,'inside_value':inside_value,'number_of_histogram_bins':number_of_histogram_bins,'auto_minimum_maximum':auto_minimum_maximum,'mask_output':mask_output,'mask_value':mask_value,'calculator':calculator }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.HistogramThresholdImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def histogram_threshold_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.HistogramThresholdImageFilter
    histogram_threshold_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    histogram_threshold_image_filter.__doc__ = filter_object.__doc__



