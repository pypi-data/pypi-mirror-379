# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkThresholdLabelerImageFilterPython
else:
    import _itkThresholdLabelerImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython

def itkThresholdLabelerImageFilterID2ID2_Superclass_New():
    return itkThresholdLabelerImageFilterID2ID2_Superclass.New()

class itkThresholdLabelerImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkThresholdLabelerImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< double,double >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< double,double > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< double,double > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterID2ID2_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterID2ID2_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Superclass_swigregister(itkThresholdLabelerImageFilterID2ID2_Superclass)

def itkThresholdLabelerImageFilterID3ID3_Superclass_New():
    return itkThresholdLabelerImageFilterID3ID3_Superclass.New()

class itkThresholdLabelerImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkThresholdLabelerImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< double,double >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< double,double > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< double,double > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterID3ID3_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterID3ID3_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Superclass_swigregister(itkThresholdLabelerImageFilterID3ID3_Superclass)

def itkThresholdLabelerImageFilterID4ID4_Superclass_New():
    return itkThresholdLabelerImageFilterID4ID4_Superclass.New()

class itkThresholdLabelerImageFilterID4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkThresholdLabelerImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterID4ID4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterID4ID4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< double,double >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< double,double > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< double,double > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterID4ID4_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterID4ID4_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Superclass_swigregister(itkThresholdLabelerImageFilterID4ID4_Superclass)

def itkThresholdLabelerImageFilterIF2IF2_Superclass_New():
    return itkThresholdLabelerImageFilterIF2IF2_Superclass.New()

class itkThresholdLabelerImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< float,float >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< float,float > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< float,float > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIF2IF2_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIF2IF2_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Superclass_swigregister(itkThresholdLabelerImageFilterIF2IF2_Superclass)

def itkThresholdLabelerImageFilterIF3IF3_Superclass_New():
    return itkThresholdLabelerImageFilterIF3IF3_Superclass.New()

class itkThresholdLabelerImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< float,float >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< float,float > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< float,float > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIF3IF3_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIF3IF3_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Superclass_swigregister(itkThresholdLabelerImageFilterIF3IF3_Superclass)

def itkThresholdLabelerImageFilterIF4IF4_Superclass_New():
    return itkThresholdLabelerImageFilterIF4IF4_Superclass.New()

class itkThresholdLabelerImageFilterIF4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIF4IF4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIF4IF4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< float,float >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< float,float > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< float,float > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIF4IF4_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIF4IF4_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Superclass_swigregister(itkThresholdLabelerImageFilterIF4IF4_Superclass)

def itkThresholdLabelerImageFilterISS2ISS2_Superclass_New():
    return itkThresholdLabelerImageFilterISS2ISS2_Superclass.New()

class itkThresholdLabelerImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkThresholdLabelerImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< short,short >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< short,short > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< short,short > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterISS2ISS2_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterISS2ISS2_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Superclass_swigregister(itkThresholdLabelerImageFilterISS2ISS2_Superclass)

def itkThresholdLabelerImageFilterISS3ISS3_Superclass_New():
    return itkThresholdLabelerImageFilterISS3ISS3_Superclass.New()

class itkThresholdLabelerImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkThresholdLabelerImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< short,short >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< short,short > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< short,short > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterISS3ISS3_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterISS3ISS3_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Superclass_swigregister(itkThresholdLabelerImageFilterISS3ISS3_Superclass)

def itkThresholdLabelerImageFilterISS4ISS4_Superclass_New():
    return itkThresholdLabelerImageFilterISS4ISS4_Superclass.New()

class itkThresholdLabelerImageFilterISS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkThresholdLabelerImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< short,short >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< short,short > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< short,short > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterISS4ISS4_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterISS4ISS4_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Superclass_swigregister(itkThresholdLabelerImageFilterISS4ISS4_Superclass)

def itkThresholdLabelerImageFilterIUC2IUC2_Superclass_New():
    return itkThresholdLabelerImageFilterIUC2IUC2_Superclass.New()

class itkThresholdLabelerImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned char,unsigned char > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< unsigned char,unsigned char > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUC2IUC2_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Superclass_swigregister(itkThresholdLabelerImageFilterIUC2IUC2_Superclass)

def itkThresholdLabelerImageFilterIUC3IUC3_Superclass_New():
    return itkThresholdLabelerImageFilterIUC3IUC3_Superclass.New()

class itkThresholdLabelerImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned char,unsigned char > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< unsigned char,unsigned char > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUC3IUC3_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Superclass_swigregister(itkThresholdLabelerImageFilterIUC3IUC3_Superclass)

def itkThresholdLabelerImageFilterIUC4IUC4_Superclass_New():
    return itkThresholdLabelerImageFilterIUC4IUC4_Superclass.New()

class itkThresholdLabelerImageFilterIUC4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned char,unsigned char > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< unsigned char,unsigned char > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUC4IUC4_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Superclass_swigregister(itkThresholdLabelerImageFilterIUC4IUC4_Superclass)

def itkThresholdLabelerImageFilterIUS2IUS2_Superclass_New():
    return itkThresholdLabelerImageFilterIUS2IUS2_Superclass.New()

class itkThresholdLabelerImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned short,unsigned short > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< unsigned short,unsigned short > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUS2IUS2_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Superclass_swigregister(itkThresholdLabelerImageFilterIUS2IUS2_Superclass)

def itkThresholdLabelerImageFilterIUS3IUS3_Superclass_New():
    return itkThresholdLabelerImageFilterIUS3IUS3_Superclass.New()

class itkThresholdLabelerImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned short,unsigned short > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< unsigned short,unsigned short > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUS3IUS3_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Superclass_swigregister(itkThresholdLabelerImageFilterIUS3IUS3_Superclass)

def itkThresholdLabelerImageFilterIUS4IUS4_Superclass_New():
    return itkThresholdLabelerImageFilterIUS4IUS4_Superclass.New()

class itkThresholdLabelerImageFilterIUS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::ThresholdLabeler< unsigned short,unsigned short > const &
        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ThresholdLabeler< unsigned short,unsigned short > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkThresholdLabelerImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUS4IUS4_Superclass in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Superclass_swigregister(itkThresholdLabelerImageFilterIUS4IUS4_Superclass)

def itkThresholdLabelerImageFilterID2ID2_New():
    return itkThresholdLabelerImageFilterID2ID2.New()

class itkThresholdLabelerImageFilterID2ID2(itkThresholdLabelerImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterID2ID2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterID2ID2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> double"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterID2ID2

        Create a new object of the class itkThresholdLabelerImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterID2ID2 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID2ID2_swigregister(itkThresholdLabelerImageFilterID2ID2)

def itkThresholdLabelerImageFilterID3ID3_New():
    return itkThresholdLabelerImageFilterID3ID3.New()

class itkThresholdLabelerImageFilterID3ID3(itkThresholdLabelerImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterID3ID3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterID3ID3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> double"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterID3ID3

        Create a new object of the class itkThresholdLabelerImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterID3ID3 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID3ID3_swigregister(itkThresholdLabelerImageFilterID3ID3)

def itkThresholdLabelerImageFilterID4ID4_New():
    return itkThresholdLabelerImageFilterID4ID4.New()

class itkThresholdLabelerImageFilterID4ID4(itkThresholdLabelerImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterID4ID4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterID4ID4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> double"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterID4ID4

        Create a new object of the class itkThresholdLabelerImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterID4ID4 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterID4ID4_swigregister(itkThresholdLabelerImageFilterID4ID4)

def itkThresholdLabelerImageFilterIF2IF2_New():
    return itkThresholdLabelerImageFilterIF2IF2.New()

class itkThresholdLabelerImageFilterIF2IF2(itkThresholdLabelerImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIF2IF2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIF2IF2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< float,std::allocator< float > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorF"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> float"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIF2IF2

        Create a new object of the class itkThresholdLabelerImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIF2IF2 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF2IF2_swigregister(itkThresholdLabelerImageFilterIF2IF2)

def itkThresholdLabelerImageFilterIF3IF3_New():
    return itkThresholdLabelerImageFilterIF3IF3.New()

class itkThresholdLabelerImageFilterIF3IF3(itkThresholdLabelerImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIF3IF3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIF3IF3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< float,std::allocator< float > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorF"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> float"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIF3IF3

        Create a new object of the class itkThresholdLabelerImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIF3IF3 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF3IF3_swigregister(itkThresholdLabelerImageFilterIF3IF3)

def itkThresholdLabelerImageFilterIF4IF4_New():
    return itkThresholdLabelerImageFilterIF4IF4.New()

class itkThresholdLabelerImageFilterIF4IF4(itkThresholdLabelerImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIF4IF4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIF4IF4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< float,std::allocator< float > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorF"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> float"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIF4IF4

        Create a new object of the class itkThresholdLabelerImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIF4IF4 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIF4IF4_swigregister(itkThresholdLabelerImageFilterIF4IF4)

def itkThresholdLabelerImageFilterISS2ISS2_New():
    return itkThresholdLabelerImageFilterISS2ISS2.New()

class itkThresholdLabelerImageFilterISS2ISS2(itkThresholdLabelerImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterISS2ISS2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterISS2ISS2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< short,std::allocator< short > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorSS"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> short"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterISS2ISS2

        Create a new object of the class itkThresholdLabelerImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterISS2ISS2 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS2ISS2_swigregister(itkThresholdLabelerImageFilterISS2ISS2)

def itkThresholdLabelerImageFilterISS3ISS3_New():
    return itkThresholdLabelerImageFilterISS3ISS3.New()

class itkThresholdLabelerImageFilterISS3ISS3(itkThresholdLabelerImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterISS3ISS3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterISS3ISS3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< short,std::allocator< short > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorSS"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> short"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterISS3ISS3

        Create a new object of the class itkThresholdLabelerImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterISS3ISS3 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS3ISS3_swigregister(itkThresholdLabelerImageFilterISS3ISS3)

def itkThresholdLabelerImageFilterISS4ISS4_New():
    return itkThresholdLabelerImageFilterISS4ISS4.New()

class itkThresholdLabelerImageFilterISS4ISS4(itkThresholdLabelerImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterISS4ISS4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterISS4ISS4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< short,std::allocator< short > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorSS"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> short"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterISS4ISS4

        Create a new object of the class itkThresholdLabelerImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterISS4ISS4 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterISS4ISS4_swigregister(itkThresholdLabelerImageFilterISS4ISS4)

def itkThresholdLabelerImageFilterIUC2IUC2_New():
    return itkThresholdLabelerImageFilterIUC2IUC2.New()

class itkThresholdLabelerImageFilterIUC2IUC2(itkThresholdLabelerImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUC2IUC2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUC2IUC2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< unsigned char,std::allocator< unsigned char > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorUC"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> unsigned char"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUC2IUC2

        Create a new object of the class itkThresholdLabelerImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUC2IUC2 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC2IUC2_swigregister(itkThresholdLabelerImageFilterIUC2IUC2)

def itkThresholdLabelerImageFilterIUC3IUC3_New():
    return itkThresholdLabelerImageFilterIUC3IUC3.New()

class itkThresholdLabelerImageFilterIUC3IUC3(itkThresholdLabelerImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUC3IUC3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUC3IUC3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< unsigned char,std::allocator< unsigned char > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorUC"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> unsigned char"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUC3IUC3

        Create a new object of the class itkThresholdLabelerImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUC3IUC3 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC3IUC3_swigregister(itkThresholdLabelerImageFilterIUC3IUC3)

def itkThresholdLabelerImageFilterIUC4IUC4_New():
    return itkThresholdLabelerImageFilterIUC4IUC4.New()

class itkThresholdLabelerImageFilterIUC4IUC4(itkThresholdLabelerImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUC4IUC4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUC4IUC4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< unsigned char,std::allocator< unsigned char > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorUC"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> unsigned char"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUC4IUC4

        Create a new object of the class itkThresholdLabelerImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUC4IUC4 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUC4IUC4_swigregister(itkThresholdLabelerImageFilterIUC4IUC4)

def itkThresholdLabelerImageFilterIUS2IUS2_New():
    return itkThresholdLabelerImageFilterIUS2IUS2.New()

class itkThresholdLabelerImageFilterIUS2IUS2(itkThresholdLabelerImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUS2IUS2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUS2IUS2_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< unsigned short,std::allocator< unsigned short > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorUS"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> unsigned short"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUS2IUS2

        Create a new object of the class itkThresholdLabelerImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUS2IUS2 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS2IUS2_swigregister(itkThresholdLabelerImageFilterIUS2IUS2)

def itkThresholdLabelerImageFilterIUS3IUS3_New():
    return itkThresholdLabelerImageFilterIUS3IUS3.New()

class itkThresholdLabelerImageFilterIUS3IUS3(itkThresholdLabelerImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUS3IUS3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUS3IUS3_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< unsigned short,std::allocator< unsigned short > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorUS"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> unsigned short"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUS3IUS3

        Create a new object of the class itkThresholdLabelerImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUS3IUS3 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS3IUS3_swigregister(itkThresholdLabelerImageFilterIUS3IUS3)

def itkThresholdLabelerImageFilterIUS4IUS4_New():
    return itkThresholdLabelerImageFilterIUS4IUS4.New()

class itkThresholdLabelerImageFilterIUS4IUS4(itkThresholdLabelerImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkThresholdLabelerImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdLabelerImageFilterIUS4IUS4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdLabelerImageFilterIUS4IUS4_Pointer"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_Clone(self)
    PixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_PixelTypeComparable
    
    OutputPixelTypeComparable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_OutputPixelTypeComparable
    
    OutputPixelTypeOStreamWritable = _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_OutputPixelTypeOStreamWritable
    

    def SetThresholds(self, thresholds):
        r"""
        SetThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< unsigned short,std::allocator< unsigned short > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_SetThresholds(self, thresholds)

    def GetThresholds(self):
        r"""GetThresholds(self) -> vectorUS"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_GetThresholds(self)

    def SetRealThresholds(self, thresholds):
        r"""
        SetRealThresholds(self, thresholds)

        Parameters
        ----------
        thresholds: std::vector< double,std::allocator< double > > const &

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_SetRealThresholds(self, thresholds)

    def GetRealThresholds(self):
        r"""GetRealThresholds(self) -> vectorD"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_GetRealThresholds(self)

    def SetLabelOffset(self, _arg):
        r"""
        SetLabelOffset(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_SetLabelOffset(self, _arg)

    def GetLabelOffset(self):
        r"""GetLabelOffset(self) -> unsigned short"""
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_GetLabelOffset(self)
    __swig_destroy__ = _itkThresholdLabelerImageFilterPython.delete_itkThresholdLabelerImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdLabelerImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdLabelerImageFilterIUS4IUS4

        Create a new object of the class itkThresholdLabelerImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdLabelerImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdLabelerImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdLabelerImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdLabelerImageFilterIUS4IUS4 in _itkThresholdLabelerImageFilterPython:
_itkThresholdLabelerImageFilterPython.itkThresholdLabelerImageFilterIUS4IUS4_swigregister(itkThresholdLabelerImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def threshold_labeler_image_filter(*args: itkt.ImageLike,  thresholds: Sequence[float]=..., real_thresholds: Sequence[float]=..., label_offset: float=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ThresholdLabelerImageFilter"""
    import itk

    kwarg_typehints = { 'thresholds':thresholds,'real_thresholds':real_thresholds,'label_offset':label_offset,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ThresholdLabelerImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def threshold_labeler_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.ThresholdLabelerImageFilter
    threshold_labeler_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    threshold_labeler_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__



