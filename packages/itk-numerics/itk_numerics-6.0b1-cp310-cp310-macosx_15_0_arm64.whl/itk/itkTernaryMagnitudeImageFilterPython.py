# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTernaryMagnitudeImageFilterPython
else:
    import _itkTernaryMagnitudeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkTernaryGeneratorImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkTernaryMagnitudeImageFilterID2ID2ID2ID2_New():
    return itkTernaryMagnitudeImageFilterID2ID2ID2ID2.New()

class itkTernaryMagnitudeImageFilterID2ID2ID2ID2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID2ID2ID2ID2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterID2ID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID2ID2ID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterID2ID2ID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID2ID2ID2ID2

        Create a new object of the class itkTernaryMagnitudeImageFilterID2ID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID2ID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID2ID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID2ID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID2ID2ID2ID2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_swigregister(itkTernaryMagnitudeImageFilterID2ID2ID2ID2)

def itkTernaryMagnitudeImageFilterID3ID3ID3ID3_New():
    return itkTernaryMagnitudeImageFilterID3ID3ID3ID3.New()

class itkTernaryMagnitudeImageFilterID3ID3ID3ID3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID3ID3ID3ID3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterID3ID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID3ID3ID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterID3ID3ID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID3ID3ID3ID3

        Create a new object of the class itkTernaryMagnitudeImageFilterID3ID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID3ID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID3ID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID3ID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID3ID3ID3ID3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_swigregister(itkTernaryMagnitudeImageFilterID3ID3ID3ID3)

def itkTernaryMagnitudeImageFilterID4ID4ID4ID4_New():
    return itkTernaryMagnitudeImageFilterID4ID4ID4ID4.New()

class itkTernaryMagnitudeImageFilterID4ID4ID4ID4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID4ID4ID4ID4):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterID4ID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterID4ID4ID4ID4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID4ID4ID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterID4ID4ID4ID4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID4ID4ID4ID4_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID4ID4ID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterID4ID4ID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID4ID4ID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID4ID4ID4ID4

        Create a new object of the class itkTernaryMagnitudeImageFilterID4ID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID4ID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID4ID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID4ID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID4ID4ID4ID4 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID4ID4ID4ID4_swigregister(itkTernaryMagnitudeImageFilterID4ID4ID4ID4)

def itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_New():
    return itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.New()

class itkTernaryMagnitudeImageFilterIF2IF2IF2IF2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF2IF2IF2IF2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIF2IF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF2IF2IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIF2IF2IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF2IF2IF2IF2

        Create a new object of the class itkTernaryMagnitudeImageFilterIF2IF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF2IF2IF2IF2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_swigregister(itkTernaryMagnitudeImageFilterIF2IF2IF2IF2)

def itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_New():
    return itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.New()

class itkTernaryMagnitudeImageFilterIF3IF3IF3IF3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF3IF3IF3IF3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIF3IF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF3IF3IF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIF3IF3IF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF3IF3IF3IF3

        Create a new object of the class itkTernaryMagnitudeImageFilterIF3IF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF3IF3IF3IF3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_swigregister(itkTernaryMagnitudeImageFilterIF3IF3IF3IF3)

def itkTernaryMagnitudeImageFilterIF4IF4IF4IF4_New():
    return itkTernaryMagnitudeImageFilterIF4IF4IF4IF4.New()

class itkTernaryMagnitudeImageFilterIF4IF4IF4IF4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF4IF4IF4IF4):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIF4IF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIF4IF4IF4IF4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF4IF4IF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIF4IF4IF4IF4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF4IF4IF4IF4_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF4IF4IF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIF4IF4IF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF4IF4IF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF4IF4IF4IF4

        Create a new object of the class itkTernaryMagnitudeImageFilterIF4IF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF4IF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF4IF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF4IF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF4IF4IF4IF4 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF4IF4IF4IF4_swigregister(itkTernaryMagnitudeImageFilterIF4IF4IF4IF4)

def itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_New():
    return itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.New()

class itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS2ISS2ISS2ISS2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2

        Create a new object of the class itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_swigregister(itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2)

def itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_New():
    return itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.New()

class itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS3ISS3ISS3ISS3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3

        Create a new object of the class itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_swigregister(itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3)

def itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4_New():
    return itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4.New()

class itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS4ISS4ISS4ISS4):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4

        Create a new object of the class itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4_swigregister(itkTernaryMagnitudeImageFilterISS4ISS4ISS4ISS4)

def itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_New():
    return itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.New()

class itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC2IUC2IUC2IUC2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_swigregister(itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2)

def itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_New():
    return itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.New()

class itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC3IUC3IUC3IUC3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_swigregister(itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3)

def itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4_New():
    return itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4.New()

class itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC4IUC4IUC4IUC4):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4_swigregister(itkTernaryMagnitudeImageFilterIUC4IUC4IUC4IUC4)

def itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_New():
    return itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.New()

class itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS2IUS2IUS2IUS2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_swigregister(itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2)

def itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_New():
    return itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.New()

class itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS3IUS3IUS3IUS3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_swigregister(itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3)

def itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4_New():
    return itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4.New()

class itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS4IUS4IUS4IUS4):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4_Pointer"""
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4_Clone(self)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4_swigregister(itkTernaryMagnitudeImageFilterIUS4IUS4IUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def ternary_magnitude_image_filter(*args: itkt.ImageLike,  constant1: float=..., constant2: float=..., constant3: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TernaryMagnitudeImageFilter"""
    import itk

    kwarg_typehints = { 'constant1':constant1,'constant2':constant2,'constant3':constant3 }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TernaryMagnitudeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def ternary_magnitude_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.TernaryMagnitudeImageFilter
    ternary_magnitude_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    ternary_magnitude_image_filter.__doc__ = filter_object.__doc__



