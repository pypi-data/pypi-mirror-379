# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLineSpatialObjectPython
else:
    import _itkLineSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkLineSpatialObjectPointPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
class listitkPointBasedSpatialObjectLine2_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectLine2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObjectLine2_Pointer,std::allocator< itkPointBasedSpatialObjectLine2_Pointer > > const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObjectLine2_Pointer,std::allocator< itkPointBasedSpatialObjectLine2_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine2_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObjectLine2_Pointer > &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::allocator_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectLine2_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectLine2_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkPointBasedSpatialObjectLine2_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine2_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_reverse(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkPointBasedSpatialObjectLine2_Pointer

# Register listitkPointBasedSpatialObjectLine2_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_swigregister(listitkPointBasedSpatialObjectLine2_Pointer)
class listitkPointBasedSpatialObjectLine3_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectLine3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObjectLine3_Pointer,std::allocator< itkPointBasedSpatialObjectLine3_Pointer > > const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObjectLine3_Pointer,std::allocator< itkPointBasedSpatialObjectLine3_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine3_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObjectLine3_Pointer > &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::allocator_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectLine3_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectLine3_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkPointBasedSpatialObjectLine3_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine3_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_reverse(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkPointBasedSpatialObjectLine3_Pointer

# Register listitkPointBasedSpatialObjectLine3_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_swigregister(listitkPointBasedSpatialObjectLine3_Pointer)
class listitkPointBasedSpatialObjectLine4_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectLine4_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObjectLine4_Pointer,std::allocator< itkPointBasedSpatialObjectLine4_Pointer > > const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObjectLine4_Pointer,std::allocator< itkPointBasedSpatialObjectLine4_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectLine4_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObjectLine4_Pointer > &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::allocator_type"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectLine4_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectLine4_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkPointBasedSpatialObjectLine4_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectLine4_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_reverse(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkPointBasedSpatialObjectLine4_Pointer

# Register listitkPointBasedSpatialObjectLine4_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_swigregister(listitkPointBasedSpatialObjectLine4_Pointer)
class listitkLineSpatialObject2_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkLineSpatialObject2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkLineSpatialObject2_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type
        j: std::list< itkLineSpatialObject2_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type
        j: std::list< itkLineSpatialObject2_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type
        j: std::list< itkLineSpatialObject2_Pointer >::difference_type
        v: std::list< itkLineSpatialObject2_Pointer,std::allocator< itkLineSpatialObject2_Pointer > > const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type
        j: std::list< itkLineSpatialObject2_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkLineSpatialObject2_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkLineSpatialObject2_Pointer,std::allocator< itkLineSpatialObject2_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject2_Pointer >::difference_type
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkLineSpatialObject2_Pointer >::value_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkLineSpatialObject2_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkLineSpatialObject2_Pointer > &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkLineSpatialObject2_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkLineSpatialObject2_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkLineSpatialObject2_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkLineSpatialObject2_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkLineSpatialObject2_Pointer >::allocator_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkLineSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject2_Pointer >::iterator

        erase(self, first, last) -> std::list< itkLineSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkLineSpatialObject2_Pointer >::iterator
        last: std::list< itkLineSpatialObject2_Pointer >::iterator

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLineSpatialObject2_Pointer
        __init__(self, other) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        other: std::list< itkLineSpatialObject2_Pointer > const &

        __init__(self, size) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject2_Pointer >::size_type

        __init__(self, size, value) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject2_Pointer >::size_type
        value: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkLineSpatialObject2_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkLineSpatialObject2_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkLineSpatialObject2_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkLineSpatialObject2_Pointer >::size_type
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkLineSpatialObject2_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkLineSpatialObject2_Pointer >::size_type
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkLineSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject2_Pointer >::iterator
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject2_Pointer >::iterator
        n: std::list< itkLineSpatialObject2_Pointer >::size_type
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_reverse(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkLineSpatialObject2_Pointer

# Register listitkLineSpatialObject2_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_swigregister(listitkLineSpatialObject2_Pointer)
class listitkLineSpatialObject3_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkLineSpatialObject3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkLineSpatialObject3_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type
        j: std::list< itkLineSpatialObject3_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type
        j: std::list< itkLineSpatialObject3_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type
        j: std::list< itkLineSpatialObject3_Pointer >::difference_type
        v: std::list< itkLineSpatialObject3_Pointer,std::allocator< itkLineSpatialObject3_Pointer > > const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type
        j: std::list< itkLineSpatialObject3_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkLineSpatialObject3_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkLineSpatialObject3_Pointer,std::allocator< itkLineSpatialObject3_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject3_Pointer >::difference_type
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkLineSpatialObject3_Pointer >::value_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkLineSpatialObject3_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkLineSpatialObject3_Pointer > &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkLineSpatialObject3_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkLineSpatialObject3_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkLineSpatialObject3_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkLineSpatialObject3_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkLineSpatialObject3_Pointer >::allocator_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkLineSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject3_Pointer >::iterator

        erase(self, first, last) -> std::list< itkLineSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkLineSpatialObject3_Pointer >::iterator
        last: std::list< itkLineSpatialObject3_Pointer >::iterator

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLineSpatialObject3_Pointer
        __init__(self, other) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        other: std::list< itkLineSpatialObject3_Pointer > const &

        __init__(self, size) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject3_Pointer >::size_type

        __init__(self, size, value) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject3_Pointer >::size_type
        value: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkLineSpatialObject3_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkLineSpatialObject3_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkLineSpatialObject3_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkLineSpatialObject3_Pointer >::size_type
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkLineSpatialObject3_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkLineSpatialObject3_Pointer >::size_type
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkLineSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject3_Pointer >::iterator
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject3_Pointer >::iterator
        n: std::list< itkLineSpatialObject3_Pointer >::size_type
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_reverse(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkLineSpatialObject3_Pointer

# Register listitkLineSpatialObject3_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_swigregister(listitkLineSpatialObject3_Pointer)
class listitkLineSpatialObject4_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkLineSpatialObject4_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkLineSpatialObject4_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type
        j: std::list< itkLineSpatialObject4_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type
        j: std::list< itkLineSpatialObject4_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type
        j: std::list< itkLineSpatialObject4_Pointer >::difference_type
        v: std::list< itkLineSpatialObject4_Pointer,std::allocator< itkLineSpatialObject4_Pointer > > const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type
        j: std::list< itkLineSpatialObject4_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkLineSpatialObject4_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkLineSpatialObject4_Pointer,std::allocator< itkLineSpatialObject4_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkLineSpatialObject4_Pointer >::difference_type
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkLineSpatialObject4_Pointer >::value_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkLineSpatialObject4_Pointer >::size_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkLineSpatialObject4_Pointer > &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkLineSpatialObject4_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkLineSpatialObject4_Pointer >::iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkLineSpatialObject4_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkLineSpatialObject4_Pointer >::reverse_iterator"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkLineSpatialObject4_Pointer >::allocator_type"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkLineSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject4_Pointer >::iterator

        erase(self, first, last) -> std::list< itkLineSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkLineSpatialObject4_Pointer >::iterator
        last: std::list< itkLineSpatialObject4_Pointer >::iterator

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLineSpatialObject4_Pointer
        __init__(self, other) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        other: std::list< itkLineSpatialObject4_Pointer > const &

        __init__(self, size) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject4_Pointer >::size_type

        __init__(self, size, value) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject4_Pointer >::size_type
        value: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkLineSpatialObject4_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkLineSpatialObject4_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkLineSpatialObject4_Pointer >::value_type const &"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkLineSpatialObject4_Pointer >::size_type
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkLineSpatialObject4_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkLineSpatialObject4_Pointer >::size_type
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkLineSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject4_Pointer >::iterator
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkLineSpatialObject4_Pointer >::iterator
        n: std::list< itkLineSpatialObject4_Pointer >::size_type
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_reverse(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkLineSpatialObject4_Pointer

# Register listitkLineSpatialObject4_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_swigregister(listitkLineSpatialObject4_Pointer)

def itkPointBasedSpatialObjectLine2_New():
    return itkPointBasedSpatialObjectLine2.New()

class itkPointBasedSpatialObjectLine2(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""Proxy of C++ itkPointBasedSpatialObjectLine2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObjectLine2_Pointer"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObjectLine2_Pointer"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkLineSpatialObjectPoint2 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkLineSpatialObjectPoint2,std::allocator< itkLineSpatialObjectPoint2 > > const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkLineSpatialObjectPoint2
        GetPoints(self) -> vectoritkLineSpatialObjectPoint2
        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkLineSpatialObjectPoint2

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkLineSpatialObjectPoint2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkLineSpatialObjectPoint2

        Parameters
        ----------
        point: itkPointD2 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkLineSpatialObjectPoint2

        Parameters
        ----------
        point: itkPointD2 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkPointBasedSpatialObjectLine2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObjectLine2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectLine2

        Create a new object of the class itkPointBasedSpatialObjectLine2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectLine2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectLine2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectLine2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectLine2 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_swigregister(itkPointBasedSpatialObjectLine2)

def itkPointBasedSpatialObjectLine3_New():
    return itkPointBasedSpatialObjectLine3.New()

class itkPointBasedSpatialObjectLine3(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""Proxy of C++ itkPointBasedSpatialObjectLine3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObjectLine3_Pointer"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObjectLine3_Pointer"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkLineSpatialObjectPoint3 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkLineSpatialObjectPoint3,std::allocator< itkLineSpatialObjectPoint3 > > const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkLineSpatialObjectPoint3
        GetPoints(self) -> vectoritkLineSpatialObjectPoint3
        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkLineSpatialObjectPoint3

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkLineSpatialObjectPoint3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkLineSpatialObjectPoint3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkLineSpatialObjectPoint3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkPointBasedSpatialObjectLine3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObjectLine3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectLine3

        Create a new object of the class itkPointBasedSpatialObjectLine3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectLine3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectLine3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectLine3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectLine3 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_swigregister(itkPointBasedSpatialObjectLine3)

def itkPointBasedSpatialObjectLine4_New():
    return itkPointBasedSpatialObjectLine4.New()

class itkPointBasedSpatialObjectLine4(itk.itkSpatialObjectBasePython.itkSpatialObject4):
    r"""Proxy of C++ itkPointBasedSpatialObjectLine4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObjectLine4_Pointer"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObjectLine4_Pointer"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkLineSpatialObjectPoint4 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkLineSpatialObjectPoint4,std::allocator< itkLineSpatialObjectPoint4 > > const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkLineSpatialObjectPoint4
        GetPoints(self) -> vectoritkLineSpatialObjectPoint4
        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkLineSpatialObjectPoint4

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkLineSpatialObjectPoint4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkLineSpatialObjectPoint4

        Parameters
        ----------
        point: itkPointD4 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkLineSpatialObjectPoint4

        Parameters
        ----------
        point: itkPointD4 const &

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkPointBasedSpatialObjectLine4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObjectLine4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectLine4

        Create a new object of the class itkPointBasedSpatialObjectLine4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectLine4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectLine4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectLine4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectLine4 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_swigregister(itkPointBasedSpatialObjectLine4)

def itkLineSpatialObject2_New():
    return itkLineSpatialObject2.New()

class itkLineSpatialObject2(itkPointBasedSpatialObjectLine2):
    r"""Proxy of C++ itkLineSpatialObject2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLineSpatialObject2_Pointer"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLineSpatialObject2_Pointer"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_Clone(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLineSpatialObject2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject2

        Create a new object of the class itkLineSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLineSpatialObject2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLineSpatialObject2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLineSpatialObject2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLineSpatialObject2 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkLineSpatialObject2_swigregister(itkLineSpatialObject2)

def itkLineSpatialObject3_New():
    return itkLineSpatialObject3.New()

class itkLineSpatialObject3(itkPointBasedSpatialObjectLine3):
    r"""Proxy of C++ itkLineSpatialObject3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLineSpatialObject3_Pointer"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLineSpatialObject3_Pointer"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_Clone(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLineSpatialObject3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject3

        Create a new object of the class itkLineSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLineSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLineSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLineSpatialObject3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLineSpatialObject3 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkLineSpatialObject3_swigregister(itkLineSpatialObject3)

def itkLineSpatialObject4_New():
    return itkLineSpatialObject4.New()

class itkLineSpatialObject4(itkPointBasedSpatialObjectLine4):
    r"""Proxy of C++ itkLineSpatialObject4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLineSpatialObject4_Pointer"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLineSpatialObject4_Pointer"""
        return _itkLineSpatialObjectPython.itkLineSpatialObject4_Clone(self)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLineSpatialObject4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLineSpatialObjectPython.itkLineSpatialObject4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject4

        Create a new object of the class itkLineSpatialObject4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLineSpatialObject4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLineSpatialObject4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLineSpatialObject4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLineSpatialObject4 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkLineSpatialObject4_swigregister(itkLineSpatialObject4)

