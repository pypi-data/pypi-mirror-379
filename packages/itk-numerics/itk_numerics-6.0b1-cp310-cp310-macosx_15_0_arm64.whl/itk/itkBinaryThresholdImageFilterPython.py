# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryThresholdImageFilterPython
else:
    import _itkBinaryThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkSimpleDataObjectDecoratorPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython

def itkBinaryThresholdImageFilterID2ID2_Superclass_New():
    return itkBinaryThresholdImageFilterID2ID2_Superclass.New()

class itkBinaryThresholdImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,double >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,double > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,double > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2ID2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2ID2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Superclass_swigregister(itkBinaryThresholdImageFilterID2ID2_Superclass)

def itkBinaryThresholdImageFilterID2IF2_Superclass_New():
    return itkBinaryThresholdImageFilterID2IF2_Superclass.New()

class itkBinaryThresholdImageFilterID2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,float >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,float > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2IF2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2IF2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Superclass_swigregister(itkBinaryThresholdImageFilterID2IF2_Superclass)

def itkBinaryThresholdImageFilterID2ISS2_Superclass_New():
    return itkBinaryThresholdImageFilterID2ISS2_Superclass.New()

class itkBinaryThresholdImageFilterID2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2ISS2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Superclass_swigregister(itkBinaryThresholdImageFilterID2ISS2_Superclass)

def itkBinaryThresholdImageFilterID2IUC2_Superclass_New():
    return itkBinaryThresholdImageFilterID2IUC2_Superclass.New()

class itkBinaryThresholdImageFilterID2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2IUC2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterID2IUC2_Superclass)

def itkBinaryThresholdImageFilterID2IUS2_Superclass_New():
    return itkBinaryThresholdImageFilterID2IUS2_Superclass.New()

class itkBinaryThresholdImageFilterID2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2IUS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2IUS2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Superclass_swigregister(itkBinaryThresholdImageFilterID2IUS2_Superclass)

def itkBinaryThresholdImageFilterID3ID3_Superclass_New():
    return itkBinaryThresholdImageFilterID3ID3_Superclass.New()

class itkBinaryThresholdImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,double >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,double > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,double > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3ID3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3ID3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Superclass_swigregister(itkBinaryThresholdImageFilterID3ID3_Superclass)

def itkBinaryThresholdImageFilterID3IF3_Superclass_New():
    return itkBinaryThresholdImageFilterID3IF3_Superclass.New()

class itkBinaryThresholdImageFilterID3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,float >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,float > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3IF3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3IF3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Superclass_swigregister(itkBinaryThresholdImageFilterID3IF3_Superclass)

def itkBinaryThresholdImageFilterID3ISS3_Superclass_New():
    return itkBinaryThresholdImageFilterID3ISS3_Superclass.New()

class itkBinaryThresholdImageFilterID3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3ISS3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Superclass_swigregister(itkBinaryThresholdImageFilterID3ISS3_Superclass)

def itkBinaryThresholdImageFilterID3IUC3_Superclass_New():
    return itkBinaryThresholdImageFilterID3IUC3_Superclass.New()

class itkBinaryThresholdImageFilterID3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3IUC3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterID3IUC3_Superclass)

def itkBinaryThresholdImageFilterID3IUS3_Superclass_New():
    return itkBinaryThresholdImageFilterID3IUS3_Superclass.New()

class itkBinaryThresholdImageFilterID3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3IUS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3IUS3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Superclass_swigregister(itkBinaryThresholdImageFilterID3IUS3_Superclass)

def itkBinaryThresholdImageFilterID4ID4_Superclass_New():
    return itkBinaryThresholdImageFilterID4ID4_Superclass.New()

class itkBinaryThresholdImageFilterID4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4ID4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4ID4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,double >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,double > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,double > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4ID4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4ID4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Superclass_swigregister(itkBinaryThresholdImageFilterID4ID4_Superclass)

def itkBinaryThresholdImageFilterID4IF4_Superclass_New():
    return itkBinaryThresholdImageFilterID4IF4_Superclass.New()

class itkBinaryThresholdImageFilterID4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4IF4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4IF4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4IF4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,float >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,float > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4IF4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4IF4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Superclass_swigregister(itkBinaryThresholdImageFilterID4IF4_Superclass)

def itkBinaryThresholdImageFilterID4ISS4_Superclass_New():
    return itkBinaryThresholdImageFilterID4ISS4_Superclass.New()

class itkBinaryThresholdImageFilterID4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ISS4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4ISS4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4ISS4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Superclass_swigregister(itkBinaryThresholdImageFilterID4ISS4_Superclass)

def itkBinaryThresholdImageFilterID4IUC4_Superclass_New():
    return itkBinaryThresholdImageFilterID4IUC4_Superclass.New()

class itkBinaryThresholdImageFilterID4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4IUC4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4IUC4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4IUC4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Superclass_swigregister(itkBinaryThresholdImageFilterID4IUC4_Superclass)

def itkBinaryThresholdImageFilterID4IUS4_Superclass_New():
    return itkBinaryThresholdImageFilterID4IUS4_Superclass.New()

class itkBinaryThresholdImageFilterID4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4IUS4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< double,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< double,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4IUS4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterID4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4IUS4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Superclass_swigregister(itkBinaryThresholdImageFilterID4IUS4_Superclass)

def itkBinaryThresholdImageFilterIF2IF2_Superclass_New():
    return itkBinaryThresholdImageFilterIF2IF2_Superclass.New()

class itkBinaryThresholdImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,float >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,float > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2IF2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2IF2_Superclass)

def itkBinaryThresholdImageFilterIF2ISS2_Superclass_New():
    return itkBinaryThresholdImageFilterIF2ISS2_Superclass.New()

class itkBinaryThresholdImageFilterIF2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2ISS2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2ISS2_Superclass)

def itkBinaryThresholdImageFilterIF2IUC2_Superclass_New():
    return itkBinaryThresholdImageFilterIF2IUC2_Superclass.New()

class itkBinaryThresholdImageFilterIF2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2IUC2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2IUC2_Superclass)

def itkBinaryThresholdImageFilterIF2IUS2_Superclass_New():
    return itkBinaryThresholdImageFilterIF2IUS2_Superclass.New()

class itkBinaryThresholdImageFilterIF2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IUS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2IUS2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Superclass_swigregister(itkBinaryThresholdImageFilterIF2IUS2_Superclass)

def itkBinaryThresholdImageFilterIF3IF3_Superclass_New():
    return itkBinaryThresholdImageFilterIF3IF3_Superclass.New()

class itkBinaryThresholdImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,float >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,float > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3IF3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3IF3_Superclass)

def itkBinaryThresholdImageFilterIF3ISS3_Superclass_New():
    return itkBinaryThresholdImageFilterIF3ISS3_Superclass.New()

class itkBinaryThresholdImageFilterIF3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3ISS3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3ISS3_Superclass)

def itkBinaryThresholdImageFilterIF3IUC3_Superclass_New():
    return itkBinaryThresholdImageFilterIF3IUC3_Superclass.New()

class itkBinaryThresholdImageFilterIF3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3IUC3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3IUC3_Superclass)

def itkBinaryThresholdImageFilterIF3IUS3_Superclass_New():
    return itkBinaryThresholdImageFilterIF3IUS3_Superclass.New()

class itkBinaryThresholdImageFilterIF3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IUS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3IUS3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Superclass_swigregister(itkBinaryThresholdImageFilterIF3IUS3_Superclass)

def itkBinaryThresholdImageFilterIF4IF4_Superclass_New():
    return itkBinaryThresholdImageFilterIF4IF4_Superclass.New()

class itkBinaryThresholdImageFilterIF4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4IF4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4IF4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,float >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,float > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,float > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4IF4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4IF4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Superclass_swigregister(itkBinaryThresholdImageFilterIF4IF4_Superclass)

def itkBinaryThresholdImageFilterIF4ISS4_Superclass_New():
    return itkBinaryThresholdImageFilterIF4ISS4_Superclass.New()

class itkBinaryThresholdImageFilterIF4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4ISS4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4ISS4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4ISS4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Superclass_swigregister(itkBinaryThresholdImageFilterIF4ISS4_Superclass)

def itkBinaryThresholdImageFilterIF4IUC4_Superclass_New():
    return itkBinaryThresholdImageFilterIF4IUC4_Superclass.New()

class itkBinaryThresholdImageFilterIF4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IUC4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4IUC4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4IUC4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Superclass_swigregister(itkBinaryThresholdImageFilterIF4IUC4_Superclass)

def itkBinaryThresholdImageFilterIF4IUS4_Superclass_New():
    return itkBinaryThresholdImageFilterIF4IUS4_Superclass.New()

class itkBinaryThresholdImageFilterIF4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IUS4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< float,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< float,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4IUS4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIF4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4IUS4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Superclass_swigregister(itkBinaryThresholdImageFilterIF4IUS4_Superclass)

def itkBinaryThresholdImageFilterISS2ISS2_Superclass_New():
    return itkBinaryThresholdImageFilterISS2ISS2_Superclass.New()

class itkBinaryThresholdImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< short,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS2ISS2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Superclass_swigregister(itkBinaryThresholdImageFilterISS2ISS2_Superclass)

def itkBinaryThresholdImageFilterISS2IUC2_Superclass_New():
    return itkBinaryThresholdImageFilterISS2IUC2_Superclass.New()

class itkBinaryThresholdImageFilterISS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< short,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS2IUC2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterISS2IUC2_Superclass)

def itkBinaryThresholdImageFilterISS3ISS3_Superclass_New():
    return itkBinaryThresholdImageFilterISS3ISS3_Superclass.New()

class itkBinaryThresholdImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< short,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS3ISS3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Superclass_swigregister(itkBinaryThresholdImageFilterISS3ISS3_Superclass)

def itkBinaryThresholdImageFilterISS3IUC3_Superclass_New():
    return itkBinaryThresholdImageFilterISS3IUC3_Superclass.New()

class itkBinaryThresholdImageFilterISS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< short,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS3IUC3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterISS3IUC3_Superclass)

def itkBinaryThresholdImageFilterISS4ISS4_Superclass_New():
    return itkBinaryThresholdImageFilterISS4ISS4_Superclass.New()

class itkBinaryThresholdImageFilterISS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< short,short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS4ISS4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS4ISS4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Superclass_swigregister(itkBinaryThresholdImageFilterISS4ISS4_Superclass)

def itkBinaryThresholdImageFilterISS4IUC4_Superclass_New():
    return itkBinaryThresholdImageFilterISS4IUC4_Superclass.New()

class itkBinaryThresholdImageFilterISS4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4IUC4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< short,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS4IUC4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterISS4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS4IUC4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Superclass_swigregister(itkBinaryThresholdImageFilterISS4IUC4_Superclass)

def itkBinaryThresholdImageFilterIUC2IUC2_Superclass_New():
    return itkBinaryThresholdImageFilterIUC2IUC2_Superclass.New()

class itkBinaryThresholdImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUC2IUC2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterIUC2IUC2_Superclass)

def itkBinaryThresholdImageFilterIUC3IUC3_Superclass_New():
    return itkBinaryThresholdImageFilterIUC3IUC3_Superclass.New()

class itkBinaryThresholdImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUC3IUC3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterIUC3IUC3_Superclass)

def itkBinaryThresholdImageFilterIUC4IUC4_Superclass_New():
    return itkBinaryThresholdImageFilterIUC4IUC4_Superclass.New()

class itkBinaryThresholdImageFilterIUC4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned char,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUC4IUC4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Superclass_swigregister(itkBinaryThresholdImageFilterIUC4IUC4_Superclass)

def itkBinaryThresholdImageFilterIUS2IUC2_Superclass_New():
    return itkBinaryThresholdImageFilterIUS2IUC2_Superclass.New()

class itkBinaryThresholdImageFilterIUS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned short,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS2IUC2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Superclass_swigregister(itkBinaryThresholdImageFilterIUS2IUC2_Superclass)

def itkBinaryThresholdImageFilterIUS2IUS2_Superclass_New():
    return itkBinaryThresholdImageFilterIUS2IUS2_Superclass.New()

class itkBinaryThresholdImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned short,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS2IUS2_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Superclass_swigregister(itkBinaryThresholdImageFilterIUS2IUS2_Superclass)

def itkBinaryThresholdImageFilterIUS3IUC3_Superclass_New():
    return itkBinaryThresholdImageFilterIUS3IUC3_Superclass.New()

class itkBinaryThresholdImageFilterIUS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned short,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS3IUC3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Superclass_swigregister(itkBinaryThresholdImageFilterIUS3IUC3_Superclass)

def itkBinaryThresholdImageFilterIUS3IUS3_Superclass_New():
    return itkBinaryThresholdImageFilterIUS3IUS3_Superclass.New()

class itkBinaryThresholdImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned short,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS3IUS3_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Superclass_swigregister(itkBinaryThresholdImageFilterIUS3IUS3_Superclass)

def itkBinaryThresholdImageFilterIUS4IUC4_Superclass_New():
    return itkBinaryThresholdImageFilterIUS4IUC4_Superclass.New()

class itkBinaryThresholdImageFilterIUS4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUC4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned char > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned short,unsigned char > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS4IUC4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUS4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS4IUC4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Superclass_swigregister(itkBinaryThresholdImageFilterIUS4IUC4_Superclass)

def itkBinaryThresholdImageFilterIUS4IUS4_Superclass_New():
    return itkBinaryThresholdImageFilterIUS4IUS4_Superclass.New()

class itkBinaryThresholdImageFilterIUS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::BinaryThreshold< unsigned short,unsigned short > const &
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::BinaryThreshold< unsigned short,unsigned short > const &

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkBinaryThresholdImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS4IUS4_Superclass in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Superclass_swigregister(itkBinaryThresholdImageFilterIUS4IUS4_Superclass)

def itkBinaryThresholdImageFilterID2ID2_New():
    return itkBinaryThresholdImageFilterID2ID2.New()

class itkBinaryThresholdImageFilterID2ID2(itkBinaryThresholdImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2ID2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2ID2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> double const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2ID2

        Create a new object of the class itkBinaryThresholdImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2ID2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ID2_swigregister(itkBinaryThresholdImageFilterID2ID2)

def itkBinaryThresholdImageFilterID2IF2_New():
    return itkBinaryThresholdImageFilterID2IF2.New()

class itkBinaryThresholdImageFilterID2IF2(itkBinaryThresholdImageFilterID2IF2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2IF2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2IF2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2IF2

        Create a new object of the class itkBinaryThresholdImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2IF2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IF2_swigregister(itkBinaryThresholdImageFilterID2IF2)

def itkBinaryThresholdImageFilterID2ISS2_New():
    return itkBinaryThresholdImageFilterID2ISS2.New()

class itkBinaryThresholdImageFilterID2ISS2(itkBinaryThresholdImageFilterID2ISS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2ISS2

        Create a new object of the class itkBinaryThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2ISS2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2ISS2_swigregister(itkBinaryThresholdImageFilterID2ISS2)

def itkBinaryThresholdImageFilterID2IUC2_New():
    return itkBinaryThresholdImageFilterID2IUC2.New()

class itkBinaryThresholdImageFilterID2IUC2(itkBinaryThresholdImageFilterID2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2IUC2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUC2_swigregister(itkBinaryThresholdImageFilterID2IUC2)

def itkBinaryThresholdImageFilterID2IUS2_New():
    return itkBinaryThresholdImageFilterID2IUS2.New()

class itkBinaryThresholdImageFilterID2IUS2(itkBinaryThresholdImageFilterID2IUS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID2IUS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID2IUS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID2IUS2

        Create a new object of the class itkBinaryThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID2IUS2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID2IUS2_swigregister(itkBinaryThresholdImageFilterID2IUS2)

def itkBinaryThresholdImageFilterID3ID3_New():
    return itkBinaryThresholdImageFilterID3ID3.New()

class itkBinaryThresholdImageFilterID3ID3(itkBinaryThresholdImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3ID3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3ID3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> double const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3ID3

        Create a new object of the class itkBinaryThresholdImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3ID3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ID3_swigregister(itkBinaryThresholdImageFilterID3ID3)

def itkBinaryThresholdImageFilterID3IF3_New():
    return itkBinaryThresholdImageFilterID3IF3.New()

class itkBinaryThresholdImageFilterID3IF3(itkBinaryThresholdImageFilterID3IF3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3IF3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3IF3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3IF3

        Create a new object of the class itkBinaryThresholdImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3IF3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IF3_swigregister(itkBinaryThresholdImageFilterID3IF3)

def itkBinaryThresholdImageFilterID3ISS3_New():
    return itkBinaryThresholdImageFilterID3ISS3.New()

class itkBinaryThresholdImageFilterID3ISS3(itkBinaryThresholdImageFilterID3ISS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3ISS3

        Create a new object of the class itkBinaryThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3ISS3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3ISS3_swigregister(itkBinaryThresholdImageFilterID3ISS3)

def itkBinaryThresholdImageFilterID3IUC3_New():
    return itkBinaryThresholdImageFilterID3IUC3.New()

class itkBinaryThresholdImageFilterID3IUC3(itkBinaryThresholdImageFilterID3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3IUC3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUC3_swigregister(itkBinaryThresholdImageFilterID3IUC3)

def itkBinaryThresholdImageFilterID3IUS3_New():
    return itkBinaryThresholdImageFilterID3IUS3.New()

class itkBinaryThresholdImageFilterID3IUS3(itkBinaryThresholdImageFilterID3IUS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID3IUS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID3IUS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID3IUS3

        Create a new object of the class itkBinaryThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID3IUS3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID3IUS3_swigregister(itkBinaryThresholdImageFilterID3IUS3)

def itkBinaryThresholdImageFilterID4ID4_New():
    return itkBinaryThresholdImageFilterID4ID4.New()

class itkBinaryThresholdImageFilterID4ID4(itkBinaryThresholdImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4ID4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4ID4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> double const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4ID4

        Create a new object of the class itkBinaryThresholdImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4ID4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ID4_swigregister(itkBinaryThresholdImageFilterID4ID4)

def itkBinaryThresholdImageFilterID4IF4_New():
    return itkBinaryThresholdImageFilterID4IF4.New()

class itkBinaryThresholdImageFilterID4IF4(itkBinaryThresholdImageFilterID4IF4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4IF4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4IF4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4IF4

        Create a new object of the class itkBinaryThresholdImageFilterID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4IF4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IF4_swigregister(itkBinaryThresholdImageFilterID4IF4)

def itkBinaryThresholdImageFilterID4ISS4_New():
    return itkBinaryThresholdImageFilterID4ISS4.New()

class itkBinaryThresholdImageFilterID4ISS4(itkBinaryThresholdImageFilterID4ISS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4ISS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4ISS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4ISS4

        Create a new object of the class itkBinaryThresholdImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4ISS4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4ISS4_swigregister(itkBinaryThresholdImageFilterID4ISS4)

def itkBinaryThresholdImageFilterID4IUC4_New():
    return itkBinaryThresholdImageFilterID4IUC4.New()

class itkBinaryThresholdImageFilterID4IUC4(itkBinaryThresholdImageFilterID4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4IUC4

        Create a new object of the class itkBinaryThresholdImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4IUC4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUC4_swigregister(itkBinaryThresholdImageFilterID4IUC4)

def itkBinaryThresholdImageFilterID4IUS4_New():
    return itkBinaryThresholdImageFilterID4IUS4.New()

class itkBinaryThresholdImageFilterID4IUS4(itkBinaryThresholdImageFilterID4IUS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterID4IUS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterID4IUS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: double const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorD const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> double"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorD
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterID4IUS4

        Create a new object of the class itkBinaryThresholdImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterID4IUS4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterID4IUS4_swigregister(itkBinaryThresholdImageFilterID4IUS4)

def itkBinaryThresholdImageFilterIF2IF2_New():
    return itkBinaryThresholdImageFilterIF2IF2.New()

class itkBinaryThresholdImageFilterIF2IF2(itkBinaryThresholdImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2IF2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2IF2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IF2

        Create a new object of the class itkBinaryThresholdImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2IF2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IF2_swigregister(itkBinaryThresholdImageFilterIF2IF2)

def itkBinaryThresholdImageFilterIF2ISS2_New():
    return itkBinaryThresholdImageFilterIF2ISS2.New()

class itkBinaryThresholdImageFilterIF2ISS2(itkBinaryThresholdImageFilterIF2ISS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2ISS2

        Create a new object of the class itkBinaryThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2ISS2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2ISS2_swigregister(itkBinaryThresholdImageFilterIF2ISS2)

def itkBinaryThresholdImageFilterIF2IUC2_New():
    return itkBinaryThresholdImageFilterIF2IUC2.New()

class itkBinaryThresholdImageFilterIF2IUC2(itkBinaryThresholdImageFilterIF2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2IUC2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUC2_swigregister(itkBinaryThresholdImageFilterIF2IUC2)

def itkBinaryThresholdImageFilterIF2IUS2_New():
    return itkBinaryThresholdImageFilterIF2IUS2.New()

class itkBinaryThresholdImageFilterIF2IUS2(itkBinaryThresholdImageFilterIF2IUS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF2IUS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF2IUS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF2IUS2

        Create a new object of the class itkBinaryThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF2IUS2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF2IUS2_swigregister(itkBinaryThresholdImageFilterIF2IUS2)

def itkBinaryThresholdImageFilterIF3IF3_New():
    return itkBinaryThresholdImageFilterIF3IF3.New()

class itkBinaryThresholdImageFilterIF3IF3(itkBinaryThresholdImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3IF3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3IF3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IF3

        Create a new object of the class itkBinaryThresholdImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3IF3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IF3_swigregister(itkBinaryThresholdImageFilterIF3IF3)

def itkBinaryThresholdImageFilterIF3ISS3_New():
    return itkBinaryThresholdImageFilterIF3ISS3.New()

class itkBinaryThresholdImageFilterIF3ISS3(itkBinaryThresholdImageFilterIF3ISS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3ISS3

        Create a new object of the class itkBinaryThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3ISS3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3ISS3_swigregister(itkBinaryThresholdImageFilterIF3ISS3)

def itkBinaryThresholdImageFilterIF3IUC3_New():
    return itkBinaryThresholdImageFilterIF3IUC3.New()

class itkBinaryThresholdImageFilterIF3IUC3(itkBinaryThresholdImageFilterIF3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3IUC3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUC3_swigregister(itkBinaryThresholdImageFilterIF3IUC3)

def itkBinaryThresholdImageFilterIF3IUS3_New():
    return itkBinaryThresholdImageFilterIF3IUS3.New()

class itkBinaryThresholdImageFilterIF3IUS3(itkBinaryThresholdImageFilterIF3IUS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF3IUS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF3IUS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF3IUS3

        Create a new object of the class itkBinaryThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF3IUS3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF3IUS3_swigregister(itkBinaryThresholdImageFilterIF3IUS3)

def itkBinaryThresholdImageFilterIF4IF4_New():
    return itkBinaryThresholdImageFilterIF4IF4.New()

class itkBinaryThresholdImageFilterIF4IF4(itkBinaryThresholdImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4IF4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4IF4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4IF4

        Create a new object of the class itkBinaryThresholdImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4IF4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IF4_swigregister(itkBinaryThresholdImageFilterIF4IF4)

def itkBinaryThresholdImageFilterIF4ISS4_New():
    return itkBinaryThresholdImageFilterIF4ISS4.New()

class itkBinaryThresholdImageFilterIF4ISS4(itkBinaryThresholdImageFilterIF4ISS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4ISS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4ISS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4ISS4

        Create a new object of the class itkBinaryThresholdImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4ISS4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4ISS4_swigregister(itkBinaryThresholdImageFilterIF4ISS4)

def itkBinaryThresholdImageFilterIF4IUC4_New():
    return itkBinaryThresholdImageFilterIF4IUC4.New()

class itkBinaryThresholdImageFilterIF4IUC4(itkBinaryThresholdImageFilterIF4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4IUC4

        Create a new object of the class itkBinaryThresholdImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4IUC4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUC4_swigregister(itkBinaryThresholdImageFilterIF4IUC4)

def itkBinaryThresholdImageFilterIF4IUS4_New():
    return itkBinaryThresholdImageFilterIF4IUS4.New()

class itkBinaryThresholdImageFilterIF4IUS4(itkBinaryThresholdImageFilterIF4IUS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIF4IUS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIF4IUS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: float const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorF const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> float"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorF
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIF4IUS4

        Create a new object of the class itkBinaryThresholdImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIF4IUS4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIF4IUS4_swigregister(itkBinaryThresholdImageFilterIF4IUS4)

def itkBinaryThresholdImageFilterISS2ISS2_New():
    return itkBinaryThresholdImageFilterISS2ISS2.New()

class itkBinaryThresholdImageFilterISS2ISS2(itkBinaryThresholdImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS2ISS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2ISS2

        Create a new object of the class itkBinaryThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS2ISS2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2ISS2_swigregister(itkBinaryThresholdImageFilterISS2ISS2)

def itkBinaryThresholdImageFilterISS2IUC2_New():
    return itkBinaryThresholdImageFilterISS2IUC2.New()

class itkBinaryThresholdImageFilterISS2IUC2(itkBinaryThresholdImageFilterISS2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS2IUC2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS2IUC2_swigregister(itkBinaryThresholdImageFilterISS2IUC2)

def itkBinaryThresholdImageFilterISS3ISS3_New():
    return itkBinaryThresholdImageFilterISS3ISS3.New()

class itkBinaryThresholdImageFilterISS3ISS3(itkBinaryThresholdImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS3ISS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3ISS3

        Create a new object of the class itkBinaryThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS3ISS3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3ISS3_swigregister(itkBinaryThresholdImageFilterISS3ISS3)

def itkBinaryThresholdImageFilterISS3IUC3_New():
    return itkBinaryThresholdImageFilterISS3IUC3.New()

class itkBinaryThresholdImageFilterISS3IUC3(itkBinaryThresholdImageFilterISS3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS3IUC3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS3IUC3_swigregister(itkBinaryThresholdImageFilterISS3IUC3)

def itkBinaryThresholdImageFilterISS4ISS4_New():
    return itkBinaryThresholdImageFilterISS4ISS4.New()

class itkBinaryThresholdImageFilterISS4ISS4(itkBinaryThresholdImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS4ISS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS4ISS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS4ISS4

        Create a new object of the class itkBinaryThresholdImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS4ISS4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4ISS4_swigregister(itkBinaryThresholdImageFilterISS4ISS4)

def itkBinaryThresholdImageFilterISS4IUC4_New():
    return itkBinaryThresholdImageFilterISS4IUC4.New()

class itkBinaryThresholdImageFilterISS4IUC4(itkBinaryThresholdImageFilterISS4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterISS4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterISS4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorSS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterISS4IUC4

        Create a new object of the class itkBinaryThresholdImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterISS4IUC4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterISS4IUC4_swigregister(itkBinaryThresholdImageFilterISS4IUC4)

def itkBinaryThresholdImageFilterIUC2IUC2_New():
    return itkBinaryThresholdImageFilterIUC2IUC2.New()

class itkBinaryThresholdImageFilterIUC2IUC2(itkBinaryThresholdImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUC2IUC2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC2IUC2_swigregister(itkBinaryThresholdImageFilterIUC2IUC2)

def itkBinaryThresholdImageFilterIUC3IUC3_New():
    return itkBinaryThresholdImageFilterIUC3IUC3.New()

class itkBinaryThresholdImageFilterIUC3IUC3(itkBinaryThresholdImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUC3IUC3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC3IUC3_swigregister(itkBinaryThresholdImageFilterIUC3IUC3)

def itkBinaryThresholdImageFilterIUC4IUC4_New():
    return itkBinaryThresholdImageFilterIUC4IUC4.New()

class itkBinaryThresholdImageFilterIUC4IUC4(itkBinaryThresholdImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned char"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUC
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUC4IUC4

        Create a new object of the class itkBinaryThresholdImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUC4IUC4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUC4IUC4_swigregister(itkBinaryThresholdImageFilterIUC4IUC4)

def itkBinaryThresholdImageFilterIUS2IUC2_New():
    return itkBinaryThresholdImageFilterIUS2IUC2.New()

class itkBinaryThresholdImageFilterIUS2IUC2(itkBinaryThresholdImageFilterIUS2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS2IUC2

        Create a new object of the class itkBinaryThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS2IUC2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUC2_swigregister(itkBinaryThresholdImageFilterIUS2IUC2)

def itkBinaryThresholdImageFilterIUS2IUS2_New():
    return itkBinaryThresholdImageFilterIUS2IUS2.New()

class itkBinaryThresholdImageFilterIUS2IUS2(itkBinaryThresholdImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS2IUS2

        Create a new object of the class itkBinaryThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS2IUS2 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS2IUS2_swigregister(itkBinaryThresholdImageFilterIUS2IUS2)

def itkBinaryThresholdImageFilterIUS3IUC3_New():
    return itkBinaryThresholdImageFilterIUS3IUC3.New()

class itkBinaryThresholdImageFilterIUS3IUC3(itkBinaryThresholdImageFilterIUS3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS3IUC3

        Create a new object of the class itkBinaryThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS3IUC3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUC3_swigregister(itkBinaryThresholdImageFilterIUS3IUC3)

def itkBinaryThresholdImageFilterIUS3IUS3_New():
    return itkBinaryThresholdImageFilterIUS3IUS3.New()

class itkBinaryThresholdImageFilterIUS3IUS3(itkBinaryThresholdImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS3IUS3

        Create a new object of the class itkBinaryThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS3IUS3 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS3IUS3_swigregister(itkBinaryThresholdImageFilterIUS3IUS3)

def itkBinaryThresholdImageFilterIUS4IUC4_New():
    return itkBinaryThresholdImageFilterIUS4IUC4.New()

class itkBinaryThresholdImageFilterIUS4IUC4(itkBinaryThresholdImageFilterIUS4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned char const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS4IUC4

        Create a new object of the class itkBinaryThresholdImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS4IUC4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUC4_swigregister(itkBinaryThresholdImageFilterIUS4IUC4)

def itkBinaryThresholdImageFilterIUS4IUS4_New():
    return itkBinaryThresholdImageFilterIUS4IUS4.New()

class itkBinaryThresholdImageFilterIUS4IUS4(itkBinaryThresholdImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_Clone(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_GetOutsideValue(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> unsigned short const &"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_GetInsideValue(self)

    def SetUpperThreshold(self, threshold):
        r"""
        SetUpperThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_SetUpperThreshold(self, threshold)

    def SetUpperThresholdInput(self, arg0):
        r"""
        SetUpperThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_SetUpperThresholdInput(self, arg0)

    def SetLowerThreshold(self, threshold):
        r"""
        SetLowerThreshold(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_SetLowerThreshold(self, threshold)

    def SetLowerThresholdInput(self, arg0):
        r"""
        SetLowerThresholdInput(self, arg0)

        Parameters
        ----------
        arg0: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_SetLowerThresholdInput(self, arg0)

    def GetUpperThreshold(self):
        r"""GetUpperThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_GetUpperThreshold(self)

    def GetUpperThresholdInput(self, *args):
        r"""
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetUpperThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_GetUpperThresholdInput(self, *args)

    def GetLowerThreshold(self):
        r"""GetLowerThreshold(self) -> unsigned short"""
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_GetLowerThreshold(self)

    def GetLowerThresholdInput(self, *args):
        r"""
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        GetLowerThresholdInput(self) -> itkSimpleDataObjectDecoratorUS
        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_GetLowerThresholdInput(self, *args)
    OutputEqualityComparableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_OutputEqualityComparableCheck
    
    InputPixelTypeComparable = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_InputPixelTypeComparable
    
    InputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkBinaryThresholdImageFilterPython.delete_itkBinaryThresholdImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdImageFilterIUS4IUS4

        Create a new object of the class itkBinaryThresholdImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdImageFilterIUS4IUS4 in _itkBinaryThresholdImageFilterPython:
_itkBinaryThresholdImageFilterPython.itkBinaryThresholdImageFilterIUS4IUS4_swigregister(itkBinaryThresholdImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_threshold_image_filter(*args: itkt.ImageLike,  outside_value: float=..., inside_value: float=..., upper_threshold: float=..., upper_threshold_input=..., lower_threshold: float=..., lower_threshold_input=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryThresholdImageFilter"""
    import itk

    kwarg_typehints = { 'outside_value':outside_value,'inside_value':inside_value,'upper_threshold':upper_threshold,'upper_threshold_input':upper_threshold_input,'lower_threshold':lower_threshold,'lower_threshold_input':lower_threshold_input,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryThresholdImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_threshold_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.BinaryThresholdImageFilter
    binary_threshold_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_threshold_image_filter.__doc__ = filter_object.__doc__



