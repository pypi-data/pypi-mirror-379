# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLandmarkSpatialObjectPython
else:
    import _itkLandmarkSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointBasedSpatialObjectPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkOptimizerParametersPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
class listitkLandmarkSpatialObject2_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkLandmarkSpatialObject2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::size_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkLandmarkSpatialObject2_Pointer

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type
        v: std::list< itkLandmarkSpatialObject2_Pointer,std::allocator< itkLandmarkSpatialObject2_Pointer > > const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkLandmarkSpatialObject2_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkLandmarkSpatialObject2_Pointer,std::allocator< itkLandmarkSpatialObject2_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject2_Pointer >::difference_type
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::value_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::size_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkLandmarkSpatialObject2_Pointer > &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::reverse_iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::reverse_iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::allocator_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkLandmarkSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject2_Pointer >::iterator

        erase(self, first, last) -> std::list< itkLandmarkSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkLandmarkSpatialObject2_Pointer >::iterator
        last: std::list< itkLandmarkSpatialObject2_Pointer >::iterator

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLandmarkSpatialObject2_Pointer
        __init__(self, other) -> listitkLandmarkSpatialObject2_Pointer

        Parameters
        ----------
        other: std::list< itkLandmarkSpatialObject2_Pointer > const &

        __init__(self, size) -> listitkLandmarkSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkLandmarkSpatialObject2_Pointer >::size_type

        __init__(self, size, value) -> listitkLandmarkSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkLandmarkSpatialObject2_Pointer >::size_type
        value: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_swiginit(self, _itkLandmarkSpatialObjectPython.new_listitkLandmarkSpatialObject2_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkLandmarkSpatialObject2_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkLandmarkSpatialObject2_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkLandmarkSpatialObject2_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkLandmarkSpatialObject2_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject2_Pointer >::iterator
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject2_Pointer >::iterator
        n: std::list< itkLandmarkSpatialObject2_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject2_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_reverse(self)
    __swig_destroy__ = _itkLandmarkSpatialObjectPython.delete_listitkLandmarkSpatialObject2_Pointer

# Register listitkLandmarkSpatialObject2_Pointer in _itkLandmarkSpatialObjectPython:
_itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject2_Pointer_swigregister(listitkLandmarkSpatialObject2_Pointer)
class listitkLandmarkSpatialObject3_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkLandmarkSpatialObject3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::size_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkLandmarkSpatialObject3_Pointer

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type
        v: std::list< itkLandmarkSpatialObject3_Pointer,std::allocator< itkLandmarkSpatialObject3_Pointer > > const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkLandmarkSpatialObject3_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkLandmarkSpatialObject3_Pointer,std::allocator< itkLandmarkSpatialObject3_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject3_Pointer >::difference_type
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::value_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::size_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkLandmarkSpatialObject3_Pointer > &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::reverse_iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::reverse_iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::allocator_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkLandmarkSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject3_Pointer >::iterator

        erase(self, first, last) -> std::list< itkLandmarkSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkLandmarkSpatialObject3_Pointer >::iterator
        last: std::list< itkLandmarkSpatialObject3_Pointer >::iterator

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLandmarkSpatialObject3_Pointer
        __init__(self, other) -> listitkLandmarkSpatialObject3_Pointer

        Parameters
        ----------
        other: std::list< itkLandmarkSpatialObject3_Pointer > const &

        __init__(self, size) -> listitkLandmarkSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkLandmarkSpatialObject3_Pointer >::size_type

        __init__(self, size, value) -> listitkLandmarkSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkLandmarkSpatialObject3_Pointer >::size_type
        value: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_swiginit(self, _itkLandmarkSpatialObjectPython.new_listitkLandmarkSpatialObject3_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkLandmarkSpatialObject3_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkLandmarkSpatialObject3_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkLandmarkSpatialObject3_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkLandmarkSpatialObject3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject3_Pointer >::iterator
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject3_Pointer >::iterator
        n: std::list< itkLandmarkSpatialObject3_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject3_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_reverse(self)
    __swig_destroy__ = _itkLandmarkSpatialObjectPython.delete_listitkLandmarkSpatialObject3_Pointer

# Register listitkLandmarkSpatialObject3_Pointer in _itkLandmarkSpatialObjectPython:
_itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject3_Pointer_swigregister(listitkLandmarkSpatialObject3_Pointer)
class listitkLandmarkSpatialObject4_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkLandmarkSpatialObject4_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::size_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkLandmarkSpatialObject4_Pointer

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type
        v: std::list< itkLandmarkSpatialObject4_Pointer,std::allocator< itkLandmarkSpatialObject4_Pointer > > const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type
        j: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkLandmarkSpatialObject4_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkLandmarkSpatialObject4_Pointer,std::allocator< itkLandmarkSpatialObject4_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkLandmarkSpatialObject4_Pointer >::difference_type
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::value_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::size_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkLandmarkSpatialObject4_Pointer > &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::reverse_iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::reverse_iterator"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::allocator_type"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkLandmarkSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject4_Pointer >::iterator

        erase(self, first, last) -> std::list< itkLandmarkSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkLandmarkSpatialObject4_Pointer >::iterator
        last: std::list< itkLandmarkSpatialObject4_Pointer >::iterator

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLandmarkSpatialObject4_Pointer
        __init__(self, other) -> listitkLandmarkSpatialObject4_Pointer

        Parameters
        ----------
        other: std::list< itkLandmarkSpatialObject4_Pointer > const &

        __init__(self, size) -> listitkLandmarkSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkLandmarkSpatialObject4_Pointer >::size_type

        __init__(self, size, value) -> listitkLandmarkSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkLandmarkSpatialObject4_Pointer >::size_type
        value: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_swiginit(self, _itkLandmarkSpatialObjectPython.new_listitkLandmarkSpatialObject4_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkLandmarkSpatialObject4_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkLandmarkSpatialObject4_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkLandmarkSpatialObject4_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkLandmarkSpatialObject4_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject4_Pointer >::iterator
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkLandmarkSpatialObject4_Pointer >::iterator
        n: std::list< itkLandmarkSpatialObject4_Pointer >::size_type
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkLandmarkSpatialObject4_Pointer >::value_type const &

        """
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_reverse(self)
    __swig_destroy__ = _itkLandmarkSpatialObjectPython.delete_listitkLandmarkSpatialObject4_Pointer

# Register listitkLandmarkSpatialObject4_Pointer in _itkLandmarkSpatialObjectPython:
_itkLandmarkSpatialObjectPython.listitkLandmarkSpatialObject4_Pointer_swigregister(listitkLandmarkSpatialObject4_Pointer)

def itkLandmarkSpatialObject2_New():
    return itkLandmarkSpatialObject2.New()

class itkLandmarkSpatialObject2(itk.itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2):
    r"""Proxy of C++ itkLandmarkSpatialObject2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLandmarkSpatialObject2_Pointer"""
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLandmarkSpatialObject2_Pointer"""
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject2_Clone(self)
    __swig_destroy__ = _itkLandmarkSpatialObjectPython.delete_itkLandmarkSpatialObject2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLandmarkSpatialObject2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLandmarkSpatialObject2

        Create a new object of the class itkLandmarkSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandmarkSpatialObject2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLandmarkSpatialObject2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLandmarkSpatialObject2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLandmarkSpatialObject2 in _itkLandmarkSpatialObjectPython:
_itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject2_swigregister(itkLandmarkSpatialObject2)

def itkLandmarkSpatialObject3_New():
    return itkLandmarkSpatialObject3.New()

class itkLandmarkSpatialObject3(itk.itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3):
    r"""Proxy of C++ itkLandmarkSpatialObject3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLandmarkSpatialObject3_Pointer"""
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLandmarkSpatialObject3_Pointer"""
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject3_Clone(self)
    __swig_destroy__ = _itkLandmarkSpatialObjectPython.delete_itkLandmarkSpatialObject3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLandmarkSpatialObject3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLandmarkSpatialObject3

        Create a new object of the class itkLandmarkSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandmarkSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLandmarkSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLandmarkSpatialObject3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLandmarkSpatialObject3 in _itkLandmarkSpatialObjectPython:
_itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject3_swigregister(itkLandmarkSpatialObject3)

def itkLandmarkSpatialObject4_New():
    return itkLandmarkSpatialObject4.New()

class itkLandmarkSpatialObject4(itk.itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject4):
    r"""Proxy of C++ itkLandmarkSpatialObject4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLandmarkSpatialObject4_Pointer"""
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLandmarkSpatialObject4_Pointer"""
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject4_Clone(self)
    __swig_destroy__ = _itkLandmarkSpatialObjectPython.delete_itkLandmarkSpatialObject4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLandmarkSpatialObject4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLandmarkSpatialObject4

        Create a new object of the class itkLandmarkSpatialObject4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLandmarkSpatialObject4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLandmarkSpatialObject4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLandmarkSpatialObject4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLandmarkSpatialObject4 in _itkLandmarkSpatialObjectPython:
_itkLandmarkSpatialObjectPython.itkLandmarkSpatialObject4_swigregister(itkLandmarkSpatialObject4)

