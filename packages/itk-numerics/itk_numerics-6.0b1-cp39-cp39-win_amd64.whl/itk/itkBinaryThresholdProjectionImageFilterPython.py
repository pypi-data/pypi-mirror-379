# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryThresholdProjectionImageFilterPython
else:
    import _itkBinaryThresholdProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID2ID2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass)

def itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID3ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass)

def itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass)

def itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID4ID3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID4ID3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4ID3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID4ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID4ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID4ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID4ID3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID4ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID4ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID4ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID4ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID4ID3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID4ID3_Superclass)

def itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterID4ID4_Superclass.New()

class itkBinaryThresholdProjectionImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID4ID4_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID4ID4_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterID4ID4_Superclass)

def itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass)

def itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass)

def itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass)

def itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IF3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass)

def itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass)

def itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass)

def itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass)

def itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass)

def itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4ISS3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass)

def itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass.New()

class itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass)

def itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass)

def itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass)

def itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass)

def itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IUC3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass)

def itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass)

def itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass)

def itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass)

def itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass)

def itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IUS3):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass)

def itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_New():
    return itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass.New()

class itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass_swigregister(itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass)

def itkBinaryThresholdProjectionImageFilterID2ID2_New():
    return itkBinaryThresholdProjectionImageFilterID2ID2.New()

class itkBinaryThresholdProjectionImageFilterID2ID2(itkBinaryThresholdProjectionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID2ID2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID2ID2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID2ID2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID2ID2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID2ID2_swigregister(itkBinaryThresholdProjectionImageFilterID2ID2)

def itkBinaryThresholdProjectionImageFilterID3ID2_New():
    return itkBinaryThresholdProjectionImageFilterID3ID2.New()

class itkBinaryThresholdProjectionImageFilterID3ID2(itkBinaryThresholdProjectionImageFilterID3ID2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID3ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID3ID2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID3ID2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID3ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID2_swigregister(itkBinaryThresholdProjectionImageFilterID3ID2)

def itkBinaryThresholdProjectionImageFilterID3ID3_New():
    return itkBinaryThresholdProjectionImageFilterID3ID3.New()

class itkBinaryThresholdProjectionImageFilterID3ID3(itkBinaryThresholdProjectionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID3ID3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID3ID3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID3ID3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID3ID3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID3ID3_swigregister(itkBinaryThresholdProjectionImageFilterID3ID3)

def itkBinaryThresholdProjectionImageFilterID4ID3_New():
    return itkBinaryThresholdProjectionImageFilterID4ID3.New()

class itkBinaryThresholdProjectionImageFilterID4ID3(itkBinaryThresholdProjectionImageFilterID4ID3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID4ID3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID4ID3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID4ID3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID4ID3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID3_swigregister(itkBinaryThresholdProjectionImageFilterID4ID3)

def itkBinaryThresholdProjectionImageFilterID4ID4_New():
    return itkBinaryThresholdProjectionImageFilterID4ID4.New()

class itkBinaryThresholdProjectionImageFilterID4ID4(itkBinaryThresholdProjectionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterID4ID4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterID4ID4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> double"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterID4ID4

        Create a new object of the class itkBinaryThresholdProjectionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterID4ID4 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterID4ID4_swigregister(itkBinaryThresholdProjectionImageFilterID4ID4)

def itkBinaryThresholdProjectionImageFilterIF2IF2_New():
    return itkBinaryThresholdProjectionImageFilterIF2IF2.New()

class itkBinaryThresholdProjectionImageFilterIF2IF2(itkBinaryThresholdProjectionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF2IF2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF2IF2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF2IF2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF2IF2_swigregister(itkBinaryThresholdProjectionImageFilterIF2IF2)

def itkBinaryThresholdProjectionImageFilterIF3IF2_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF2.New()

class itkBinaryThresholdProjectionImageFilterIF3IF2(itkBinaryThresholdProjectionImageFilterIF3IF2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF3IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF3IF2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF3IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF2_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF2)

def itkBinaryThresholdProjectionImageFilterIF3IF3_New():
    return itkBinaryThresholdProjectionImageFilterIF3IF3.New()

class itkBinaryThresholdProjectionImageFilterIF3IF3(itkBinaryThresholdProjectionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF3IF3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF3IF3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF3IF3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF3IF3_swigregister(itkBinaryThresholdProjectionImageFilterIF3IF3)

def itkBinaryThresholdProjectionImageFilterIF4IF3_New():
    return itkBinaryThresholdProjectionImageFilterIF4IF3.New()

class itkBinaryThresholdProjectionImageFilterIF4IF3(itkBinaryThresholdProjectionImageFilterIF4IF3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF4IF3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF4IF3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF4IF3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF4IF3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF3_swigregister(itkBinaryThresholdProjectionImageFilterIF4IF3)

def itkBinaryThresholdProjectionImageFilterIF4IF4_New():
    return itkBinaryThresholdProjectionImageFilterIF4IF4.New()

class itkBinaryThresholdProjectionImageFilterIF4IF4(itkBinaryThresholdProjectionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIF4IF4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIF4IF4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> float"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIF4IF4

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIF4IF4 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIF4IF4_swigregister(itkBinaryThresholdProjectionImageFilterIF4IF4)

def itkBinaryThresholdProjectionImageFilterISS2ISS2_New():
    return itkBinaryThresholdProjectionImageFilterISS2ISS2.New()

class itkBinaryThresholdProjectionImageFilterISS2ISS2(itkBinaryThresholdProjectionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS2ISS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS2ISS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS2ISS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS2ISS2_swigregister(itkBinaryThresholdProjectionImageFilterISS2ISS2)

def itkBinaryThresholdProjectionImageFilterISS3ISS2_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS2.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS2(itkBinaryThresholdProjectionImageFilterISS3ISS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS3ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS3ISS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS3ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS2_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS2)

def itkBinaryThresholdProjectionImageFilterISS3ISS3_New():
    return itkBinaryThresholdProjectionImageFilterISS3ISS3.New()

class itkBinaryThresholdProjectionImageFilterISS3ISS3(itkBinaryThresholdProjectionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS3ISS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS3ISS3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS3ISS3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS3ISS3_swigregister(itkBinaryThresholdProjectionImageFilterISS3ISS3)

def itkBinaryThresholdProjectionImageFilterISS4ISS3_New():
    return itkBinaryThresholdProjectionImageFilterISS4ISS3.New()

class itkBinaryThresholdProjectionImageFilterISS4ISS3(itkBinaryThresholdProjectionImageFilterISS4ISS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS4ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS4ISS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS4ISS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS4ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS4ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS4ISS3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS4ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS4ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS4ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS4ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS4ISS3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS3_swigregister(itkBinaryThresholdProjectionImageFilterISS4ISS3)

def itkBinaryThresholdProjectionImageFilterISS4ISS4_New():
    return itkBinaryThresholdProjectionImageFilterISS4ISS4.New()

class itkBinaryThresholdProjectionImageFilterISS4ISS4(itkBinaryThresholdProjectionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterISS4ISS4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterISS4ISS4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterISS4ISS4

        Create a new object of the class itkBinaryThresholdProjectionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterISS4ISS4 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterISS4ISS4_swigregister(itkBinaryThresholdProjectionImageFilterISS4ISS4)

def itkBinaryThresholdProjectionImageFilterIUC2IUC2_New():
    return itkBinaryThresholdProjectionImageFilterIUC2IUC2.New()

class itkBinaryThresholdProjectionImageFilterIUC2IUC2(itkBinaryThresholdProjectionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC2IUC2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC2IUC2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC2IUC2_swigregister(itkBinaryThresholdProjectionImageFilterIUC2IUC2)

def itkBinaryThresholdProjectionImageFilterIUC3IUC2_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC2.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC2(itkBinaryThresholdProjectionImageFilterIUC3IUC2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC3IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC3IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC2_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC2)

def itkBinaryThresholdProjectionImageFilterIUC3IUC3_New():
    return itkBinaryThresholdProjectionImageFilterIUC3IUC3.New()

class itkBinaryThresholdProjectionImageFilterIUC3IUC3(itkBinaryThresholdProjectionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC3IUC3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC3IUC3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC3IUC3_swigregister(itkBinaryThresholdProjectionImageFilterIUC3IUC3)

def itkBinaryThresholdProjectionImageFilterIUC4IUC3_New():
    return itkBinaryThresholdProjectionImageFilterIUC4IUC3.New()

class itkBinaryThresholdProjectionImageFilterIUC4IUC3(itkBinaryThresholdProjectionImageFilterIUC4IUC3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC4IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC4IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC4IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC4IUC3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC4IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC4IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC4IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC4IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC4IUC3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC3_swigregister(itkBinaryThresholdProjectionImageFilterIUC4IUC3)

def itkBinaryThresholdProjectionImageFilterIUC4IUC4_New():
    return itkBinaryThresholdProjectionImageFilterIUC4IUC4.New()

class itkBinaryThresholdProjectionImageFilterIUC4IUC4(itkBinaryThresholdProjectionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned char"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUC4IUC4

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUC4IUC4 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUC4IUC4_swigregister(itkBinaryThresholdProjectionImageFilterIUC4IUC4)

def itkBinaryThresholdProjectionImageFilterIUS2IUS2_New():
    return itkBinaryThresholdProjectionImageFilterIUS2IUS2.New()

class itkBinaryThresholdProjectionImageFilterIUS2IUS2(itkBinaryThresholdProjectionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS2IUS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS2IUS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS2IUS2_swigregister(itkBinaryThresholdProjectionImageFilterIUS2IUS2)

def itkBinaryThresholdProjectionImageFilterIUS3IUS2_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS2.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS2(itkBinaryThresholdProjectionImageFilterIUS3IUS2_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS3IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS3IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS2

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS2 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS2_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS2)

def itkBinaryThresholdProjectionImageFilterIUS3IUS3_New():
    return itkBinaryThresholdProjectionImageFilterIUS3IUS3.New()

class itkBinaryThresholdProjectionImageFilterIUS3IUS3(itkBinaryThresholdProjectionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS3IUS3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS3IUS3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS3IUS3_swigregister(itkBinaryThresholdProjectionImageFilterIUS3IUS3)

def itkBinaryThresholdProjectionImageFilterIUS4IUS3_New():
    return itkBinaryThresholdProjectionImageFilterIUS4IUS3.New()

class itkBinaryThresholdProjectionImageFilterIUS4IUS3(itkBinaryThresholdProjectionImageFilterIUS4IUS3_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS4IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS4IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS4IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS4IUS3

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS4IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS4IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS4IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS4IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS4IUS3 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS3_swigregister(itkBinaryThresholdProjectionImageFilterIUS4IUS3)

def itkBinaryThresholdProjectionImageFilterIUS4IUS4_New():
    return itkBinaryThresholdProjectionImageFilterIUS4IUS4.New()

class itkBinaryThresholdProjectionImageFilterIUS4IUS4(itkBinaryThresholdProjectionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkBinaryThresholdProjectionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryThresholdProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryThresholdProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_GetBackgroundValue(self)

    def SetThresholdValue(self, _arg):
        r"""
        SetThresholdValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_SetThresholdValue(self, _arg)

    def GetThresholdValue(self):
        r"""GetThresholdValue(self) -> unsigned short"""
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_GetThresholdValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryThresholdProjectionImageFilterPython.delete_itkBinaryThresholdProjectionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryThresholdProjectionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryThresholdProjectionImageFilterIUS4IUS4

        Create a new object of the class itkBinaryThresholdProjectionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryThresholdProjectionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryThresholdProjectionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryThresholdProjectionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryThresholdProjectionImageFilterIUS4IUS4 in _itkBinaryThresholdProjectionImageFilterPython:
_itkBinaryThresholdProjectionImageFilterPython.itkBinaryThresholdProjectionImageFilterIUS4IUS4_swigregister(itkBinaryThresholdProjectionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_threshold_projection_image_filter(*args: itkt.ImageLike,  foreground_value: float=..., background_value: float=..., threshold_value: float=..., projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryThresholdProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'foreground_value':foreground_value,'background_value':background_value,'threshold_value':threshold_value,'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryThresholdProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_threshold_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.BinaryThresholdProjectionImageFilter
    binary_threshold_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_threshold_projection_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.ProjectionImageFilter
    projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projection_image_filter.__doc__ = filter_object.__doc__



