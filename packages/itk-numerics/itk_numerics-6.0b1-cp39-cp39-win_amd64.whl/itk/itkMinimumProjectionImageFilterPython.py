# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMinimumProjectionImageFilterPython
else:
    import _itkMinimumProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkMinimumProjectionImageFilterID2ID2_Superclass_New():
    return itkMinimumProjectionImageFilterID2ID2_Superclass.New()

class itkMinimumProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID2ID2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Superclass_swigregister(itkMinimumProjectionImageFilterID2ID2_Superclass)

def itkMinimumProjectionImageFilterID3ID2_Superclass_New():
    return itkMinimumProjectionImageFilterID3ID2_Superclass.New()

class itkMinimumProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID3ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Superclass_swigregister(itkMinimumProjectionImageFilterID3ID2_Superclass)

def itkMinimumProjectionImageFilterID3ID3_Superclass_New():
    return itkMinimumProjectionImageFilterID3ID3_Superclass.New()

class itkMinimumProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Superclass_swigregister(itkMinimumProjectionImageFilterID3ID3_Superclass)

def itkMinimumProjectionImageFilterID4ID3_Superclass_New():
    return itkMinimumProjectionImageFilterID4ID3_Superclass.New()

class itkMinimumProjectionImageFilterID4ID3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4ID3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID4ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID4ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID4ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID4ID3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID4ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID4ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID4ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID4ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID4ID3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Superclass_swigregister(itkMinimumProjectionImageFilterID4ID3_Superclass)

def itkMinimumProjectionImageFilterID4ID4_Superclass_New():
    return itkMinimumProjectionImageFilterID4ID4_Superclass.New()

class itkMinimumProjectionImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID4ID4_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID4ID4_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Superclass_swigregister(itkMinimumProjectionImageFilterID4ID4_Superclass)

def itkMinimumProjectionImageFilterIF2IF2_Superclass_New():
    return itkMinimumProjectionImageFilterIF2IF2_Superclass.New()

class itkMinimumProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF2IF2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF2IF2_Superclass)

def itkMinimumProjectionImageFilterIF3IF2_Superclass_New():
    return itkMinimumProjectionImageFilterIF3IF2_Superclass.New()

class itkMinimumProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF3IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF2_Superclass)

def itkMinimumProjectionImageFilterIF3IF3_Superclass_New():
    return itkMinimumProjectionImageFilterIF3IF3_Superclass.New()

class itkMinimumProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Superclass_swigregister(itkMinimumProjectionImageFilterIF3IF3_Superclass)

def itkMinimumProjectionImageFilterIF4IF3_Superclass_New():
    return itkMinimumProjectionImageFilterIF4IF3_Superclass.New()

class itkMinimumProjectionImageFilterIF4IF3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IF3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF4IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF4IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF4IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF4IF3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF4IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF4IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF4IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF4IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF4IF3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Superclass_swigregister(itkMinimumProjectionImageFilterIF4IF3_Superclass)

def itkMinimumProjectionImageFilterIF4IF4_Superclass_New():
    return itkMinimumProjectionImageFilterIF4IF4_Superclass.New()

class itkMinimumProjectionImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF4IF4_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF4IF4_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Superclass_swigregister(itkMinimumProjectionImageFilterIF4IF4_Superclass)

def itkMinimumProjectionImageFilterISS2ISS2_Superclass_New():
    return itkMinimumProjectionImageFilterISS2ISS2_Superclass.New()

class itkMinimumProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS2ISS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Superclass_swigregister(itkMinimumProjectionImageFilterISS2ISS2_Superclass)

def itkMinimumProjectionImageFilterISS3ISS2_Superclass_New():
    return itkMinimumProjectionImageFilterISS3ISS2_Superclass.New()

class itkMinimumProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS3ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Superclass_swigregister(itkMinimumProjectionImageFilterISS3ISS2_Superclass)

def itkMinimumProjectionImageFilterISS3ISS3_Superclass_New():
    return itkMinimumProjectionImageFilterISS3ISS3_Superclass.New()

class itkMinimumProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Superclass_swigregister(itkMinimumProjectionImageFilterISS3ISS3_Superclass)

def itkMinimumProjectionImageFilterISS4ISS3_Superclass_New():
    return itkMinimumProjectionImageFilterISS4ISS3_Superclass.New()

class itkMinimumProjectionImageFilterISS4ISS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4ISS3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS4ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS4ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS4ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS4ISS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS4ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS4ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS4ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS4ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS4ISS3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Superclass_swigregister(itkMinimumProjectionImageFilterISS4ISS3_Superclass)

def itkMinimumProjectionImageFilterISS4ISS4_Superclass_New():
    return itkMinimumProjectionImageFilterISS4ISS4_Superclass.New()

class itkMinimumProjectionImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS4ISS4_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Superclass_swigregister(itkMinimumProjectionImageFilterISS4ISS4_Superclass)

def itkMinimumProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()

class itkMinimumProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC2IUC2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC2IUC2_Superclass)

def itkMinimumProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()

class itkMinimumProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC2_Superclass)

def itkMinimumProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()

class itkMinimumProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkMinimumProjectionImageFilterIUC3IUC3_Superclass)

def itkMinimumProjectionImageFilterIUC4IUC3_Superclass_New():
    return itkMinimumProjectionImageFilterIUC4IUC3_Superclass.New()

class itkMinimumProjectionImageFilterIUC4IUC3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IUC3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC4IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC4IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC4IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC4IUC3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC4IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC4IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC4IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC4IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC4IUC3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Superclass_swigregister(itkMinimumProjectionImageFilterIUC4IUC3_Superclass)

def itkMinimumProjectionImageFilterIUC4IUC4_Superclass_New():
    return itkMinimumProjectionImageFilterIUC4IUC4_Superclass.New()

class itkMinimumProjectionImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC4IUC4_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Superclass_swigregister(itkMinimumProjectionImageFilterIUC4IUC4_Superclass)

def itkMinimumProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()

class itkMinimumProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS2IUS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS2IUS2_Superclass)

def itkMinimumProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()

class itkMinimumProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS2_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS2_Superclass)

def itkMinimumProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()

class itkMinimumProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkMinimumProjectionImageFilterIUS3IUS3_Superclass)

def itkMinimumProjectionImageFilterIUS4IUS3_Superclass_New():
    return itkMinimumProjectionImageFilterIUS4IUS3_Superclass.New()

class itkMinimumProjectionImageFilterIUS4IUS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IUS3):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS4IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS4IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS4IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS4IUS3_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS4IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS4IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS4IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS4IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS4IUS3_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Superclass_swigregister(itkMinimumProjectionImageFilterIUS4IUS3_Superclass)

def itkMinimumProjectionImageFilterIUS4IUS4_Superclass_New():
    return itkMinimumProjectionImageFilterIUS4IUS4_Superclass.New()

class itkMinimumProjectionImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkMinimumProjectionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS4IUS4_Superclass in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Superclass_swigregister(itkMinimumProjectionImageFilterIUS4IUS4_Superclass)

def itkMinimumProjectionImageFilterID2ID2_New():
    return itkMinimumProjectionImageFilterID2ID2.New()

class itkMinimumProjectionImageFilterID2ID2(itkMinimumProjectionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID2ID2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID2ID2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID2ID2

        Create a new object of the class itkMinimumProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID2ID2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID2ID2_swigregister(itkMinimumProjectionImageFilterID2ID2)

def itkMinimumProjectionImageFilterID3ID2_New():
    return itkMinimumProjectionImageFilterID3ID2.New()

class itkMinimumProjectionImageFilterID3ID2(itkMinimumProjectionImageFilterID3ID2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID3ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID3ID2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID3ID2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID3ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID2

        Create a new object of the class itkMinimumProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID2_swigregister(itkMinimumProjectionImageFilterID3ID2)

def itkMinimumProjectionImageFilterID3ID3_New():
    return itkMinimumProjectionImageFilterID3ID3.New()

class itkMinimumProjectionImageFilterID3ID3(itkMinimumProjectionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID3ID3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID3ID3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID3ID3

        Create a new object of the class itkMinimumProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID3ID3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID3ID3_swigregister(itkMinimumProjectionImageFilterID3ID3)

def itkMinimumProjectionImageFilterID4ID3_New():
    return itkMinimumProjectionImageFilterID4ID3.New()

class itkMinimumProjectionImageFilterID4ID3(itkMinimumProjectionImageFilterID4ID3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID4ID3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID4ID3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID4ID3

        Create a new object of the class itkMinimumProjectionImageFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID4ID3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID3_swigregister(itkMinimumProjectionImageFilterID4ID3)

def itkMinimumProjectionImageFilterID4ID4_New():
    return itkMinimumProjectionImageFilterID4ID4.New()

class itkMinimumProjectionImageFilterID4ID4(itkMinimumProjectionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterID4ID4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterID4ID4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterID4ID4

        Create a new object of the class itkMinimumProjectionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterID4ID4 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterID4ID4_swigregister(itkMinimumProjectionImageFilterID4ID4)

def itkMinimumProjectionImageFilterIF2IF2_New():
    return itkMinimumProjectionImageFilterIF2IF2.New()

class itkMinimumProjectionImageFilterIF2IF2(itkMinimumProjectionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF2IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF2IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF2IF2

        Create a new object of the class itkMinimumProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF2IF2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF2IF2_swigregister(itkMinimumProjectionImageFilterIF2IF2)

def itkMinimumProjectionImageFilterIF3IF2_New():
    return itkMinimumProjectionImageFilterIF3IF2.New()

class itkMinimumProjectionImageFilterIF3IF2(itkMinimumProjectionImageFilterIF3IF2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF3IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF3IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF3IF2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF3IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF2

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF2_swigregister(itkMinimumProjectionImageFilterIF3IF2)

def itkMinimumProjectionImageFilterIF3IF3_New():
    return itkMinimumProjectionImageFilterIF3IF3.New()

class itkMinimumProjectionImageFilterIF3IF3(itkMinimumProjectionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF3IF3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF3IF3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF3IF3

        Create a new object of the class itkMinimumProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF3IF3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF3IF3_swigregister(itkMinimumProjectionImageFilterIF3IF3)

def itkMinimumProjectionImageFilterIF4IF3_New():
    return itkMinimumProjectionImageFilterIF4IF3.New()

class itkMinimumProjectionImageFilterIF4IF3(itkMinimumProjectionImageFilterIF4IF3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF4IF3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF4IF3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF4IF3

        Create a new object of the class itkMinimumProjectionImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF4IF3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF3_swigregister(itkMinimumProjectionImageFilterIF4IF3)

def itkMinimumProjectionImageFilterIF4IF4_New():
    return itkMinimumProjectionImageFilterIF4IF4.New()

class itkMinimumProjectionImageFilterIF4IF4(itkMinimumProjectionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIF4IF4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIF4IF4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIF4IF4

        Create a new object of the class itkMinimumProjectionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIF4IF4 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIF4IF4_swigregister(itkMinimumProjectionImageFilterIF4IF4)

def itkMinimumProjectionImageFilterISS2ISS2_New():
    return itkMinimumProjectionImageFilterISS2ISS2.New()

class itkMinimumProjectionImageFilterISS2ISS2(itkMinimumProjectionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS2ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS2ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS2ISS2

        Create a new object of the class itkMinimumProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS2ISS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS2ISS2_swigregister(itkMinimumProjectionImageFilterISS2ISS2)

def itkMinimumProjectionImageFilterISS3ISS2_New():
    return itkMinimumProjectionImageFilterISS3ISS2.New()

class itkMinimumProjectionImageFilterISS3ISS2(itkMinimumProjectionImageFilterISS3ISS2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS3ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS3ISS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS3ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS2

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS2_swigregister(itkMinimumProjectionImageFilterISS3ISS2)

def itkMinimumProjectionImageFilterISS3ISS3_New():
    return itkMinimumProjectionImageFilterISS3ISS3.New()

class itkMinimumProjectionImageFilterISS3ISS3(itkMinimumProjectionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS3ISS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS3ISS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS3ISS3

        Create a new object of the class itkMinimumProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS3ISS3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS3ISS3_swigregister(itkMinimumProjectionImageFilterISS3ISS3)

def itkMinimumProjectionImageFilterISS4ISS3_New():
    return itkMinimumProjectionImageFilterISS4ISS3.New()

class itkMinimumProjectionImageFilterISS4ISS3(itkMinimumProjectionImageFilterISS4ISS3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS4ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS4ISS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS4ISS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS4ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS4ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS4ISS3

        Create a new object of the class itkMinimumProjectionImageFilterISS4ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS4ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS4ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS4ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS4ISS3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS3_swigregister(itkMinimumProjectionImageFilterISS4ISS3)

def itkMinimumProjectionImageFilterISS4ISS4_New():
    return itkMinimumProjectionImageFilterISS4ISS4.New()

class itkMinimumProjectionImageFilterISS4ISS4(itkMinimumProjectionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterISS4ISS4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterISS4ISS4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterISS4ISS4

        Create a new object of the class itkMinimumProjectionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterISS4ISS4 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterISS4ISS4_swigregister(itkMinimumProjectionImageFilterISS4ISS4)

def itkMinimumProjectionImageFilterIUC2IUC2_New():
    return itkMinimumProjectionImageFilterIUC2IUC2.New()

class itkMinimumProjectionImageFilterIUC2IUC2(itkMinimumProjectionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC2IUC2

        Create a new object of the class itkMinimumProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC2IUC2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC2IUC2_swigregister(itkMinimumProjectionImageFilterIUC2IUC2)

def itkMinimumProjectionImageFilterIUC3IUC2_New():
    return itkMinimumProjectionImageFilterIUC3IUC2.New()

class itkMinimumProjectionImageFilterIUC3IUC2(itkMinimumProjectionImageFilterIUC3IUC2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC3IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC2

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC2_swigregister(itkMinimumProjectionImageFilterIUC3IUC2)

def itkMinimumProjectionImageFilterIUC3IUC3_New():
    return itkMinimumProjectionImageFilterIUC3IUC3.New()

class itkMinimumProjectionImageFilterIUC3IUC3(itkMinimumProjectionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC3IUC3

        Create a new object of the class itkMinimumProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC3IUC3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC3IUC3_swigregister(itkMinimumProjectionImageFilterIUC3IUC3)

def itkMinimumProjectionImageFilterIUC4IUC3_New():
    return itkMinimumProjectionImageFilterIUC4IUC3.New()

class itkMinimumProjectionImageFilterIUC4IUC3(itkMinimumProjectionImageFilterIUC4IUC3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC4IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC4IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC4IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC4IUC3

        Create a new object of the class itkMinimumProjectionImageFilterIUC4IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC4IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC4IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC4IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC4IUC3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC3_swigregister(itkMinimumProjectionImageFilterIUC4IUC3)

def itkMinimumProjectionImageFilterIUC4IUC4_New():
    return itkMinimumProjectionImageFilterIUC4IUC4.New()

class itkMinimumProjectionImageFilterIUC4IUC4(itkMinimumProjectionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUC4IUC4

        Create a new object of the class itkMinimumProjectionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUC4IUC4 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUC4IUC4_swigregister(itkMinimumProjectionImageFilterIUC4IUC4)

def itkMinimumProjectionImageFilterIUS2IUS2_New():
    return itkMinimumProjectionImageFilterIUS2IUS2.New()

class itkMinimumProjectionImageFilterIUS2IUS2(itkMinimumProjectionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS2IUS2

        Create a new object of the class itkMinimumProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS2IUS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS2IUS2_swigregister(itkMinimumProjectionImageFilterIUS2IUS2)

def itkMinimumProjectionImageFilterIUS3IUS2_New():
    return itkMinimumProjectionImageFilterIUS3IUS2.New()

class itkMinimumProjectionImageFilterIUS3IUS2(itkMinimumProjectionImageFilterIUS3IUS2_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS3IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS2

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS2 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS2_swigregister(itkMinimumProjectionImageFilterIUS3IUS2)

def itkMinimumProjectionImageFilterIUS3IUS3_New():
    return itkMinimumProjectionImageFilterIUS3IUS3.New()

class itkMinimumProjectionImageFilterIUS3IUS3(itkMinimumProjectionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS3IUS3

        Create a new object of the class itkMinimumProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS3IUS3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS3IUS3_swigregister(itkMinimumProjectionImageFilterIUS3IUS3)

def itkMinimumProjectionImageFilterIUS4IUS3_New():
    return itkMinimumProjectionImageFilterIUS4IUS3.New()

class itkMinimumProjectionImageFilterIUS4IUS3(itkMinimumProjectionImageFilterIUS4IUS3_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS4IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS4IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS4IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS4IUS3

        Create a new object of the class itkMinimumProjectionImageFilterIUS4IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS4IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS4IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS4IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS4IUS3 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS3_swigregister(itkMinimumProjectionImageFilterIUS4IUS3)

def itkMinimumProjectionImageFilterIUS4IUS4_New():
    return itkMinimumProjectionImageFilterIUS4IUS4.New()

class itkMinimumProjectionImageFilterIUS4IUS4(itkMinimumProjectionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkMinimumProjectionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMinimumProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMinimumProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_Clone(self)
    InputPixelTypeGreaterThanComparable = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMinimumProjectionImageFilterPython.delete_itkMinimumProjectionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMinimumProjectionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMinimumProjectionImageFilterIUS4IUS4

        Create a new object of the class itkMinimumProjectionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMinimumProjectionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMinimumProjectionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMinimumProjectionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMinimumProjectionImageFilterIUS4IUS4 in _itkMinimumProjectionImageFilterPython:
_itkMinimumProjectionImageFilterPython.itkMinimumProjectionImageFilterIUS4IUS4_swigregister(itkMinimumProjectionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.ProjectionImageFilter
    projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projection_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def minimum_projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MinimumProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MinimumProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def minimum_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.MinimumProjectionImageFilter
    minimum_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    minimum_projection_image_filter.__doc__ = filter_object.__doc__



