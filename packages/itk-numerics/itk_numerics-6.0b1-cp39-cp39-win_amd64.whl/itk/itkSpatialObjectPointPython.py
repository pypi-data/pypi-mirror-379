# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectPointPython
else:
    import _itkSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkOptimizerParametersPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
class vectoritkSpatialObjectPoint2(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkSpatialObjectPoint2 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSpatialObjectPoint2 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSpatialObjectPoint2 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSpatialObjectPoint2 >::difference_type
        v: std::vector< itkSpatialObjectPoint2,std::allocator< itkSpatialObjectPoint2 > > const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSpatialObjectPoint2 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkSpatialObjectPoint2

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkSpatialObjectPoint2,std::allocator< itkSpatialObjectPoint2 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint2 >::difference_type
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkSpatialObjectPoint2 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkSpatialObjectPoint2 > &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkSpatialObjectPoint2 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkSpatialObjectPoint2 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkSpatialObjectPoint2 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkSpatialObjectPoint2 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkSpatialObjectPoint2 >::allocator_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint2 >::iterator

        erase(self, first, last) -> std::vector< itkSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        first: std::vector< itkSpatialObjectPoint2 >::iterator
        last: std::vector< itkSpatialObjectPoint2 >::iterator

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSpatialObjectPoint2
        __init__(self, other) -> vectoritkSpatialObjectPoint2

        Parameters
        ----------
        other: std::vector< itkSpatialObjectPoint2 > const &

        __init__(self, size) -> vectoritkSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkSpatialObjectPoint2 >::size_type

        __init__(self, size, value) -> vectoritkSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkSpatialObjectPoint2 >::size_type
        value: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint2(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_push_back(self, x)

    def front(self):
        r"""front(self) -> itkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_front(self)

    def back(self):
        r"""back(self) -> itkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkSpatialObjectPoint2 >::size_type
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkSpatialObjectPoint2 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkSpatialObjectPoint2 >::size_type
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint2 >::iterator
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint2 >::iterator
        n: std::vector< itkSpatialObjectPoint2 >::size_type
        x: std::vector< itkSpatialObjectPoint2 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkSpatialObjectPoint2 >::size_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkSpatialObjectPoint2 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_capacity(self)
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint2

# Register vectoritkSpatialObjectPoint2 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swigregister(vectoritkSpatialObjectPoint2)
class vectoritkSpatialObjectPoint3(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkSpatialObjectPoint3 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSpatialObjectPoint3 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSpatialObjectPoint3 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSpatialObjectPoint3 >::difference_type
        v: std::vector< itkSpatialObjectPoint3,std::allocator< itkSpatialObjectPoint3 > > const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSpatialObjectPoint3 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkSpatialObjectPoint3

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkSpatialObjectPoint3,std::allocator< itkSpatialObjectPoint3 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint3 >::difference_type
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkSpatialObjectPoint3 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkSpatialObjectPoint3 > &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkSpatialObjectPoint3 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkSpatialObjectPoint3 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkSpatialObjectPoint3 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkSpatialObjectPoint3 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkSpatialObjectPoint3 >::allocator_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint3 >::iterator

        erase(self, first, last) -> std::vector< itkSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        first: std::vector< itkSpatialObjectPoint3 >::iterator
        last: std::vector< itkSpatialObjectPoint3 >::iterator

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSpatialObjectPoint3
        __init__(self, other) -> vectoritkSpatialObjectPoint3

        Parameters
        ----------
        other: std::vector< itkSpatialObjectPoint3 > const &

        __init__(self, size) -> vectoritkSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkSpatialObjectPoint3 >::size_type

        __init__(self, size, value) -> vectoritkSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkSpatialObjectPoint3 >::size_type
        value: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint3(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_push_back(self, x)

    def front(self):
        r"""front(self) -> itkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_front(self)

    def back(self):
        r"""back(self) -> itkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkSpatialObjectPoint3 >::size_type
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkSpatialObjectPoint3 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkSpatialObjectPoint3 >::size_type
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint3 >::iterator
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint3 >::iterator
        n: std::vector< itkSpatialObjectPoint3 >::size_type
        x: std::vector< itkSpatialObjectPoint3 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkSpatialObjectPoint3 >::size_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkSpatialObjectPoint3 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_capacity(self)
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint3

# Register vectoritkSpatialObjectPoint3 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swigregister(vectoritkSpatialObjectPoint3)
class vectoritkSpatialObjectPoint4(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkSpatialObjectPoint4 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkSpatialObjectPoint4 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSpatialObjectPoint4 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSpatialObjectPoint4 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSpatialObjectPoint4 >::difference_type
        v: std::vector< itkSpatialObjectPoint4,std::allocator< itkSpatialObjectPoint4 > > const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSpatialObjectPoint4 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkSpatialObjectPoint4

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkSpatialObjectPoint4,std::allocator< itkSpatialObjectPoint4 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkSpatialObjectPoint4 >::difference_type
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkSpatialObjectPoint4"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkSpatialObjectPoint4 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkSpatialObjectPoint4 > &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkSpatialObjectPoint4 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkSpatialObjectPoint4 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkSpatialObjectPoint4 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkSpatialObjectPoint4 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkSpatialObjectPoint4 >::allocator_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint4 >::iterator

        erase(self, first, last) -> std::vector< itkSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        first: std::vector< itkSpatialObjectPoint4 >::iterator
        last: std::vector< itkSpatialObjectPoint4 >::iterator

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSpatialObjectPoint4
        __init__(self, other) -> vectoritkSpatialObjectPoint4

        Parameters
        ----------
        other: std::vector< itkSpatialObjectPoint4 > const &

        __init__(self, size) -> vectoritkSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkSpatialObjectPoint4 >::size_type

        __init__(self, size, value) -> vectoritkSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkSpatialObjectPoint4 >::size_type
        value: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint4(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_push_back(self, x)

    def front(self):
        r"""front(self) -> itkSpatialObjectPoint4"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_front(self)

    def back(self):
        r"""back(self) -> itkSpatialObjectPoint4"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkSpatialObjectPoint4 >::size_type
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkSpatialObjectPoint4 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkSpatialObjectPoint4 >::size_type
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint4 >::iterator
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkSpatialObjectPoint4 >::iterator
        n: std::vector< itkSpatialObjectPoint4 >::size_type
        x: std::vector< itkSpatialObjectPoint4 >::value_type const &

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkSpatialObjectPoint4 >::size_type

        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkSpatialObjectPoint4 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_capacity(self)
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint4

# Register vectoritkSpatialObjectPoint4 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint4_swigregister(vectoritkSpatialObjectPoint4)
class itkSpatialObjectPoint2(object):
    r"""Proxy of C++ itkSpatialObjectPoint2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkSpatialObjectPoint2

        Parameters
        ----------
        arg0: itkSpatialObjectPoint2 const &

        __init__(self) -> itkSpatialObjectPoint2
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint2_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint2

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetNameOfClass(self)

    def SetId(self, id):
        r"""
        SetId(self, id)

        Parameters
        ----------
        id: int

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetId(self, id)

    def GetId(self):
        r"""GetId(self) -> int"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetId(self)

    def SetPositionInObjectSpace(self, newPositionInObjectSpace):
        r"""
        SetPositionInObjectSpace(self, newPositionInObjectSpace)

        Parameters
        ----------
        newPositionInObjectSpace: itkPointD2 const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetPositionInObjectSpace(self, newPositionInObjectSpace)

    def GetPositionInObjectSpace(self):
        r"""GetPositionInObjectSpace(self) -> itkPointD2"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetPositionInObjectSpace(self)

    def SetSpatialObject(self, so):
        r"""
        SetSpatialObject(self, so)

        Parameters
        ----------
        so: itkSpatialObject2 *

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetSpatialObject(self, so)

    def GetSpatialObject(self):
        r"""GetSpatialObject(self) -> itkSpatialObject2"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetSpatialObject(self)

    def SetPositionInWorldSpace(self, point):
        r"""
        SetPositionInWorldSpace(self, point)

        Parameters
        ----------
        point: itkPointD2 const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetPositionInWorldSpace(self, point)

    def GetPositionInWorldSpace(self):
        r"""GetPositionInWorldSpace(self) -> itkPointD2"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetPositionInWorldSpace(self)

    def GetColor(self):
        r"""GetColor(self) -> itkRGBAPixelD"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetColor(self)

    def SetColor(self, *args):
        r"""
        SetColor(self, color)

        Parameters
        ----------
        color: itkRGBAPixelD

        SetColor(self, r, g, b, a=1)

        Parameters
        ----------
        r: double
        g: double
        b: double
        a: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetColor(self, *args)

    def SetRed(self, r):
        r"""
        SetRed(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetRed(self, r)

    def GetRed(self):
        r"""GetRed(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetRed(self)

    def SetGreen(self, g):
        r"""
        SetGreen(self, g)

        Parameters
        ----------
        g: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetGreen(self, g)

    def GetGreen(self):
        r"""GetGreen(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetGreen(self)

    def SetBlue(self, b):
        r"""
        SetBlue(self, b)

        Parameters
        ----------
        b: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetBlue(self, b)

    def GetBlue(self):
        r"""GetBlue(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetBlue(self)

    def SetAlpha(self, a):
        r"""
        SetAlpha(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetAlpha(self, a)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetAlpha(self)

    def SetTagScalarValue(self, tag, value):
        r"""
        SetTagScalarValue(self, tag, value)

        Parameters
        ----------
        tag: std::string const &
        value: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetTagScalarValue(self, tag, value)

    def GetTagScalarValue(self, *args):
        r"""
        GetTagScalarValue(self, tag, value) -> bool

        Parameters
        ----------
        tag: std::string const &
        value: double &

        GetTagScalarValue(self, tag) -> double

        Parameters
        ----------
        tag: std::string const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetTagScalarValue(self, *args)

    def GetTagScalarDictionary(self, *args):
        r"""
        GetTagScalarDictionary(self) -> std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > >
        GetTagScalarDictionary(self) -> std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > > const &
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetTagScalarDictionary(self, *args)

    def SetTagScalarDictionary(self, dict):
        r"""
        SetTagScalarDictionary(self, dict)

        Parameters
        ----------
        dict: std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > > const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetTagScalarDictionary(self, dict)

    def Print(self, os):
        r"""
        Print(self, os)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_Print(self, os)

    def __str__(self):
        r"""__str__(self) -> std::string"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2___str__(self)

# Register itkSpatialObjectPoint2 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.itkSpatialObjectPoint2_swigregister(itkSpatialObjectPoint2)
class itkSpatialObjectPoint3(object):
    r"""Proxy of C++ itkSpatialObjectPoint3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkSpatialObjectPoint3

        Parameters
        ----------
        arg0: itkSpatialObjectPoint3 const &

        __init__(self) -> itkSpatialObjectPoint3
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint3_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint3

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetNameOfClass(self)

    def SetId(self, id):
        r"""
        SetId(self, id)

        Parameters
        ----------
        id: int

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetId(self, id)

    def GetId(self):
        r"""GetId(self) -> int"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetId(self)

    def SetPositionInObjectSpace(self, newPositionInObjectSpace):
        r"""
        SetPositionInObjectSpace(self, newPositionInObjectSpace)

        Parameters
        ----------
        newPositionInObjectSpace: itkPointD3 const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetPositionInObjectSpace(self, newPositionInObjectSpace)

    def GetPositionInObjectSpace(self):
        r"""GetPositionInObjectSpace(self) -> itkPointD3"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetPositionInObjectSpace(self)

    def SetSpatialObject(self, so):
        r"""
        SetSpatialObject(self, so)

        Parameters
        ----------
        so: itkSpatialObject3 *

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetSpatialObject(self, so)

    def GetSpatialObject(self):
        r"""GetSpatialObject(self) -> itkSpatialObject3"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetSpatialObject(self)

    def SetPositionInWorldSpace(self, point):
        r"""
        SetPositionInWorldSpace(self, point)

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetPositionInWorldSpace(self, point)

    def GetPositionInWorldSpace(self):
        r"""GetPositionInWorldSpace(self) -> itkPointD3"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetPositionInWorldSpace(self)

    def GetColor(self):
        r"""GetColor(self) -> itkRGBAPixelD"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetColor(self)

    def SetColor(self, *args):
        r"""
        SetColor(self, color)

        Parameters
        ----------
        color: itkRGBAPixelD

        SetColor(self, r, g, b, a=1)

        Parameters
        ----------
        r: double
        g: double
        b: double
        a: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetColor(self, *args)

    def SetRed(self, r):
        r"""
        SetRed(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetRed(self, r)

    def GetRed(self):
        r"""GetRed(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetRed(self)

    def SetGreen(self, g):
        r"""
        SetGreen(self, g)

        Parameters
        ----------
        g: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetGreen(self, g)

    def GetGreen(self):
        r"""GetGreen(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetGreen(self)

    def SetBlue(self, b):
        r"""
        SetBlue(self, b)

        Parameters
        ----------
        b: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetBlue(self, b)

    def GetBlue(self):
        r"""GetBlue(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetBlue(self)

    def SetAlpha(self, a):
        r"""
        SetAlpha(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetAlpha(self, a)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetAlpha(self)

    def SetTagScalarValue(self, tag, value):
        r"""
        SetTagScalarValue(self, tag, value)

        Parameters
        ----------
        tag: std::string const &
        value: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetTagScalarValue(self, tag, value)

    def GetTagScalarValue(self, *args):
        r"""
        GetTagScalarValue(self, tag, value) -> bool

        Parameters
        ----------
        tag: std::string const &
        value: double &

        GetTagScalarValue(self, tag) -> double

        Parameters
        ----------
        tag: std::string const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetTagScalarValue(self, *args)

    def GetTagScalarDictionary(self, *args):
        r"""
        GetTagScalarDictionary(self) -> std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > >
        GetTagScalarDictionary(self) -> std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > > const &
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetTagScalarDictionary(self, *args)

    def SetTagScalarDictionary(self, dict):
        r"""
        SetTagScalarDictionary(self, dict)

        Parameters
        ----------
        dict: std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > > const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetTagScalarDictionary(self, dict)

    def Print(self, os):
        r"""
        Print(self, os)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_Print(self, os)

    def __str__(self):
        r"""__str__(self) -> std::string"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3___str__(self)

# Register itkSpatialObjectPoint3 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.itkSpatialObjectPoint3_swigregister(itkSpatialObjectPoint3)
class itkSpatialObjectPoint4(object):
    r"""Proxy of C++ itkSpatialObjectPoint4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkSpatialObjectPoint4

        Parameters
        ----------
        arg0: itkSpatialObjectPoint4 const &

        __init__(self) -> itkSpatialObjectPoint4
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint4_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint4(*args))
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint4

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetNameOfClass(self)

    def SetId(self, id):
        r"""
        SetId(self, id)

        Parameters
        ----------
        id: int

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetId(self, id)

    def GetId(self):
        r"""GetId(self) -> int"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetId(self)

    def SetPositionInObjectSpace(self, newPositionInObjectSpace):
        r"""
        SetPositionInObjectSpace(self, newPositionInObjectSpace)

        Parameters
        ----------
        newPositionInObjectSpace: itkPointD4 const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetPositionInObjectSpace(self, newPositionInObjectSpace)

    def GetPositionInObjectSpace(self):
        r"""GetPositionInObjectSpace(self) -> itkPointD4"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetPositionInObjectSpace(self)

    def SetSpatialObject(self, so):
        r"""
        SetSpatialObject(self, so)

        Parameters
        ----------
        so: itkSpatialObject4 *

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetSpatialObject(self, so)

    def GetSpatialObject(self):
        r"""GetSpatialObject(self) -> itkSpatialObject4"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetSpatialObject(self)

    def SetPositionInWorldSpace(self, point):
        r"""
        SetPositionInWorldSpace(self, point)

        Parameters
        ----------
        point: itkPointD4 const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetPositionInWorldSpace(self, point)

    def GetPositionInWorldSpace(self):
        r"""GetPositionInWorldSpace(self) -> itkPointD4"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetPositionInWorldSpace(self)

    def GetColor(self):
        r"""GetColor(self) -> itkRGBAPixelD"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetColor(self)

    def SetColor(self, *args):
        r"""
        SetColor(self, color)

        Parameters
        ----------
        color: itkRGBAPixelD

        SetColor(self, r, g, b, a=1)

        Parameters
        ----------
        r: double
        g: double
        b: double
        a: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetColor(self, *args)

    def SetRed(self, r):
        r"""
        SetRed(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetRed(self, r)

    def GetRed(self):
        r"""GetRed(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetRed(self)

    def SetGreen(self, g):
        r"""
        SetGreen(self, g)

        Parameters
        ----------
        g: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetGreen(self, g)

    def GetGreen(self):
        r"""GetGreen(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetGreen(self)

    def SetBlue(self, b):
        r"""
        SetBlue(self, b)

        Parameters
        ----------
        b: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetBlue(self, b)

    def GetBlue(self):
        r"""GetBlue(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetBlue(self)

    def SetAlpha(self, a):
        r"""
        SetAlpha(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetAlpha(self, a)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetAlpha(self)

    def SetTagScalarValue(self, tag, value):
        r"""
        SetTagScalarValue(self, tag, value)

        Parameters
        ----------
        tag: std::string const &
        value: double

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetTagScalarValue(self, tag, value)

    def GetTagScalarValue(self, *args):
        r"""
        GetTagScalarValue(self, tag, value) -> bool

        Parameters
        ----------
        tag: std::string const &
        value: double &

        GetTagScalarValue(self, tag) -> double

        Parameters
        ----------
        tag: std::string const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetTagScalarValue(self, *args)

    def GetTagScalarDictionary(self, *args):
        r"""
        GetTagScalarDictionary(self) -> std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > >
        GetTagScalarDictionary(self) -> std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > > const &
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_GetTagScalarDictionary(self, *args)

    def SetTagScalarDictionary(self, dict):
        r"""
        SetTagScalarDictionary(self, dict)

        Parameters
        ----------
        dict: std::map< std::string,double,std::less< std::string >,std::allocator< std::pair< std::string const,double > > > const &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_SetTagScalarDictionary(self, dict)

    def Print(self, os):
        r"""
        Print(self, os)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4_Print(self, os)

    def __str__(self):
        r"""__str__(self) -> std::string"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint4___str__(self)

# Register itkSpatialObjectPoint4 in _itkSpatialObjectPointPython:
_itkSpatialObjectPointPython.itkSpatialObjectPoint4_swigregister(itkSpatialObjectPoint4)

