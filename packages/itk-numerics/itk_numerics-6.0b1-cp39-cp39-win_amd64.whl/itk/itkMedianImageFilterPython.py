# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSmoothingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMedianImageFilterPython
else:
    import _itkMedianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkBoxImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkMedianImageFilterID2ID2_New():
    return itkMedianImageFilterID2ID2.New()

class itkMedianImageFilterID2ID2(itk.itkBoxImageFilterPython.itkBoxImageFilterID2ID2):
    r"""Proxy of C++ itkMedianImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterID2ID2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterID2ID2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterID2ID2_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterID2ID2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterID2ID2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterID2ID2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterID2ID2

        Create a new object of the class itkMedianImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterID2ID2 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterID2ID2_swigregister(itkMedianImageFilterID2ID2)

def itkMedianImageFilterID3ID3_New():
    return itkMedianImageFilterID3ID3.New()

class itkMedianImageFilterID3ID3(itk.itkBoxImageFilterPython.itkBoxImageFilterID3ID3):
    r"""Proxy of C++ itkMedianImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterID3ID3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterID3ID3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterID3ID3_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterID3ID3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterID3ID3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterID3ID3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterID3ID3

        Create a new object of the class itkMedianImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterID3ID3 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterID3ID3_swigregister(itkMedianImageFilterID3ID3)

def itkMedianImageFilterID4ID4_New():
    return itkMedianImageFilterID4ID4.New()

class itkMedianImageFilterID4ID4(itk.itkBoxImageFilterPython.itkBoxImageFilterID4ID4):
    r"""Proxy of C++ itkMedianImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterID4ID4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterID4ID4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterID4ID4_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterID4ID4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterID4ID4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterID4ID4_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterID4ID4

        Create a new object of the class itkMedianImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterID4ID4 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterID4ID4_swigregister(itkMedianImageFilterID4ID4)

def itkMedianImageFilterIF2IF2_New():
    return itkMedianImageFilterIF2IF2.New()

class itkMedianImageFilterIF2IF2(itk.itkBoxImageFilterPython.itkBoxImageFilterIF2IF2):
    r"""Proxy of C++ itkMedianImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIF2IF2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIF2IF2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIF2IF2_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF2IF2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF2IF2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIF2IF2

        Create a new object of the class itkMedianImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIF2IF2 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIF2IF2_swigregister(itkMedianImageFilterIF2IF2)

def itkMedianImageFilterIF3IF3_New():
    return itkMedianImageFilterIF3IF3.New()

class itkMedianImageFilterIF3IF3(itk.itkBoxImageFilterPython.itkBoxImageFilterIF3IF3):
    r"""Proxy of C++ itkMedianImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIF3IF3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIF3IF3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIF3IF3_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF3IF3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF3IF3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIF3IF3

        Create a new object of the class itkMedianImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIF3IF3 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIF3IF3_swigregister(itkMedianImageFilterIF3IF3)

def itkMedianImageFilterIF4IF4_New():
    return itkMedianImageFilterIF4IF4.New()

class itkMedianImageFilterIF4IF4(itk.itkBoxImageFilterPython.itkBoxImageFilterIF4IF4):
    r"""Proxy of C++ itkMedianImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIF4IF4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIF4IF4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIF4IF4_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF4IF4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIF4IF4_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIF4IF4

        Create a new object of the class itkMedianImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIF4IF4 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIF4IF4_swigregister(itkMedianImageFilterIF4IF4)

def itkMedianImageFilterISS2ISS2_New():
    return itkMedianImageFilterISS2ISS2.New()

class itkMedianImageFilterISS2ISS2(itk.itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2):
    r"""Proxy of C++ itkMedianImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterISS2ISS2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterISS2ISS2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterISS2ISS2

        Create a new object of the class itkMedianImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterISS2ISS2 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterISS2ISS2_swigregister(itkMedianImageFilterISS2ISS2)

def itkMedianImageFilterISS3ISS3_New():
    return itkMedianImageFilterISS3ISS3.New()

class itkMedianImageFilterISS3ISS3(itk.itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3):
    r"""Proxy of C++ itkMedianImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterISS3ISS3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterISS3ISS3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterISS3ISS3

        Create a new object of the class itkMedianImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterISS3ISS3 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterISS3ISS3_swigregister(itkMedianImageFilterISS3ISS3)

def itkMedianImageFilterISS4ISS4_New():
    return itkMedianImageFilterISS4ISS4.New()

class itkMedianImageFilterISS4ISS4(itk.itkBoxImageFilterPython.itkBoxImageFilterISS4ISS4):
    r"""Proxy of C++ itkMedianImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterISS4ISS4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterISS4ISS4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterISS4ISS4

        Create a new object of the class itkMedianImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterISS4ISS4 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterISS4ISS4_swigregister(itkMedianImageFilterISS4ISS4)

def itkMedianImageFilterIUC2IUC2_New():
    return itkMedianImageFilterIUC2IUC2.New()

class itkMedianImageFilterIUC2IUC2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMedianImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIUC2IUC2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIUC2IUC2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIUC2IUC2

        Create a new object of the class itkMedianImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIUC2IUC2 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIUC2IUC2_swigregister(itkMedianImageFilterIUC2IUC2)

def itkMedianImageFilterIUC3IUC3_New():
    return itkMedianImageFilterIUC3IUC3.New()

class itkMedianImageFilterIUC3IUC3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMedianImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIUC3IUC3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIUC3IUC3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIUC3IUC3

        Create a new object of the class itkMedianImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIUC3IUC3 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIUC3IUC3_swigregister(itkMedianImageFilterIUC3IUC3)

def itkMedianImageFilterIUC4IUC4_New():
    return itkMedianImageFilterIUC4IUC4.New()

class itkMedianImageFilterIUC4IUC4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC4IUC4):
    r"""Proxy of C++ itkMedianImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIUC4IUC4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIUC4IUC4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIUC4IUC4

        Create a new object of the class itkMedianImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIUC4IUC4 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIUC4IUC4_swigregister(itkMedianImageFilterIUC4IUC4)

def itkMedianImageFilterIUS2IUS2_New():
    return itkMedianImageFilterIUS2IUS2.New()

class itkMedianImageFilterIUS2IUS2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMedianImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIUS2IUS2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIUS2IUS2_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIUS2IUS2

        Create a new object of the class itkMedianImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIUS2IUS2 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIUS2IUS2_swigregister(itkMedianImageFilterIUS2IUS2)

def itkMedianImageFilterIUS3IUS3_New():
    return itkMedianImageFilterIUS3IUS3.New()

class itkMedianImageFilterIUS3IUS3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMedianImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIUS3IUS3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIUS3IUS3_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIUS3IUS3

        Create a new object of the class itkMedianImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIUS3IUS3 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIUS3IUS3_swigregister(itkMedianImageFilterIUS3IUS3)

def itkMedianImageFilterIUS4IUS4_New():
    return itkMedianImageFilterIUS4IUS4.New()

class itkMedianImageFilterIUS4IUS4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS4IUS4):
    r"""Proxy of C++ itkMedianImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMedianImageFilterIUS4IUS4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMedianImageFilterIUS4IUS4_Pointer"""
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4_Clone(self)
    SameDimensionCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4_InputLessThanComparableCheck
    
    __swig_destroy__ = _itkMedianImageFilterPython.delete_itkMedianImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMedianImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMedianImageFilterIUS4IUS4

        Create a new object of the class itkMedianImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMedianImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMedianImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMedianImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMedianImageFilterIUS4IUS4 in _itkMedianImageFilterPython:
_itkMedianImageFilterPython.itkMedianImageFilterIUS4IUS4_swigregister(itkMedianImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def median_image_filter(*args: itkt.ImageLike,  radius: Union[int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MedianImageFilter"""
    import itk

    kwarg_typehints = { 'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MedianImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def median_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKSmoothing.MedianImageFilter
    median_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    median_image_filter.__doc__ = filter_object.__doc__



