# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkThresholdImageFilterPython
else:
    import _itkThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkThresholdImageFilterID2_New():
    return itkThresholdImageFilterID2.New()

class itkThresholdImageFilterID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkThresholdImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterID2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterID2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID2_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: double const &
        upper: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterID2

        Create a new object of the class itkThresholdImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterID2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterID2_swigregister(itkThresholdImageFilterID2)

def itkThresholdImageFilterID3_New():
    return itkThresholdImageFilterID3.New()

class itkThresholdImageFilterID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkThresholdImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterID3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterID3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID3_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: double const &
        upper: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterID3

        Create a new object of the class itkThresholdImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterID3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterID3_swigregister(itkThresholdImageFilterID3)

def itkThresholdImageFilterID4_New():
    return itkThresholdImageFilterID4.New()

class itkThresholdImageFilterID4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkThresholdImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterID4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterID4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID4_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterID4_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: double const &
        upper: double const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> double"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterID4

        Create a new object of the class itkThresholdImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterID4 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterID4_swigregister(itkThresholdImageFilterID4)

def itkThresholdImageFilterIF2_New():
    return itkThresholdImageFilterIF2.New()

class itkThresholdImageFilterIF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkThresholdImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIF2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIF2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: float const &
        upper: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIF2

        Create a new object of the class itkThresholdImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIF2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIF2_swigregister(itkThresholdImageFilterIF2)

def itkThresholdImageFilterIF3_New():
    return itkThresholdImageFilterIF3.New()

class itkThresholdImageFilterIF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkThresholdImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIF3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIF3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: float const &
        upper: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIF3

        Create a new object of the class itkThresholdImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIF3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIF3_swigregister(itkThresholdImageFilterIF3)

def itkThresholdImageFilterIF4_New():
    return itkThresholdImageFilterIF4.New()

class itkThresholdImageFilterIF4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkThresholdImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIF4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIF4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: float const &
        upper: float const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> float"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIF4

        Create a new object of the class itkThresholdImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIF4 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIF4_swigregister(itkThresholdImageFilterIF4)

def itkThresholdImageFilterISS2_New():
    return itkThresholdImageFilterISS2.New()

class itkThresholdImageFilterISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkThresholdImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterISS2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterISS2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: short const &
        upper: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterISS2

        Create a new object of the class itkThresholdImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterISS2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterISS2_swigregister(itkThresholdImageFilterISS2)

def itkThresholdImageFilterISS3_New():
    return itkThresholdImageFilterISS3.New()

class itkThresholdImageFilterISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkThresholdImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterISS3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterISS3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: short const &
        upper: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterISS3

        Create a new object of the class itkThresholdImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterISS3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterISS3_swigregister(itkThresholdImageFilterISS3)

def itkThresholdImageFilterISS4_New():
    return itkThresholdImageFilterISS4.New()

class itkThresholdImageFilterISS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkThresholdImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterISS4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterISS4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: short const &
        upper: short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterISS4

        Create a new object of the class itkThresholdImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterISS4 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterISS4_swigregister(itkThresholdImageFilterISS4)

def itkThresholdImageFilterIUC2_New():
    return itkThresholdImageFilterIUC2.New()

class itkThresholdImageFilterIUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkThresholdImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIUC2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIUC2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: unsigned char const &
        upper: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUC2

        Create a new object of the class itkThresholdImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUC2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUC2_swigregister(itkThresholdImageFilterIUC2)

def itkThresholdImageFilterIUC3_New():
    return itkThresholdImageFilterIUC3.New()

class itkThresholdImageFilterIUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkThresholdImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIUC3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIUC3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: unsigned char const &
        upper: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUC3

        Create a new object of the class itkThresholdImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUC3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUC3_swigregister(itkThresholdImageFilterIUC3)

def itkThresholdImageFilterIUC4_New():
    return itkThresholdImageFilterIUC4.New()

class itkThresholdImageFilterIUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkThresholdImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIUC4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIUC4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: unsigned char const &
        upper: unsigned char const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> unsigned char"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUC4

        Create a new object of the class itkThresholdImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUC4 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUC4_swigregister(itkThresholdImageFilterIUC4)

def itkThresholdImageFilterIUS2_New():
    return itkThresholdImageFilterIUS2.New()

class itkThresholdImageFilterIUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkThresholdImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIUS2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIUS2_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: unsigned short const &
        upper: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUS2

        Create a new object of the class itkThresholdImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUS2 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUS2_swigregister(itkThresholdImageFilterIUS2)

def itkThresholdImageFilterIUS3_New():
    return itkThresholdImageFilterIUS3.New()

class itkThresholdImageFilterIUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkThresholdImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIUS3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIUS3_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: unsigned short const &
        upper: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUS3

        Create a new object of the class itkThresholdImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUS3 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUS3_swigregister(itkThresholdImageFilterIUS3)

def itkThresholdImageFilterIUS4_New():
    return itkThresholdImageFilterIUS4.New()

class itkThresholdImageFilterIUS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkThresholdImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkThresholdImageFilterIUS4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkThresholdImageFilterIUS4_Pointer"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_Clone(self)
    PixelTypeComparableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_PixelTypeComparableCheck
    
    PixelTypeOStreamWritableCheck = _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_PixelTypeOStreamWritableCheck
    

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_GetOutsideValue(self)

    def ThresholdAbove(self, threshold):
        r"""
        ThresholdAbove(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_ThresholdAbove(self, threshold)

    def ThresholdBelow(self, threshold):
        r"""
        ThresholdBelow(self, threshold)

        Parameters
        ----------
        threshold: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_ThresholdBelow(self, threshold)

    def ThresholdOutside(self, lower, upper):
        r"""
        ThresholdOutside(self, lower, upper)

        Parameters
        ----------
        lower: unsigned short const &
        upper: unsigned short const &

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_ThresholdOutside(self, lower, upper)

    def SetLower(self, _arg):
        r"""
        SetLower(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_SetLower(self, _arg)

    def GetLower(self):
        r"""GetLower(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_GetLower(self)

    def SetUpper(self, _arg):
        r"""
        SetUpper(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_SetUpper(self, _arg)

    def GetUpper(self):
        r"""GetUpper(self) -> unsigned short"""
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_GetUpper(self)
    __swig_destroy__ = _itkThresholdImageFilterPython.delete_itkThresholdImageFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkThresholdImageFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkThresholdImageFilterIUS4

        Create a new object of the class itkThresholdImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkThresholdImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkThresholdImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkThresholdImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkThresholdImageFilterIUS4 in _itkThresholdImageFilterPython:
_itkThresholdImageFilterPython.itkThresholdImageFilterIUS4_swigregister(itkThresholdImageFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def threshold_image_filter(*args: itkt.ImageLike,  outside_value: float=..., lower: float=..., upper: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ThresholdImageFilter"""
    import itk

    kwarg_typehints = { 'outside_value':outside_value,'lower':lower,'upper':upper }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ThresholdImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def threshold_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.ThresholdImageFilter
    threshold_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    threshold_image_filter.__doc__ = filter_object.__doc__



