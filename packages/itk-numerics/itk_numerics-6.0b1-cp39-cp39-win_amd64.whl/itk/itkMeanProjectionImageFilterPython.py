# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeanProjectionImageFilterPython
else:
    import _itkMeanProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkMeanProjectionImageFilterID2ID2_Superclass_New():
    return itkMeanProjectionImageFilterID2ID2_Superclass.New()

class itkMeanProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMeanProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID2ID2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Superclass_swigregister(itkMeanProjectionImageFilterID2ID2_Superclass)

def itkMeanProjectionImageFilterID3ID2_Superclass_New():
    return itkMeanProjectionImageFilterID3ID2_Superclass.New()

class itkMeanProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkMeanProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID3ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Superclass_swigregister(itkMeanProjectionImageFilterID3ID2_Superclass)

def itkMeanProjectionImageFilterID3ID3_Superclass_New():
    return itkMeanProjectionImageFilterID3ID3_Superclass.New()

class itkMeanProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMeanProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Superclass_swigregister(itkMeanProjectionImageFilterID3ID3_Superclass)

def itkMeanProjectionImageFilterID4ID3_Superclass_New():
    return itkMeanProjectionImageFilterID4ID3_Superclass.New()

class itkMeanProjectionImageFilterID4ID3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4ID3):
    r"""Proxy of C++ itkMeanProjectionImageFilterID4ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID4ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID4ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID4ID3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID4ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID4ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID4ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID4ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID4ID3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Superclass_swigregister(itkMeanProjectionImageFilterID4ID3_Superclass)

def itkMeanProjectionImageFilterID4ID4_Superclass_New():
    return itkMeanProjectionImageFilterID4ID4_Superclass.New()

class itkMeanProjectionImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkMeanProjectionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID4ID4_Superclass

        Create a new object of the class itkMeanProjectionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID4ID4_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Superclass_swigregister(itkMeanProjectionImageFilterID4ID4_Superclass)

def itkMeanProjectionImageFilterIF2IF2_Superclass_New():
    return itkMeanProjectionImageFilterIF2IF2_Superclass.New()

class itkMeanProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF2IF2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Superclass_swigregister(itkMeanProjectionImageFilterIF2IF2_Superclass)

def itkMeanProjectionImageFilterIF3IF2_Superclass_New():
    return itkMeanProjectionImageFilterIF3IF2_Superclass.New()

class itkMeanProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF3IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Superclass_swigregister(itkMeanProjectionImageFilterIF3IF2_Superclass)

def itkMeanProjectionImageFilterIF3IF3_Superclass_New():
    return itkMeanProjectionImageFilterIF3IF3_Superclass.New()

class itkMeanProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Superclass_swigregister(itkMeanProjectionImageFilterIF3IF3_Superclass)

def itkMeanProjectionImageFilterIF4IF3_Superclass_New():
    return itkMeanProjectionImageFilterIF4IF3_Superclass.New()

class itkMeanProjectionImageFilterIF4IF3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IF3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF4IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF4IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF4IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF4IF3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF4IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF4IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF4IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF4IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF4IF3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Superclass_swigregister(itkMeanProjectionImageFilterIF4IF3_Superclass)

def itkMeanProjectionImageFilterIF4IF4_Superclass_New():
    return itkMeanProjectionImageFilterIF4IF4_Superclass.New()

class itkMeanProjectionImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF4IF4_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF4IF4_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Superclass_swigregister(itkMeanProjectionImageFilterIF4IF4_Superclass)

def itkMeanProjectionImageFilterISS2ISS2_Superclass_New():
    return itkMeanProjectionImageFilterISS2ISS2_Superclass.New()

class itkMeanProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS2ISS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Superclass_swigregister(itkMeanProjectionImageFilterISS2ISS2_Superclass)

def itkMeanProjectionImageFilterISS3ISS2_Superclass_New():
    return itkMeanProjectionImageFilterISS3ISS2_Superclass.New()

class itkMeanProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS3ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Superclass_swigregister(itkMeanProjectionImageFilterISS3ISS2_Superclass)

def itkMeanProjectionImageFilterISS3ISS3_Superclass_New():
    return itkMeanProjectionImageFilterISS3ISS3_Superclass.New()

class itkMeanProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Superclass_swigregister(itkMeanProjectionImageFilterISS3ISS3_Superclass)

def itkMeanProjectionImageFilterISS4ISS3_Superclass_New():
    return itkMeanProjectionImageFilterISS4ISS3_Superclass.New()

class itkMeanProjectionImageFilterISS4ISS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4ISS3):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS4ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS4ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS4ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS4ISS3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS4ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS4ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS4ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS4ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS4ISS3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Superclass_swigregister(itkMeanProjectionImageFilterISS4ISS3_Superclass)

def itkMeanProjectionImageFilterISS4ISS4_Superclass_New():
    return itkMeanProjectionImageFilterISS4ISS4_Superclass.New()

class itkMeanProjectionImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkMeanProjectionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS4ISS4_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Superclass_swigregister(itkMeanProjectionImageFilterISS4ISS4_Superclass)

def itkMeanProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkMeanProjectionImageFilterIUC2IUC2_Superclass.New()

class itkMeanProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC2IUC2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkMeanProjectionImageFilterIUC2IUC2_Superclass)

def itkMeanProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkMeanProjectionImageFilterIUC3IUC2_Superclass.New()

class itkMeanProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC3IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkMeanProjectionImageFilterIUC3IUC2_Superclass)

def itkMeanProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkMeanProjectionImageFilterIUC3IUC3_Superclass.New()

class itkMeanProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkMeanProjectionImageFilterIUC3IUC3_Superclass)

def itkMeanProjectionImageFilterIUC4IUC3_Superclass_New():
    return itkMeanProjectionImageFilterIUC4IUC3_Superclass.New()

class itkMeanProjectionImageFilterIUC4IUC3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IUC3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC4IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC4IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC4IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC4IUC3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC4IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC4IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC4IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC4IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC4IUC3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Superclass_swigregister(itkMeanProjectionImageFilterIUC4IUC3_Superclass)

def itkMeanProjectionImageFilterIUC4IUC4_Superclass_New():
    return itkMeanProjectionImageFilterIUC4IUC4_Superclass.New()

class itkMeanProjectionImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC4IUC4_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Superclass_swigregister(itkMeanProjectionImageFilterIUC4IUC4_Superclass)

def itkMeanProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkMeanProjectionImageFilterIUS2IUS2_Superclass.New()

class itkMeanProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS2IUS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkMeanProjectionImageFilterIUS2IUS2_Superclass)

def itkMeanProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkMeanProjectionImageFilterIUS3IUS2_Superclass.New()

class itkMeanProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS3IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS2_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkMeanProjectionImageFilterIUS3IUS2_Superclass)

def itkMeanProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkMeanProjectionImageFilterIUS3IUS3_Superclass.New()

class itkMeanProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkMeanProjectionImageFilterIUS3IUS3_Superclass)

def itkMeanProjectionImageFilterIUS4IUS3_Superclass_New():
    return itkMeanProjectionImageFilterIUS4IUS3_Superclass.New()

class itkMeanProjectionImageFilterIUS4IUS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IUS3):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS4IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS4IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS4IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS4IUS3_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS4IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS4IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS4IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS4IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS4IUS3_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Superclass_swigregister(itkMeanProjectionImageFilterIUS4IUS3_Superclass)

def itkMeanProjectionImageFilterIUS4IUS4_Superclass_New():
    return itkMeanProjectionImageFilterIUS4IUS4_Superclass.New()

class itkMeanProjectionImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkMeanProjectionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS4IUS4_Superclass in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Superclass_swigregister(itkMeanProjectionImageFilterIUS4IUS4_Superclass)

def itkMeanProjectionImageFilterID2ID2_New():
    return itkMeanProjectionImageFilterID2ID2.New()

class itkMeanProjectionImageFilterID2ID2(itkMeanProjectionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID2ID2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID2ID2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID2ID2

        Create a new object of the class itkMeanProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID2ID2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID2ID2_swigregister(itkMeanProjectionImageFilterID2ID2)

def itkMeanProjectionImageFilterID3ID2_New():
    return itkMeanProjectionImageFilterID3ID2.New()

class itkMeanProjectionImageFilterID3ID2(itkMeanProjectionImageFilterID3ID2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterID3ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID3ID2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID3ID2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID3ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID2

        Create a new object of the class itkMeanProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID2_swigregister(itkMeanProjectionImageFilterID3ID2)

def itkMeanProjectionImageFilterID3ID3_New():
    return itkMeanProjectionImageFilterID3ID3.New()

class itkMeanProjectionImageFilterID3ID3(itkMeanProjectionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID3ID3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID3ID3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID3ID3

        Create a new object of the class itkMeanProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID3ID3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID3ID3_swigregister(itkMeanProjectionImageFilterID3ID3)

def itkMeanProjectionImageFilterID4ID3_New():
    return itkMeanProjectionImageFilterID4ID3.New()

class itkMeanProjectionImageFilterID4ID3(itkMeanProjectionImageFilterID4ID3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID4ID3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID4ID3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID4ID3

        Create a new object of the class itkMeanProjectionImageFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID4ID3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID3_swigregister(itkMeanProjectionImageFilterID4ID3)

def itkMeanProjectionImageFilterID4ID4_New():
    return itkMeanProjectionImageFilterID4ID4.New()

class itkMeanProjectionImageFilterID4ID4(itkMeanProjectionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterID4ID4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterID4ID4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterID4ID4

        Create a new object of the class itkMeanProjectionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterID4ID4 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterID4ID4_swigregister(itkMeanProjectionImageFilterID4ID4)

def itkMeanProjectionImageFilterIF2IF2_New():
    return itkMeanProjectionImageFilterIF2IF2.New()

class itkMeanProjectionImageFilterIF2IF2(itkMeanProjectionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF2IF2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF2IF2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF2IF2

        Create a new object of the class itkMeanProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF2IF2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF2IF2_swigregister(itkMeanProjectionImageFilterIF2IF2)

def itkMeanProjectionImageFilterIF3IF2_New():
    return itkMeanProjectionImageFilterIF3IF2.New()

class itkMeanProjectionImageFilterIF3IF2(itkMeanProjectionImageFilterIF3IF2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF3IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF3IF2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF3IF2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF3IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF2

        Create a new object of the class itkMeanProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF2_swigregister(itkMeanProjectionImageFilterIF3IF2)

def itkMeanProjectionImageFilterIF3IF3_New():
    return itkMeanProjectionImageFilterIF3IF3.New()

class itkMeanProjectionImageFilterIF3IF3(itkMeanProjectionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF3IF3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF3IF3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF3IF3

        Create a new object of the class itkMeanProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF3IF3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF3IF3_swigregister(itkMeanProjectionImageFilterIF3IF3)

def itkMeanProjectionImageFilterIF4IF3_New():
    return itkMeanProjectionImageFilterIF4IF3.New()

class itkMeanProjectionImageFilterIF4IF3(itkMeanProjectionImageFilterIF4IF3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF4IF3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF4IF3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF4IF3

        Create a new object of the class itkMeanProjectionImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF4IF3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF3_swigregister(itkMeanProjectionImageFilterIF4IF3)

def itkMeanProjectionImageFilterIF4IF4_New():
    return itkMeanProjectionImageFilterIF4IF4.New()

class itkMeanProjectionImageFilterIF4IF4(itkMeanProjectionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIF4IF4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIF4IF4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIF4IF4

        Create a new object of the class itkMeanProjectionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIF4IF4 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIF4IF4_swigregister(itkMeanProjectionImageFilterIF4IF4)

def itkMeanProjectionImageFilterISS2ISS2_New():
    return itkMeanProjectionImageFilterISS2ISS2.New()

class itkMeanProjectionImageFilterISS2ISS2(itkMeanProjectionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS2ISS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS2ISS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS2ISS2

        Create a new object of the class itkMeanProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS2ISS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS2ISS2_swigregister(itkMeanProjectionImageFilterISS2ISS2)

def itkMeanProjectionImageFilterISS3ISS2_New():
    return itkMeanProjectionImageFilterISS3ISS2.New()

class itkMeanProjectionImageFilterISS3ISS2(itkMeanProjectionImageFilterISS3ISS2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS3ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS3ISS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS3ISS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS3ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS2

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS2_swigregister(itkMeanProjectionImageFilterISS3ISS2)

def itkMeanProjectionImageFilterISS3ISS3_New():
    return itkMeanProjectionImageFilterISS3ISS3.New()

class itkMeanProjectionImageFilterISS3ISS3(itkMeanProjectionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS3ISS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS3ISS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS3ISS3

        Create a new object of the class itkMeanProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS3ISS3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS3ISS3_swigregister(itkMeanProjectionImageFilterISS3ISS3)

def itkMeanProjectionImageFilterISS4ISS3_New():
    return itkMeanProjectionImageFilterISS4ISS3.New()

class itkMeanProjectionImageFilterISS4ISS3(itkMeanProjectionImageFilterISS4ISS3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS4ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS4ISS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS4ISS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS4ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS4ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS4ISS3

        Create a new object of the class itkMeanProjectionImageFilterISS4ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS4ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS4ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS4ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS4ISS3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS3_swigregister(itkMeanProjectionImageFilterISS4ISS3)

def itkMeanProjectionImageFilterISS4ISS4_New():
    return itkMeanProjectionImageFilterISS4ISS4.New()

class itkMeanProjectionImageFilterISS4ISS4(itkMeanProjectionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterISS4ISS4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterISS4ISS4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterISS4ISS4

        Create a new object of the class itkMeanProjectionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterISS4ISS4 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterISS4ISS4_swigregister(itkMeanProjectionImageFilterISS4ISS4)

def itkMeanProjectionImageFilterIUC2IUC2_New():
    return itkMeanProjectionImageFilterIUC2IUC2.New()

class itkMeanProjectionImageFilterIUC2IUC2(itkMeanProjectionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC2IUC2

        Create a new object of the class itkMeanProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC2IUC2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC2IUC2_swigregister(itkMeanProjectionImageFilterIUC2IUC2)

def itkMeanProjectionImageFilterIUC3IUC2_New():
    return itkMeanProjectionImageFilterIUC3IUC2.New()

class itkMeanProjectionImageFilterIUC3IUC2(itkMeanProjectionImageFilterIUC3IUC2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC3IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC3IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC2

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC2_swigregister(itkMeanProjectionImageFilterIUC3IUC2)

def itkMeanProjectionImageFilterIUC3IUC3_New():
    return itkMeanProjectionImageFilterIUC3IUC3.New()

class itkMeanProjectionImageFilterIUC3IUC3(itkMeanProjectionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC3IUC3

        Create a new object of the class itkMeanProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC3IUC3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC3IUC3_swigregister(itkMeanProjectionImageFilterIUC3IUC3)

def itkMeanProjectionImageFilterIUC4IUC3_New():
    return itkMeanProjectionImageFilterIUC4IUC3.New()

class itkMeanProjectionImageFilterIUC4IUC3(itkMeanProjectionImageFilterIUC4IUC3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC4IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC4IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC4IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC4IUC3

        Create a new object of the class itkMeanProjectionImageFilterIUC4IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC4IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC4IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC4IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC4IUC3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC3_swigregister(itkMeanProjectionImageFilterIUC4IUC3)

def itkMeanProjectionImageFilterIUC4IUC4_New():
    return itkMeanProjectionImageFilterIUC4IUC4.New()

class itkMeanProjectionImageFilterIUC4IUC4(itkMeanProjectionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUC4IUC4

        Create a new object of the class itkMeanProjectionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUC4IUC4 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUC4IUC4_swigregister(itkMeanProjectionImageFilterIUC4IUC4)

def itkMeanProjectionImageFilterIUS2IUS2_New():
    return itkMeanProjectionImageFilterIUS2IUS2.New()

class itkMeanProjectionImageFilterIUS2IUS2(itkMeanProjectionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS2IUS2

        Create a new object of the class itkMeanProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS2IUS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS2IUS2_swigregister(itkMeanProjectionImageFilterIUS2IUS2)

def itkMeanProjectionImageFilterIUS3IUS2_New():
    return itkMeanProjectionImageFilterIUS3IUS2.New()

class itkMeanProjectionImageFilterIUS3IUS2(itkMeanProjectionImageFilterIUS3IUS2_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS3IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS3IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS2

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS2 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS2_swigregister(itkMeanProjectionImageFilterIUS3IUS2)

def itkMeanProjectionImageFilterIUS3IUS3_New():
    return itkMeanProjectionImageFilterIUS3IUS3.New()

class itkMeanProjectionImageFilterIUS3IUS3(itkMeanProjectionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS3IUS3

        Create a new object of the class itkMeanProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS3IUS3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS3IUS3_swigregister(itkMeanProjectionImageFilterIUS3IUS3)

def itkMeanProjectionImageFilterIUS4IUS3_New():
    return itkMeanProjectionImageFilterIUS4IUS3.New()

class itkMeanProjectionImageFilterIUS4IUS3(itkMeanProjectionImageFilterIUS4IUS3_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS4IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS4IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS4IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS4IUS3

        Create a new object of the class itkMeanProjectionImageFilterIUS4IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS4IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS4IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS4IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS4IUS3 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS3_swigregister(itkMeanProjectionImageFilterIUS4IUS3)

def itkMeanProjectionImageFilterIUS4IUS4_New():
    return itkMeanProjectionImageFilterIUS4IUS4.New()

class itkMeanProjectionImageFilterIUS4IUS4(itkMeanProjectionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkMeanProjectionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeanProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeanProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkMeanProjectionImageFilterPython.delete_itkMeanProjectionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeanProjectionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeanProjectionImageFilterIUS4IUS4

        Create a new object of the class itkMeanProjectionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeanProjectionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeanProjectionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeanProjectionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeanProjectionImageFilterIUS4IUS4 in _itkMeanProjectionImageFilterPython:
_itkMeanProjectionImageFilterPython.itkMeanProjectionImageFilterIUS4IUS4_swigregister(itkMeanProjectionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.ProjectionImageFilter
    projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projection_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def mean_projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MeanProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeanProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mean_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.MeanProjectionImageFilter
    mean_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mean_projection_image_filter.__doc__ = filter_object.__doc__



