# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNaryMaximumImageFilterPython
else:
    import _itkNaryMaximumImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkNaryMaximumImageFilterID2ID2_Superclass_New():
    return itkNaryMaximumImageFilterID2ID2_Superclass.New()

class itkNaryMaximumImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkNaryMaximumImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterID2ID2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterID2ID2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< double,double > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< double,double > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID2ID2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID2ID2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_swigregister(itkNaryMaximumImageFilterID2ID2_Superclass)

def itkNaryMaximumImageFilterID3ID3_Superclass_New():
    return itkNaryMaximumImageFilterID3ID3_Superclass.New()

class itkNaryMaximumImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkNaryMaximumImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterID3ID3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterID3ID3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< double,double > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< double,double > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID3ID3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID3ID3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_swigregister(itkNaryMaximumImageFilterID3ID3_Superclass)

def itkNaryMaximumImageFilterID4ID4_Superclass_New():
    return itkNaryMaximumImageFilterID4ID4_Superclass.New()

class itkNaryMaximumImageFilterID4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkNaryMaximumImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterID4ID4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterID4ID4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< double,double > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< double,double > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID4ID4_Superclass

        Create a new object of the class itkNaryMaximumImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID4ID4_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Superclass_swigregister(itkNaryMaximumImageFilterID4ID4_Superclass)

def itkNaryMaximumImageFilterIF2IF2_Superclass_New():
    return itkNaryMaximumImageFilterIF2IF2_Superclass.New()

class itkNaryMaximumImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIF2IF2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIF2IF2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< float,float > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< float,float > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF2IF2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF2IF2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_swigregister(itkNaryMaximumImageFilterIF2IF2_Superclass)

def itkNaryMaximumImageFilterIF3IF3_Superclass_New():
    return itkNaryMaximumImageFilterIF3IF3_Superclass.New()

class itkNaryMaximumImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIF3IF3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIF3IF3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< float,float > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< float,float > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF3IF3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF3IF3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_swigregister(itkNaryMaximumImageFilterIF3IF3_Superclass)

def itkNaryMaximumImageFilterIF4IF4_Superclass_New():
    return itkNaryMaximumImageFilterIF4IF4_Superclass.New()

class itkNaryMaximumImageFilterIF4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIF4IF4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIF4IF4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< float,float > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< float,float > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF4IF4_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF4IF4_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Superclass_swigregister(itkNaryMaximumImageFilterIF4IF4_Superclass)

def itkNaryMaximumImageFilterISS2ISS2_Superclass_New():
    return itkNaryMaximumImageFilterISS2ISS2_Superclass.New()

class itkNaryMaximumImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< short,short > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< short,short > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS2ISS2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS2ISS2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_swigregister(itkNaryMaximumImageFilterISS2ISS2_Superclass)

def itkNaryMaximumImageFilterISS3ISS3_Superclass_New():
    return itkNaryMaximumImageFilterISS3ISS3_Superclass.New()

class itkNaryMaximumImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< short,short > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< short,short > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS3ISS3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS3ISS3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_swigregister(itkNaryMaximumImageFilterISS3ISS3_Superclass)

def itkNaryMaximumImageFilterISS4ISS4_Superclass_New():
    return itkNaryMaximumImageFilterISS4ISS4_Superclass.New()

class itkNaryMaximumImageFilterISS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< short,short > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< short,short > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS4ISS4_Superclass

        Create a new object of the class itkNaryMaximumImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS4ISS4_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Superclass_swigregister(itkNaryMaximumImageFilterISS4ISS4_Superclass)

def itkNaryMaximumImageFilterIUC2IUC2_Superclass_New():
    return itkNaryMaximumImageFilterIUC2IUC2_Superclass.New()

class itkNaryMaximumImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< unsigned char,unsigned char > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< unsigned char,unsigned char > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC2IUC2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_swigregister(itkNaryMaximumImageFilterIUC2IUC2_Superclass)

def itkNaryMaximumImageFilterIUC3IUC3_Superclass_New():
    return itkNaryMaximumImageFilterIUC3IUC3_Superclass.New()

class itkNaryMaximumImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< unsigned char,unsigned char > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< unsigned char,unsigned char > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC3IUC3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_swigregister(itkNaryMaximumImageFilterIUC3IUC3_Superclass)

def itkNaryMaximumImageFilterIUC4IUC4_Superclass_New():
    return itkNaryMaximumImageFilterIUC4IUC4_Superclass.New()

class itkNaryMaximumImageFilterIUC4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< unsigned char,unsigned char > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< unsigned char,unsigned char > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC4IUC4_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Superclass_swigregister(itkNaryMaximumImageFilterIUC4IUC4_Superclass)

def itkNaryMaximumImageFilterIUS2IUS2_Superclass_New():
    return itkNaryMaximumImageFilterIUS2IUS2_Superclass.New()

class itkNaryMaximumImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< unsigned short,unsigned short > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< unsigned short,unsigned short > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS2IUS2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_swigregister(itkNaryMaximumImageFilterIUS2IUS2_Superclass)

def itkNaryMaximumImageFilterIUS3IUS3_Superclass_New():
    return itkNaryMaximumImageFilterIUS3IUS3_Superclass.New()

class itkNaryMaximumImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< unsigned short,unsigned short > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< unsigned short,unsigned short > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS3IUS3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_swigregister(itkNaryMaximumImageFilterIUS3IUS3_Superclass)

def itkNaryMaximumImageFilterIUS4IUS4_Superclass_New():
    return itkNaryMaximumImageFilterIUS4IUS4_Superclass.New()

class itkNaryMaximumImageFilterIUS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_Clone(self)

    def GetFunctor(self):
        r"""GetFunctor(self) -> itk::Functor::Maximum1< unsigned short,unsigned short > &"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_GetFunctor(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::Maximum1< unsigned short,unsigned short > &

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_SetFunctor(self, functor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS4IUS4_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Superclass_swigregister(itkNaryMaximumImageFilterIUS4IUS4_Superclass)

def itkNaryMaximumImageFilterID2ID2_New():
    return itkNaryMaximumImageFilterID2ID2.New()

class itkNaryMaximumImageFilterID2ID2(itkNaryMaximumImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterID2ID2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterID2ID2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID2ID2

        Create a new object of the class itkNaryMaximumImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID2ID2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_swigregister(itkNaryMaximumImageFilterID2ID2)

def itkNaryMaximumImageFilterID3ID3_New():
    return itkNaryMaximumImageFilterID3ID3.New()

class itkNaryMaximumImageFilterID3ID3(itkNaryMaximumImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterID3ID3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterID3ID3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID3ID3

        Create a new object of the class itkNaryMaximumImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID3ID3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_swigregister(itkNaryMaximumImageFilterID3ID3)

def itkNaryMaximumImageFilterID4ID4_New():
    return itkNaryMaximumImageFilterID4ID4.New()

class itkNaryMaximumImageFilterID4ID4(itkNaryMaximumImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterID4ID4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterID4ID4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID4ID4

        Create a new object of the class itkNaryMaximumImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID4ID4 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID4ID4_swigregister(itkNaryMaximumImageFilterID4ID4)

def itkNaryMaximumImageFilterIF2IF2_New():
    return itkNaryMaximumImageFilterIF2IF2.New()

class itkNaryMaximumImageFilterIF2IF2(itkNaryMaximumImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIF2IF2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIF2IF2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF2IF2

        Create a new object of the class itkNaryMaximumImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF2IF2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_swigregister(itkNaryMaximumImageFilterIF2IF2)

def itkNaryMaximumImageFilterIF3IF3_New():
    return itkNaryMaximumImageFilterIF3IF3.New()

class itkNaryMaximumImageFilterIF3IF3(itkNaryMaximumImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIF3IF3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIF3IF3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF3IF3

        Create a new object of the class itkNaryMaximumImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF3IF3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_swigregister(itkNaryMaximumImageFilterIF3IF3)

def itkNaryMaximumImageFilterIF4IF4_New():
    return itkNaryMaximumImageFilterIF4IF4.New()

class itkNaryMaximumImageFilterIF4IF4(itkNaryMaximumImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIF4IF4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIF4IF4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF4IF4

        Create a new object of the class itkNaryMaximumImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF4IF4 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF4IF4_swigregister(itkNaryMaximumImageFilterIF4IF4)

def itkNaryMaximumImageFilterISS2ISS2_New():
    return itkNaryMaximumImageFilterISS2ISS2.New()

class itkNaryMaximumImageFilterISS2ISS2(itkNaryMaximumImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterISS2ISS2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterISS2ISS2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS2ISS2

        Create a new object of the class itkNaryMaximumImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS2ISS2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_swigregister(itkNaryMaximumImageFilterISS2ISS2)

def itkNaryMaximumImageFilterISS3ISS3_New():
    return itkNaryMaximumImageFilterISS3ISS3.New()

class itkNaryMaximumImageFilterISS3ISS3(itkNaryMaximumImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterISS3ISS3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterISS3ISS3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS3ISS3

        Create a new object of the class itkNaryMaximumImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS3ISS3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_swigregister(itkNaryMaximumImageFilterISS3ISS3)

def itkNaryMaximumImageFilterISS4ISS4_New():
    return itkNaryMaximumImageFilterISS4ISS4.New()

class itkNaryMaximumImageFilterISS4ISS4(itkNaryMaximumImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterISS4ISS4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterISS4ISS4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS4ISS4

        Create a new object of the class itkNaryMaximumImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS4ISS4 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS4ISS4_swigregister(itkNaryMaximumImageFilterISS4ISS4)

def itkNaryMaximumImageFilterIUC2IUC2_New():
    return itkNaryMaximumImageFilterIUC2IUC2.New()

class itkNaryMaximumImageFilterIUC2IUC2(itkNaryMaximumImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUC2IUC2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUC2IUC2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC2IUC2

        Create a new object of the class itkNaryMaximumImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC2IUC2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_swigregister(itkNaryMaximumImageFilterIUC2IUC2)

def itkNaryMaximumImageFilterIUC3IUC3_New():
    return itkNaryMaximumImageFilterIUC3IUC3.New()

class itkNaryMaximumImageFilterIUC3IUC3(itkNaryMaximumImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUC3IUC3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUC3IUC3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC3IUC3

        Create a new object of the class itkNaryMaximumImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC3IUC3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_swigregister(itkNaryMaximumImageFilterIUC3IUC3)

def itkNaryMaximumImageFilterIUC4IUC4_New():
    return itkNaryMaximumImageFilterIUC4IUC4.New()

class itkNaryMaximumImageFilterIUC4IUC4(itkNaryMaximumImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUC4IUC4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUC4IUC4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC4IUC4

        Create a new object of the class itkNaryMaximumImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC4IUC4 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC4IUC4_swigregister(itkNaryMaximumImageFilterIUC4IUC4)

def itkNaryMaximumImageFilterIUS2IUS2_New():
    return itkNaryMaximumImageFilterIUS2IUS2.New()

class itkNaryMaximumImageFilterIUS2IUS2(itkNaryMaximumImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUS2IUS2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUS2IUS2_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS2IUS2

        Create a new object of the class itkNaryMaximumImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS2IUS2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_swigregister(itkNaryMaximumImageFilterIUS2IUS2)

def itkNaryMaximumImageFilterIUS3IUS3_New():
    return itkNaryMaximumImageFilterIUS3IUS3.New()

class itkNaryMaximumImageFilterIUS3IUS3(itkNaryMaximumImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUS3IUS3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUS3IUS3_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS3IUS3

        Create a new object of the class itkNaryMaximumImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS3IUS3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_swigregister(itkNaryMaximumImageFilterIUS3IUS3)

def itkNaryMaximumImageFilterIUS4IUS4_New():
    return itkNaryMaximumImageFilterIUS4IUS4.New()

class itkNaryMaximumImageFilterIUS4IUS4(itkNaryMaximumImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNaryMaximumImageFilterIUS4IUS4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNaryMaximumImageFilterIUS4IUS4_Pointer"""
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_Clone(self)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNaryMaximumImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS4IUS4

        Create a new object of the class itkNaryMaximumImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS4IUS4 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS4IUS4_swigregister(itkNaryMaximumImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def nary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for NaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.NaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def nary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.NaryFunctorImageFilter
    nary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    nary_functor_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def nary_maximum_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for NaryMaximumImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.NaryMaximumImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def nary_maximum_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.NaryMaximumImageFilter
    nary_maximum_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    nary_maximum_image_filter.__doc__ = filter_object.__doc__



