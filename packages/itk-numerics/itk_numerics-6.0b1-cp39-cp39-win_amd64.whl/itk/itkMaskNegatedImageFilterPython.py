# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskNegatedImageFilterPython
else:
    import _itkMaskNegatedImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkBinaryGeneratorImageFilterPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython
import itk.itkInPlaceImageFilterBPython

def itkMaskNegatedImageFilterICD2ISS2ICD2_New():
    return itkMaskNegatedImageFilterICD2ISS2ICD2.New()

class itkMaskNegatedImageFilterICD2ISS2ICD2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD2ISS2ICD2):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD2ISS2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD2ISS2ICD2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD2ISS2ICD2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD2ISS2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD2ISS2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD2ISS2ICD2

        Create a new object of the class itkMaskNegatedImageFilterICD2ISS2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD2ISS2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD2ISS2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD2ISS2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD2ISS2ICD2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2ISS2ICD2_swigregister(itkMaskNegatedImageFilterICD2ISS2ICD2)

def itkMaskNegatedImageFilterICD2IUC2ICD2_New():
    return itkMaskNegatedImageFilterICD2IUC2ICD2.New()

class itkMaskNegatedImageFilterICD2IUC2ICD2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD2IUC2ICD2):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD2IUC2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD2IUC2ICD2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD2IUC2ICD2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD2IUC2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD2IUC2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD2IUC2ICD2

        Create a new object of the class itkMaskNegatedImageFilterICD2IUC2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD2IUC2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD2IUC2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD2IUC2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD2IUC2ICD2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUC2ICD2_swigregister(itkMaskNegatedImageFilterICD2IUC2ICD2)

def itkMaskNegatedImageFilterICD2IUS2ICD2_New():
    return itkMaskNegatedImageFilterICD2IUS2ICD2.New()

class itkMaskNegatedImageFilterICD2IUS2ICD2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD2IUS2ICD2):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD2IUS2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD2IUS2ICD2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD2IUS2ICD2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD2IUS2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD2IUS2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD2IUS2ICD2

        Create a new object of the class itkMaskNegatedImageFilterICD2IUS2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD2IUS2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD2IUS2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD2IUS2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD2IUS2ICD2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD2IUS2ICD2_swigregister(itkMaskNegatedImageFilterICD2IUS2ICD2)

def itkMaskNegatedImageFilterICD3ISS3ICD3_New():
    return itkMaskNegatedImageFilterICD3ISS3ICD3.New()

class itkMaskNegatedImageFilterICD3ISS3ICD3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD3ISS3ICD3):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD3ISS3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD3ISS3ICD3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD3ISS3ICD3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD3ISS3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD3ISS3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD3ISS3ICD3

        Create a new object of the class itkMaskNegatedImageFilterICD3ISS3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD3ISS3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD3ISS3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD3ISS3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD3ISS3ICD3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3ISS3ICD3_swigregister(itkMaskNegatedImageFilterICD3ISS3ICD3)

def itkMaskNegatedImageFilterICD3IUC3ICD3_New():
    return itkMaskNegatedImageFilterICD3IUC3ICD3.New()

class itkMaskNegatedImageFilterICD3IUC3ICD3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD3IUC3ICD3):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD3IUC3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD3IUC3ICD3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD3IUC3ICD3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD3IUC3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD3IUC3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD3IUC3ICD3

        Create a new object of the class itkMaskNegatedImageFilterICD3IUC3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD3IUC3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD3IUC3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD3IUC3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD3IUC3ICD3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUC3ICD3_swigregister(itkMaskNegatedImageFilterICD3IUC3ICD3)

def itkMaskNegatedImageFilterICD3IUS3ICD3_New():
    return itkMaskNegatedImageFilterICD3IUS3ICD3.New()

class itkMaskNegatedImageFilterICD3IUS3ICD3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD3IUS3ICD3):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD3IUS3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD3IUS3ICD3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD3IUS3ICD3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD3IUS3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD3IUS3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD3IUS3ICD3

        Create a new object of the class itkMaskNegatedImageFilterICD3IUS3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD3IUS3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD3IUS3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD3IUS3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD3IUS3ICD3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD3IUS3ICD3_swigregister(itkMaskNegatedImageFilterICD3IUS3ICD3)

def itkMaskNegatedImageFilterICD4ISS4ICD4_New():
    return itkMaskNegatedImageFilterICD4ISS4ICD4.New()

class itkMaskNegatedImageFilterICD4ISS4ICD4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD4ISS4ICD4):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD4ISS4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD4ISS4ICD4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD4ISS4ICD4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD4ISS4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD4ISS4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD4ISS4ICD4

        Create a new object of the class itkMaskNegatedImageFilterICD4ISS4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD4ISS4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD4ISS4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD4ISS4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD4ISS4ICD4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4ISS4ICD4_swigregister(itkMaskNegatedImageFilterICD4ISS4ICD4)

def itkMaskNegatedImageFilterICD4IUC4ICD4_New():
    return itkMaskNegatedImageFilterICD4IUC4ICD4.New()

class itkMaskNegatedImageFilterICD4IUC4ICD4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD4IUC4ICD4):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD4IUC4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD4IUC4ICD4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD4IUC4ICD4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD4IUC4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD4IUC4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD4IUC4ICD4

        Create a new object of the class itkMaskNegatedImageFilterICD4IUC4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD4IUC4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD4IUC4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD4IUC4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD4IUC4ICD4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUC4ICD4_swigregister(itkMaskNegatedImageFilterICD4IUC4ICD4)

def itkMaskNegatedImageFilterICD4IUS4ICD4_New():
    return itkMaskNegatedImageFilterICD4IUS4ICD4.New()

class itkMaskNegatedImageFilterICD4IUS4ICD4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD4IUS4ICD4):
    r"""Proxy of C++ itkMaskNegatedImageFilterICD4IUS4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICD4IUS4ICD4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICD4IUS4ICD4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICD4IUS4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICD4IUS4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICD4IUS4ICD4

        Create a new object of the class itkMaskNegatedImageFilterICD4IUS4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICD4IUS4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICD4IUS4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICD4IUS4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICD4IUS4ICD4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICD4IUS4ICD4_swigregister(itkMaskNegatedImageFilterICD4IUS4ICD4)

def itkMaskNegatedImageFilterICF2ISS2ICF2_New():
    return itkMaskNegatedImageFilterICF2ISS2ICF2.New()

class itkMaskNegatedImageFilterICF2ISS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF2ISS2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF2ISS2ICF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF2ISS2ICF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF2ISS2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF2ISS2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF2ISS2ICF2

        Create a new object of the class itkMaskNegatedImageFilterICF2ISS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF2ISS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF2ISS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF2ISS2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF2ISS2ICF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2ISS2ICF2_swigregister(itkMaskNegatedImageFilterICF2ISS2ICF2)

def itkMaskNegatedImageFilterICF2IUC2ICF2_New():
    return itkMaskNegatedImageFilterICF2IUC2ICF2.New()

class itkMaskNegatedImageFilterICF2IUC2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF2IUC2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF2IUC2ICF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF2IUC2ICF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF2IUC2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF2IUC2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF2IUC2ICF2

        Create a new object of the class itkMaskNegatedImageFilterICF2IUC2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF2IUC2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF2IUC2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF2IUC2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF2IUC2ICF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUC2ICF2_swigregister(itkMaskNegatedImageFilterICF2IUC2ICF2)

def itkMaskNegatedImageFilterICF2IUS2ICF2_New():
    return itkMaskNegatedImageFilterICF2IUS2ICF2.New()

class itkMaskNegatedImageFilterICF2IUS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF2IUS2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF2IUS2ICF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF2IUS2ICF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF2IUS2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF2IUS2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF2IUS2ICF2

        Create a new object of the class itkMaskNegatedImageFilterICF2IUS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF2IUS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF2IUS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF2IUS2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF2IUS2ICF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF2IUS2ICF2_swigregister(itkMaskNegatedImageFilterICF2IUS2ICF2)

def itkMaskNegatedImageFilterICF3ISS3ICF3_New():
    return itkMaskNegatedImageFilterICF3ISS3ICF3.New()

class itkMaskNegatedImageFilterICF3ISS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF3ISS3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF3ISS3ICF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF3ISS3ICF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF3ISS3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF3ISS3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF3ISS3ICF3

        Create a new object of the class itkMaskNegatedImageFilterICF3ISS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF3ISS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF3ISS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF3ISS3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF3ISS3ICF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3ISS3ICF3_swigregister(itkMaskNegatedImageFilterICF3ISS3ICF3)

def itkMaskNegatedImageFilterICF3IUC3ICF3_New():
    return itkMaskNegatedImageFilterICF3IUC3ICF3.New()

class itkMaskNegatedImageFilterICF3IUC3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF3IUC3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF3IUC3ICF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF3IUC3ICF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF3IUC3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF3IUC3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF3IUC3ICF3

        Create a new object of the class itkMaskNegatedImageFilterICF3IUC3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF3IUC3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF3IUC3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF3IUC3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF3IUC3ICF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUC3ICF3_swigregister(itkMaskNegatedImageFilterICF3IUC3ICF3)

def itkMaskNegatedImageFilterICF3IUS3ICF3_New():
    return itkMaskNegatedImageFilterICF3IUS3ICF3.New()

class itkMaskNegatedImageFilterICF3IUS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF3IUS3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF3IUS3ICF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF3IUS3ICF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF3IUS3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF3IUS3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF3IUS3ICF3

        Create a new object of the class itkMaskNegatedImageFilterICF3IUS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF3IUS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF3IUS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF3IUS3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF3IUS3ICF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF3IUS3ICF3_swigregister(itkMaskNegatedImageFilterICF3IUS3ICF3)

def itkMaskNegatedImageFilterICF4ISS4ICF4_New():
    return itkMaskNegatedImageFilterICF4ISS4ICF4.New()

class itkMaskNegatedImageFilterICF4ISS4ICF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF4ISS4ICF4):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF4ISS4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF4ISS4ICF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF4ISS4ICF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF4ISS4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF4ISS4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF4ISS4ICF4

        Create a new object of the class itkMaskNegatedImageFilterICF4ISS4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF4ISS4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF4ISS4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF4ISS4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF4ISS4ICF4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4ISS4ICF4_swigregister(itkMaskNegatedImageFilterICF4ISS4ICF4)

def itkMaskNegatedImageFilterICF4IUC4ICF4_New():
    return itkMaskNegatedImageFilterICF4IUC4ICF4.New()

class itkMaskNegatedImageFilterICF4IUC4ICF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF4IUC4ICF4):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF4IUC4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF4IUC4ICF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF4IUC4ICF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF4IUC4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF4IUC4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF4IUC4ICF4

        Create a new object of the class itkMaskNegatedImageFilterICF4IUC4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF4IUC4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF4IUC4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF4IUC4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF4IUC4ICF4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUC4ICF4_swigregister(itkMaskNegatedImageFilterICF4IUC4ICF4)

def itkMaskNegatedImageFilterICF4IUS4ICF4_New():
    return itkMaskNegatedImageFilterICF4IUS4ICF4.New()

class itkMaskNegatedImageFilterICF4IUS4ICF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF4IUS4ICF4):
    r"""Proxy of C++ itkMaskNegatedImageFilterICF4IUS4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICF4IUS4ICF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICF4IUS4ICF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICF4IUS4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICF4IUS4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICF4IUS4ICF4

        Create a new object of the class itkMaskNegatedImageFilterICF4IUS4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICF4IUS4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICF4IUS4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICF4IUS4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICF4IUS4ICF4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICF4IUS4ICF4_swigregister(itkMaskNegatedImageFilterICF4IUS4ICF4)

def itkMaskNegatedImageFilterICVF22ISS2ICVF22_New():
    return itkMaskNegatedImageFilterICVF22ISS2ICVF22.New()

class itkMaskNegatedImageFilterICVF22ISS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF22ISS2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF22ISS2ICVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF22ISS2ICVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF22ISS2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF22ISS2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF22ISS2ICVF22

        Create a new object of the class itkMaskNegatedImageFilterICVF22ISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF22ISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF22ISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF22ISS2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF22ISS2ICVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22ISS2ICVF22_swigregister(itkMaskNegatedImageFilterICVF22ISS2ICVF22)

def itkMaskNegatedImageFilterICVF22IUC2ICVF22_New():
    return itkMaskNegatedImageFilterICVF22IUC2ICVF22.New()

class itkMaskNegatedImageFilterICVF22IUC2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF22IUC2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF22IUC2ICVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF22IUC2ICVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF22IUC2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF22IUC2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF22IUC2ICVF22

        Create a new object of the class itkMaskNegatedImageFilterICVF22IUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF22IUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF22IUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF22IUC2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF22IUC2ICVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUC2ICVF22_swigregister(itkMaskNegatedImageFilterICVF22IUC2ICVF22)

def itkMaskNegatedImageFilterICVF22IUS2ICVF22_New():
    return itkMaskNegatedImageFilterICVF22IUS2ICVF22.New()

class itkMaskNegatedImageFilterICVF22IUS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF22IUS2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF22IUS2ICVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF22IUS2ICVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF22IUS2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF22IUS2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF22IUS2ICVF22

        Create a new object of the class itkMaskNegatedImageFilterICVF22IUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF22IUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF22IUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF22IUS2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF22IUS2ICVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF22IUS2ICVF22_swigregister(itkMaskNegatedImageFilterICVF22IUS2ICVF22)

def itkMaskNegatedImageFilterICVF23ISS3ICVF23_New():
    return itkMaskNegatedImageFilterICVF23ISS3ICVF23.New()

class itkMaskNegatedImageFilterICVF23ISS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF23ISS3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF23ISS3ICVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF23ISS3ICVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF23ISS3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF23ISS3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF23ISS3ICVF23

        Create a new object of the class itkMaskNegatedImageFilterICVF23ISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF23ISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF23ISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF23ISS3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF23ISS3ICVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23ISS3ICVF23_swigregister(itkMaskNegatedImageFilterICVF23ISS3ICVF23)

def itkMaskNegatedImageFilterICVF23IUC3ICVF23_New():
    return itkMaskNegatedImageFilterICVF23IUC3ICVF23.New()

class itkMaskNegatedImageFilterICVF23IUC3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF23IUC3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF23IUC3ICVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF23IUC3ICVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF23IUC3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF23IUC3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF23IUC3ICVF23

        Create a new object of the class itkMaskNegatedImageFilterICVF23IUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF23IUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF23IUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF23IUC3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF23IUC3ICVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUC3ICVF23_swigregister(itkMaskNegatedImageFilterICVF23IUC3ICVF23)

def itkMaskNegatedImageFilterICVF23IUS3ICVF23_New():
    return itkMaskNegatedImageFilterICVF23IUS3ICVF23.New()

class itkMaskNegatedImageFilterICVF23IUS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF23IUS3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF23IUS3ICVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF23IUS3ICVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF23IUS3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF23IUS3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF23IUS3ICVF23

        Create a new object of the class itkMaskNegatedImageFilterICVF23IUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF23IUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF23IUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF23IUS3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF23IUS3ICVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF23IUS3ICVF23_swigregister(itkMaskNegatedImageFilterICVF23IUS3ICVF23)

def itkMaskNegatedImageFilterICVF24ISS4ICVF24_New():
    return itkMaskNegatedImageFilterICVF24ISS4ICVF24.New()

class itkMaskNegatedImageFilterICVF24ISS4ICVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF24ISS4ICVF24):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF24ISS4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF24ISS4ICVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF24ISS4ICVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF24ISS4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF24ISS4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF24ISS4ICVF24

        Create a new object of the class itkMaskNegatedImageFilterICVF24ISS4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF24ISS4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF24ISS4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF24ISS4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF24ISS4ICVF24 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24ISS4ICVF24_swigregister(itkMaskNegatedImageFilterICVF24ISS4ICVF24)

def itkMaskNegatedImageFilterICVF24IUC4ICVF24_New():
    return itkMaskNegatedImageFilterICVF24IUC4ICVF24.New()

class itkMaskNegatedImageFilterICVF24IUC4ICVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF24IUC4ICVF24):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF24IUC4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF24IUC4ICVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF24IUC4ICVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF24IUC4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF24IUC4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF24IUC4ICVF24

        Create a new object of the class itkMaskNegatedImageFilterICVF24IUC4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF24IUC4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF24IUC4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF24IUC4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF24IUC4ICVF24 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUC4ICVF24_swigregister(itkMaskNegatedImageFilterICVF24IUC4ICVF24)

def itkMaskNegatedImageFilterICVF24IUS4ICVF24_New():
    return itkMaskNegatedImageFilterICVF24IUS4ICVF24.New()

class itkMaskNegatedImageFilterICVF24IUS4ICVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF24IUS4ICVF24):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF24IUS4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF24IUS4ICVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF24IUS4ICVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF24IUS4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF24IUS4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF24IUS4ICVF24

        Create a new object of the class itkMaskNegatedImageFilterICVF24IUS4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF24IUS4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF24IUS4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF24IUS4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF24IUS4ICVF24 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF24IUS4ICVF24_swigregister(itkMaskNegatedImageFilterICVF24IUS4ICVF24)

def itkMaskNegatedImageFilterICVF32ISS2ICVF32_New():
    return itkMaskNegatedImageFilterICVF32ISS2ICVF32.New()

class itkMaskNegatedImageFilterICVF32ISS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF32ISS2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF32ISS2ICVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF32ISS2ICVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF32ISS2ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF32ISS2ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF32ISS2ICVF32

        Create a new object of the class itkMaskNegatedImageFilterICVF32ISS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF32ISS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF32ISS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF32ISS2ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF32ISS2ICVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32ISS2ICVF32_swigregister(itkMaskNegatedImageFilterICVF32ISS2ICVF32)

def itkMaskNegatedImageFilterICVF32IUC2ICVF32_New():
    return itkMaskNegatedImageFilterICVF32IUC2ICVF32.New()

class itkMaskNegatedImageFilterICVF32IUC2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF32IUC2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF32IUC2ICVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF32IUC2ICVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF32IUC2ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF32IUC2ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF32IUC2ICVF32

        Create a new object of the class itkMaskNegatedImageFilterICVF32IUC2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF32IUC2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF32IUC2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF32IUC2ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF32IUC2ICVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUC2ICVF32_swigregister(itkMaskNegatedImageFilterICVF32IUC2ICVF32)

def itkMaskNegatedImageFilterICVF32IUS2ICVF32_New():
    return itkMaskNegatedImageFilterICVF32IUS2ICVF32.New()

class itkMaskNegatedImageFilterICVF32IUS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF32IUS2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF32IUS2ICVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF32IUS2ICVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF32IUS2ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF32IUS2ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF32IUS2ICVF32

        Create a new object of the class itkMaskNegatedImageFilterICVF32IUS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF32IUS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF32IUS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF32IUS2ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF32IUS2ICVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF32IUS2ICVF32_swigregister(itkMaskNegatedImageFilterICVF32IUS2ICVF32)

def itkMaskNegatedImageFilterICVF33ISS3ICVF33_New():
    return itkMaskNegatedImageFilterICVF33ISS3ICVF33.New()

class itkMaskNegatedImageFilterICVF33ISS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF33ISS3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF33ISS3ICVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF33ISS3ICVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF33ISS3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF33ISS3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF33ISS3ICVF33

        Create a new object of the class itkMaskNegatedImageFilterICVF33ISS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF33ISS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF33ISS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF33ISS3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF33ISS3ICVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33ISS3ICVF33_swigregister(itkMaskNegatedImageFilterICVF33ISS3ICVF33)

def itkMaskNegatedImageFilterICVF33IUC3ICVF33_New():
    return itkMaskNegatedImageFilterICVF33IUC3ICVF33.New()

class itkMaskNegatedImageFilterICVF33IUC3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF33IUC3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF33IUC3ICVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF33IUC3ICVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF33IUC3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF33IUC3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF33IUC3ICVF33

        Create a new object of the class itkMaskNegatedImageFilterICVF33IUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF33IUC3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF33IUC3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF33IUC3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF33IUC3ICVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUC3ICVF33_swigregister(itkMaskNegatedImageFilterICVF33IUC3ICVF33)

def itkMaskNegatedImageFilterICVF33IUS3ICVF33_New():
    return itkMaskNegatedImageFilterICVF33IUS3ICVF33.New()

class itkMaskNegatedImageFilterICVF33IUS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF33IUS3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF33IUS3ICVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF33IUS3ICVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF33IUS3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF33IUS3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF33IUS3ICVF33

        Create a new object of the class itkMaskNegatedImageFilterICVF33IUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF33IUS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF33IUS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF33IUS3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF33IUS3ICVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF33IUS3ICVF33_swigregister(itkMaskNegatedImageFilterICVF33IUS3ICVF33)

def itkMaskNegatedImageFilterICVF34ISS4ICVF34_New():
    return itkMaskNegatedImageFilterICVF34ISS4ICVF34.New()

class itkMaskNegatedImageFilterICVF34ISS4ICVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF34ISS4ICVF34):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF34ISS4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF34ISS4ICVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF34ISS4ICVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF34ISS4ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF34ISS4ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF34ISS4ICVF34

        Create a new object of the class itkMaskNegatedImageFilterICVF34ISS4ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF34ISS4ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF34ISS4ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF34ISS4ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF34ISS4ICVF34 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34ISS4ICVF34_swigregister(itkMaskNegatedImageFilterICVF34ISS4ICVF34)

def itkMaskNegatedImageFilterICVF34IUC4ICVF34_New():
    return itkMaskNegatedImageFilterICVF34IUC4ICVF34.New()

class itkMaskNegatedImageFilterICVF34IUC4ICVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF34IUC4ICVF34):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF34IUC4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF34IUC4ICVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF34IUC4ICVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF34IUC4ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF34IUC4ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF34IUC4ICVF34

        Create a new object of the class itkMaskNegatedImageFilterICVF34IUC4ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF34IUC4ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF34IUC4ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF34IUC4ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF34IUC4ICVF34 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUC4ICVF34_swigregister(itkMaskNegatedImageFilterICVF34IUC4ICVF34)

def itkMaskNegatedImageFilterICVF34IUS4ICVF34_New():
    return itkMaskNegatedImageFilterICVF34IUS4ICVF34.New()

class itkMaskNegatedImageFilterICVF34IUS4ICVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF34IUS4ICVF34):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF34IUS4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF34IUS4ICVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF34IUS4ICVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF34IUS4ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF34IUS4ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF34IUS4ICVF34

        Create a new object of the class itkMaskNegatedImageFilterICVF34IUS4ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF34IUS4ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF34IUS4ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF34IUS4ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF34IUS4ICVF34 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF34IUS4ICVF34_swigregister(itkMaskNegatedImageFilterICVF34IUS4ICVF34)

def itkMaskNegatedImageFilterICVF42ISS2ICVF42_New():
    return itkMaskNegatedImageFilterICVF42ISS2ICVF42.New()

class itkMaskNegatedImageFilterICVF42ISS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF42ISS2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF42ISS2ICVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF42ISS2ICVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF42ISS2ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF42ISS2ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF42ISS2ICVF42

        Create a new object of the class itkMaskNegatedImageFilterICVF42ISS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF42ISS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF42ISS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF42ISS2ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF42ISS2ICVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42ISS2ICVF42_swigregister(itkMaskNegatedImageFilterICVF42ISS2ICVF42)

def itkMaskNegatedImageFilterICVF42IUC2ICVF42_New():
    return itkMaskNegatedImageFilterICVF42IUC2ICVF42.New()

class itkMaskNegatedImageFilterICVF42IUC2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF42IUC2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF42IUC2ICVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF42IUC2ICVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF42IUC2ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF42IUC2ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF42IUC2ICVF42

        Create a new object of the class itkMaskNegatedImageFilterICVF42IUC2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF42IUC2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF42IUC2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF42IUC2ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF42IUC2ICVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUC2ICVF42_swigregister(itkMaskNegatedImageFilterICVF42IUC2ICVF42)

def itkMaskNegatedImageFilterICVF42IUS2ICVF42_New():
    return itkMaskNegatedImageFilterICVF42IUS2ICVF42.New()

class itkMaskNegatedImageFilterICVF42IUS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF42IUS2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF42IUS2ICVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF42IUS2ICVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF42IUS2ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF42IUS2ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF42IUS2ICVF42

        Create a new object of the class itkMaskNegatedImageFilterICVF42IUS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF42IUS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF42IUS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF42IUS2ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF42IUS2ICVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF42IUS2ICVF42_swigregister(itkMaskNegatedImageFilterICVF42IUS2ICVF42)

def itkMaskNegatedImageFilterICVF43ISS3ICVF43_New():
    return itkMaskNegatedImageFilterICVF43ISS3ICVF43.New()

class itkMaskNegatedImageFilterICVF43ISS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF43ISS3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF43ISS3ICVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF43ISS3ICVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF43ISS3ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF43ISS3ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF43ISS3ICVF43

        Create a new object of the class itkMaskNegatedImageFilterICVF43ISS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF43ISS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF43ISS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF43ISS3ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF43ISS3ICVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43ISS3ICVF43_swigregister(itkMaskNegatedImageFilterICVF43ISS3ICVF43)

def itkMaskNegatedImageFilterICVF43IUC3ICVF43_New():
    return itkMaskNegatedImageFilterICVF43IUC3ICVF43.New()

class itkMaskNegatedImageFilterICVF43IUC3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF43IUC3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF43IUC3ICVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF43IUC3ICVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF43IUC3ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF43IUC3ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF43IUC3ICVF43

        Create a new object of the class itkMaskNegatedImageFilterICVF43IUC3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF43IUC3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF43IUC3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF43IUC3ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF43IUC3ICVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUC3ICVF43_swigregister(itkMaskNegatedImageFilterICVF43IUC3ICVF43)

def itkMaskNegatedImageFilterICVF43IUS3ICVF43_New():
    return itkMaskNegatedImageFilterICVF43IUS3ICVF43.New()

class itkMaskNegatedImageFilterICVF43IUS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF43IUS3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF43IUS3ICVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF43IUS3ICVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF43IUS3ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF43IUS3ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF43IUS3ICVF43

        Create a new object of the class itkMaskNegatedImageFilterICVF43IUS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF43IUS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF43IUS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF43IUS3ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF43IUS3ICVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF43IUS3ICVF43_swigregister(itkMaskNegatedImageFilterICVF43IUS3ICVF43)

def itkMaskNegatedImageFilterICVF44ISS4ICVF44_New():
    return itkMaskNegatedImageFilterICVF44ISS4ICVF44.New()

class itkMaskNegatedImageFilterICVF44ISS4ICVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF44ISS4ICVF44):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF44ISS4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF44ISS4ICVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF44ISS4ICVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF44ISS4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF44ISS4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF44ISS4ICVF44

        Create a new object of the class itkMaskNegatedImageFilterICVF44ISS4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF44ISS4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF44ISS4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF44ISS4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF44ISS4ICVF44 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44ISS4ICVF44_swigregister(itkMaskNegatedImageFilterICVF44ISS4ICVF44)

def itkMaskNegatedImageFilterICVF44IUC4ICVF44_New():
    return itkMaskNegatedImageFilterICVF44IUC4ICVF44.New()

class itkMaskNegatedImageFilterICVF44IUC4ICVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF44IUC4ICVF44):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF44IUC4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF44IUC4ICVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF44IUC4ICVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF44IUC4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF44IUC4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF44IUC4ICVF44

        Create a new object of the class itkMaskNegatedImageFilterICVF44IUC4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF44IUC4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF44IUC4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF44IUC4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF44IUC4ICVF44 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUC4ICVF44_swigregister(itkMaskNegatedImageFilterICVF44IUC4ICVF44)

def itkMaskNegatedImageFilterICVF44IUS4ICVF44_New():
    return itkMaskNegatedImageFilterICVF44IUS4ICVF44.New()

class itkMaskNegatedImageFilterICVF44IUS4ICVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF44IUS4ICVF44):
    r"""Proxy of C++ itkMaskNegatedImageFilterICVF44IUS4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterICVF44IUS4ICVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterICVF44IUS4ICVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterICVF44IUS4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterICVF44IUS4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterICVF44IUS4ICVF44

        Create a new object of the class itkMaskNegatedImageFilterICVF44IUS4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterICVF44IUS4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterICVF44IUS4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterICVF44IUS4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterICVF44IUS4ICVF44 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterICVF44IUS4ICVF44_swigregister(itkMaskNegatedImageFilterICVF44IUS4ICVF44)

def itkMaskNegatedImageFilterID2ISS2ID2_New():
    return itkMaskNegatedImageFilterID2ISS2ID2.New()

class itkMaskNegatedImageFilterID2ISS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2):
    r"""Proxy of C++ itkMaskNegatedImageFilterID2ISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID2ISS2ID2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID2ISS2ID2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID2ISS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID2ISS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID2ISS2ID2

        Create a new object of the class itkMaskNegatedImageFilterID2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID2ISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID2ISS2ID2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2ISS2ID2_swigregister(itkMaskNegatedImageFilterID2ISS2ID2)

def itkMaskNegatedImageFilterID2IUC2ID2_New():
    return itkMaskNegatedImageFilterID2IUC2ID2.New()

class itkMaskNegatedImageFilterID2IUC2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2):
    r"""Proxy of C++ itkMaskNegatedImageFilterID2IUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID2IUC2ID2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID2IUC2ID2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID2IUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID2IUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID2IUC2ID2

        Create a new object of the class itkMaskNegatedImageFilterID2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID2IUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID2IUC2ID2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUC2ID2_swigregister(itkMaskNegatedImageFilterID2IUC2ID2)

def itkMaskNegatedImageFilterID2IUS2ID2_New():
    return itkMaskNegatedImageFilterID2IUS2ID2.New()

class itkMaskNegatedImageFilterID2IUS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2):
    r"""Proxy of C++ itkMaskNegatedImageFilterID2IUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID2IUS2ID2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID2IUS2ID2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID2IUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID2IUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID2IUS2ID2

        Create a new object of the class itkMaskNegatedImageFilterID2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID2IUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID2IUS2ID2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID2IUS2ID2_swigregister(itkMaskNegatedImageFilterID2IUS2ID2)

def itkMaskNegatedImageFilterID3ISS3ID3_New():
    return itkMaskNegatedImageFilterID3ISS3ID3.New()

class itkMaskNegatedImageFilterID3ISS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3):
    r"""Proxy of C++ itkMaskNegatedImageFilterID3ISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID3ISS3ID3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID3ISS3ID3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID3ISS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID3ISS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID3ISS3ID3

        Create a new object of the class itkMaskNegatedImageFilterID3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID3ISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID3ISS3ID3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3ISS3ID3_swigregister(itkMaskNegatedImageFilterID3ISS3ID3)

def itkMaskNegatedImageFilterID3IUC3ID3_New():
    return itkMaskNegatedImageFilterID3IUC3ID3.New()

class itkMaskNegatedImageFilterID3IUC3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3):
    r"""Proxy of C++ itkMaskNegatedImageFilterID3IUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID3IUC3ID3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID3IUC3ID3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID3IUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID3IUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID3IUC3ID3

        Create a new object of the class itkMaskNegatedImageFilterID3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID3IUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID3IUC3ID3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUC3ID3_swigregister(itkMaskNegatedImageFilterID3IUC3ID3)

def itkMaskNegatedImageFilterID3IUS3ID3_New():
    return itkMaskNegatedImageFilterID3IUS3ID3.New()

class itkMaskNegatedImageFilterID3IUS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3):
    r"""Proxy of C++ itkMaskNegatedImageFilterID3IUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID3IUS3ID3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID3IUS3ID3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID3IUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID3IUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID3IUS3ID3

        Create a new object of the class itkMaskNegatedImageFilterID3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID3IUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID3IUS3ID3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID3IUS3ID3_swigregister(itkMaskNegatedImageFilterID3IUS3ID3)

def itkMaskNegatedImageFilterID4ISS4ID4_New():
    return itkMaskNegatedImageFilterID4ISS4ID4.New()

class itkMaskNegatedImageFilterID4ISS4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4ISS4ID4):
    r"""Proxy of C++ itkMaskNegatedImageFilterID4ISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID4ISS4ID4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID4ISS4ID4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID4ISS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID4ISS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID4ISS4ID4

        Create a new object of the class itkMaskNegatedImageFilterID4ISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID4ISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID4ISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID4ISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID4ISS4ID4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4ISS4ID4_swigregister(itkMaskNegatedImageFilterID4ISS4ID4)

def itkMaskNegatedImageFilterID4IUC4ID4_New():
    return itkMaskNegatedImageFilterID4IUC4ID4.New()

class itkMaskNegatedImageFilterID4IUC4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4IUC4ID4):
    r"""Proxy of C++ itkMaskNegatedImageFilterID4IUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID4IUC4ID4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID4IUC4ID4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID4IUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID4IUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID4IUC4ID4

        Create a new object of the class itkMaskNegatedImageFilterID4IUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID4IUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID4IUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID4IUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID4IUC4ID4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUC4ID4_swigregister(itkMaskNegatedImageFilterID4IUC4ID4)

def itkMaskNegatedImageFilterID4IUS4ID4_New():
    return itkMaskNegatedImageFilterID4IUS4ID4.New()

class itkMaskNegatedImageFilterID4IUS4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4IUS4ID4):
    r"""Proxy of C++ itkMaskNegatedImageFilterID4IUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterID4IUS4ID4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterID4IUS4ID4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterID4IUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterID4IUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterID4IUS4ID4

        Create a new object of the class itkMaskNegatedImageFilterID4IUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterID4IUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterID4IUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterID4IUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterID4IUS4ID4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterID4IUS4ID4_swigregister(itkMaskNegatedImageFilterID4IUS4ID4)

def itkMaskNegatedImageFilterIF2ISS2IF2_New():
    return itkMaskNegatedImageFilterIF2ISS2IF2.New()

class itkMaskNegatedImageFilterIF2ISS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF2ISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF2ISS2IF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF2ISS2IF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF2ISS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF2ISS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF2ISS2IF2

        Create a new object of the class itkMaskNegatedImageFilterIF2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF2ISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF2ISS2IF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2ISS2IF2_swigregister(itkMaskNegatedImageFilterIF2ISS2IF2)

def itkMaskNegatedImageFilterIF2IUC2IF2_New():
    return itkMaskNegatedImageFilterIF2IUC2IF2.New()

class itkMaskNegatedImageFilterIF2IUC2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF2IUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF2IUC2IF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF2IUC2IF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF2IUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF2IUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF2IUC2IF2

        Create a new object of the class itkMaskNegatedImageFilterIF2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF2IUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF2IUC2IF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUC2IF2_swigregister(itkMaskNegatedImageFilterIF2IUC2IF2)

def itkMaskNegatedImageFilterIF2IUS2IF2_New():
    return itkMaskNegatedImageFilterIF2IUS2IF2.New()

class itkMaskNegatedImageFilterIF2IUS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF2IUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF2IUS2IF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF2IUS2IF2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF2IUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF2IUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF2IUS2IF2

        Create a new object of the class itkMaskNegatedImageFilterIF2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF2IUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF2IUS2IF2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF2IUS2IF2_swigregister(itkMaskNegatedImageFilterIF2IUS2IF2)

def itkMaskNegatedImageFilterIF3ISS3IF3_New():
    return itkMaskNegatedImageFilterIF3ISS3IF3.New()

class itkMaskNegatedImageFilterIF3ISS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF3ISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF3ISS3IF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF3ISS3IF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF3ISS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF3ISS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF3ISS3IF3

        Create a new object of the class itkMaskNegatedImageFilterIF3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF3ISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF3ISS3IF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3ISS3IF3_swigregister(itkMaskNegatedImageFilterIF3ISS3IF3)

def itkMaskNegatedImageFilterIF3IUC3IF3_New():
    return itkMaskNegatedImageFilterIF3IUC3IF3.New()

class itkMaskNegatedImageFilterIF3IUC3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF3IUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF3IUC3IF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF3IUC3IF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF3IUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF3IUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF3IUC3IF3

        Create a new object of the class itkMaskNegatedImageFilterIF3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF3IUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF3IUC3IF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUC3IF3_swigregister(itkMaskNegatedImageFilterIF3IUC3IF3)

def itkMaskNegatedImageFilterIF3IUS3IF3_New():
    return itkMaskNegatedImageFilterIF3IUS3IF3.New()

class itkMaskNegatedImageFilterIF3IUS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF3IUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF3IUS3IF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF3IUS3IF3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF3IUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF3IUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF3IUS3IF3

        Create a new object of the class itkMaskNegatedImageFilterIF3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF3IUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF3IUS3IF3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF3IUS3IF3_swigregister(itkMaskNegatedImageFilterIF3IUS3IF3)

def itkMaskNegatedImageFilterIF4ISS4IF4_New():
    return itkMaskNegatedImageFilterIF4ISS4IF4.New()

class itkMaskNegatedImageFilterIF4ISS4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4ISS4IF4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF4ISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF4ISS4IF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF4ISS4IF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF4ISS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF4ISS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF4ISS4IF4

        Create a new object of the class itkMaskNegatedImageFilterIF4ISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF4ISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF4ISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF4ISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF4ISS4IF4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4ISS4IF4_swigregister(itkMaskNegatedImageFilterIF4ISS4IF4)

def itkMaskNegatedImageFilterIF4IUC4IF4_New():
    return itkMaskNegatedImageFilterIF4IUC4IF4.New()

class itkMaskNegatedImageFilterIF4IUC4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IUC4IF4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF4IUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF4IUC4IF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF4IUC4IF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF4IUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF4IUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF4IUC4IF4

        Create a new object of the class itkMaskNegatedImageFilterIF4IUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF4IUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF4IUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF4IUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF4IUC4IF4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUC4IF4_swigregister(itkMaskNegatedImageFilterIF4IUC4IF4)

def itkMaskNegatedImageFilterIF4IUS4IF4_New():
    return itkMaskNegatedImageFilterIF4IUS4IF4.New()

class itkMaskNegatedImageFilterIF4IUS4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IUS4IF4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIF4IUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIF4IUS4IF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIF4IUS4IF4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIF4IUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIF4IUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIF4IUS4IF4

        Create a new object of the class itkMaskNegatedImageFilterIF4IUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIF4IUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIF4IUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIF4IUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIF4IUS4IF4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIF4IUS4IF4_swigregister(itkMaskNegatedImageFilterIF4IUS4IF4)

def itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_New():
    return itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.New()

class itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2_swigregister(itkMaskNegatedImageFilterIRGBAUC2ISS2IRGBAUC2)

def itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_New():
    return itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.New()

class itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2_swigregister(itkMaskNegatedImageFilterIRGBAUC2IUC2IRGBAUC2)

def itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_New():
    return itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.New()

class itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2_swigregister(itkMaskNegatedImageFilterIRGBAUC2IUS2IRGBAUC2)

def itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_New():
    return itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.New()

class itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3_swigregister(itkMaskNegatedImageFilterIRGBAUC3ISS3IRGBAUC3)

def itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_New():
    return itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.New()

class itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3_swigregister(itkMaskNegatedImageFilterIRGBAUC3IUC3IRGBAUC3)

def itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_New():
    return itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.New()

class itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3_swigregister(itkMaskNegatedImageFilterIRGBAUC3IUS3IRGBAUC3)

def itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_New():
    return itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4.New()

class itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC4ISS4IRGBAUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4_swigregister(itkMaskNegatedImageFilterIRGBAUC4ISS4IRGBAUC4)

def itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_New():
    return itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4.New()

class itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC4IUC4IRGBAUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4_swigregister(itkMaskNegatedImageFilterIRGBAUC4IUC4IRGBAUC4)

def itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_New():
    return itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4.New()

class itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC4IUS4IRGBAUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4

        Create a new object of the class itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4_swigregister(itkMaskNegatedImageFilterIRGBAUC4IUS4IRGBAUC4)

def itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_New():
    return itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.New()

class itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2_swigregister(itkMaskNegatedImageFilterIRGBUC2ISS2IRGBUC2)

def itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_New():
    return itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.New()

class itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2_swigregister(itkMaskNegatedImageFilterIRGBUC2IUC2IRGBUC2)

def itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_New():
    return itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.New()

class itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2_swigregister(itkMaskNegatedImageFilterIRGBUC2IUS2IRGBUC2)

def itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_New():
    return itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.New()

class itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3_swigregister(itkMaskNegatedImageFilterIRGBUC3ISS3IRGBUC3)

def itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_New():
    return itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.New()

class itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3_swigregister(itkMaskNegatedImageFilterIRGBUC3IUC3IRGBUC3)

def itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_New():
    return itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.New()

class itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3_swigregister(itkMaskNegatedImageFilterIRGBUC3IUS3IRGBUC3)

def itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_New():
    return itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4.New()

class itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC4ISS4IRGBUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4_swigregister(itkMaskNegatedImageFilterIRGBUC4ISS4IRGBUC4)

def itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_New():
    return itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4.New()

class itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC4IUC4IRGBUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4_swigregister(itkMaskNegatedImageFilterIRGBUC4IUC4IRGBUC4)

def itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_New():
    return itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4.New()

class itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC4IUS4IRGBUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4

        Create a new object of the class itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4_swigregister(itkMaskNegatedImageFilterIRGBUC4IUS4IRGBUC4)

def itkMaskNegatedImageFilterISS2ISS2ISS2_New():
    return itkMaskNegatedImageFilterISS2ISS2ISS2.New()

class itkMaskNegatedImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS2ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS2ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS2ISS2ISS2

        Create a new object of the class itkMaskNegatedImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS2ISS2ISS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2ISS2ISS2_swigregister(itkMaskNegatedImageFilterISS2ISS2ISS2)

def itkMaskNegatedImageFilterISS2IUC2ISS2_New():
    return itkMaskNegatedImageFilterISS2IUC2ISS2.New()

class itkMaskNegatedImageFilterISS2IUC2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS2IUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS2IUC2ISS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS2IUC2ISS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS2IUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS2IUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS2IUC2ISS2

        Create a new object of the class itkMaskNegatedImageFilterISS2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS2IUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS2IUC2ISS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUC2ISS2_swigregister(itkMaskNegatedImageFilterISS2IUC2ISS2)

def itkMaskNegatedImageFilterISS2IUS2ISS2_New():
    return itkMaskNegatedImageFilterISS2IUS2ISS2.New()

class itkMaskNegatedImageFilterISS2IUS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS2IUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS2IUS2ISS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS2IUS2ISS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS2IUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS2IUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS2IUS2ISS2

        Create a new object of the class itkMaskNegatedImageFilterISS2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS2IUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS2IUS2ISS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS2IUS2ISS2_swigregister(itkMaskNegatedImageFilterISS2IUS2ISS2)

def itkMaskNegatedImageFilterISS3ISS3ISS3_New():
    return itkMaskNegatedImageFilterISS3ISS3ISS3.New()

class itkMaskNegatedImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS3ISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS3ISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS3ISS3ISS3

        Create a new object of the class itkMaskNegatedImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS3ISS3ISS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3ISS3ISS3_swigregister(itkMaskNegatedImageFilterISS3ISS3ISS3)

def itkMaskNegatedImageFilterISS3IUC3ISS3_New():
    return itkMaskNegatedImageFilterISS3IUC3ISS3.New()

class itkMaskNegatedImageFilterISS3IUC3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS3IUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS3IUC3ISS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS3IUC3ISS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS3IUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS3IUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS3IUC3ISS3

        Create a new object of the class itkMaskNegatedImageFilterISS3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS3IUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS3IUC3ISS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUC3ISS3_swigregister(itkMaskNegatedImageFilterISS3IUC3ISS3)

def itkMaskNegatedImageFilterISS3IUS3ISS3_New():
    return itkMaskNegatedImageFilterISS3IUS3ISS3.New()

class itkMaskNegatedImageFilterISS3IUS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS3IUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS3IUS3ISS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS3IUS3ISS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS3IUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS3IUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS3IUS3ISS3

        Create a new object of the class itkMaskNegatedImageFilterISS3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS3IUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS3IUS3ISS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS3IUS3ISS3_swigregister(itkMaskNegatedImageFilterISS3IUS3ISS3)

def itkMaskNegatedImageFilterISS4ISS4ISS4_New():
    return itkMaskNegatedImageFilterISS4ISS4ISS4.New()

class itkMaskNegatedImageFilterISS4ISS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4ISS4ISS4):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS4ISS4ISS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS4ISS4ISS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS4ISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS4ISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS4ISS4ISS4

        Create a new object of the class itkMaskNegatedImageFilterISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS4ISS4ISS4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4ISS4ISS4_swigregister(itkMaskNegatedImageFilterISS4ISS4ISS4)

def itkMaskNegatedImageFilterISS4IUC4ISS4_New():
    return itkMaskNegatedImageFilterISS4IUC4ISS4.New()

class itkMaskNegatedImageFilterISS4IUC4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4IUC4ISS4):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS4IUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS4IUC4ISS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS4IUC4ISS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS4IUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS4IUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS4IUC4ISS4

        Create a new object of the class itkMaskNegatedImageFilterISS4IUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS4IUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS4IUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS4IUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS4IUC4ISS4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUC4ISS4_swigregister(itkMaskNegatedImageFilterISS4IUC4ISS4)

def itkMaskNegatedImageFilterISS4IUS4ISS4_New():
    return itkMaskNegatedImageFilterISS4IUS4ISS4.New()

class itkMaskNegatedImageFilterISS4IUS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4IUS4ISS4):
    r"""Proxy of C++ itkMaskNegatedImageFilterISS4IUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterISS4IUS4ISS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterISS4IUS4ISS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterISS4IUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterISS4IUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterISS4IUS4ISS4

        Create a new object of the class itkMaskNegatedImageFilterISS4IUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterISS4IUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterISS4IUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterISS4IUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterISS4IUS4ISS4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterISS4IUS4ISS4_swigregister(itkMaskNegatedImageFilterISS4IUS4ISS4)

def itkMaskNegatedImageFilterIUC2ISS2IUC2_New():
    return itkMaskNegatedImageFilterIUC2ISS2IUC2.New()

class itkMaskNegatedImageFilterIUC2ISS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC2ISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC2ISS2IUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC2ISS2IUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC2ISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC2ISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC2ISS2IUC2

        Create a new object of the class itkMaskNegatedImageFilterIUC2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC2ISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC2ISS2IUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2ISS2IUC2_swigregister(itkMaskNegatedImageFilterIUC2ISS2IUC2)

def itkMaskNegatedImageFilterIUC2IUC2IUC2_New():
    return itkMaskNegatedImageFilterIUC2IUC2IUC2.New()

class itkMaskNegatedImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC2IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC2IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC2IUC2IUC2

        Create a new object of the class itkMaskNegatedImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC2IUC2IUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUC2IUC2_swigregister(itkMaskNegatedImageFilterIUC2IUC2IUC2)

def itkMaskNegatedImageFilterIUC2IUS2IUC2_New():
    return itkMaskNegatedImageFilterIUC2IUS2IUC2.New()

class itkMaskNegatedImageFilterIUC2IUS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC2IUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC2IUS2IUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC2IUS2IUC2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC2IUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC2IUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC2IUS2IUC2

        Create a new object of the class itkMaskNegatedImageFilterIUC2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC2IUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC2IUS2IUC2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC2IUS2IUC2_swigregister(itkMaskNegatedImageFilterIUC2IUS2IUC2)

def itkMaskNegatedImageFilterIUC3ISS3IUC3_New():
    return itkMaskNegatedImageFilterIUC3ISS3IUC3.New()

class itkMaskNegatedImageFilterIUC3ISS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC3ISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC3ISS3IUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC3ISS3IUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC3ISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC3ISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC3ISS3IUC3

        Create a new object of the class itkMaskNegatedImageFilterIUC3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC3ISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC3ISS3IUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3ISS3IUC3_swigregister(itkMaskNegatedImageFilterIUC3ISS3IUC3)

def itkMaskNegatedImageFilterIUC3IUC3IUC3_New():
    return itkMaskNegatedImageFilterIUC3IUC3IUC3.New()

class itkMaskNegatedImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC3IUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC3IUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC3IUC3IUC3

        Create a new object of the class itkMaskNegatedImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC3IUC3IUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUC3IUC3_swigregister(itkMaskNegatedImageFilterIUC3IUC3IUC3)

def itkMaskNegatedImageFilterIUC3IUS3IUC3_New():
    return itkMaskNegatedImageFilterIUC3IUS3IUC3.New()

class itkMaskNegatedImageFilterIUC3IUS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC3IUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC3IUS3IUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC3IUS3IUC3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC3IUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC3IUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC3IUS3IUC3

        Create a new object of the class itkMaskNegatedImageFilterIUC3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC3IUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC3IUS3IUC3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC3IUS3IUC3_swigregister(itkMaskNegatedImageFilterIUC3IUS3IUC3)

def itkMaskNegatedImageFilterIUC4ISS4IUC4_New():
    return itkMaskNegatedImageFilterIUC4ISS4IUC4.New()

class itkMaskNegatedImageFilterIUC4ISS4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4ISS4IUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC4ISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC4ISS4IUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC4ISS4IUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC4ISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC4ISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC4ISS4IUC4

        Create a new object of the class itkMaskNegatedImageFilterIUC4ISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC4ISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC4ISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC4ISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC4ISS4IUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4ISS4IUC4_swigregister(itkMaskNegatedImageFilterIUC4ISS4IUC4)

def itkMaskNegatedImageFilterIUC4IUC4IUC4_New():
    return itkMaskNegatedImageFilterIUC4IUC4IUC4.New()

class itkMaskNegatedImageFilterIUC4IUC4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUC4IUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC4IUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC4IUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC4IUC4IUC4

        Create a new object of the class itkMaskNegatedImageFilterIUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC4IUC4IUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUC4IUC4_swigregister(itkMaskNegatedImageFilterIUC4IUC4IUC4)

def itkMaskNegatedImageFilterIUC4IUS4IUC4_New():
    return itkMaskNegatedImageFilterIUC4IUS4IUC4.New()

class itkMaskNegatedImageFilterIUC4IUS4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUS4IUC4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUC4IUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUC4IUS4IUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUC4IUS4IUC4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUC4IUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUC4IUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUC4IUS4IUC4

        Create a new object of the class itkMaskNegatedImageFilterIUC4IUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUC4IUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUC4IUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUC4IUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUC4IUS4IUC4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUC4IUS4IUC4_swigregister(itkMaskNegatedImageFilterIUC4IUS4IUC4)

def itkMaskNegatedImageFilterIUS2ISS2IUS2_New():
    return itkMaskNegatedImageFilterIUS2ISS2IUS2.New()

class itkMaskNegatedImageFilterIUS2ISS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS2ISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS2ISS2IUS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS2ISS2IUS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS2ISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS2ISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS2ISS2IUS2

        Create a new object of the class itkMaskNegatedImageFilterIUS2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS2ISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS2ISS2IUS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2ISS2IUS2_swigregister(itkMaskNegatedImageFilterIUS2ISS2IUS2)

def itkMaskNegatedImageFilterIUS2IUC2IUS2_New():
    return itkMaskNegatedImageFilterIUS2IUC2IUS2.New()

class itkMaskNegatedImageFilterIUS2IUC2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS2IUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS2IUC2IUS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS2IUC2IUS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS2IUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS2IUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS2IUC2IUS2

        Create a new object of the class itkMaskNegatedImageFilterIUS2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS2IUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS2IUC2IUS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUC2IUS2_swigregister(itkMaskNegatedImageFilterIUS2IUC2IUS2)

def itkMaskNegatedImageFilterIUS2IUS2IUS2_New():
    return itkMaskNegatedImageFilterIUS2IUS2IUS2.New()

class itkMaskNegatedImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS2IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS2IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS2IUS2IUS2

        Create a new object of the class itkMaskNegatedImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS2IUS2IUS2 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS2IUS2IUS2_swigregister(itkMaskNegatedImageFilterIUS2IUS2IUS2)

def itkMaskNegatedImageFilterIUS3ISS3IUS3_New():
    return itkMaskNegatedImageFilterIUS3ISS3IUS3.New()

class itkMaskNegatedImageFilterIUS3ISS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS3ISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS3ISS3IUS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS3ISS3IUS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS3ISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS3ISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS3ISS3IUS3

        Create a new object of the class itkMaskNegatedImageFilterIUS3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS3ISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS3ISS3IUS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3ISS3IUS3_swigregister(itkMaskNegatedImageFilterIUS3ISS3IUS3)

def itkMaskNegatedImageFilterIUS3IUC3IUS3_New():
    return itkMaskNegatedImageFilterIUS3IUC3IUS3.New()

class itkMaskNegatedImageFilterIUS3IUC3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS3IUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS3IUC3IUS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS3IUC3IUS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS3IUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS3IUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS3IUC3IUS3

        Create a new object of the class itkMaskNegatedImageFilterIUS3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS3IUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS3IUC3IUS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUC3IUS3_swigregister(itkMaskNegatedImageFilterIUS3IUC3IUS3)

def itkMaskNegatedImageFilterIUS3IUS3IUS3_New():
    return itkMaskNegatedImageFilterIUS3IUS3IUS3.New()

class itkMaskNegatedImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS3IUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS3IUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS3IUS3IUS3

        Create a new object of the class itkMaskNegatedImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS3IUS3IUS3 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS3IUS3IUS3_swigregister(itkMaskNegatedImageFilterIUS3IUS3IUS3)

def itkMaskNegatedImageFilterIUS4ISS4IUS4_New():
    return itkMaskNegatedImageFilterIUS4ISS4IUS4.New()

class itkMaskNegatedImageFilterIUS4ISS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4ISS4IUS4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS4ISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS4ISS4IUS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS4ISS4IUS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS4ISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS4ISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS4ISS4IUS4

        Create a new object of the class itkMaskNegatedImageFilterIUS4ISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS4ISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS4ISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS4ISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS4ISS4IUS4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4ISS4IUS4_swigregister(itkMaskNegatedImageFilterIUS4ISS4IUS4)

def itkMaskNegatedImageFilterIUS4IUC4IUS4_New():
    return itkMaskNegatedImageFilterIUS4IUC4IUS4.New()

class itkMaskNegatedImageFilterIUS4IUC4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUC4IUS4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS4IUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS4IUC4IUS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS4IUC4IUS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS4IUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS4IUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS4IUC4IUS4

        Create a new object of the class itkMaskNegatedImageFilterIUS4IUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS4IUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS4IUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS4IUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS4IUC4IUS4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUC4IUS4_swigregister(itkMaskNegatedImageFilterIUS4IUC4IUS4)

def itkMaskNegatedImageFilterIUS4IUS4IUS4_New():
    return itkMaskNegatedImageFilterIUS4IUS4IUS4.New()

class itkMaskNegatedImageFilterIUS4IUS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUS4IUS4):
    r"""Proxy of C++ itkMaskNegatedImageFilterIUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIUS4IUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIUS4IUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIUS4IUS4IUS4

        Create a new object of the class itkMaskNegatedImageFilterIUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIUS4IUS4IUS4 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIUS4IUS4IUS4_swigregister(itkMaskNegatedImageFilterIUS4IUS4IUS4)

def itkMaskNegatedImageFilterIVF22ISS2IVF22_New():
    return itkMaskNegatedImageFilterIVF22ISS2IVF22.New()

class itkMaskNegatedImageFilterIVF22ISS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF22ISS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF22ISS2IVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF22ISS2IVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF22ISS2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF22ISS2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF22ISS2IVF22

        Create a new object of the class itkMaskNegatedImageFilterIVF22ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF22ISS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF22ISS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF22ISS2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF22ISS2IVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22ISS2IVF22_swigregister(itkMaskNegatedImageFilterIVF22ISS2IVF22)

def itkMaskNegatedImageFilterIVF22IUC2IVF22_New():
    return itkMaskNegatedImageFilterIVF22IUC2IVF22.New()

class itkMaskNegatedImageFilterIVF22IUC2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF22IUC2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF22IUC2IVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF22IUC2IVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF22IUC2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF22IUC2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF22IUC2IVF22

        Create a new object of the class itkMaskNegatedImageFilterIVF22IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF22IUC2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF22IUC2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF22IUC2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF22IUC2IVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUC2IVF22_swigregister(itkMaskNegatedImageFilterIVF22IUC2IVF22)

def itkMaskNegatedImageFilterIVF22IUS2IVF22_New():
    return itkMaskNegatedImageFilterIVF22IUS2IVF22.New()

class itkMaskNegatedImageFilterIVF22IUS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF22IUS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF22IUS2IVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF22IUS2IVF22_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF22IUS2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF22IUS2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF22IUS2IVF22

        Create a new object of the class itkMaskNegatedImageFilterIVF22IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF22IUS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF22IUS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF22IUS2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF22IUS2IVF22 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF22IUS2IVF22_swigregister(itkMaskNegatedImageFilterIVF22IUS2IVF22)

def itkMaskNegatedImageFilterIVF23ISS3IVF23_New():
    return itkMaskNegatedImageFilterIVF23ISS3IVF23.New()

class itkMaskNegatedImageFilterIVF23ISS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF23ISS3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF23ISS3IVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF23ISS3IVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF23ISS3IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF23ISS3IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF23ISS3IVF23

        Create a new object of the class itkMaskNegatedImageFilterIVF23ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF23ISS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF23ISS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF23ISS3IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF23ISS3IVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23ISS3IVF23_swigregister(itkMaskNegatedImageFilterIVF23ISS3IVF23)

def itkMaskNegatedImageFilterIVF23IUC3IVF23_New():
    return itkMaskNegatedImageFilterIVF23IUC3IVF23.New()

class itkMaskNegatedImageFilterIVF23IUC3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF23IUC3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF23IUC3IVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF23IUC3IVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF23IUC3IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF23IUC3IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF23IUC3IVF23

        Create a new object of the class itkMaskNegatedImageFilterIVF23IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF23IUC3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF23IUC3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF23IUC3IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF23IUC3IVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUC3IVF23_swigregister(itkMaskNegatedImageFilterIVF23IUC3IVF23)

def itkMaskNegatedImageFilterIVF23IUS3IVF23_New():
    return itkMaskNegatedImageFilterIVF23IUS3IVF23.New()

class itkMaskNegatedImageFilterIVF23IUS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF23IUS3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF23IUS3IVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF23IUS3IVF23_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF23IUS3IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF23IUS3IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF23IUS3IVF23

        Create a new object of the class itkMaskNegatedImageFilterIVF23IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF23IUS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF23IUS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF23IUS3IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF23IUS3IVF23 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF23IUS3IVF23_swigregister(itkMaskNegatedImageFilterIVF23IUS3IVF23)

def itkMaskNegatedImageFilterIVF24ISS4IVF24_New():
    return itkMaskNegatedImageFilterIVF24ISS4IVF24.New()

class itkMaskNegatedImageFilterIVF24ISS4IVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF24ISS4IVF24):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF24ISS4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF24ISS4IVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF24ISS4IVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF24ISS4IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF24ISS4IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF24ISS4IVF24

        Create a new object of the class itkMaskNegatedImageFilterIVF24ISS4IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF24ISS4IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF24ISS4IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF24ISS4IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF24ISS4IVF24 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24ISS4IVF24_swigregister(itkMaskNegatedImageFilterIVF24ISS4IVF24)

def itkMaskNegatedImageFilterIVF24IUC4IVF24_New():
    return itkMaskNegatedImageFilterIVF24IUC4IVF24.New()

class itkMaskNegatedImageFilterIVF24IUC4IVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF24IUC4IVF24):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF24IUC4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF24IUC4IVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF24IUC4IVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF24IUC4IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF24IUC4IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF24IUC4IVF24

        Create a new object of the class itkMaskNegatedImageFilterIVF24IUC4IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF24IUC4IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF24IUC4IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF24IUC4IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF24IUC4IVF24 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUC4IVF24_swigregister(itkMaskNegatedImageFilterIVF24IUC4IVF24)

def itkMaskNegatedImageFilterIVF24IUS4IVF24_New():
    return itkMaskNegatedImageFilterIVF24IUS4IVF24.New()

class itkMaskNegatedImageFilterIVF24IUS4IVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF24IUS4IVF24):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF24IUS4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF24IUS4IVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF24IUS4IVF24_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF24IUS4IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF24IUS4IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF24IUS4IVF24

        Create a new object of the class itkMaskNegatedImageFilterIVF24IUS4IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF24IUS4IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF24IUS4IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF24IUS4IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF24IUS4IVF24 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF24IUS4IVF24_swigregister(itkMaskNegatedImageFilterIVF24IUS4IVF24)

def itkMaskNegatedImageFilterIVF32ISS2IVF32_New():
    return itkMaskNegatedImageFilterIVF32ISS2IVF32.New()

class itkMaskNegatedImageFilterIVF32ISS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF32ISS2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF32ISS2IVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF32ISS2IVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF32ISS2IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF32ISS2IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF32ISS2IVF32

        Create a new object of the class itkMaskNegatedImageFilterIVF32ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF32ISS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF32ISS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF32ISS2IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF32ISS2IVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32ISS2IVF32_swigregister(itkMaskNegatedImageFilterIVF32ISS2IVF32)

def itkMaskNegatedImageFilterIVF32IUC2IVF32_New():
    return itkMaskNegatedImageFilterIVF32IUC2IVF32.New()

class itkMaskNegatedImageFilterIVF32IUC2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF32IUC2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF32IUC2IVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF32IUC2IVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF32IUC2IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF32IUC2IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF32IUC2IVF32

        Create a new object of the class itkMaskNegatedImageFilterIVF32IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF32IUC2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF32IUC2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF32IUC2IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF32IUC2IVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUC2IVF32_swigregister(itkMaskNegatedImageFilterIVF32IUC2IVF32)

def itkMaskNegatedImageFilterIVF32IUS2IVF32_New():
    return itkMaskNegatedImageFilterIVF32IUS2IVF32.New()

class itkMaskNegatedImageFilterIVF32IUS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF32IUS2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF32IUS2IVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF32IUS2IVF32_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF32IUS2IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF32IUS2IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF32IUS2IVF32

        Create a new object of the class itkMaskNegatedImageFilterIVF32IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF32IUS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF32IUS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF32IUS2IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF32IUS2IVF32 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF32IUS2IVF32_swigregister(itkMaskNegatedImageFilterIVF32IUS2IVF32)

def itkMaskNegatedImageFilterIVF33ISS3IVF33_New():
    return itkMaskNegatedImageFilterIVF33ISS3IVF33.New()

class itkMaskNegatedImageFilterIVF33ISS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF33ISS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF33ISS3IVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF33ISS3IVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF33ISS3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF33ISS3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF33ISS3IVF33

        Create a new object of the class itkMaskNegatedImageFilterIVF33ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF33ISS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF33ISS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF33ISS3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF33ISS3IVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33ISS3IVF33_swigregister(itkMaskNegatedImageFilterIVF33ISS3IVF33)

def itkMaskNegatedImageFilterIVF33IUC3IVF33_New():
    return itkMaskNegatedImageFilterIVF33IUC3IVF33.New()

class itkMaskNegatedImageFilterIVF33IUC3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF33IUC3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF33IUC3IVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF33IUC3IVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF33IUC3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF33IUC3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF33IUC3IVF33

        Create a new object of the class itkMaskNegatedImageFilterIVF33IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF33IUC3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF33IUC3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF33IUC3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF33IUC3IVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUC3IVF33_swigregister(itkMaskNegatedImageFilterIVF33IUC3IVF33)

def itkMaskNegatedImageFilterIVF33IUS3IVF33_New():
    return itkMaskNegatedImageFilterIVF33IUS3IVF33.New()

class itkMaskNegatedImageFilterIVF33IUS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF33IUS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF33IUS3IVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF33IUS3IVF33_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF33IUS3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF33IUS3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF33IUS3IVF33

        Create a new object of the class itkMaskNegatedImageFilterIVF33IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF33IUS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF33IUS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF33IUS3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF33IUS3IVF33 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF33IUS3IVF33_swigregister(itkMaskNegatedImageFilterIVF33IUS3IVF33)

def itkMaskNegatedImageFilterIVF34ISS4IVF34_New():
    return itkMaskNegatedImageFilterIVF34ISS4IVF34.New()

class itkMaskNegatedImageFilterIVF34ISS4IVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF34ISS4IVF34):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF34ISS4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF34ISS4IVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF34ISS4IVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF34ISS4IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF34ISS4IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF34ISS4IVF34

        Create a new object of the class itkMaskNegatedImageFilterIVF34ISS4IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF34ISS4IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF34ISS4IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF34ISS4IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF34ISS4IVF34 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34ISS4IVF34_swigregister(itkMaskNegatedImageFilterIVF34ISS4IVF34)

def itkMaskNegatedImageFilterIVF34IUC4IVF34_New():
    return itkMaskNegatedImageFilterIVF34IUC4IVF34.New()

class itkMaskNegatedImageFilterIVF34IUC4IVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF34IUC4IVF34):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF34IUC4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF34IUC4IVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF34IUC4IVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF34IUC4IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF34IUC4IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF34IUC4IVF34

        Create a new object of the class itkMaskNegatedImageFilterIVF34IUC4IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF34IUC4IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF34IUC4IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF34IUC4IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF34IUC4IVF34 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUC4IVF34_swigregister(itkMaskNegatedImageFilterIVF34IUC4IVF34)

def itkMaskNegatedImageFilterIVF34IUS4IVF34_New():
    return itkMaskNegatedImageFilterIVF34IUS4IVF34.New()

class itkMaskNegatedImageFilterIVF34IUS4IVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF34IUS4IVF34):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF34IUS4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF34IUS4IVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF34IUS4IVF34_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF34IUS4IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF34IUS4IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF34IUS4IVF34

        Create a new object of the class itkMaskNegatedImageFilterIVF34IUS4IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF34IUS4IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF34IUS4IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF34IUS4IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF34IUS4IVF34 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF34IUS4IVF34_swigregister(itkMaskNegatedImageFilterIVF34IUS4IVF34)

def itkMaskNegatedImageFilterIVF42ISS2IVF42_New():
    return itkMaskNegatedImageFilterIVF42ISS2IVF42.New()

class itkMaskNegatedImageFilterIVF42ISS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF42ISS2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF42ISS2IVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF42ISS2IVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF42ISS2IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF42ISS2IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF42ISS2IVF42

        Create a new object of the class itkMaskNegatedImageFilterIVF42ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF42ISS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF42ISS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF42ISS2IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF42ISS2IVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42ISS2IVF42_swigregister(itkMaskNegatedImageFilterIVF42ISS2IVF42)

def itkMaskNegatedImageFilterIVF42IUC2IVF42_New():
    return itkMaskNegatedImageFilterIVF42IUC2IVF42.New()

class itkMaskNegatedImageFilterIVF42IUC2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF42IUC2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF42IUC2IVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF42IUC2IVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF42IUC2IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF42IUC2IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF42IUC2IVF42

        Create a new object of the class itkMaskNegatedImageFilterIVF42IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF42IUC2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF42IUC2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF42IUC2IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF42IUC2IVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUC2IVF42_swigregister(itkMaskNegatedImageFilterIVF42IUC2IVF42)

def itkMaskNegatedImageFilterIVF42IUS2IVF42_New():
    return itkMaskNegatedImageFilterIVF42IUS2IVF42.New()

class itkMaskNegatedImageFilterIVF42IUS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF42IUS2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF42IUS2IVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF42IUS2IVF42_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF42IUS2IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF42IUS2IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF42IUS2IVF42

        Create a new object of the class itkMaskNegatedImageFilterIVF42IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF42IUS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF42IUS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF42IUS2IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF42IUS2IVF42 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF42IUS2IVF42_swigregister(itkMaskNegatedImageFilterIVF42IUS2IVF42)

def itkMaskNegatedImageFilterIVF43ISS3IVF43_New():
    return itkMaskNegatedImageFilterIVF43ISS3IVF43.New()

class itkMaskNegatedImageFilterIVF43ISS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF43ISS3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF43ISS3IVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF43ISS3IVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF43ISS3IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF43ISS3IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF43ISS3IVF43

        Create a new object of the class itkMaskNegatedImageFilterIVF43ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF43ISS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF43ISS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF43ISS3IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF43ISS3IVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43ISS3IVF43_swigregister(itkMaskNegatedImageFilterIVF43ISS3IVF43)

def itkMaskNegatedImageFilterIVF43IUC3IVF43_New():
    return itkMaskNegatedImageFilterIVF43IUC3IVF43.New()

class itkMaskNegatedImageFilterIVF43IUC3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF43IUC3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF43IUC3IVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF43IUC3IVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF43IUC3IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF43IUC3IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF43IUC3IVF43

        Create a new object of the class itkMaskNegatedImageFilterIVF43IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF43IUC3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF43IUC3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF43IUC3IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF43IUC3IVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUC3IVF43_swigregister(itkMaskNegatedImageFilterIVF43IUC3IVF43)

def itkMaskNegatedImageFilterIVF43IUS3IVF43_New():
    return itkMaskNegatedImageFilterIVF43IUS3IVF43.New()

class itkMaskNegatedImageFilterIVF43IUS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF43IUS3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF43IUS3IVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF43IUS3IVF43_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF43IUS3IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF43IUS3IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF43IUS3IVF43

        Create a new object of the class itkMaskNegatedImageFilterIVF43IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF43IUS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF43IUS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF43IUS3IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF43IUS3IVF43 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF43IUS3IVF43_swigregister(itkMaskNegatedImageFilterIVF43IUS3IVF43)

def itkMaskNegatedImageFilterIVF44ISS4IVF44_New():
    return itkMaskNegatedImageFilterIVF44ISS4IVF44.New()

class itkMaskNegatedImageFilterIVF44ISS4IVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF44ISS4IVF44):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF44ISS4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF44ISS4IVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF44ISS4IVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF44ISS4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF44ISS4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF44ISS4IVF44

        Create a new object of the class itkMaskNegatedImageFilterIVF44ISS4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF44ISS4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF44ISS4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF44ISS4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF44ISS4IVF44 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44ISS4IVF44_swigregister(itkMaskNegatedImageFilterIVF44ISS4IVF44)

def itkMaskNegatedImageFilterIVF44IUC4IVF44_New():
    return itkMaskNegatedImageFilterIVF44IUC4IVF44.New()

class itkMaskNegatedImageFilterIVF44IUC4IVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF44IUC4IVF44):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF44IUC4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF44IUC4IVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF44IUC4IVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF44IUC4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF44IUC4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF44IUC4IVF44

        Create a new object of the class itkMaskNegatedImageFilterIVF44IUC4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF44IUC4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF44IUC4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF44IUC4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF44IUC4IVF44 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUC4IVF44_swigregister(itkMaskNegatedImageFilterIVF44IUC4IVF44)

def itkMaskNegatedImageFilterIVF44IUS4IVF44_New():
    return itkMaskNegatedImageFilterIVF44IUS4IVF44.New()

class itkMaskNegatedImageFilterIVF44IUS4IVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF44IUS4IVF44):
    r"""Proxy of C++ itkMaskNegatedImageFilterIVF44IUS4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskNegatedImageFilterIVF44IUS4IVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskNegatedImageFilterIVF44IUS4IVF44_Pointer"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_Clone(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_GetMaskingValue(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_GetMaskImage(self)
    MaskEqualityComparableCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskNegatedImageFilterPython.delete_itkMaskNegatedImageFilterIVF44IUS4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskNegatedImageFilterIVF44IUS4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskNegatedImageFilterIVF44IUS4IVF44

        Create a new object of the class itkMaskNegatedImageFilterIVF44IUS4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskNegatedImageFilterIVF44IUS4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskNegatedImageFilterIVF44IUS4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskNegatedImageFilterIVF44IUS4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskNegatedImageFilterIVF44IUS4IVF44 in _itkMaskNegatedImageFilterPython:
_itkMaskNegatedImageFilterPython.itkMaskNegatedImageFilterIVF44IUS4IVF44_swigregister(itkMaskNegatedImageFilterIVF44IUS4IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def mask_negated_image_filter(*args: itkt.ImageLike,  outside_value=..., masking_value: int=..., mask_image: itkt.Image=..., constant1=..., constant2: int=..., constant: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MaskNegatedImageFilter"""
    import itk

    kwarg_typehints = { 'outside_value':outside_value,'masking_value':masking_value,'mask_image':mask_image,'constant1':constant1,'constant2':constant2,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MaskNegatedImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mask_negated_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.MaskNegatedImageFilter
    mask_negated_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mask_negated_image_filter.__doc__ = filter_object.__doc__



