# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKConvolutionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskedFFTNormalizedCorrelationImageFilterPython
else:
    import _itkMaskedFFTNormalizedCorrelationImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterID2ID2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterID2ID2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterID2ID2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2ID2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterID2ID2)

def itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterID2IF2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterID2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageD2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterID2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterID2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterID2IF2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterID2IF2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID2IF2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterID2IF2)

def itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterID3ID3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterID3ID3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterID3ID3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3ID3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterID3ID3)

def itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterID3IF3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterID3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageD3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterID3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterID3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterID3IF3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterID3IF3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID3IF3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterID3IF3)

def itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterID4ID4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterID4ID4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterID4ID4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4ID4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterID4ID4)

def itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterID4IF4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterID4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IF4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageD4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterID4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterID4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterID4IF4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterID4IF4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterID4IF4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterID4IF4)

def itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIF2ID2)

def itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageF2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIF2IF2)

def itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIF3ID3)

def itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageF3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIF3IF3)

def itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIF4ID4)

def itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageF4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIF4IF4)

def itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterISS2ID2)

def itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageSS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterISS2IF2)

def itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterISS3ID3)

def itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageSS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterISS3IF3)

def itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterISS4ID4)

def itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageSS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterISS4IF4)

def itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUC2ID2)

def itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUC2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUC2IF2)

def itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUC3ID3)

def itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUC3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUC3IF3)

def itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUC4ID4)

def itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUC4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUC4IF4)

def itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUS2ID2)

def itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUS2"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUS2IF2)

def itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUS3ID3)

def itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUS3"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUS3IF3)

def itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> double"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUS4ID4)

def itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_New():
    return itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4.New()

class itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4):
    r"""Proxy of C++ itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_Pointer"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_Clone(self)

    def SetFixedImage(self, _arg):
        r"""
        SetFixedImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_SetFixedImage(self, _arg)

    def GetFixedImage(self):
        r"""GetFixedImage(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetFixedImage(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetMovingImage(self)

    def SetFixedImageMask(self, _arg):
        r"""
        SetFixedImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_SetFixedImageMask(self, _arg)

    def GetFixedImageMask(self):
        r"""GetFixedImageMask(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetFixedImageMask(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkImageUS4"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetMovingImageMask(self)

    def SetRequiredNumberOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredNumberOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: unsigned long long

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_SetRequiredNumberOfOverlappingPixels(self, _arg)

    def GetRequiredNumberOfOverlappingPixels(self):
        r"""GetRequiredNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetRequiredNumberOfOverlappingPixels(self)

    def GetRequiredFractionOfOverlappingPixels(self):
        r"""GetRequiredFractionOfOverlappingPixels(self) -> float"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetRequiredFractionOfOverlappingPixels(self)

    def SetRequiredFractionOfOverlappingPixels(self, _arg):
        r"""
        SetRequiredFractionOfOverlappingPixels(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_SetRequiredFractionOfOverlappingPixels(self, _arg)

    def GetMaximumNumberOfOverlappingPixels(self):
        r"""GetMaximumNumberOfOverlappingPixels(self) -> unsigned long long"""
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_GetMaximumNumberOfOverlappingPixels(self)
    OutputPixelTypeIsFloatingPointCheck = _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_OutputPixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkMaskedFFTNormalizedCorrelationImageFilterPython.delete_itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4

        Create a new object of the class itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4 in _itkMaskedFFTNormalizedCorrelationImageFilterPython:
_itkMaskedFFTNormalizedCorrelationImageFilterPython.itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4_swigregister(itkMaskedFFTNormalizedCorrelationImageFilterIUS4IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def masked_fft_normalized_correlation_image_filter(*args: itkt.ImageLike,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., fixed_image_mask: itkt.Image=..., moving_image_mask: itkt.Image=..., required_number_of_overlapping_pixels: int=..., required_fraction_of_overlapping_pixels: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MaskedFFTNormalizedCorrelationImageFilter"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'fixed_image_mask':fixed_image_mask,'moving_image_mask':moving_image_mask,'required_number_of_overlapping_pixels':required_number_of_overlapping_pixels,'required_fraction_of_overlapping_pixels':required_fraction_of_overlapping_pixels }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MaskedFFTNormalizedCorrelationImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def masked_fft_normalized_correlation_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKConvolution.MaskedFFTNormalizedCorrelationImageFilter
    masked_fft_normalized_correlation_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    masked_fft_normalized_correlation_image_filter.__doc__ = filter_object.__doc__



