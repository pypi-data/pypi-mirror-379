# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkOtsuThresholdCalculatorPython
else:
    import _itkOtsuThresholdCalculatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBAPixelPython
import itk.itkArrayPython
import itk.itkRGBPixelPython
import itk.itkHistogramPython
import itk.itkSamplePython

def itkOtsuThresholdCalculatorHDD_New():
    return itkOtsuThresholdCalculatorHDD.New()

class itkOtsuThresholdCalculatorHDD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDD):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHDD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHDD_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHDD_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHDD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHDD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHDD

        Create a new object of the class itkOtsuThresholdCalculatorHDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHDD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHDD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHDD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHDD in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDD_swigregister(itkOtsuThresholdCalculatorHDD)

def itkOtsuThresholdCalculatorHDF_New():
    return itkOtsuThresholdCalculatorHDF.New()

class itkOtsuThresholdCalculatorHDF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHDF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHDF_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHDF_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHDF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHDF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHDF

        Create a new object of the class itkOtsuThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHDF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHDF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHDF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHDF in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDF_swigregister(itkOtsuThresholdCalculatorHDF)

def itkOtsuThresholdCalculatorHDSS_New():
    return itkOtsuThresholdCalculatorHDSS.New()

class itkOtsuThresholdCalculatorHDSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHDSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHDSS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHDSS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHDSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHDSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHDSS

        Create a new object of the class itkOtsuThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHDSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHDSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHDSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHDSS in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDSS_swigregister(itkOtsuThresholdCalculatorHDSS)

def itkOtsuThresholdCalculatorHDUC_New():
    return itkOtsuThresholdCalculatorHDUC.New()

class itkOtsuThresholdCalculatorHDUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHDUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHDUC_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHDUC_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHDUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHDUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHDUC

        Create a new object of the class itkOtsuThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHDUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHDUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHDUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHDUC in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUC_swigregister(itkOtsuThresholdCalculatorHDUC)

def itkOtsuThresholdCalculatorHDUS_New():
    return itkOtsuThresholdCalculatorHDUS.New()

class itkOtsuThresholdCalculatorHDUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHDUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHDUS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHDUS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHDUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHDUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHDUS

        Create a new object of the class itkOtsuThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHDUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHDUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHDUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHDUS in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHDUS_swigregister(itkOtsuThresholdCalculatorHDUS)

def itkOtsuThresholdCalculatorHFD_New():
    return itkOtsuThresholdCalculatorHFD.New()

class itkOtsuThresholdCalculatorHFD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFD):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHFD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHFD_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHFD_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHFD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHFD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHFD

        Create a new object of the class itkOtsuThresholdCalculatorHFD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHFD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHFD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHFD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHFD in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFD_swigregister(itkOtsuThresholdCalculatorHFD)

def itkOtsuThresholdCalculatorHFF_New():
    return itkOtsuThresholdCalculatorHFF.New()

class itkOtsuThresholdCalculatorHFF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHFF_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHFF_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHFF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHFF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHFF

        Create a new object of the class itkOtsuThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHFF in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFF_swigregister(itkOtsuThresholdCalculatorHFF)

def itkOtsuThresholdCalculatorHFSS_New():
    return itkOtsuThresholdCalculatorHFSS.New()

class itkOtsuThresholdCalculatorHFSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHFSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHFSS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHFSS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHFSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHFSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHFSS

        Create a new object of the class itkOtsuThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHFSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHFSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHFSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHFSS in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFSS_swigregister(itkOtsuThresholdCalculatorHFSS)

def itkOtsuThresholdCalculatorHFUC_New():
    return itkOtsuThresholdCalculatorHFUC.New()

class itkOtsuThresholdCalculatorHFUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHFUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHFUC_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHFUC_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHFUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHFUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHFUC

        Create a new object of the class itkOtsuThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHFUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHFUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHFUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHFUC in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUC_swigregister(itkOtsuThresholdCalculatorHFUC)

def itkOtsuThresholdCalculatorHFUS_New():
    return itkOtsuThresholdCalculatorHFUS.New()

class itkOtsuThresholdCalculatorHFUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    r"""Proxy of C++ itkOtsuThresholdCalculatorHFUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkOtsuThresholdCalculatorHFUS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkOtsuThresholdCalculatorHFUS_Pointer"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_Clone(self)

    def SetReturnBinMidpoint(self, _arg):
        r"""
        SetReturnBinMidpoint(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_SetReturnBinMidpoint(self, _arg)

    def GetReturnBinMidpoint(self):
        r"""GetReturnBinMidpoint(self) -> bool const &"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_GetReturnBinMidpoint(self)

    def ReturnBinMidpointOn(self):
        r"""ReturnBinMidpointOn(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_ReturnBinMidpointOn(self)

    def ReturnBinMidpointOff(self):
        r"""ReturnBinMidpointOff(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_ReturnBinMidpointOff(self)

    def Compute(self):
        r"""Compute(self)"""
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_Compute(self)
    __swig_destroy__ = _itkOtsuThresholdCalculatorPython.delete_itkOtsuThresholdCalculatorHFUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkOtsuThresholdCalculatorHFUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkOtsuThresholdCalculatorHFUS

        Create a new object of the class itkOtsuThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdCalculatorHFUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdCalculatorHFUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkOtsuThresholdCalculatorHFUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkOtsuThresholdCalculatorHFUS in _itkOtsuThresholdCalculatorPython:
_itkOtsuThresholdCalculatorPython.itkOtsuThresholdCalculatorHFUS_swigregister(itkOtsuThresholdCalculatorHFUS)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def otsu_threshold_calculator(*args,  return_bin_midpoint: bool=...,**kwargs):
    """Functional interface for OtsuThresholdCalculator"""
    import itk

    kwarg_typehints = { 'return_bin_midpoint':return_bin_midpoint }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.OtsuThresholdCalculator.New(*args, **kwargs)

    return instance.__internal_call__()

def otsu_threshold_calculator_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.OtsuThresholdCalculator
    otsu_threshold_calculator.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    otsu_threshold_calculator.__doc__ = filter_object.__doc__



