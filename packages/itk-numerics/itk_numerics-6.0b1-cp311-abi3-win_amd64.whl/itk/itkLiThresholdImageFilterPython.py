# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLiThresholdImageFilterPython
else:
    import _itkLiThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkHistogramThresholdImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToHistogramFilterPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython
import itk.itkImageSinkPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkHistogramThresholdCalculatorPython

def itkLiThresholdImageFilterID2ISS2_New():
    return itkLiThresholdImageFilterID2ISS2.New()

class itkLiThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""Proxy of C++ itkLiThresholdImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID2ISS2

        Create a new object of the class itkLiThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2ISS2_swigregister(itkLiThresholdImageFilterID2ISS2)

def itkLiThresholdImageFilterID2IUC2_New():
    return itkLiThresholdImageFilterID2IUC2.New()

class itkLiThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""Proxy of C++ itkLiThresholdImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID2IUC2

        Create a new object of the class itkLiThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUC2_swigregister(itkLiThresholdImageFilterID2IUC2)

def itkLiThresholdImageFilterID2IUS2_New():
    return itkLiThresholdImageFilterID2IUS2.New()

class itkLiThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""Proxy of C++ itkLiThresholdImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID2IUS2

        Create a new object of the class itkLiThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID2IUS2_swigregister(itkLiThresholdImageFilterID2IUS2)

def itkLiThresholdImageFilterID3ISS3_New():
    return itkLiThresholdImageFilterID3ISS3.New()

class itkLiThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""Proxy of C++ itkLiThresholdImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID3ISS3

        Create a new object of the class itkLiThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3ISS3_swigregister(itkLiThresholdImageFilterID3ISS3)

def itkLiThresholdImageFilterID3IUC3_New():
    return itkLiThresholdImageFilterID3IUC3.New()

class itkLiThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""Proxy of C++ itkLiThresholdImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID3IUC3

        Create a new object of the class itkLiThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUC3_swigregister(itkLiThresholdImageFilterID3IUC3)

def itkLiThresholdImageFilterID3IUS3_New():
    return itkLiThresholdImageFilterID3IUS3.New()

class itkLiThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""Proxy of C++ itkLiThresholdImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID3IUS3

        Create a new object of the class itkLiThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID3IUS3_swigregister(itkLiThresholdImageFilterID3IUS3)

def itkLiThresholdImageFilterID4ISS4_New():
    return itkLiThresholdImageFilterID4ISS4.New()

class itkLiThresholdImageFilterID4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4ISS4):
    r"""Proxy of C++ itkLiThresholdImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4ISS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID4ISS4

        Create a new object of the class itkLiThresholdImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID4ISS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4ISS4_swigregister(itkLiThresholdImageFilterID4ISS4)

def itkLiThresholdImageFilterID4IUC4_New():
    return itkLiThresholdImageFilterID4IUC4.New()

class itkLiThresholdImageFilterID4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUC4):
    r"""Proxy of C++ itkLiThresholdImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUC4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID4IUC4

        Create a new object of the class itkLiThresholdImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID4IUC4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUC4_swigregister(itkLiThresholdImageFilterID4IUC4)

def itkLiThresholdImageFilterID4IUS4_New():
    return itkLiThresholdImageFilterID4IUS4.New()

class itkLiThresholdImageFilterID4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID4IUS4):
    r"""Proxy of C++ itkLiThresholdImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterID4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterID4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterID4IUS4

        Create a new object of the class itkLiThresholdImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterID4IUS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterID4IUS4_swigregister(itkLiThresholdImageFilterID4IUS4)

def itkLiThresholdImageFilterIF2ISS2_New():
    return itkLiThresholdImageFilterIF2ISS2.New()

class itkLiThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""Proxy of C++ itkLiThresholdImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF2ISS2

        Create a new object of the class itkLiThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2ISS2_swigregister(itkLiThresholdImageFilterIF2ISS2)

def itkLiThresholdImageFilterIF2IUC2_New():
    return itkLiThresholdImageFilterIF2IUC2.New()

class itkLiThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""Proxy of C++ itkLiThresholdImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF2IUC2

        Create a new object of the class itkLiThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUC2_swigregister(itkLiThresholdImageFilterIF2IUC2)

def itkLiThresholdImageFilterIF2IUS2_New():
    return itkLiThresholdImageFilterIF2IUS2.New()

class itkLiThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""Proxy of C++ itkLiThresholdImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF2IUS2

        Create a new object of the class itkLiThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF2IUS2_swigregister(itkLiThresholdImageFilterIF2IUS2)

def itkLiThresholdImageFilterIF3ISS3_New():
    return itkLiThresholdImageFilterIF3ISS3.New()

class itkLiThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""Proxy of C++ itkLiThresholdImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF3ISS3

        Create a new object of the class itkLiThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3ISS3_swigregister(itkLiThresholdImageFilterIF3ISS3)

def itkLiThresholdImageFilterIF3IUC3_New():
    return itkLiThresholdImageFilterIF3IUC3.New()

class itkLiThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""Proxy of C++ itkLiThresholdImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF3IUC3

        Create a new object of the class itkLiThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUC3_swigregister(itkLiThresholdImageFilterIF3IUC3)

def itkLiThresholdImageFilterIF3IUS3_New():
    return itkLiThresholdImageFilterIF3IUS3.New()

class itkLiThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""Proxy of C++ itkLiThresholdImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF3IUS3

        Create a new object of the class itkLiThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF3IUS3_swigregister(itkLiThresholdImageFilterIF3IUS3)

def itkLiThresholdImageFilterIF4ISS4_New():
    return itkLiThresholdImageFilterIF4ISS4.New()

class itkLiThresholdImageFilterIF4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4ISS4):
    r"""Proxy of C++ itkLiThresholdImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4ISS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF4ISS4

        Create a new object of the class itkLiThresholdImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF4ISS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4ISS4_swigregister(itkLiThresholdImageFilterIF4ISS4)

def itkLiThresholdImageFilterIF4IUC4_New():
    return itkLiThresholdImageFilterIF4IUC4.New()

class itkLiThresholdImageFilterIF4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUC4):
    r"""Proxy of C++ itkLiThresholdImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUC4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF4IUC4

        Create a new object of the class itkLiThresholdImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF4IUC4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUC4_swigregister(itkLiThresholdImageFilterIF4IUC4)

def itkLiThresholdImageFilterIF4IUS4_New():
    return itkLiThresholdImageFilterIF4IUS4.New()

class itkLiThresholdImageFilterIF4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF4IUS4):
    r"""Proxy of C++ itkLiThresholdImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIF4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIF4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIF4IUS4

        Create a new object of the class itkLiThresholdImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIF4IUS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIF4IUS4_swigregister(itkLiThresholdImageFilterIF4IUS4)

def itkLiThresholdImageFilterISS2ISS2_New():
    return itkLiThresholdImageFilterISS2ISS2.New()

class itkLiThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""Proxy of C++ itkLiThresholdImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS2ISS2

        Create a new object of the class itkLiThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2ISS2_swigregister(itkLiThresholdImageFilterISS2ISS2)

def itkLiThresholdImageFilterISS2IUC2_New():
    return itkLiThresholdImageFilterISS2IUC2.New()

class itkLiThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""Proxy of C++ itkLiThresholdImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS2IUC2

        Create a new object of the class itkLiThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUC2_swigregister(itkLiThresholdImageFilterISS2IUC2)

def itkLiThresholdImageFilterISS2IUS2_New():
    return itkLiThresholdImageFilterISS2IUS2.New()

class itkLiThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""Proxy of C++ itkLiThresholdImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS2IUS2

        Create a new object of the class itkLiThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS2IUS2_swigregister(itkLiThresholdImageFilterISS2IUS2)

def itkLiThresholdImageFilterISS3ISS3_New():
    return itkLiThresholdImageFilterISS3ISS3.New()

class itkLiThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""Proxy of C++ itkLiThresholdImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS3ISS3

        Create a new object of the class itkLiThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3ISS3_swigregister(itkLiThresholdImageFilterISS3ISS3)

def itkLiThresholdImageFilterISS3IUC3_New():
    return itkLiThresholdImageFilterISS3IUC3.New()

class itkLiThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""Proxy of C++ itkLiThresholdImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS3IUC3

        Create a new object of the class itkLiThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUC3_swigregister(itkLiThresholdImageFilterISS3IUC3)

def itkLiThresholdImageFilterISS3IUS3_New():
    return itkLiThresholdImageFilterISS3IUS3.New()

class itkLiThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""Proxy of C++ itkLiThresholdImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS3IUS3

        Create a new object of the class itkLiThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS3IUS3_swigregister(itkLiThresholdImageFilterISS3IUS3)

def itkLiThresholdImageFilterISS4ISS4_New():
    return itkLiThresholdImageFilterISS4ISS4.New()

class itkLiThresholdImageFilterISS4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4ISS4):
    r"""Proxy of C++ itkLiThresholdImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS4ISS4

        Create a new object of the class itkLiThresholdImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS4ISS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4ISS4_swigregister(itkLiThresholdImageFilterISS4ISS4)

def itkLiThresholdImageFilterISS4IUC4_New():
    return itkLiThresholdImageFilterISS4IUC4.New()

class itkLiThresholdImageFilterISS4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUC4):
    r"""Proxy of C++ itkLiThresholdImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUC4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS4IUC4

        Create a new object of the class itkLiThresholdImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS4IUC4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUC4_swigregister(itkLiThresholdImageFilterISS4IUC4)

def itkLiThresholdImageFilterISS4IUS4_New():
    return itkLiThresholdImageFilterISS4IUS4.New()

class itkLiThresholdImageFilterISS4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS4IUS4):
    r"""Proxy of C++ itkLiThresholdImageFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterISS4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterISS4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterISS4IUS4

        Create a new object of the class itkLiThresholdImageFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterISS4IUS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterISS4IUS4_swigregister(itkLiThresholdImageFilterISS4IUS4)

def itkLiThresholdImageFilterIUC2ISS2_New():
    return itkLiThresholdImageFilterIUC2ISS2.New()

class itkLiThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC2ISS2

        Create a new object of the class itkLiThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2ISS2_swigregister(itkLiThresholdImageFilterIUC2ISS2)

def itkLiThresholdImageFilterIUC2IUC2_New():
    return itkLiThresholdImageFilterIUC2IUC2.New()

class itkLiThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC2IUC2

        Create a new object of the class itkLiThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUC2_swigregister(itkLiThresholdImageFilterIUC2IUC2)

def itkLiThresholdImageFilterIUC2IUS2_New():
    return itkLiThresholdImageFilterIUC2IUS2.New()

class itkLiThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC2IUS2

        Create a new object of the class itkLiThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC2IUS2_swigregister(itkLiThresholdImageFilterIUC2IUS2)

def itkLiThresholdImageFilterIUC3ISS3_New():
    return itkLiThresholdImageFilterIUC3ISS3.New()

class itkLiThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC3ISS3

        Create a new object of the class itkLiThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3ISS3_swigregister(itkLiThresholdImageFilterIUC3ISS3)

def itkLiThresholdImageFilterIUC3IUC3_New():
    return itkLiThresholdImageFilterIUC3IUC3.New()

class itkLiThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC3IUC3

        Create a new object of the class itkLiThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUC3_swigregister(itkLiThresholdImageFilterIUC3IUC3)

def itkLiThresholdImageFilterIUC3IUS3_New():
    return itkLiThresholdImageFilterIUC3IUS3.New()

class itkLiThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC3IUS3

        Create a new object of the class itkLiThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC3IUS3_swigregister(itkLiThresholdImageFilterIUC3IUS3)

def itkLiThresholdImageFilterIUC4ISS4_New():
    return itkLiThresholdImageFilterIUC4ISS4.New()

class itkLiThresholdImageFilterIUC4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4ISS4):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4ISS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC4ISS4

        Create a new object of the class itkLiThresholdImageFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC4ISS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4ISS4_swigregister(itkLiThresholdImageFilterIUC4ISS4)

def itkLiThresholdImageFilterIUC4IUC4_New():
    return itkLiThresholdImageFilterIUC4IUC4.New()

class itkLiThresholdImageFilterIUC4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUC4):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC4IUC4

        Create a new object of the class itkLiThresholdImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC4IUC4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUC4_swigregister(itkLiThresholdImageFilterIUC4IUC4)

def itkLiThresholdImageFilterIUC4IUS4_New():
    return itkLiThresholdImageFilterIUC4IUS4.New()

class itkLiThresholdImageFilterIUC4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC4IUS4):
    r"""Proxy of C++ itkLiThresholdImageFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUC4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUC4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUC4IUS4

        Create a new object of the class itkLiThresholdImageFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUC4IUS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUC4IUS4_swigregister(itkLiThresholdImageFilterIUC4IUS4)

def itkLiThresholdImageFilterIUS2ISS2_New():
    return itkLiThresholdImageFilterIUS2ISS2.New()

class itkLiThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS2ISS2

        Create a new object of the class itkLiThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS2ISS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2ISS2_swigregister(itkLiThresholdImageFilterIUS2ISS2)

def itkLiThresholdImageFilterIUS2IUC2_New():
    return itkLiThresholdImageFilterIUS2IUC2.New()

class itkLiThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS2IUC2

        Create a new object of the class itkLiThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS2IUC2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUC2_swigregister(itkLiThresholdImageFilterIUS2IUC2)

def itkLiThresholdImageFilterIUS2IUS2_New():
    return itkLiThresholdImageFilterIUS2IUS2.New()

class itkLiThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS2IUS2

        Create a new object of the class itkLiThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS2IUS2 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS2IUS2_swigregister(itkLiThresholdImageFilterIUS2IUS2)

def itkLiThresholdImageFilterIUS3ISS3_New():
    return itkLiThresholdImageFilterIUS3ISS3.New()

class itkLiThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS3ISS3

        Create a new object of the class itkLiThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS3ISS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3ISS3_swigregister(itkLiThresholdImageFilterIUS3ISS3)

def itkLiThresholdImageFilterIUS3IUC3_New():
    return itkLiThresholdImageFilterIUS3IUC3.New()

class itkLiThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS3IUC3

        Create a new object of the class itkLiThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS3IUC3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUC3_swigregister(itkLiThresholdImageFilterIUS3IUC3)

def itkLiThresholdImageFilterIUS3IUS3_New():
    return itkLiThresholdImageFilterIUS3IUS3.New()

class itkLiThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS3IUS3

        Create a new object of the class itkLiThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS3IUS3 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS3IUS3_swigregister(itkLiThresholdImageFilterIUS3IUS3)

def itkLiThresholdImageFilterIUS4ISS4_New():
    return itkLiThresholdImageFilterIUS4ISS4.New()

class itkLiThresholdImageFilterIUS4ISS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4ISS4):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS4ISS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4ISS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS4ISS4

        Create a new object of the class itkLiThresholdImageFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS4ISS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4ISS4_swigregister(itkLiThresholdImageFilterIUS4ISS4)

def itkLiThresholdImageFilterIUS4IUC4_New():
    return itkLiThresholdImageFilterIUS4IUC4.New()

class itkLiThresholdImageFilterIUS4IUC4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUC4):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS4IUC4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUC4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS4IUC4

        Create a new object of the class itkLiThresholdImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS4IUC4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUC4_swigregister(itkLiThresholdImageFilterIUS4IUC4)

def itkLiThresholdImageFilterIUS4IUS4_New():
    return itkLiThresholdImageFilterIUS4IUS4.New()

class itkLiThresholdImageFilterIUS4IUS4(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS4IUS4):
    r"""Proxy of C++ itkLiThresholdImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLiThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLiThresholdImageFilterIUS4IUS4_Pointer"""
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkLiThresholdImageFilterPython.delete_itkLiThresholdImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLiThresholdImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLiThresholdImageFilterIUS4IUS4

        Create a new object of the class itkLiThresholdImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLiThresholdImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLiThresholdImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLiThresholdImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLiThresholdImageFilterIUS4IUS4 in _itkLiThresholdImageFilterPython:
_itkLiThresholdImageFilterPython.itkLiThresholdImageFilterIUS4IUS4_swigregister(itkLiThresholdImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def li_threshold_image_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., outside_value: int=..., inside_value: int=..., number_of_histogram_bins: int=..., auto_minimum_maximum: bool=..., mask_output: bool=..., mask_value: int=..., calculator=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LiThresholdImageFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'outside_value':outside_value,'inside_value':inside_value,'number_of_histogram_bins':number_of_histogram_bins,'auto_minimum_maximum':auto_minimum_maximum,'mask_output':mask_output,'mask_value':mask_value,'calculator':calculator }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LiThresholdImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def li_threshold_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.LiThresholdImageFilter
    li_threshold_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    li_threshold_image_filter.__doc__ = filter_object.__doc__



