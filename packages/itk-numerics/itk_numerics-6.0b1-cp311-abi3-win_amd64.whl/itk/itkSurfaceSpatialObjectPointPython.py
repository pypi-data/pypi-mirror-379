# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSurfaceSpatialObjectPointPython
else:
    import _itkSurfaceSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMapContainerPython
class vectoritkSurfaceSpatialObjectPoint2(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkSurfaceSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type
        v: std::vector< itkSurfaceSpatialObjectPoint2,std::allocator< itkSurfaceSpatialObjectPoint2 > > const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkSurfaceSpatialObjectPoint2,std::allocator< itkSurfaceSpatialObjectPoint2 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint2 >::difference_type
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkSurfaceSpatialObjectPoint2"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkSurfaceSpatialObjectPoint2 > &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::reverse_iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::reverse_iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::allocator_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkSurfaceSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint2 >::iterator

        erase(self, first, last) -> std::vector< itkSurfaceSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        first: std::vector< itkSurfaceSpatialObjectPoint2 >::iterator
        last: std::vector< itkSurfaceSpatialObjectPoint2 >::iterator

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSurfaceSpatialObjectPoint2
        __init__(self, other) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        other: std::vector< itkSurfaceSpatialObjectPoint2 > const &

        __init__(self, size) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type

        __init__(self, size, value) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type
        value: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_vectoritkSurfaceSpatialObjectPoint2(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_push_back(self, x)

    def front(self):
        r"""front(self) -> itkSurfaceSpatialObjectPoint2"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_front(self)

    def back(self):
        r"""back(self) -> itkSurfaceSpatialObjectPoint2"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkSurfaceSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint2 >::iterator
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint2 >::iterator
        n: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkSurfaceSpatialObjectPoint2 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_capacity(self)
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_vectoritkSurfaceSpatialObjectPoint2

# Register vectoritkSurfaceSpatialObjectPoint2 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_swigregister(vectoritkSurfaceSpatialObjectPoint2)
class vectoritkSurfaceSpatialObjectPoint3(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkSurfaceSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type
        v: std::vector< itkSurfaceSpatialObjectPoint3,std::allocator< itkSurfaceSpatialObjectPoint3 > > const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkSurfaceSpatialObjectPoint3,std::allocator< itkSurfaceSpatialObjectPoint3 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint3 >::difference_type
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkSurfaceSpatialObjectPoint3"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkSurfaceSpatialObjectPoint3 > &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::reverse_iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::reverse_iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::allocator_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkSurfaceSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint3 >::iterator

        erase(self, first, last) -> std::vector< itkSurfaceSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        first: std::vector< itkSurfaceSpatialObjectPoint3 >::iterator
        last: std::vector< itkSurfaceSpatialObjectPoint3 >::iterator

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSurfaceSpatialObjectPoint3
        __init__(self, other) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        other: std::vector< itkSurfaceSpatialObjectPoint3 > const &

        __init__(self, size) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type

        __init__(self, size, value) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type
        value: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_vectoritkSurfaceSpatialObjectPoint3(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_push_back(self, x)

    def front(self):
        r"""front(self) -> itkSurfaceSpatialObjectPoint3"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_front(self)

    def back(self):
        r"""back(self) -> itkSurfaceSpatialObjectPoint3"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkSurfaceSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint3 >::iterator
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint3 >::iterator
        n: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkSurfaceSpatialObjectPoint3 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_capacity(self)
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_vectoritkSurfaceSpatialObjectPoint3

# Register vectoritkSurfaceSpatialObjectPoint3 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_swigregister(vectoritkSurfaceSpatialObjectPoint3)
class vectoritkSurfaceSpatialObjectPoint4(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkSurfaceSpatialObjectPoint4 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type
        v: std::vector< itkSurfaceSpatialObjectPoint4,std::allocator< itkSurfaceSpatialObjectPoint4 > > const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type
        j: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkSurfaceSpatialObjectPoint4,std::allocator< itkSurfaceSpatialObjectPoint4 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkSurfaceSpatialObjectPoint4 >::difference_type
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkSurfaceSpatialObjectPoint4"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkSurfaceSpatialObjectPoint4 > &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::reverse_iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::reverse_iterator"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::allocator_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkSurfaceSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint4 >::iterator

        erase(self, first, last) -> std::vector< itkSurfaceSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        first: std::vector< itkSurfaceSpatialObjectPoint4 >::iterator
        last: std::vector< itkSurfaceSpatialObjectPoint4 >::iterator

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSurfaceSpatialObjectPoint4
        __init__(self, other) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        other: std::vector< itkSurfaceSpatialObjectPoint4 > const &

        __init__(self, size) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type

        __init__(self, size, value) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type
        value: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_vectoritkSurfaceSpatialObjectPoint4(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_push_back(self, x)

    def front(self):
        r"""front(self) -> itkSurfaceSpatialObjectPoint4"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_front(self)

    def back(self):
        r"""back(self) -> itkSurfaceSpatialObjectPoint4"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkSurfaceSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint4 >::iterator
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkSurfaceSpatialObjectPoint4 >::iterator
        n: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type
        x: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type

        """
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkSurfaceSpatialObjectPoint4 >::size_type"""
        return _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_capacity(self)
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_vectoritkSurfaceSpatialObjectPoint4

# Register vectoritkSurfaceSpatialObjectPoint4 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_swigregister(vectoritkSurfaceSpatialObjectPoint4)
class itkSurfaceSpatialObjectPoint2(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint2):
    r"""Proxy of C++ itkSurfaceSpatialObjectPoint2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        arg0: itkSurfaceSpatialObjectPoint2 const &

        __init__(self) -> itkSurfaceSpatialObjectPoint2
        """
        _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_itkSurfaceSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_itkSurfaceSpatialObjectPoint2

    def GetNormalInObjectSpace(self):
        r"""GetNormalInObjectSpace(self) -> itkCovariantVectorD2"""
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_GetNormalInObjectSpace(self)

    def GetNormalInWorldSpace(self):
        r"""GetNormalInWorldSpace(self) -> itkCovariantVectorD2"""
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_GetNormalInWorldSpace(self)

    def SetNormalInObjectSpace(self, normal):
        r"""
        SetNormalInObjectSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD2 const &

        """
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_SetNormalInObjectSpace(self, normal)

    def SetNormalInWorldSpace(self, normal):
        r"""
        SetNormalInWorldSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD2 const &

        """
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_SetNormalInWorldSpace(self, normal)

# Register itkSurfaceSpatialObjectPoint2 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_swigregister(itkSurfaceSpatialObjectPoint2)
class itkSurfaceSpatialObjectPoint3(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint3):
    r"""Proxy of C++ itkSurfaceSpatialObjectPoint3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        arg0: itkSurfaceSpatialObjectPoint3 const &

        __init__(self) -> itkSurfaceSpatialObjectPoint3
        """
        _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_itkSurfaceSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_itkSurfaceSpatialObjectPoint3

    def GetNormalInObjectSpace(self):
        r"""GetNormalInObjectSpace(self) -> itkCovariantVectorD3"""
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_GetNormalInObjectSpace(self)

    def GetNormalInWorldSpace(self):
        r"""GetNormalInWorldSpace(self) -> itkCovariantVectorD3"""
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_GetNormalInWorldSpace(self)

    def SetNormalInObjectSpace(self, normal):
        r"""
        SetNormalInObjectSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD3 const &

        """
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_SetNormalInObjectSpace(self, normal)

    def SetNormalInWorldSpace(self, normal):
        r"""
        SetNormalInWorldSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD3 const &

        """
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_SetNormalInWorldSpace(self, normal)

# Register itkSurfaceSpatialObjectPoint3 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_swigregister(itkSurfaceSpatialObjectPoint3)
class itkSurfaceSpatialObjectPoint4(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint4):
    r"""Proxy of C++ itkSurfaceSpatialObjectPoint4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        arg0: itkSurfaceSpatialObjectPoint4 const &

        __init__(self) -> itkSurfaceSpatialObjectPoint4
        """
        _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_itkSurfaceSpatialObjectPoint4(*args))
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_itkSurfaceSpatialObjectPoint4

    def GetNormalInObjectSpace(self):
        r"""GetNormalInObjectSpace(self) -> itkCovariantVectorD4"""
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_GetNormalInObjectSpace(self)

    def GetNormalInWorldSpace(self):
        r"""GetNormalInWorldSpace(self) -> itkCovariantVectorD4"""
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_GetNormalInWorldSpace(self)

    def SetNormalInObjectSpace(self, normal):
        r"""
        SetNormalInObjectSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD4 const &

        """
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_SetNormalInObjectSpace(self, normal)

    def SetNormalInWorldSpace(self, normal):
        r"""
        SetNormalInWorldSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD4 const &

        """
        return _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_SetNormalInWorldSpace(self, normal)

# Register itkSurfaceSpatialObjectPoint4 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_swigregister(itkSurfaceSpatialObjectPoint4)

