# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKPathPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToPathFilterPython
else:
    import _itkImageToPathFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPathSourcePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkPolyLineParametricPathPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkArrayPython
import itk.itkParametricPathPython
import itk.itkPathBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
class itkImageToPathFilterID2PLPP2(itk.itkPathSourcePython.itkPathSourcePLPP2):
    r"""Proxy of C++ itkImageToPathFilterID2PLPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD2 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD2
        GetInput(self, idx) -> itkImageD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterID2PLPP2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterID2PLPP2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_cast(obj)

# Register itkImageToPathFilterID2PLPP2 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterID2PLPP2_swigregister(itkImageToPathFilterID2PLPP2)
class itkImageToPathFilterID3PLPP3(itk.itkPathSourcePython.itkPathSourcePLPP3):
    r"""Proxy of C++ itkImageToPathFilterID3PLPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD3 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD3
        GetInput(self, idx) -> itkImageD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterID3PLPP3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterID3PLPP3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_cast(obj)

# Register itkImageToPathFilterID3PLPP3 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterID3PLPP3_swigregister(itkImageToPathFilterID3PLPP3)
class itkImageToPathFilterID4PLPP4(itk.itkPathSourcePython.itkPathSourcePLPP4):
    r"""Proxy of C++ itkImageToPathFilterID4PLPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageD4 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID4PLPP4_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageD4
        GetInput(self, idx) -> itkImageD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID4PLPP4_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterID4PLPP4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterID4PLPP4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterID4PLPP4_cast(obj)

# Register itkImageToPathFilterID4PLPP4 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterID4PLPP4_swigregister(itkImageToPathFilterID4PLPP4)
class itkImageToPathFilterIF2PLPP2(itk.itkPathSourcePython.itkPathSourcePLPP2):
    r"""Proxy of C++ itkImageToPathFilterIF2PLPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF2 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF2
        GetInput(self, idx) -> itkImageF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIF2PLPP2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIF2PLPP2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_cast(obj)

# Register itkImageToPathFilterIF2PLPP2 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIF2PLPP2_swigregister(itkImageToPathFilterIF2PLPP2)
class itkImageToPathFilterIF3PLPP3(itk.itkPathSourcePython.itkPathSourcePLPP3):
    r"""Proxy of C++ itkImageToPathFilterIF3PLPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF3 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF3
        GetInput(self, idx) -> itkImageF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIF3PLPP3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIF3PLPP3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_cast(obj)

# Register itkImageToPathFilterIF3PLPP3 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIF3PLPP3_swigregister(itkImageToPathFilterIF3PLPP3)
class itkImageToPathFilterIF4PLPP4(itk.itkPathSourcePython.itkPathSourcePLPP4):
    r"""Proxy of C++ itkImageToPathFilterIF4PLPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageF4 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF4PLPP4_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageF4
        GetInput(self, idx) -> itkImageF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF4PLPP4_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIF4PLPP4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIF4PLPP4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIF4PLPP4_cast(obj)

# Register itkImageToPathFilterIF4PLPP4 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIF4PLPP4_swigregister(itkImageToPathFilterIF4PLPP4)
class itkImageToPathFilterISS2PLPP2(itk.itkPathSourcePython.itkPathSourcePLPP2):
    r"""Proxy of C++ itkImageToPathFilterISS2PLPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS2 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS2
        GetInput(self, idx) -> itkImageSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS2PLPP2_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterISS2PLPP2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterISS2PLPP2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS2PLPP2_cast(obj)

# Register itkImageToPathFilterISS2PLPP2 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterISS2PLPP2_swigregister(itkImageToPathFilterISS2PLPP2)
class itkImageToPathFilterISS3PLPP3(itk.itkPathSourcePython.itkPathSourcePLPP3):
    r"""Proxy of C++ itkImageToPathFilterISS3PLPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS3 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS3
        GetInput(self, idx) -> itkImageSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS3PLPP3_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterISS3PLPP3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterISS3PLPP3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS3PLPP3_cast(obj)

# Register itkImageToPathFilterISS3PLPP3 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterISS3PLPP3_swigregister(itkImageToPathFilterISS3PLPP3)
class itkImageToPathFilterISS4PLPP4(itk.itkPathSourcePython.itkPathSourcePLPP4):
    r"""Proxy of C++ itkImageToPathFilterISS4PLPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageSS4 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS4PLPP4_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageSS4
        GetInput(self, idx) -> itkImageSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS4PLPP4_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterISS4PLPP4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterISS4PLPP4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterISS4PLPP4_cast(obj)

# Register itkImageToPathFilterISS4PLPP4 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterISS4PLPP4_swigregister(itkImageToPathFilterISS4PLPP4)
class itkImageToPathFilterIUC2PLPP2(itk.itkPathSourcePython.itkPathSourcePLPP2):
    r"""Proxy of C++ itkImageToPathFilterIUC2PLPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC2 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC2
        GetInput(self, idx) -> itkImageUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUC2PLPP2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIUC2PLPP2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_cast(obj)

# Register itkImageToPathFilterIUC2PLPP2 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIUC2PLPP2_swigregister(itkImageToPathFilterIUC2PLPP2)
class itkImageToPathFilterIUC3PLPP3(itk.itkPathSourcePython.itkPathSourcePLPP3):
    r"""Proxy of C++ itkImageToPathFilterIUC3PLPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC3 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC3
        GetInput(self, idx) -> itkImageUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUC3PLPP3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIUC3PLPP3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_cast(obj)

# Register itkImageToPathFilterIUC3PLPP3 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIUC3PLPP3_swigregister(itkImageToPathFilterIUC3PLPP3)
class itkImageToPathFilterIUC4PLPP4(itk.itkPathSourcePython.itkPathSourcePLPP4):
    r"""Proxy of C++ itkImageToPathFilterIUC4PLPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUC4 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC4PLPP4_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUC4
        GetInput(self, idx) -> itkImageUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC4PLPP4_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUC4PLPP4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIUC4PLPP4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUC4PLPP4_cast(obj)

# Register itkImageToPathFilterIUC4PLPP4 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIUC4PLPP4_swigregister(itkImageToPathFilterIUC4PLPP4)
class itkImageToPathFilterIUS2PLPP2(itk.itkPathSourcePython.itkPathSourcePLPP2):
    r"""Proxy of C++ itkImageToPathFilterIUS2PLPP2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS2 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS2
        GetInput(self, idx) -> itkImageUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUS2PLPP2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIUS2PLPP2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_cast(obj)

# Register itkImageToPathFilterIUS2PLPP2 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIUS2PLPP2_swigregister(itkImageToPathFilterIUS2PLPP2)
class itkImageToPathFilterIUS3PLPP3(itk.itkPathSourcePython.itkPathSourcePLPP3):
    r"""Proxy of C++ itkImageToPathFilterIUS3PLPP3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS3 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS3
        GetInput(self, idx) -> itkImageUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUS3PLPP3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIUS3PLPP3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_cast(obj)

# Register itkImageToPathFilterIUS3PLPP3 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIUS3PLPP3_swigregister(itkImageToPathFilterIUS3PLPP3)
class itkImageToPathFilterIUS4PLPP4(itk.itkPathSourcePython.itkPathSourcePLPP4):
    r"""Proxy of C++ itkImageToPathFilterIUS4PLPP4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        SetInput(self, arg0, image)

        Parameters
        ----------
        arg0: unsigned int
        image: itkImageUS4 const *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS4PLPP4_SetInput(self, *args)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkImageUS4
        GetInput(self, idx) -> itkImageUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS4PLPP4_GetInput(self, *args)
    __swig_destroy__ = _itkImageToPathFilterPython.delete_itkImageToPathFilterIUS4PLPP4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToPathFilterIUS4PLPP4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToPathFilterPython.itkImageToPathFilterIUS4PLPP4_cast(obj)

# Register itkImageToPathFilterIUS4PLPP4 in _itkImageToPathFilterPython:
_itkImageToPathFilterPython.itkImageToPathFilterIUS4PLPP4_swigregister(itkImageToPathFilterIUS4PLPP4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def image_to_path_filter(*args, **kwargs)-> itkt.PathSourceReturn:
    """Functional interface for ImageToPathFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToPathFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_path_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKPath.ImageToPathFilter
    image_to_path_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_path_filter.__doc__ = filter_object.__doc__



