# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkStandardDeviationProjectionImageFilterPython
else:
    import _itkStandardDeviationProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterAPython

def itkStandardDeviationProjectionImageFilterID2ID2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID2ID2_Superclass.New()

class itkStandardDeviationProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID2ID2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID2ID2_Superclass)

def itkStandardDeviationProjectionImageFilterID3ID2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID3ID2_Superclass.New()

class itkStandardDeviationProjectionImageFilterID3ID2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID3ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID3ID2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID3ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID3ID2_Superclass)

def itkStandardDeviationProjectionImageFilterID3ID3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID3ID3_Superclass.New()

class itkStandardDeviationProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID3ID3_Superclass)

def itkStandardDeviationProjectionImageFilterID4ID3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID4ID3_Superclass.New()

class itkStandardDeviationProjectionImageFilterID4ID3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4ID3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID4ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID4ID3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID4ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID4ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID4ID3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID4ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID4ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID4ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID4ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID4ID3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID4ID3_Superclass)

def itkStandardDeviationProjectionImageFilterID4ID4_Superclass_New():
    return itkStandardDeviationProjectionImageFilterID4ID4_Superclass.New()

class itkStandardDeviationProjectionImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID4ID4_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID4ID4_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Superclass_swigregister(itkStandardDeviationProjectionImageFilterID4ID4_Superclass)

def itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF2IF2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF2IF2_Superclass)

def itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF3IF2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF3IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF3IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF3IF2_Superclass)

def itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF3IF3_Superclass)

def itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF4IF3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF4IF3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IF3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF4IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF4IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF4IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF4IF3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF4IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF4IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF4IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF4IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF4IF3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF4IF3_Superclass)

def itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIF4IF4_Superclass.New()

class itkStandardDeviationProjectionImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF4IF4_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF4IF4_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIF4IF4_Superclass)

def itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass)

def itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass)

def itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass)

def itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4ISS3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass)

def itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_New():
    return itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass.New()

class itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass_swigregister(itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass)

def itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass)

def itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass)

def itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass)

def itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IUC3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass)

def itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass)

def itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass)

def itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass)

def itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass)

def itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IUS3):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass)

def itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_New():
    return itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass.New()

class itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass_swigregister(itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass)

def itkStandardDeviationProjectionImageFilterID2ID2_New():
    return itkStandardDeviationProjectionImageFilterID2ID2.New()

class itkStandardDeviationProjectionImageFilterID2ID2(itkStandardDeviationProjectionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID2ID2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID2ID2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID2ID2

        Create a new object of the class itkStandardDeviationProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID2ID2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID2ID2_swigregister(itkStandardDeviationProjectionImageFilterID2ID2)

def itkStandardDeviationProjectionImageFilterID3ID2_New():
    return itkStandardDeviationProjectionImageFilterID3ID2.New()

class itkStandardDeviationProjectionImageFilterID3ID2(itkStandardDeviationProjectionImageFilterID3ID2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID3ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID3ID2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID3ID2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID3ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID2

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID2_swigregister(itkStandardDeviationProjectionImageFilterID3ID2)

def itkStandardDeviationProjectionImageFilterID3ID3_New():
    return itkStandardDeviationProjectionImageFilterID3ID3.New()

class itkStandardDeviationProjectionImageFilterID3ID3(itkStandardDeviationProjectionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID3ID3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID3ID3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID3ID3

        Create a new object of the class itkStandardDeviationProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID3ID3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID3ID3_swigregister(itkStandardDeviationProjectionImageFilterID3ID3)

def itkStandardDeviationProjectionImageFilterID4ID3_New():
    return itkStandardDeviationProjectionImageFilterID4ID3.New()

class itkStandardDeviationProjectionImageFilterID4ID3(itkStandardDeviationProjectionImageFilterID4ID3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID4ID3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID4ID3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID4ID3

        Create a new object of the class itkStandardDeviationProjectionImageFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID4ID3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID3_swigregister(itkStandardDeviationProjectionImageFilterID4ID3)

def itkStandardDeviationProjectionImageFilterID4ID4_New():
    return itkStandardDeviationProjectionImageFilterID4ID4.New()

class itkStandardDeviationProjectionImageFilterID4ID4(itkStandardDeviationProjectionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterID4ID4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterID4ID4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterID4ID4

        Create a new object of the class itkStandardDeviationProjectionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterID4ID4 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterID4ID4_swigregister(itkStandardDeviationProjectionImageFilterID4ID4)

def itkStandardDeviationProjectionImageFilterIF2IF2_New():
    return itkStandardDeviationProjectionImageFilterIF2IF2.New()

class itkStandardDeviationProjectionImageFilterIF2IF2(itkStandardDeviationProjectionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF2IF2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF2IF2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF2IF2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF2IF2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF2IF2_swigregister(itkStandardDeviationProjectionImageFilterIF2IF2)

def itkStandardDeviationProjectionImageFilterIF3IF2_New():
    return itkStandardDeviationProjectionImageFilterIF3IF2.New()

class itkStandardDeviationProjectionImageFilterIF3IF2(itkStandardDeviationProjectionImageFilterIF3IF2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF3IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF3IF2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF3IF2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF3IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF2_swigregister(itkStandardDeviationProjectionImageFilterIF3IF2)

def itkStandardDeviationProjectionImageFilterIF3IF3_New():
    return itkStandardDeviationProjectionImageFilterIF3IF3.New()

class itkStandardDeviationProjectionImageFilterIF3IF3(itkStandardDeviationProjectionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF3IF3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF3IF3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF3IF3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF3IF3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF3IF3_swigregister(itkStandardDeviationProjectionImageFilterIF3IF3)

def itkStandardDeviationProjectionImageFilterIF4IF3_New():
    return itkStandardDeviationProjectionImageFilterIF4IF3.New()

class itkStandardDeviationProjectionImageFilterIF4IF3(itkStandardDeviationProjectionImageFilterIF4IF3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF4IF3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF4IF3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF4IF3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF4IF3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF3_swigregister(itkStandardDeviationProjectionImageFilterIF4IF3)

def itkStandardDeviationProjectionImageFilterIF4IF4_New():
    return itkStandardDeviationProjectionImageFilterIF4IF4.New()

class itkStandardDeviationProjectionImageFilterIF4IF4(itkStandardDeviationProjectionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIF4IF4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIF4IF4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIF4IF4

        Create a new object of the class itkStandardDeviationProjectionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIF4IF4 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIF4IF4_swigregister(itkStandardDeviationProjectionImageFilterIF4IF4)

def itkStandardDeviationProjectionImageFilterISS2ISS2_New():
    return itkStandardDeviationProjectionImageFilterISS2ISS2.New()

class itkStandardDeviationProjectionImageFilterISS2ISS2(itkStandardDeviationProjectionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS2ISS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS2ISS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS2ISS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS2ISS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS2ISS2_swigregister(itkStandardDeviationProjectionImageFilterISS2ISS2)

def itkStandardDeviationProjectionImageFilterISS3ISS2_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS2.New()

class itkStandardDeviationProjectionImageFilterISS3ISS2(itkStandardDeviationProjectionImageFilterISS3ISS2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS3ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS3ISS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS3ISS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS3ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS2_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS2)

def itkStandardDeviationProjectionImageFilterISS3ISS3_New():
    return itkStandardDeviationProjectionImageFilterISS3ISS3.New()

class itkStandardDeviationProjectionImageFilterISS3ISS3(itkStandardDeviationProjectionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS3ISS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS3ISS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS3ISS3

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS3ISS3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS3ISS3_swigregister(itkStandardDeviationProjectionImageFilterISS3ISS3)

def itkStandardDeviationProjectionImageFilterISS4ISS3_New():
    return itkStandardDeviationProjectionImageFilterISS4ISS3.New()

class itkStandardDeviationProjectionImageFilterISS4ISS3(itkStandardDeviationProjectionImageFilterISS4ISS3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS4ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS4ISS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS4ISS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS4ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS4ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS4ISS3

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS4ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS4ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS4ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS4ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS4ISS3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS3_swigregister(itkStandardDeviationProjectionImageFilterISS4ISS3)

def itkStandardDeviationProjectionImageFilterISS4ISS4_New():
    return itkStandardDeviationProjectionImageFilterISS4ISS4.New()

class itkStandardDeviationProjectionImageFilterISS4ISS4(itkStandardDeviationProjectionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterISS4ISS4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterISS4ISS4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterISS4ISS4

        Create a new object of the class itkStandardDeviationProjectionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterISS4ISS4 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterISS4ISS4_swigregister(itkStandardDeviationProjectionImageFilterISS4ISS4)

def itkStandardDeviationProjectionImageFilterIUC2IUC2_New():
    return itkStandardDeviationProjectionImageFilterIUC2IUC2.New()

class itkStandardDeviationProjectionImageFilterIUC2IUC2(itkStandardDeviationProjectionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC2IUC2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC2IUC2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC2IUC2_swigregister(itkStandardDeviationProjectionImageFilterIUC2IUC2)

def itkStandardDeviationProjectionImageFilterIUC3IUC2_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC2.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC2(itkStandardDeviationProjectionImageFilterIUC3IUC2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC3IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC3IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC2_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC2)

def itkStandardDeviationProjectionImageFilterIUC3IUC3_New():
    return itkStandardDeviationProjectionImageFilterIUC3IUC3.New()

class itkStandardDeviationProjectionImageFilterIUC3IUC3(itkStandardDeviationProjectionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC3IUC3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC3IUC3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC3IUC3_swigregister(itkStandardDeviationProjectionImageFilterIUC3IUC3)

def itkStandardDeviationProjectionImageFilterIUC4IUC3_New():
    return itkStandardDeviationProjectionImageFilterIUC4IUC3.New()

class itkStandardDeviationProjectionImageFilterIUC4IUC3(itkStandardDeviationProjectionImageFilterIUC4IUC3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC4IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC4IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC4IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC4IUC3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC4IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC4IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC4IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC4IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC4IUC3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC3_swigregister(itkStandardDeviationProjectionImageFilterIUC4IUC3)

def itkStandardDeviationProjectionImageFilterIUC4IUC4_New():
    return itkStandardDeviationProjectionImageFilterIUC4IUC4.New()

class itkStandardDeviationProjectionImageFilterIUC4IUC4(itkStandardDeviationProjectionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUC4IUC4

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUC4IUC4 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUC4IUC4_swigregister(itkStandardDeviationProjectionImageFilterIUC4IUC4)

def itkStandardDeviationProjectionImageFilterIUS2IUS2_New():
    return itkStandardDeviationProjectionImageFilterIUS2IUS2.New()

class itkStandardDeviationProjectionImageFilterIUS2IUS2(itkStandardDeviationProjectionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS2IUS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS2IUS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS2IUS2_swigregister(itkStandardDeviationProjectionImageFilterIUS2IUS2)

def itkStandardDeviationProjectionImageFilterIUS3IUS2_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS2.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS2(itkStandardDeviationProjectionImageFilterIUS3IUS2_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS3IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS3IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS2

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS2 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS2_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS2)

def itkStandardDeviationProjectionImageFilterIUS3IUS3_New():
    return itkStandardDeviationProjectionImageFilterIUS3IUS3.New()

class itkStandardDeviationProjectionImageFilterIUS3IUS3(itkStandardDeviationProjectionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS3IUS3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS3IUS3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS3IUS3_swigregister(itkStandardDeviationProjectionImageFilterIUS3IUS3)

def itkStandardDeviationProjectionImageFilterIUS4IUS3_New():
    return itkStandardDeviationProjectionImageFilterIUS4IUS3.New()

class itkStandardDeviationProjectionImageFilterIUS4IUS3(itkStandardDeviationProjectionImageFilterIUS4IUS3_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS4IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS4IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS4IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS4IUS3

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS4IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS4IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS4IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS4IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS4IUS3 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS3_swigregister(itkStandardDeviationProjectionImageFilterIUS4IUS3)

def itkStandardDeviationProjectionImageFilterIUS4IUS4_New():
    return itkStandardDeviationProjectionImageFilterIUS4IUS4.New()

class itkStandardDeviationProjectionImageFilterIUS4IUS4(itkStandardDeviationProjectionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkStandardDeviationProjectionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStandardDeviationProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStandardDeviationProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_Clone(self)
    InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_InputPixelToOutputPixelTypeGreaterAdditiveOperatorCheck
    
    InputHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    AccumulateHasNumericTraitsCheck = _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_AccumulateHasNumericTraitsCheck
    
    __swig_destroy__ = _itkStandardDeviationProjectionImageFilterPython.delete_itkStandardDeviationProjectionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStandardDeviationProjectionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStandardDeviationProjectionImageFilterIUS4IUS4

        Create a new object of the class itkStandardDeviationProjectionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStandardDeviationProjectionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStandardDeviationProjectionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStandardDeviationProjectionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStandardDeviationProjectionImageFilterIUS4IUS4 in _itkStandardDeviationProjectionImageFilterPython:
_itkStandardDeviationProjectionImageFilterPython.itkStandardDeviationProjectionImageFilterIUS4IUS4_swigregister(itkStandardDeviationProjectionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def standard_deviation_projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for StandardDeviationProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.StandardDeviationProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def standard_deviation_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.StandardDeviationProjectionImageFilter
    standard_deviation_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    standard_deviation_projection_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.ProjectionImageFilter
    projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projection_image_filter.__doc__ = filter_object.__doc__



