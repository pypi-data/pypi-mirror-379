# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRescaleIntensityImageFilterPython
else:
    import _itkRescaleIntensityImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterAPython
import itk.itkInPlaceImageFilterBPython

def itkRescaleIntensityImageFilterID2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterID2ID2_Superclass.New()

class itkRescaleIntensityImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterID2ID2_Superclass)

def itkRescaleIntensityImageFilterID2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterID2IF2_Superclass.New()

class itkRescaleIntensityImageFilterID2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterID2IF2_Superclass)

def itkRescaleIntensityImageFilterID2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterID2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterID2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterID2ISS2_Superclass)

def itkRescaleIntensityImageFilterID2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterID2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterID2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterID2IUC2_Superclass)

def itkRescaleIntensityImageFilterID2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterID2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterID2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterID2IUS2_Superclass)

def itkRescaleIntensityImageFilterID3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterID3ID3_Superclass.New()

class itkRescaleIntensityImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterID3ID3_Superclass)

def itkRescaleIntensityImageFilterID3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterID3IF3_Superclass.New()

class itkRescaleIntensityImageFilterID3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterID3IF3_Superclass)

def itkRescaleIntensityImageFilterID3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterID3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterID3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterID3ISS3_Superclass)

def itkRescaleIntensityImageFilterID3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterID3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterID3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterID3IUC3_Superclass)

def itkRescaleIntensityImageFilterID3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterID3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterID3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterID3IUS3_Superclass)

def itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_New():
    return itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass.New()

class itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3PA3DSCISS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass_swigregister(itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass)

def itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_New():
    return itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass.New()

class itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3PA3DSCIUC):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass_swigregister(itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass)

def itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_New():
    return itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass.New()

class itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3PA3DSCIUS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass_swigregister(itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass)

def itkRescaleIntensityImageFilterID4ID4_Superclass_New():
    return itkRescaleIntensityImageFilterID4ID4_Superclass.New()

class itkRescaleIntensityImageFilterID4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4ID4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4ID4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Superclass_swigregister(itkRescaleIntensityImageFilterID4ID4_Superclass)

def itkRescaleIntensityImageFilterID4IF4_Superclass_New():
    return itkRescaleIntensityImageFilterID4IF4_Superclass.New()

class itkRescaleIntensityImageFilterID4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4IF4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4IF4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4IF4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Superclass_swigregister(itkRescaleIntensityImageFilterID4IF4_Superclass)

def itkRescaleIntensityImageFilterID4ISS4_Superclass_New():
    return itkRescaleIntensityImageFilterID4ISS4_Superclass.New()

class itkRescaleIntensityImageFilterID4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ISS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4ISS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4ISS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Superclass_swigregister(itkRescaleIntensityImageFilterID4ISS4_Superclass)

def itkRescaleIntensityImageFilterID4IUC4_Superclass_New():
    return itkRescaleIntensityImageFilterID4IUC4_Superclass.New()

class itkRescaleIntensityImageFilterID4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4IUC4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4IUC4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4IUC4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Superclass_swigregister(itkRescaleIntensityImageFilterID4IUC4_Superclass)

def itkRescaleIntensityImageFilterID4IUS4_Superclass_New():
    return itkRescaleIntensityImageFilterID4IUS4_Superclass.New()

class itkRescaleIntensityImageFilterID4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4IUS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< double,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< double,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4IUS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterID4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4IUS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Superclass_swigregister(itkRescaleIntensityImageFilterID4IUS4_Superclass)

def itkRescaleIntensityImageFilterIF2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2ID2_Superclass.New()

class itkRescaleIntensityImageFilterIF2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2ID2_Superclass)

def itkRescaleIntensityImageFilterIF2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2IF2_Superclass.New()

class itkRescaleIntensityImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2IF2_Superclass)

def itkRescaleIntensityImageFilterIF2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterIF2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2ISS2_Superclass)

def itkRescaleIntensityImageFilterIF2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterIF2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2IUC2_Superclass)

def itkRescaleIntensityImageFilterIF2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterIF2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterIF2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterIF2IUS2_Superclass)

def itkRescaleIntensityImageFilterIF3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3ID3_Superclass.New()

class itkRescaleIntensityImageFilterIF3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3ID3_Superclass)

def itkRescaleIntensityImageFilterIF3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3IF3_Superclass.New()

class itkRescaleIntensityImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3IF3_Superclass)

def itkRescaleIntensityImageFilterIF3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterIF3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3ISS3_Superclass)

def itkRescaleIntensityImageFilterIF3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterIF3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3IUC3_Superclass)

def itkRescaleIntensityImageFilterIF3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterIF3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterIF3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterIF3IUS3_Superclass)

def itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_New():
    return itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass.New()

class itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3PA3DSCISS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass_swigregister(itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass)

def itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_New():
    return itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass.New()

class itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3PA3DSCIUC):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass_swigregister(itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass)

def itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_New():
    return itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass.New()

class itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3PA3DSCIUS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass_swigregister(itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass)

def itkRescaleIntensityImageFilterIF4ID4_Superclass_New():
    return itkRescaleIntensityImageFilterIF4ID4_Superclass.New()

class itkRescaleIntensityImageFilterIF4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4ID4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4ID4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4ID4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Superclass_swigregister(itkRescaleIntensityImageFilterIF4ID4_Superclass)

def itkRescaleIntensityImageFilterIF4IF4_Superclass_New():
    return itkRescaleIntensityImageFilterIF4IF4_Superclass.New()

class itkRescaleIntensityImageFilterIF4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4IF4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4IF4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Superclass_swigregister(itkRescaleIntensityImageFilterIF4IF4_Superclass)

def itkRescaleIntensityImageFilterIF4ISS4_Superclass_New():
    return itkRescaleIntensityImageFilterIF4ISS4_Superclass.New()

class itkRescaleIntensityImageFilterIF4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4ISS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4ISS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4ISS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Superclass_swigregister(itkRescaleIntensityImageFilterIF4ISS4_Superclass)

def itkRescaleIntensityImageFilterIF4IUC4_Superclass_New():
    return itkRescaleIntensityImageFilterIF4IUC4_Superclass.New()

class itkRescaleIntensityImageFilterIF4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IUC4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4IUC4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4IUC4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Superclass_swigregister(itkRescaleIntensityImageFilterIF4IUC4_Superclass)

def itkRescaleIntensityImageFilterIF4IUS4_Superclass_New():
    return itkRescaleIntensityImageFilterIF4IUS4_Superclass.New()

class itkRescaleIntensityImageFilterIF4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IUS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< float,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< float,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4IUS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIF4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4IUS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Superclass_swigregister(itkRescaleIntensityImageFilterIF4IUS4_Superclass)

def itkRescaleIntensityImageFilterISS2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2ID2_Superclass.New()

class itkRescaleIntensityImageFilterISS2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2ID2_Superclass)

def itkRescaleIntensityImageFilterISS2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2IF2_Superclass.New()

class itkRescaleIntensityImageFilterISS2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2IF2_Superclass)

def itkRescaleIntensityImageFilterISS2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2ISS2_Superclass)

def itkRescaleIntensityImageFilterISS2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterISS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2IUC2_Superclass)

def itkRescaleIntensityImageFilterISS2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterISS2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterISS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterISS2IUS2_Superclass)

def itkRescaleIntensityImageFilterISS3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3ID3_Superclass.New()

class itkRescaleIntensityImageFilterISS3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3ID3_Superclass)

def itkRescaleIntensityImageFilterISS3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3IF3_Superclass.New()

class itkRescaleIntensityImageFilterISS3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3IF3_Superclass)

def itkRescaleIntensityImageFilterISS3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3ISS3_Superclass)

def itkRescaleIntensityImageFilterISS3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterISS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3IUC3_Superclass)

def itkRescaleIntensityImageFilterISS3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterISS3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterISS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterISS3IUS3_Superclass)

def itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_New():
    return itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass.New()

class itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS3PA3DSCISS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass_swigregister(itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass)

def itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_New():
    return itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass.New()

class itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS3PA3DSCIUC):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass_swigregister(itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass)

def itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_New():
    return itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass.New()

class itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS3PA3DSCIUS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass_swigregister(itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass)

def itkRescaleIntensityImageFilterISS4ID4_Superclass_New():
    return itkRescaleIntensityImageFilterISS4ID4_Superclass.New()

class itkRescaleIntensityImageFilterISS4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ID4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4ID4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4ID4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Superclass_swigregister(itkRescaleIntensityImageFilterISS4ID4_Superclass)

def itkRescaleIntensityImageFilterISS4IF4_Superclass_New():
    return itkRescaleIntensityImageFilterISS4IF4_Superclass.New()

class itkRescaleIntensityImageFilterISS4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4IF4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4IF4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4IF4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Superclass_swigregister(itkRescaleIntensityImageFilterISS4IF4_Superclass)

def itkRescaleIntensityImageFilterISS4ISS4_Superclass_New():
    return itkRescaleIntensityImageFilterISS4ISS4_Superclass.New()

class itkRescaleIntensityImageFilterISS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4ISS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4ISS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Superclass_swigregister(itkRescaleIntensityImageFilterISS4ISS4_Superclass)

def itkRescaleIntensityImageFilterISS4IUC4_Superclass_New():
    return itkRescaleIntensityImageFilterISS4IUC4_Superclass.New()

class itkRescaleIntensityImageFilterISS4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4IUC4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4IUC4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4IUC4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Superclass_swigregister(itkRescaleIntensityImageFilterISS4IUC4_Superclass)

def itkRescaleIntensityImageFilterISS4IUS4_Superclass_New():
    return itkRescaleIntensityImageFilterISS4IUS4_Superclass.New()

class itkRescaleIntensityImageFilterISS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4IUS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4IUS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterISS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4IUS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Superclass_swigregister(itkRescaleIntensityImageFilterISS4IUS4_Superclass)

def itkRescaleIntensityImageFilterIUC2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2ID2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2ID2_Superclass)

def itkRescaleIntensityImageFilterIUC2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2IF2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2IF2_Superclass)

def itkRescaleIntensityImageFilterIUC2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2ISS2_Superclass)

def itkRescaleIntensityImageFilterIUC2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2IUC2_Superclass)

def itkRescaleIntensityImageFilterIUC2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUC2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterIUC2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUC2IUS2_Superclass)

def itkRescaleIntensityImageFilterIUC3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3ID3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3ID3_Superclass)

def itkRescaleIntensityImageFilterIUC3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3IF3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3IF3_Superclass)

def itkRescaleIntensityImageFilterIUC3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3ISS3_Superclass)

def itkRescaleIntensityImageFilterIUC3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3IUC3_Superclass)

def itkRescaleIntensityImageFilterIUC3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterIUC3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3IUS3_Superclass)

def itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass.New()

class itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3PA3DSCISS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass)

def itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass.New()

class itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3PA3DSCIUC):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass)

def itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_New():
    return itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass.New()

class itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3PA3DSCIUS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass_swigregister(itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass)

def itkRescaleIntensityImageFilterIUC4ID4_Superclass_New():
    return itkRescaleIntensityImageFilterIUC4ID4_Superclass.New()

class itkRescaleIntensityImageFilterIUC4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4ID4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4ID4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4ID4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Superclass_swigregister(itkRescaleIntensityImageFilterIUC4ID4_Superclass)

def itkRescaleIntensityImageFilterIUC4IF4_Superclass_New():
    return itkRescaleIntensityImageFilterIUC4IF4_Superclass.New()

class itkRescaleIntensityImageFilterIUC4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IF4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4IF4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4IF4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Superclass_swigregister(itkRescaleIntensityImageFilterIUC4IF4_Superclass)

def itkRescaleIntensityImageFilterIUC4ISS4_Superclass_New():
    return itkRescaleIntensityImageFilterIUC4ISS4_Superclass.New()

class itkRescaleIntensityImageFilterIUC4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4ISS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4ISS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4ISS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Superclass_swigregister(itkRescaleIntensityImageFilterIUC4ISS4_Superclass)

def itkRescaleIntensityImageFilterIUC4IUC4_Superclass_New():
    return itkRescaleIntensityImageFilterIUC4IUC4_Superclass.New()

class itkRescaleIntensityImageFilterIUC4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4IUC4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Superclass_swigregister(itkRescaleIntensityImageFilterIUC4IUC4_Superclass)

def itkRescaleIntensityImageFilterIUC4IUS4_Superclass_New():
    return itkRescaleIntensityImageFilterIUC4IUS4_Superclass.New()

class itkRescaleIntensityImageFilterIUC4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned char,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4IUS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUC4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4IUS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Superclass_swigregister(itkRescaleIntensityImageFilterIUC4IUS4_Superclass)

def itkRescaleIntensityImageFilterIUS2ID2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2ID2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2ID2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ID2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ID2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2ID2_Superclass)

def itkRescaleIntensityImageFilterIUS2IF2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2IF2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2IF2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IF2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IF2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2IF2_Superclass)

def itkRescaleIntensityImageFilterIUS2ISS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2ISS2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2ISS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ISS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ISS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2ISS2_Superclass)

def itkRescaleIntensityImageFilterIUS2IUC2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2IUC2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2IUC2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUC2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUC2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2IUC2_Superclass)

def itkRescaleIntensityImageFilterIUS2IUS2_Superclass_New():
    return itkRescaleIntensityImageFilterIUS2IUS2_Superclass.New()

class itkRescaleIntensityImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUS2_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Superclass_swigregister(itkRescaleIntensityImageFilterIUS2IUS2_Superclass)

def itkRescaleIntensityImageFilterIUS3ID3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3ID3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3ID3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ID3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ID3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3ID3_Superclass)

def itkRescaleIntensityImageFilterIUS3IF3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3IF3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3IF3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IF3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IF3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3IF3_Superclass)

def itkRescaleIntensityImageFilterIUS3ISS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3ISS3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3ISS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ISS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ISS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3ISS3_Superclass)

def itkRescaleIntensityImageFilterIUS3IUC3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3IUC3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3IUC3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUC3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUC3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3IUC3_Superclass)

def itkRescaleIntensityImageFilterIUS3IUS3_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3IUS3_Superclass.New()

class itkRescaleIntensityImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUS3_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3IUS3_Superclass)

def itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass.New()

class itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3PA3DSCISS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass)

def itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass.New()

class itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3PA3DSCIUC):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass)

def itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_New():
    return itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass.New()

class itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3PA3DSCIUS):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass_swigregister(itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass)

def itkRescaleIntensityImageFilterIUS4ID4_Superclass_New():
    return itkRescaleIntensityImageFilterIUS4ID4_Superclass.New()

class itkRescaleIntensityImageFilterIUS4ID4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4ID4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4ID4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,double >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,double > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,double > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4ID4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4ID4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Superclass_swigregister(itkRescaleIntensityImageFilterIUS4ID4_Superclass)

def itkRescaleIntensityImageFilterIUS4IF4_Superclass_New():
    return itkRescaleIntensityImageFilterIUS4IF4_Superclass.New()

class itkRescaleIntensityImageFilterIUS4IF4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IF4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4IF4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,float >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,float > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,float > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4IF4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4IF4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Superclass_swigregister(itkRescaleIntensityImageFilterIUS4IF4_Superclass)

def itkRescaleIntensityImageFilterIUS4ISS4_Superclass_New():
    return itkRescaleIntensityImageFilterIUS4ISS4_Superclass.New()

class itkRescaleIntensityImageFilterIUS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4ISS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4ISS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4ISS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4ISS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Superclass_swigregister(itkRescaleIntensityImageFilterIUS4ISS4_Superclass)

def itkRescaleIntensityImageFilterIUS4IUC4_Superclass_New():
    return itkRescaleIntensityImageFilterIUS4IUC4_Superclass.New()

class itkRescaleIntensityImageFilterIUS4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUC4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4IUC4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned char > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4IUC4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4IUC4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Superclass_swigregister(itkRescaleIntensityImageFilterIUS4IUC4_Superclass)

def itkRescaleIntensityImageFilterIUS4IUS4_Superclass_New():
    return itkRescaleIntensityImageFilterIUS4IUS4_Superclass.New()

class itkRescaleIntensityImageFilterIUS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &
        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::IntensityLinearTransform< unsigned short,unsigned short > const &

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkRescaleIntensityImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4IUS4_Superclass in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Superclass_swigregister(itkRescaleIntensityImageFilterIUS4IUS4_Superclass)

def itkRescaleIntensityImageFilterID2ID2_New():
    return itkRescaleIntensityImageFilterID2ID2.New()

class itkRescaleIntensityImageFilterID2ID2(itkRescaleIntensityImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ID2

        Create a new object of the class itkRescaleIntensityImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ID2_swigregister(itkRescaleIntensityImageFilterID2ID2)

def itkRescaleIntensityImageFilterID2IF2_New():
    return itkRescaleIntensityImageFilterID2IF2.New()

class itkRescaleIntensityImageFilterID2IF2(itkRescaleIntensityImageFilterID2IF2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IF2

        Create a new object of the class itkRescaleIntensityImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IF2_swigregister(itkRescaleIntensityImageFilterID2IF2)

def itkRescaleIntensityImageFilterID2ISS2_New():
    return itkRescaleIntensityImageFilterID2ISS2.New()

class itkRescaleIntensityImageFilterID2ISS2(itkRescaleIntensityImageFilterID2ISS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2ISS2_swigregister(itkRescaleIntensityImageFilterID2ISS2)

def itkRescaleIntensityImageFilterID2IUC2_New():
    return itkRescaleIntensityImageFilterID2IUC2.New()

class itkRescaleIntensityImageFilterID2IUC2(itkRescaleIntensityImageFilterID2IUC2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUC2_swigregister(itkRescaleIntensityImageFilterID2IUC2)

def itkRescaleIntensityImageFilterID2IUS2_New():
    return itkRescaleIntensityImageFilterID2IUS2.New()

class itkRescaleIntensityImageFilterID2IUS2(itkRescaleIntensityImageFilterID2IUS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID2IUS2_swigregister(itkRescaleIntensityImageFilterID2IUS2)

def itkRescaleIntensityImageFilterID3ID3_New():
    return itkRescaleIntensityImageFilterID3ID3.New()

class itkRescaleIntensityImageFilterID3ID3(itkRescaleIntensityImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ID3

        Create a new object of the class itkRescaleIntensityImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ID3_swigregister(itkRescaleIntensityImageFilterID3ID3)

def itkRescaleIntensityImageFilterID3IF3_New():
    return itkRescaleIntensityImageFilterID3IF3.New()

class itkRescaleIntensityImageFilterID3IF3(itkRescaleIntensityImageFilterID3IF3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IF3

        Create a new object of the class itkRescaleIntensityImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IF3_swigregister(itkRescaleIntensityImageFilterID3IF3)

def itkRescaleIntensityImageFilterID3ISS3_New():
    return itkRescaleIntensityImageFilterID3ISS3.New()

class itkRescaleIntensityImageFilterID3ISS3(itkRescaleIntensityImageFilterID3ISS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3ISS3_swigregister(itkRescaleIntensityImageFilterID3ISS3)

def itkRescaleIntensityImageFilterID3IUC3_New():
    return itkRescaleIntensityImageFilterID3IUC3.New()

class itkRescaleIntensityImageFilterID3IUC3(itkRescaleIntensityImageFilterID3IUC3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUC3_swigregister(itkRescaleIntensityImageFilterID3IUC3)

def itkRescaleIntensityImageFilterID3IUS3_New():
    return itkRescaleIntensityImageFilterID3IUS3.New()

class itkRescaleIntensityImageFilterID3IUS3(itkRescaleIntensityImageFilterID3IUS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3IUS3_swigregister(itkRescaleIntensityImageFilterID3IUS3)

def itkRescaleIntensityImageFilterID3PA3DSCISS_New():
    return itkRescaleIntensityImageFilterID3PA3DSCISS.New()

class itkRescaleIntensityImageFilterID3PA3DSCISS(itkRescaleIntensityImageFilterID3PA3DSCISS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3PA3DSCISS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3PA3DSCISS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3PA3DSCISS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3PA3DSCISS

        Create a new object of the class itkRescaleIntensityImageFilterID3PA3DSCISS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3PA3DSCISS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3PA3DSCISS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3PA3DSCISS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3PA3DSCISS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCISS_swigregister(itkRescaleIntensityImageFilterID3PA3DSCISS)

def itkRescaleIntensityImageFilterID3PA3DSCIUC_New():
    return itkRescaleIntensityImageFilterID3PA3DSCIUC.New()

class itkRescaleIntensityImageFilterID3PA3DSCIUC(itkRescaleIntensityImageFilterID3PA3DSCIUC_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3PA3DSCIUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3PA3DSCIUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3PA3DSCIUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3PA3DSCIUC

        Create a new object of the class itkRescaleIntensityImageFilterID3PA3DSCIUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3PA3DSCIUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3PA3DSCIUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3PA3DSCIUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3PA3DSCIUC in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUC_swigregister(itkRescaleIntensityImageFilterID3PA3DSCIUC)

def itkRescaleIntensityImageFilterID3PA3DSCIUS_New():
    return itkRescaleIntensityImageFilterID3PA3DSCIUS.New()

class itkRescaleIntensityImageFilterID3PA3DSCIUS(itkRescaleIntensityImageFilterID3PA3DSCIUS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID3PA3DSCIUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID3PA3DSCIUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID3PA3DSCIUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID3PA3DSCIUS

        Create a new object of the class itkRescaleIntensityImageFilterID3PA3DSCIUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID3PA3DSCIUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID3PA3DSCIUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID3PA3DSCIUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID3PA3DSCIUS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID3PA3DSCIUS_swigregister(itkRescaleIntensityImageFilterID3PA3DSCIUS)

def itkRescaleIntensityImageFilterID4ID4_New():
    return itkRescaleIntensityImageFilterID4ID4.New()

class itkRescaleIntensityImageFilterID4ID4(itkRescaleIntensityImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4ID4

        Create a new object of the class itkRescaleIntensityImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4ID4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ID4_swigregister(itkRescaleIntensityImageFilterID4ID4)

def itkRescaleIntensityImageFilterID4IF4_New():
    return itkRescaleIntensityImageFilterID4IF4.New()

class itkRescaleIntensityImageFilterID4IF4(itkRescaleIntensityImageFilterID4IF4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4IF4

        Create a new object of the class itkRescaleIntensityImageFilterID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4IF4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IF4_swigregister(itkRescaleIntensityImageFilterID4IF4)

def itkRescaleIntensityImageFilterID4ISS4_New():
    return itkRescaleIntensityImageFilterID4ISS4.New()

class itkRescaleIntensityImageFilterID4ISS4(itkRescaleIntensityImageFilterID4ISS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4ISS4

        Create a new object of the class itkRescaleIntensityImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4ISS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4ISS4_swigregister(itkRescaleIntensityImageFilterID4ISS4)

def itkRescaleIntensityImageFilterID4IUC4_New():
    return itkRescaleIntensityImageFilterID4IUC4.New()

class itkRescaleIntensityImageFilterID4IUC4(itkRescaleIntensityImageFilterID4IUC4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4IUC4

        Create a new object of the class itkRescaleIntensityImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4IUC4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUC4_swigregister(itkRescaleIntensityImageFilterID4IUC4)

def itkRescaleIntensityImageFilterID4IUS4_New():
    return itkRescaleIntensityImageFilterID4IUS4.New()

class itkRescaleIntensityImageFilterID4IUS4(itkRescaleIntensityImageFilterID4IUS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterID4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterID4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterID4IUS4

        Create a new object of the class itkRescaleIntensityImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterID4IUS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterID4IUS4_swigregister(itkRescaleIntensityImageFilterID4IUS4)

def itkRescaleIntensityImageFilterIF2ID2_New():
    return itkRescaleIntensityImageFilterIF2ID2.New()

class itkRescaleIntensityImageFilterIF2ID2(itkRescaleIntensityImageFilterIF2ID2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ID2

        Create a new object of the class itkRescaleIntensityImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ID2_swigregister(itkRescaleIntensityImageFilterIF2ID2)

def itkRescaleIntensityImageFilterIF2IF2_New():
    return itkRescaleIntensityImageFilterIF2IF2.New()

class itkRescaleIntensityImageFilterIF2IF2(itkRescaleIntensityImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IF2

        Create a new object of the class itkRescaleIntensityImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IF2_swigregister(itkRescaleIntensityImageFilterIF2IF2)

def itkRescaleIntensityImageFilterIF2ISS2_New():
    return itkRescaleIntensityImageFilterIF2ISS2.New()

class itkRescaleIntensityImageFilterIF2ISS2(itkRescaleIntensityImageFilterIF2ISS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2ISS2_swigregister(itkRescaleIntensityImageFilterIF2ISS2)

def itkRescaleIntensityImageFilterIF2IUC2_New():
    return itkRescaleIntensityImageFilterIF2IUC2.New()

class itkRescaleIntensityImageFilterIF2IUC2(itkRescaleIntensityImageFilterIF2IUC2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUC2_swigregister(itkRescaleIntensityImageFilterIF2IUC2)

def itkRescaleIntensityImageFilterIF2IUS2_New():
    return itkRescaleIntensityImageFilterIF2IUS2.New()

class itkRescaleIntensityImageFilterIF2IUS2(itkRescaleIntensityImageFilterIF2IUS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF2IUS2_swigregister(itkRescaleIntensityImageFilterIF2IUS2)

def itkRescaleIntensityImageFilterIF3ID3_New():
    return itkRescaleIntensityImageFilterIF3ID3.New()

class itkRescaleIntensityImageFilterIF3ID3(itkRescaleIntensityImageFilterIF3ID3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ID3

        Create a new object of the class itkRescaleIntensityImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ID3_swigregister(itkRescaleIntensityImageFilterIF3ID3)

def itkRescaleIntensityImageFilterIF3IF3_New():
    return itkRescaleIntensityImageFilterIF3IF3.New()

class itkRescaleIntensityImageFilterIF3IF3(itkRescaleIntensityImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IF3

        Create a new object of the class itkRescaleIntensityImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IF3_swigregister(itkRescaleIntensityImageFilterIF3IF3)

def itkRescaleIntensityImageFilterIF3ISS3_New():
    return itkRescaleIntensityImageFilterIF3ISS3.New()

class itkRescaleIntensityImageFilterIF3ISS3(itkRescaleIntensityImageFilterIF3ISS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3ISS3_swigregister(itkRescaleIntensityImageFilterIF3ISS3)

def itkRescaleIntensityImageFilterIF3IUC3_New():
    return itkRescaleIntensityImageFilterIF3IUC3.New()

class itkRescaleIntensityImageFilterIF3IUC3(itkRescaleIntensityImageFilterIF3IUC3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUC3_swigregister(itkRescaleIntensityImageFilterIF3IUC3)

def itkRescaleIntensityImageFilterIF3IUS3_New():
    return itkRescaleIntensityImageFilterIF3IUS3.New()

class itkRescaleIntensityImageFilterIF3IUS3(itkRescaleIntensityImageFilterIF3IUS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3IUS3_swigregister(itkRescaleIntensityImageFilterIF3IUS3)

def itkRescaleIntensityImageFilterIF3PA3DSCISS_New():
    return itkRescaleIntensityImageFilterIF3PA3DSCISS.New()

class itkRescaleIntensityImageFilterIF3PA3DSCISS(itkRescaleIntensityImageFilterIF3PA3DSCISS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3PA3DSCISS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3PA3DSCISS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3PA3DSCISS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3PA3DSCISS

        Create a new object of the class itkRescaleIntensityImageFilterIF3PA3DSCISS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3PA3DSCISS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3PA3DSCISS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3PA3DSCISS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3PA3DSCISS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCISS_swigregister(itkRescaleIntensityImageFilterIF3PA3DSCISS)

def itkRescaleIntensityImageFilterIF3PA3DSCIUC_New():
    return itkRescaleIntensityImageFilterIF3PA3DSCIUC.New()

class itkRescaleIntensityImageFilterIF3PA3DSCIUC(itkRescaleIntensityImageFilterIF3PA3DSCIUC_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3PA3DSCIUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3PA3DSCIUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3PA3DSCIUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3PA3DSCIUC

        Create a new object of the class itkRescaleIntensityImageFilterIF3PA3DSCIUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3PA3DSCIUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3PA3DSCIUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3PA3DSCIUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3PA3DSCIUC in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUC_swigregister(itkRescaleIntensityImageFilterIF3PA3DSCIUC)

def itkRescaleIntensityImageFilterIF3PA3DSCIUS_New():
    return itkRescaleIntensityImageFilterIF3PA3DSCIUS.New()

class itkRescaleIntensityImageFilterIF3PA3DSCIUS(itkRescaleIntensityImageFilterIF3PA3DSCIUS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF3PA3DSCIUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF3PA3DSCIUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF3PA3DSCIUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF3PA3DSCIUS

        Create a new object of the class itkRescaleIntensityImageFilterIF3PA3DSCIUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF3PA3DSCIUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF3PA3DSCIUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF3PA3DSCIUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF3PA3DSCIUS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF3PA3DSCIUS_swigregister(itkRescaleIntensityImageFilterIF3PA3DSCIUS)

def itkRescaleIntensityImageFilterIF4ID4_New():
    return itkRescaleIntensityImageFilterIF4ID4.New()

class itkRescaleIntensityImageFilterIF4ID4(itkRescaleIntensityImageFilterIF4ID4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4ID4

        Create a new object of the class itkRescaleIntensityImageFilterIF4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4ID4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ID4_swigregister(itkRescaleIntensityImageFilterIF4ID4)

def itkRescaleIntensityImageFilterIF4IF4_New():
    return itkRescaleIntensityImageFilterIF4IF4.New()

class itkRescaleIntensityImageFilterIF4IF4(itkRescaleIntensityImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4IF4

        Create a new object of the class itkRescaleIntensityImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4IF4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IF4_swigregister(itkRescaleIntensityImageFilterIF4IF4)

def itkRescaleIntensityImageFilterIF4ISS4_New():
    return itkRescaleIntensityImageFilterIF4ISS4.New()

class itkRescaleIntensityImageFilterIF4ISS4(itkRescaleIntensityImageFilterIF4ISS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4ISS4

        Create a new object of the class itkRescaleIntensityImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4ISS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4ISS4_swigregister(itkRescaleIntensityImageFilterIF4ISS4)

def itkRescaleIntensityImageFilterIF4IUC4_New():
    return itkRescaleIntensityImageFilterIF4IUC4.New()

class itkRescaleIntensityImageFilterIF4IUC4(itkRescaleIntensityImageFilterIF4IUC4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4IUC4

        Create a new object of the class itkRescaleIntensityImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4IUC4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUC4_swigregister(itkRescaleIntensityImageFilterIF4IUC4)

def itkRescaleIntensityImageFilterIF4IUS4_New():
    return itkRescaleIntensityImageFilterIF4IUS4.New()

class itkRescaleIntensityImageFilterIF4IUS4(itkRescaleIntensityImageFilterIF4IUS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIF4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIF4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIF4IUS4

        Create a new object of the class itkRescaleIntensityImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIF4IUS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIF4IUS4_swigregister(itkRescaleIntensityImageFilterIF4IUS4)

def itkRescaleIntensityImageFilterISS2ID2_New():
    return itkRescaleIntensityImageFilterISS2ID2.New()

class itkRescaleIntensityImageFilterISS2ID2(itkRescaleIntensityImageFilterISS2ID2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ID2

        Create a new object of the class itkRescaleIntensityImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ID2_swigregister(itkRescaleIntensityImageFilterISS2ID2)

def itkRescaleIntensityImageFilterISS2IF2_New():
    return itkRescaleIntensityImageFilterISS2IF2.New()

class itkRescaleIntensityImageFilterISS2IF2(itkRescaleIntensityImageFilterISS2IF2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IF2

        Create a new object of the class itkRescaleIntensityImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IF2_swigregister(itkRescaleIntensityImageFilterISS2IF2)

def itkRescaleIntensityImageFilterISS2ISS2_New():
    return itkRescaleIntensityImageFilterISS2ISS2.New()

class itkRescaleIntensityImageFilterISS2ISS2(itkRescaleIntensityImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2ISS2_swigregister(itkRescaleIntensityImageFilterISS2ISS2)

def itkRescaleIntensityImageFilterISS2IUC2_New():
    return itkRescaleIntensityImageFilterISS2IUC2.New()

class itkRescaleIntensityImageFilterISS2IUC2(itkRescaleIntensityImageFilterISS2IUC2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUC2_swigregister(itkRescaleIntensityImageFilterISS2IUC2)

def itkRescaleIntensityImageFilterISS2IUS2_New():
    return itkRescaleIntensityImageFilterISS2IUS2.New()

class itkRescaleIntensityImageFilterISS2IUS2(itkRescaleIntensityImageFilterISS2IUS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS2IUS2_swigregister(itkRescaleIntensityImageFilterISS2IUS2)

def itkRescaleIntensityImageFilterISS3ID3_New():
    return itkRescaleIntensityImageFilterISS3ID3.New()

class itkRescaleIntensityImageFilterISS3ID3(itkRescaleIntensityImageFilterISS3ID3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ID3

        Create a new object of the class itkRescaleIntensityImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ID3_swigregister(itkRescaleIntensityImageFilterISS3ID3)

def itkRescaleIntensityImageFilterISS3IF3_New():
    return itkRescaleIntensityImageFilterISS3IF3.New()

class itkRescaleIntensityImageFilterISS3IF3(itkRescaleIntensityImageFilterISS3IF3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IF3

        Create a new object of the class itkRescaleIntensityImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IF3_swigregister(itkRescaleIntensityImageFilterISS3IF3)

def itkRescaleIntensityImageFilterISS3ISS3_New():
    return itkRescaleIntensityImageFilterISS3ISS3.New()

class itkRescaleIntensityImageFilterISS3ISS3(itkRescaleIntensityImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3ISS3_swigregister(itkRescaleIntensityImageFilterISS3ISS3)

def itkRescaleIntensityImageFilterISS3IUC3_New():
    return itkRescaleIntensityImageFilterISS3IUC3.New()

class itkRescaleIntensityImageFilterISS3IUC3(itkRescaleIntensityImageFilterISS3IUC3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUC3_swigregister(itkRescaleIntensityImageFilterISS3IUC3)

def itkRescaleIntensityImageFilterISS3IUS3_New():
    return itkRescaleIntensityImageFilterISS3IUS3.New()

class itkRescaleIntensityImageFilterISS3IUS3(itkRescaleIntensityImageFilterISS3IUS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3IUS3_swigregister(itkRescaleIntensityImageFilterISS3IUS3)

def itkRescaleIntensityImageFilterISS3PA3DSCISS_New():
    return itkRescaleIntensityImageFilterISS3PA3DSCISS.New()

class itkRescaleIntensityImageFilterISS3PA3DSCISS(itkRescaleIntensityImageFilterISS3PA3DSCISS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3PA3DSCISS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3PA3DSCISS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3PA3DSCISS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3PA3DSCISS

        Create a new object of the class itkRescaleIntensityImageFilterISS3PA3DSCISS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3PA3DSCISS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3PA3DSCISS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3PA3DSCISS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3PA3DSCISS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCISS_swigregister(itkRescaleIntensityImageFilterISS3PA3DSCISS)

def itkRescaleIntensityImageFilterISS3PA3DSCIUC_New():
    return itkRescaleIntensityImageFilterISS3PA3DSCIUC.New()

class itkRescaleIntensityImageFilterISS3PA3DSCIUC(itkRescaleIntensityImageFilterISS3PA3DSCIUC_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3PA3DSCIUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3PA3DSCIUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3PA3DSCIUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3PA3DSCIUC

        Create a new object of the class itkRescaleIntensityImageFilterISS3PA3DSCIUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3PA3DSCIUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3PA3DSCIUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3PA3DSCIUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3PA3DSCIUC in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUC_swigregister(itkRescaleIntensityImageFilterISS3PA3DSCIUC)

def itkRescaleIntensityImageFilterISS3PA3DSCIUS_New():
    return itkRescaleIntensityImageFilterISS3PA3DSCIUS.New()

class itkRescaleIntensityImageFilterISS3PA3DSCIUS(itkRescaleIntensityImageFilterISS3PA3DSCIUS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS3PA3DSCIUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS3PA3DSCIUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS3PA3DSCIUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS3PA3DSCIUS

        Create a new object of the class itkRescaleIntensityImageFilterISS3PA3DSCIUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS3PA3DSCIUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS3PA3DSCIUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS3PA3DSCIUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS3PA3DSCIUS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS3PA3DSCIUS_swigregister(itkRescaleIntensityImageFilterISS3PA3DSCIUS)

def itkRescaleIntensityImageFilterISS4ID4_New():
    return itkRescaleIntensityImageFilterISS4ID4.New()

class itkRescaleIntensityImageFilterISS4ID4(itkRescaleIntensityImageFilterISS4ID4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4ID4

        Create a new object of the class itkRescaleIntensityImageFilterISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4ID4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ID4_swigregister(itkRescaleIntensityImageFilterISS4ID4)

def itkRescaleIntensityImageFilterISS4IF4_New():
    return itkRescaleIntensityImageFilterISS4IF4.New()

class itkRescaleIntensityImageFilterISS4IF4(itkRescaleIntensityImageFilterISS4IF4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4IF4

        Create a new object of the class itkRescaleIntensityImageFilterISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4IF4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IF4_swigregister(itkRescaleIntensityImageFilterISS4IF4)

def itkRescaleIntensityImageFilterISS4ISS4_New():
    return itkRescaleIntensityImageFilterISS4ISS4.New()

class itkRescaleIntensityImageFilterISS4ISS4(itkRescaleIntensityImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4ISS4

        Create a new object of the class itkRescaleIntensityImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4ISS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4ISS4_swigregister(itkRescaleIntensityImageFilterISS4ISS4)

def itkRescaleIntensityImageFilterISS4IUC4_New():
    return itkRescaleIntensityImageFilterISS4IUC4.New()

class itkRescaleIntensityImageFilterISS4IUC4(itkRescaleIntensityImageFilterISS4IUC4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4IUC4

        Create a new object of the class itkRescaleIntensityImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4IUC4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUC4_swigregister(itkRescaleIntensityImageFilterISS4IUC4)

def itkRescaleIntensityImageFilterISS4IUS4_New():
    return itkRescaleIntensityImageFilterISS4IUS4.New()

class itkRescaleIntensityImageFilterISS4IUS4(itkRescaleIntensityImageFilterISS4IUS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterISS4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterISS4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterISS4IUS4

        Create a new object of the class itkRescaleIntensityImageFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterISS4IUS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterISS4IUS4_swigregister(itkRescaleIntensityImageFilterISS4IUS4)

def itkRescaleIntensityImageFilterIUC2ID2_New():
    return itkRescaleIntensityImageFilterIUC2ID2.New()

class itkRescaleIntensityImageFilterIUC2ID2(itkRescaleIntensityImageFilterIUC2ID2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ID2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ID2_swigregister(itkRescaleIntensityImageFilterIUC2ID2)

def itkRescaleIntensityImageFilterIUC2IF2_New():
    return itkRescaleIntensityImageFilterIUC2IF2.New()

class itkRescaleIntensityImageFilterIUC2IF2(itkRescaleIntensityImageFilterIUC2IF2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IF2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IF2_swigregister(itkRescaleIntensityImageFilterIUC2IF2)

def itkRescaleIntensityImageFilterIUC2ISS2_New():
    return itkRescaleIntensityImageFilterIUC2ISS2.New()

class itkRescaleIntensityImageFilterIUC2ISS2(itkRescaleIntensityImageFilterIUC2ISS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2ISS2_swigregister(itkRescaleIntensityImageFilterIUC2ISS2)

def itkRescaleIntensityImageFilterIUC2IUC2_New():
    return itkRescaleIntensityImageFilterIUC2IUC2.New()

class itkRescaleIntensityImageFilterIUC2IUC2(itkRescaleIntensityImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUC2_swigregister(itkRescaleIntensityImageFilterIUC2IUC2)

def itkRescaleIntensityImageFilterIUC2IUS2_New():
    return itkRescaleIntensityImageFilterIUC2IUS2.New()

class itkRescaleIntensityImageFilterIUC2IUS2(itkRescaleIntensityImageFilterIUC2IUS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC2IUS2_swigregister(itkRescaleIntensityImageFilterIUC2IUS2)

def itkRescaleIntensityImageFilterIUC3ID3_New():
    return itkRescaleIntensityImageFilterIUC3ID3.New()

class itkRescaleIntensityImageFilterIUC3ID3(itkRescaleIntensityImageFilterIUC3ID3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ID3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ID3_swigregister(itkRescaleIntensityImageFilterIUC3ID3)

def itkRescaleIntensityImageFilterIUC3IF3_New():
    return itkRescaleIntensityImageFilterIUC3IF3.New()

class itkRescaleIntensityImageFilterIUC3IF3(itkRescaleIntensityImageFilterIUC3IF3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IF3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IF3_swigregister(itkRescaleIntensityImageFilterIUC3IF3)

def itkRescaleIntensityImageFilterIUC3ISS3_New():
    return itkRescaleIntensityImageFilterIUC3ISS3.New()

class itkRescaleIntensityImageFilterIUC3ISS3(itkRescaleIntensityImageFilterIUC3ISS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3ISS3_swigregister(itkRescaleIntensityImageFilterIUC3ISS3)

def itkRescaleIntensityImageFilterIUC3IUC3_New():
    return itkRescaleIntensityImageFilterIUC3IUC3.New()

class itkRescaleIntensityImageFilterIUC3IUC3(itkRescaleIntensityImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUC3_swigregister(itkRescaleIntensityImageFilterIUC3IUC3)

def itkRescaleIntensityImageFilterIUC3IUS3_New():
    return itkRescaleIntensityImageFilterIUC3IUS3.New()

class itkRescaleIntensityImageFilterIUC3IUS3(itkRescaleIntensityImageFilterIUC3IUS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3IUS3_swigregister(itkRescaleIntensityImageFilterIUC3IUS3)

def itkRescaleIntensityImageFilterIUC3PA3DSCISS_New():
    return itkRescaleIntensityImageFilterIUC3PA3DSCISS.New()

class itkRescaleIntensityImageFilterIUC3PA3DSCISS(itkRescaleIntensityImageFilterIUC3PA3DSCISS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3PA3DSCISS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3PA3DSCISS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3PA3DSCISS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3PA3DSCISS

        Create a new object of the class itkRescaleIntensityImageFilterIUC3PA3DSCISS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3PA3DSCISS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3PA3DSCISS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3PA3DSCISS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3PA3DSCISS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCISS_swigregister(itkRescaleIntensityImageFilterIUC3PA3DSCISS)

def itkRescaleIntensityImageFilterIUC3PA3DSCIUC_New():
    return itkRescaleIntensityImageFilterIUC3PA3DSCIUC.New()

class itkRescaleIntensityImageFilterIUC3PA3DSCIUC(itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3PA3DSCIUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3PA3DSCIUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUC

        Create a new object of the class itkRescaleIntensityImageFilterIUC3PA3DSCIUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3PA3DSCIUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3PA3DSCIUC in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUC_swigregister(itkRescaleIntensityImageFilterIUC3PA3DSCIUC)

def itkRescaleIntensityImageFilterIUC3PA3DSCIUS_New():
    return itkRescaleIntensityImageFilterIUC3PA3DSCIUS.New()

class itkRescaleIntensityImageFilterIUC3PA3DSCIUS(itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC3PA3DSCIUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC3PA3DSCIUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC3PA3DSCIUS

        Create a new object of the class itkRescaleIntensityImageFilterIUC3PA3DSCIUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC3PA3DSCIUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC3PA3DSCIUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC3PA3DSCIUS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC3PA3DSCIUS_swigregister(itkRescaleIntensityImageFilterIUC3PA3DSCIUS)

def itkRescaleIntensityImageFilterIUC4ID4_New():
    return itkRescaleIntensityImageFilterIUC4ID4.New()

class itkRescaleIntensityImageFilterIUC4ID4(itkRescaleIntensityImageFilterIUC4ID4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4ID4

        Create a new object of the class itkRescaleIntensityImageFilterIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4ID4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ID4_swigregister(itkRescaleIntensityImageFilterIUC4ID4)

def itkRescaleIntensityImageFilterIUC4IF4_New():
    return itkRescaleIntensityImageFilterIUC4IF4.New()

class itkRescaleIntensityImageFilterIUC4IF4(itkRescaleIntensityImageFilterIUC4IF4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4IF4

        Create a new object of the class itkRescaleIntensityImageFilterIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4IF4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IF4_swigregister(itkRescaleIntensityImageFilterIUC4IF4)

def itkRescaleIntensityImageFilterIUC4ISS4_New():
    return itkRescaleIntensityImageFilterIUC4ISS4.New()

class itkRescaleIntensityImageFilterIUC4ISS4(itkRescaleIntensityImageFilterIUC4ISS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4ISS4

        Create a new object of the class itkRescaleIntensityImageFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4ISS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4ISS4_swigregister(itkRescaleIntensityImageFilterIUC4ISS4)

def itkRescaleIntensityImageFilterIUC4IUC4_New():
    return itkRescaleIntensityImageFilterIUC4IUC4.New()

class itkRescaleIntensityImageFilterIUC4IUC4(itkRescaleIntensityImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4IUC4

        Create a new object of the class itkRescaleIntensityImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4IUC4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUC4_swigregister(itkRescaleIntensityImageFilterIUC4IUC4)

def itkRescaleIntensityImageFilterIUC4IUS4_New():
    return itkRescaleIntensityImageFilterIUC4IUS4.New()

class itkRescaleIntensityImageFilterIUC4IUS4(itkRescaleIntensityImageFilterIUC4IUS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUC4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUC4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUC4IUS4

        Create a new object of the class itkRescaleIntensityImageFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUC4IUS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUC4IUS4_swigregister(itkRescaleIntensityImageFilterIUC4IUS4)

def itkRescaleIntensityImageFilterIUS2ID2_New():
    return itkRescaleIntensityImageFilterIUS2ID2.New()

class itkRescaleIntensityImageFilterIUS2ID2(itkRescaleIntensityImageFilterIUS2ID2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2ID2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ID2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ID2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ID2_swigregister(itkRescaleIntensityImageFilterIUS2ID2)

def itkRescaleIntensityImageFilterIUS2IF2_New():
    return itkRescaleIntensityImageFilterIUS2IF2.New()

class itkRescaleIntensityImageFilterIUS2IF2(itkRescaleIntensityImageFilterIUS2IF2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2IF2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IF2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IF2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IF2_swigregister(itkRescaleIntensityImageFilterIUS2IF2)

def itkRescaleIntensityImageFilterIUS2ISS2_New():
    return itkRescaleIntensityImageFilterIUS2ISS2.New()

class itkRescaleIntensityImageFilterIUS2ISS2(itkRescaleIntensityImageFilterIUS2ISS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2ISS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2ISS2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2ISS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2ISS2_swigregister(itkRescaleIntensityImageFilterIUS2ISS2)

def itkRescaleIntensityImageFilterIUS2IUC2_New():
    return itkRescaleIntensityImageFilterIUS2IUC2.New()

class itkRescaleIntensityImageFilterIUS2IUC2(itkRescaleIntensityImageFilterIUS2IUC2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2IUC2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUC2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUC2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUC2_swigregister(itkRescaleIntensityImageFilterIUS2IUC2)

def itkRescaleIntensityImageFilterIUS2IUS2_New():
    return itkRescaleIntensityImageFilterIUS2IUS2.New()

class itkRescaleIntensityImageFilterIUS2IUS2(itkRescaleIntensityImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS2IUS2_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS2IUS2

        Create a new object of the class itkRescaleIntensityImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS2IUS2 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS2IUS2_swigregister(itkRescaleIntensityImageFilterIUS2IUS2)

def itkRescaleIntensityImageFilterIUS3ID3_New():
    return itkRescaleIntensityImageFilterIUS3ID3.New()

class itkRescaleIntensityImageFilterIUS3ID3(itkRescaleIntensityImageFilterIUS3ID3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3ID3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ID3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ID3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ID3_swigregister(itkRescaleIntensityImageFilterIUS3ID3)

def itkRescaleIntensityImageFilterIUS3IF3_New():
    return itkRescaleIntensityImageFilterIUS3IF3.New()

class itkRescaleIntensityImageFilterIUS3IF3(itkRescaleIntensityImageFilterIUS3IF3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3IF3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IF3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IF3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IF3_swigregister(itkRescaleIntensityImageFilterIUS3IF3)

def itkRescaleIntensityImageFilterIUS3ISS3_New():
    return itkRescaleIntensityImageFilterIUS3ISS3.New()

class itkRescaleIntensityImageFilterIUS3ISS3(itkRescaleIntensityImageFilterIUS3ISS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3ISS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3ISS3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3ISS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3ISS3_swigregister(itkRescaleIntensityImageFilterIUS3ISS3)

def itkRescaleIntensityImageFilterIUS3IUC3_New():
    return itkRescaleIntensityImageFilterIUS3IUC3.New()

class itkRescaleIntensityImageFilterIUS3IUC3(itkRescaleIntensityImageFilterIUS3IUC3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3IUC3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUC3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUC3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUC3_swigregister(itkRescaleIntensityImageFilterIUS3IUC3)

def itkRescaleIntensityImageFilterIUS3IUS3_New():
    return itkRescaleIntensityImageFilterIUS3IUS3.New()

class itkRescaleIntensityImageFilterIUS3IUS3(itkRescaleIntensityImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3IUS3_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3IUS3

        Create a new object of the class itkRescaleIntensityImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3IUS3 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3IUS3_swigregister(itkRescaleIntensityImageFilterIUS3IUS3)

def itkRescaleIntensityImageFilterIUS3PA3DSCISS_New():
    return itkRescaleIntensityImageFilterIUS3PA3DSCISS.New()

class itkRescaleIntensityImageFilterIUS3PA3DSCISS(itkRescaleIntensityImageFilterIUS3PA3DSCISS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3PA3DSCISS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3PA3DSCISS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3PA3DSCISS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3PA3DSCISS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3PA3DSCISS

        Create a new object of the class itkRescaleIntensityImageFilterIUS3PA3DSCISS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3PA3DSCISS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3PA3DSCISS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3PA3DSCISS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3PA3DSCISS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCISS_swigregister(itkRescaleIntensityImageFilterIUS3PA3DSCISS)

def itkRescaleIntensityImageFilterIUS3PA3DSCIUC_New():
    return itkRescaleIntensityImageFilterIUS3PA3DSCIUC.New()

class itkRescaleIntensityImageFilterIUS3PA3DSCIUC(itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3PA3DSCIUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3PA3DSCIUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUC

        Create a new object of the class itkRescaleIntensityImageFilterIUS3PA3DSCIUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3PA3DSCIUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3PA3DSCIUC in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUC_swigregister(itkRescaleIntensityImageFilterIUS3PA3DSCIUC)

def itkRescaleIntensityImageFilterIUS3PA3DSCIUS_New():
    return itkRescaleIntensityImageFilterIUS3PA3DSCIUS.New()

class itkRescaleIntensityImageFilterIUS3PA3DSCIUS(itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS3PA3DSCIUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS3PA3DSCIUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS3PA3DSCIUS

        Create a new object of the class itkRescaleIntensityImageFilterIUS3PA3DSCIUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS3PA3DSCIUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS3PA3DSCIUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS3PA3DSCIUS in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS3PA3DSCIUS_swigregister(itkRescaleIntensityImageFilterIUS3PA3DSCIUS)

def itkRescaleIntensityImageFilterIUS4ID4_New():
    return itkRescaleIntensityImageFilterIUS4ID4.New()

class itkRescaleIntensityImageFilterIUS4ID4(itkRescaleIntensityImageFilterIUS4ID4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4ID4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4ID4

        Create a new object of the class itkRescaleIntensityImageFilterIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4ID4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ID4_swigregister(itkRescaleIntensityImageFilterIUS4ID4)

def itkRescaleIntensityImageFilterIUS4IF4_New():
    return itkRescaleIntensityImageFilterIUS4IF4.New()

class itkRescaleIntensityImageFilterIUS4IF4(itkRescaleIntensityImageFilterIUS4IF4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4IF4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> float const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4IF4

        Create a new object of the class itkRescaleIntensityImageFilterIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4IF4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IF4_swigregister(itkRescaleIntensityImageFilterIUS4IF4)

def itkRescaleIntensityImageFilterIUS4ISS4_New():
    return itkRescaleIntensityImageFilterIUS4ISS4.New()

class itkRescaleIntensityImageFilterIUS4ISS4(itkRescaleIntensityImageFilterIUS4ISS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4ISS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4ISS4

        Create a new object of the class itkRescaleIntensityImageFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4ISS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4ISS4_swigregister(itkRescaleIntensityImageFilterIUS4ISS4)

def itkRescaleIntensityImageFilterIUS4IUC4_New():
    return itkRescaleIntensityImageFilterIUS4IUC4.New()

class itkRescaleIntensityImageFilterIUS4IUC4(itkRescaleIntensityImageFilterIUS4IUC4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4IUC4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned char const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4IUC4

        Create a new object of the class itkRescaleIntensityImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4IUC4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUC4_swigregister(itkRescaleIntensityImageFilterIUS4IUC4)

def itkRescaleIntensityImageFilterIUS4IUS4_New():
    return itkRescaleIntensityImageFilterIUS4IUS4.New()

class itkRescaleIntensityImageFilterIUS4IUS4(itkRescaleIntensityImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkRescaleIntensityImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRescaleIntensityImageFilterIUS4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRescaleIntensityImageFilterIUS4IUS4_Pointer"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_Clone(self)

    def SetOutputMinimum(self, _arg):
        r"""
        SetOutputMinimum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_SetOutputMinimum(self, _arg)

    def SetOutputMaximum(self, _arg):
        r"""
        SetOutputMaximum(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_SetOutputMaximum(self, _arg)

    def GetOutputMinimum(self):
        r"""GetOutputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_GetOutputMinimum(self)

    def GetOutputMaximum(self):
        r"""GetOutputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_GetOutputMaximum(self)

    def GetScale(self):
        r"""GetScale(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_GetScale(self)

    def GetShift(self):
        r"""GetShift(self) -> double const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_GetShift(self)

    def GetInputMinimum(self):
        r"""GetInputMinimum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_GetInputMinimum(self)

    def GetInputMaximum(self):
        r"""GetInputMaximum(self) -> unsigned short const &"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_GetInputMaximum(self)

    def BeforeThreadedGenerateData(self):
        r"""BeforeThreadedGenerateData(self)"""
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_BeforeThreadedGenerateData(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_PrintSelf(self, os, indent)
    InputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_OutputHasNumericTraitsCheck
    
    RealTypeMultiplyOperatorCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_RealTypeMultiplyOperatorCheck
    
    RealTypeAdditiveOperatorsCheck = _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_RealTypeAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkRescaleIntensityImageFilterPython.delete_itkRescaleIntensityImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRescaleIntensityImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRescaleIntensityImageFilterIUS4IUS4

        Create a new object of the class itkRescaleIntensityImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRescaleIntensityImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRescaleIntensityImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRescaleIntensityImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRescaleIntensityImageFilterIUS4IUS4 in _itkRescaleIntensityImageFilterPython:
_itkRescaleIntensityImageFilterPython.itkRescaleIntensityImageFilterIUS4IUS4_swigregister(itkRescaleIntensityImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def rescale_intensity_image_filter(*args: itkt.ImageLike,  output_minimum: int=..., output_maximum: int=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RescaleIntensityImageFilter"""
    import itk

    kwarg_typehints = { 'output_minimum':output_minimum,'output_maximum':output_maximum,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RescaleIntensityImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def rescale_intensity_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.RescaleIntensityImageFilter
    rescale_intensity_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    rescale_intensity_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__



