# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkContourSpatialObjectPointPython
else:
    import _itkContourSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMapContainerPython
class vectoritkContourSpatialObjectPoint2(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkContourSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkContourSpatialObjectPoint2 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkContourSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint2 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint2 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint2 >::difference_type
        v: std::vector< itkContourSpatialObjectPoint2,std::allocator< itkContourSpatialObjectPoint2 > > const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint2 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkContourSpatialObjectPoint2

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkContourSpatialObjectPoint2

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkContourSpatialObjectPoint2,std::allocator< itkContourSpatialObjectPoint2 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint2 >::difference_type
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkContourSpatialObjectPoint2"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkContourSpatialObjectPoint2 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkContourSpatialObjectPoint2 > &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkContourSpatialObjectPoint2 >::iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkContourSpatialObjectPoint2 >::iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkContourSpatialObjectPoint2 >::reverse_iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkContourSpatialObjectPoint2 >::reverse_iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkContourSpatialObjectPoint2 >::allocator_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkContourSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint2 >::iterator

        erase(self, first, last) -> std::vector< itkContourSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        first: std::vector< itkContourSpatialObjectPoint2 >::iterator
        last: std::vector< itkContourSpatialObjectPoint2 >::iterator

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkContourSpatialObjectPoint2
        __init__(self, other) -> vectoritkContourSpatialObjectPoint2

        Parameters
        ----------
        other: std::vector< itkContourSpatialObjectPoint2 > const &

        __init__(self, size) -> vectoritkContourSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkContourSpatialObjectPoint2 >::size_type

        __init__(self, size, value) -> vectoritkContourSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkContourSpatialObjectPoint2 >::size_type
        value: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_swiginit(self, _itkContourSpatialObjectPointPython.new_vectoritkContourSpatialObjectPoint2(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_push_back(self, x)

    def front(self):
        r"""front(self) -> itkContourSpatialObjectPoint2"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_front(self)

    def back(self):
        r"""back(self) -> itkContourSpatialObjectPoint2"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkContourSpatialObjectPoint2 >::size_type
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkContourSpatialObjectPoint2 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkContourSpatialObjectPoint2 >::size_type
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkContourSpatialObjectPoint2 >::iterator

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint2 >::iterator
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint2 >::iterator
        n: std::vector< itkContourSpatialObjectPoint2 >::size_type
        x: std::vector< itkContourSpatialObjectPoint2 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkContourSpatialObjectPoint2 >::size_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkContourSpatialObjectPoint2 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_capacity(self)
    __swig_destroy__ = _itkContourSpatialObjectPointPython.delete_vectoritkContourSpatialObjectPoint2

# Register vectoritkContourSpatialObjectPoint2 in _itkContourSpatialObjectPointPython:
_itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint2_swigregister(vectoritkContourSpatialObjectPoint2)
class vectoritkContourSpatialObjectPoint3(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkContourSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkContourSpatialObjectPoint3 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkContourSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint3 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint3 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint3 >::difference_type
        v: std::vector< itkContourSpatialObjectPoint3,std::allocator< itkContourSpatialObjectPoint3 > > const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint3 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkContourSpatialObjectPoint3

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkContourSpatialObjectPoint3

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkContourSpatialObjectPoint3,std::allocator< itkContourSpatialObjectPoint3 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint3 >::difference_type
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkContourSpatialObjectPoint3"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkContourSpatialObjectPoint3 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkContourSpatialObjectPoint3 > &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkContourSpatialObjectPoint3 >::iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkContourSpatialObjectPoint3 >::iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkContourSpatialObjectPoint3 >::reverse_iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkContourSpatialObjectPoint3 >::reverse_iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkContourSpatialObjectPoint3 >::allocator_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkContourSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint3 >::iterator

        erase(self, first, last) -> std::vector< itkContourSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        first: std::vector< itkContourSpatialObjectPoint3 >::iterator
        last: std::vector< itkContourSpatialObjectPoint3 >::iterator

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkContourSpatialObjectPoint3
        __init__(self, other) -> vectoritkContourSpatialObjectPoint3

        Parameters
        ----------
        other: std::vector< itkContourSpatialObjectPoint3 > const &

        __init__(self, size) -> vectoritkContourSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkContourSpatialObjectPoint3 >::size_type

        __init__(self, size, value) -> vectoritkContourSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkContourSpatialObjectPoint3 >::size_type
        value: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_swiginit(self, _itkContourSpatialObjectPointPython.new_vectoritkContourSpatialObjectPoint3(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_push_back(self, x)

    def front(self):
        r"""front(self) -> itkContourSpatialObjectPoint3"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_front(self)

    def back(self):
        r"""back(self) -> itkContourSpatialObjectPoint3"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkContourSpatialObjectPoint3 >::size_type
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkContourSpatialObjectPoint3 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkContourSpatialObjectPoint3 >::size_type
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkContourSpatialObjectPoint3 >::iterator

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint3 >::iterator
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint3 >::iterator
        n: std::vector< itkContourSpatialObjectPoint3 >::size_type
        x: std::vector< itkContourSpatialObjectPoint3 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkContourSpatialObjectPoint3 >::size_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkContourSpatialObjectPoint3 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_capacity(self)
    __swig_destroy__ = _itkContourSpatialObjectPointPython.delete_vectoritkContourSpatialObjectPoint3

# Register vectoritkContourSpatialObjectPoint3 in _itkContourSpatialObjectPointPython:
_itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint3_swigregister(vectoritkContourSpatialObjectPoint3)
class vectoritkContourSpatialObjectPoint4(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkContourSpatialObjectPoint4 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkContourSpatialObjectPoint4 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkContourSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint4 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint4 >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint4 >::difference_type
        v: std::vector< itkContourSpatialObjectPoint4,std::allocator< itkContourSpatialObjectPoint4 > > const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type
        j: std::vector< itkContourSpatialObjectPoint4 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkContourSpatialObjectPoint4

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> itkContourSpatialObjectPoint4

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkContourSpatialObjectPoint4,std::allocator< itkContourSpatialObjectPoint4 > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkContourSpatialObjectPoint4 >::difference_type
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> itkContourSpatialObjectPoint4"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkContourSpatialObjectPoint4 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkContourSpatialObjectPoint4 > &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkContourSpatialObjectPoint4 >::iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkContourSpatialObjectPoint4 >::iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkContourSpatialObjectPoint4 >::reverse_iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkContourSpatialObjectPoint4 >::reverse_iterator"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkContourSpatialObjectPoint4 >::allocator_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkContourSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint4 >::iterator

        erase(self, first, last) -> std::vector< itkContourSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        first: std::vector< itkContourSpatialObjectPoint4 >::iterator
        last: std::vector< itkContourSpatialObjectPoint4 >::iterator

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkContourSpatialObjectPoint4
        __init__(self, other) -> vectoritkContourSpatialObjectPoint4

        Parameters
        ----------
        other: std::vector< itkContourSpatialObjectPoint4 > const &

        __init__(self, size) -> vectoritkContourSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkContourSpatialObjectPoint4 >::size_type

        __init__(self, size, value) -> vectoritkContourSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkContourSpatialObjectPoint4 >::size_type
        value: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_swiginit(self, _itkContourSpatialObjectPointPython.new_vectoritkContourSpatialObjectPoint4(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_push_back(self, x)

    def front(self):
        r"""front(self) -> itkContourSpatialObjectPoint4"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_front(self)

    def back(self):
        r"""back(self) -> itkContourSpatialObjectPoint4"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkContourSpatialObjectPoint4 >::size_type
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkContourSpatialObjectPoint4 >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkContourSpatialObjectPoint4 >::size_type
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkContourSpatialObjectPoint4 >::iterator

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint4 >::iterator
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkContourSpatialObjectPoint4 >::iterator
        n: std::vector< itkContourSpatialObjectPoint4 >::size_type
        x: std::vector< itkContourSpatialObjectPoint4 >::value_type const &

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkContourSpatialObjectPoint4 >::size_type

        """
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkContourSpatialObjectPoint4 >::size_type"""
        return _itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_capacity(self)
    __swig_destroy__ = _itkContourSpatialObjectPointPython.delete_vectoritkContourSpatialObjectPoint4

# Register vectoritkContourSpatialObjectPoint4 in _itkContourSpatialObjectPointPython:
_itkContourSpatialObjectPointPython.vectoritkContourSpatialObjectPoint4_swigregister(vectoritkContourSpatialObjectPoint4)
class itkContourSpatialObjectPoint2(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint2):
    r"""Proxy of C++ itkContourSpatialObjectPoint2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkContourSpatialObjectPoint2

        Parameters
        ----------
        arg0: itkContourSpatialObjectPoint2 const &

        __init__(self) -> itkContourSpatialObjectPoint2
        """
        _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint2_swiginit(self, _itkContourSpatialObjectPointPython.new_itkContourSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkContourSpatialObjectPointPython.delete_itkContourSpatialObjectPoint2

    def GetPickedPointInObjectSpace(self):
        r"""GetPickedPointInObjectSpace(self) -> itkPointD2"""
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint2_GetPickedPointInObjectSpace(self)

    def SetPickedPointInObjectSpace(self, point):
        r"""
        SetPickedPointInObjectSpace(self, point)

        Parameters
        ----------
        point: itkPointD2 const &

        """
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint2_SetPickedPointInObjectSpace(self, point)

    def GetNormalInObjectSpace(self):
        r"""GetNormalInObjectSpace(self) -> itkCovariantVectorD2"""
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint2_GetNormalInObjectSpace(self)

    def SetNormalInObjectSpace(self, normal):
        r"""
        SetNormalInObjectSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD2 const &

        """
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint2_SetNormalInObjectSpace(self, normal)

# Register itkContourSpatialObjectPoint2 in _itkContourSpatialObjectPointPython:
_itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint2_swigregister(itkContourSpatialObjectPoint2)
class itkContourSpatialObjectPoint3(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint3):
    r"""Proxy of C++ itkContourSpatialObjectPoint3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkContourSpatialObjectPoint3

        Parameters
        ----------
        arg0: itkContourSpatialObjectPoint3 const &

        __init__(self) -> itkContourSpatialObjectPoint3
        """
        _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint3_swiginit(self, _itkContourSpatialObjectPointPython.new_itkContourSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkContourSpatialObjectPointPython.delete_itkContourSpatialObjectPoint3

    def GetPickedPointInObjectSpace(self):
        r"""GetPickedPointInObjectSpace(self) -> itkPointD3"""
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint3_GetPickedPointInObjectSpace(self)

    def SetPickedPointInObjectSpace(self, point):
        r"""
        SetPickedPointInObjectSpace(self, point)

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint3_SetPickedPointInObjectSpace(self, point)

    def GetNormalInObjectSpace(self):
        r"""GetNormalInObjectSpace(self) -> itkCovariantVectorD3"""
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint3_GetNormalInObjectSpace(self)

    def SetNormalInObjectSpace(self, normal):
        r"""
        SetNormalInObjectSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD3 const &

        """
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint3_SetNormalInObjectSpace(self, normal)

# Register itkContourSpatialObjectPoint3 in _itkContourSpatialObjectPointPython:
_itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint3_swigregister(itkContourSpatialObjectPoint3)
class itkContourSpatialObjectPoint4(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint4):
    r"""Proxy of C++ itkContourSpatialObjectPoint4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self, arg0) -> itkContourSpatialObjectPoint4

        Parameters
        ----------
        arg0: itkContourSpatialObjectPoint4 const &

        __init__(self) -> itkContourSpatialObjectPoint4
        """
        _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint4_swiginit(self, _itkContourSpatialObjectPointPython.new_itkContourSpatialObjectPoint4(*args))
    __swig_destroy__ = _itkContourSpatialObjectPointPython.delete_itkContourSpatialObjectPoint4

    def GetPickedPointInObjectSpace(self):
        r"""GetPickedPointInObjectSpace(self) -> itkPointD4"""
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint4_GetPickedPointInObjectSpace(self)

    def SetPickedPointInObjectSpace(self, point):
        r"""
        SetPickedPointInObjectSpace(self, point)

        Parameters
        ----------
        point: itkPointD4 const &

        """
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint4_SetPickedPointInObjectSpace(self, point)

    def GetNormalInObjectSpace(self):
        r"""GetNormalInObjectSpace(self) -> itkCovariantVectorD4"""
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint4_GetNormalInObjectSpace(self)

    def SetNormalInObjectSpace(self, normal):
        r"""
        SetNormalInObjectSpace(self, normal)

        Parameters
        ----------
        normal: itkCovariantVectorD4 const &

        """
        return _itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint4_SetNormalInObjectSpace(self, normal)

# Register itkContourSpatialObjectPoint4 in _itkContourSpatialObjectPointPython:
_itkContourSpatialObjectPointPython.itkContourSpatialObjectPoint4_swigregister(itkContourSpatialObjectPoint4)

