# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageSourcesPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPhysicalPointImageSourcePython
else:
    import _itkPhysicalPointImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkGenerateImageSourcePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.ITKCommonBasePython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkPhysicalPointImageSourceICVF22_New():
    return itkPhysicalPointImageSourceICVF22.New()

class itkPhysicalPointImageSourceICVF22(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF22):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF22_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF22_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF22_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF22

        Create a new object of the class itkPhysicalPointImageSourceICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF22 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF22_swigregister(itkPhysicalPointImageSourceICVF22)

def itkPhysicalPointImageSourceICVF23_New():
    return itkPhysicalPointImageSourceICVF23.New()

class itkPhysicalPointImageSourceICVF23(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF23):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF23_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF23_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF23_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF23

        Create a new object of the class itkPhysicalPointImageSourceICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF23 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF23_swigregister(itkPhysicalPointImageSourceICVF23)

def itkPhysicalPointImageSourceICVF24_New():
    return itkPhysicalPointImageSourceICVF24.New()

class itkPhysicalPointImageSourceICVF24(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF24):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF24_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF24_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF24_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF24

        Create a new object of the class itkPhysicalPointImageSourceICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF24 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF24_swigregister(itkPhysicalPointImageSourceICVF24)

def itkPhysicalPointImageSourceICVF32_New():
    return itkPhysicalPointImageSourceICVF32.New()

class itkPhysicalPointImageSourceICVF32(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF32):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF32_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF32_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF32_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF32

        Create a new object of the class itkPhysicalPointImageSourceICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF32 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF32_swigregister(itkPhysicalPointImageSourceICVF32)

def itkPhysicalPointImageSourceICVF33_New():
    return itkPhysicalPointImageSourceICVF33.New()

class itkPhysicalPointImageSourceICVF33(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF33):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF33_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF33_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF33_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF33

        Create a new object of the class itkPhysicalPointImageSourceICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF33 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF33_swigregister(itkPhysicalPointImageSourceICVF33)

def itkPhysicalPointImageSourceICVF34_New():
    return itkPhysicalPointImageSourceICVF34.New()

class itkPhysicalPointImageSourceICVF34(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF34):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF34_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF34_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF34_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF34

        Create a new object of the class itkPhysicalPointImageSourceICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF34 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF34_swigregister(itkPhysicalPointImageSourceICVF34)

def itkPhysicalPointImageSourceICVF42_New():
    return itkPhysicalPointImageSourceICVF42.New()

class itkPhysicalPointImageSourceICVF42(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF42):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF42_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF42_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF42_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF42

        Create a new object of the class itkPhysicalPointImageSourceICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF42 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF42_swigregister(itkPhysicalPointImageSourceICVF42)

def itkPhysicalPointImageSourceICVF43_New():
    return itkPhysicalPointImageSourceICVF43.New()

class itkPhysicalPointImageSourceICVF43(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF43):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF43_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF43_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF43_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF43

        Create a new object of the class itkPhysicalPointImageSourceICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF43 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF43_swigregister(itkPhysicalPointImageSourceICVF43)

def itkPhysicalPointImageSourceICVF44_New():
    return itkPhysicalPointImageSourceICVF44.New()

class itkPhysicalPointImageSourceICVF44(itk.itkGenerateImageSourcePython.itkGenerateImageSourceICVF44):
    r"""Proxy of C++ itkPhysicalPointImageSourceICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceICVF44_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceICVF44_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF44_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceICVF44

        Create a new object of the class itkPhysicalPointImageSourceICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceICVF44 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceICVF44_swigregister(itkPhysicalPointImageSourceICVF44)

def itkPhysicalPointImageSourceIVF22_New():
    return itkPhysicalPointImageSourceIVF22.New()

class itkPhysicalPointImageSourceIVF22(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF22):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF22_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF22_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF22_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF22

        Create a new object of the class itkPhysicalPointImageSourceIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF22 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF22_swigregister(itkPhysicalPointImageSourceIVF22)

def itkPhysicalPointImageSourceIVF23_New():
    return itkPhysicalPointImageSourceIVF23.New()

class itkPhysicalPointImageSourceIVF23(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF23):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF23_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF23_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF23_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF23

        Create a new object of the class itkPhysicalPointImageSourceIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF23 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF23_swigregister(itkPhysicalPointImageSourceIVF23)

def itkPhysicalPointImageSourceIVF24_New():
    return itkPhysicalPointImageSourceIVF24.New()

class itkPhysicalPointImageSourceIVF24(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF24):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF24_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF24_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF24_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF24

        Create a new object of the class itkPhysicalPointImageSourceIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF24 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF24_swigregister(itkPhysicalPointImageSourceIVF24)

def itkPhysicalPointImageSourceIVF32_New():
    return itkPhysicalPointImageSourceIVF32.New()

class itkPhysicalPointImageSourceIVF32(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF32):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF32_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF32_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF32_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF32

        Create a new object of the class itkPhysicalPointImageSourceIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF32 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF32_swigregister(itkPhysicalPointImageSourceIVF32)

def itkPhysicalPointImageSourceIVF33_New():
    return itkPhysicalPointImageSourceIVF33.New()

class itkPhysicalPointImageSourceIVF33(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF33):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF33_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF33_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF33_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF33

        Create a new object of the class itkPhysicalPointImageSourceIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF33 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF33_swigregister(itkPhysicalPointImageSourceIVF33)

def itkPhysicalPointImageSourceIVF34_New():
    return itkPhysicalPointImageSourceIVF34.New()

class itkPhysicalPointImageSourceIVF34(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF34):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF34_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF34_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF34_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF34

        Create a new object of the class itkPhysicalPointImageSourceIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF34 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF34_swigregister(itkPhysicalPointImageSourceIVF34)

def itkPhysicalPointImageSourceIVF42_New():
    return itkPhysicalPointImageSourceIVF42.New()

class itkPhysicalPointImageSourceIVF42(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF42):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF42_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF42_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF42_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF42

        Create a new object of the class itkPhysicalPointImageSourceIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF42 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF42_swigregister(itkPhysicalPointImageSourceIVF42)

def itkPhysicalPointImageSourceIVF43_New():
    return itkPhysicalPointImageSourceIVF43.New()

class itkPhysicalPointImageSourceIVF43(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF43):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF43_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF43_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF43_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF43

        Create a new object of the class itkPhysicalPointImageSourceIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF43 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF43_swigregister(itkPhysicalPointImageSourceIVF43)

def itkPhysicalPointImageSourceIVF44_New():
    return itkPhysicalPointImageSourceIVF44.New()

class itkPhysicalPointImageSourceIVF44(itk.itkGenerateImageSourcePython.itkGenerateImageSourceIVF44):
    r"""Proxy of C++ itkPhysicalPointImageSourceIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceIVF44_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceIVF44_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF44_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceIVF44

        Create a new object of the class itkPhysicalPointImageSourceIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceIVF44 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceIVF44_swigregister(itkPhysicalPointImageSourceIVF44)

def itkPhysicalPointImageSourceVID2_New():
    return itkPhysicalPointImageSourceVID2.New()

class itkPhysicalPointImageSourceVID2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVID2):
    r"""Proxy of C++ itkPhysicalPointImageSourceVID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVID2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVID2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID2_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVID2

        Create a new object of the class itkPhysicalPointImageSourceVID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVID2 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID2_swigregister(itkPhysicalPointImageSourceVID2)

def itkPhysicalPointImageSourceVID3_New():
    return itkPhysicalPointImageSourceVID3.New()

class itkPhysicalPointImageSourceVID3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVID3):
    r"""Proxy of C++ itkPhysicalPointImageSourceVID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVID3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVID3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID3_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVID3

        Create a new object of the class itkPhysicalPointImageSourceVID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVID3 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID3_swigregister(itkPhysicalPointImageSourceVID3)

def itkPhysicalPointImageSourceVID4_New():
    return itkPhysicalPointImageSourceVID4.New()

class itkPhysicalPointImageSourceVID4(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVID4):
    r"""Proxy of C++ itkPhysicalPointImageSourceVID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVID4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVID4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID4_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVID4

        Create a new object of the class itkPhysicalPointImageSourceVID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVID4 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVID4_swigregister(itkPhysicalPointImageSourceVID4)

def itkPhysicalPointImageSourceVIF2_New():
    return itkPhysicalPointImageSourceVIF2.New()

class itkPhysicalPointImageSourceVIF2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIF2):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIF2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIF2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF2_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIF2

        Create a new object of the class itkPhysicalPointImageSourceVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIF2 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF2_swigregister(itkPhysicalPointImageSourceVIF2)

def itkPhysicalPointImageSourceVIF3_New():
    return itkPhysicalPointImageSourceVIF3.New()

class itkPhysicalPointImageSourceVIF3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIF3):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIF3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIF3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF3_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIF3

        Create a new object of the class itkPhysicalPointImageSourceVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIF3 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF3_swigregister(itkPhysicalPointImageSourceVIF3)

def itkPhysicalPointImageSourceVIF4_New():
    return itkPhysicalPointImageSourceVIF4.New()

class itkPhysicalPointImageSourceVIF4(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIF4):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIF4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIF4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF4_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIF4

        Create a new object of the class itkPhysicalPointImageSourceVIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIF4 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIF4_swigregister(itkPhysicalPointImageSourceVIF4)

def itkPhysicalPointImageSourceVISS2_New():
    return itkPhysicalPointImageSourceVISS2.New()

class itkPhysicalPointImageSourceVISS2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVISS2):
    r"""Proxy of C++ itkPhysicalPointImageSourceVISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVISS2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVISS2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS2_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVISS2

        Create a new object of the class itkPhysicalPointImageSourceVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVISS2 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS2_swigregister(itkPhysicalPointImageSourceVISS2)

def itkPhysicalPointImageSourceVISS3_New():
    return itkPhysicalPointImageSourceVISS3.New()

class itkPhysicalPointImageSourceVISS3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVISS3):
    r"""Proxy of C++ itkPhysicalPointImageSourceVISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVISS3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVISS3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS3_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVISS3

        Create a new object of the class itkPhysicalPointImageSourceVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVISS3 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS3_swigregister(itkPhysicalPointImageSourceVISS3)

def itkPhysicalPointImageSourceVISS4_New():
    return itkPhysicalPointImageSourceVISS4.New()

class itkPhysicalPointImageSourceVISS4(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVISS4):
    r"""Proxy of C++ itkPhysicalPointImageSourceVISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVISS4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVISS4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS4_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVISS4

        Create a new object of the class itkPhysicalPointImageSourceVISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVISS4 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVISS4_swigregister(itkPhysicalPointImageSourceVISS4)

def itkPhysicalPointImageSourceVIUC2_New():
    return itkPhysicalPointImageSourceVIUC2.New()

class itkPhysicalPointImageSourceVIUC2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUC2):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIUC2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIUC2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC2_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIUC2

        Create a new object of the class itkPhysicalPointImageSourceVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIUC2 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC2_swigregister(itkPhysicalPointImageSourceVIUC2)

def itkPhysicalPointImageSourceVIUC3_New():
    return itkPhysicalPointImageSourceVIUC3.New()

class itkPhysicalPointImageSourceVIUC3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUC3):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIUC3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIUC3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC3_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIUC3

        Create a new object of the class itkPhysicalPointImageSourceVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIUC3 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC3_swigregister(itkPhysicalPointImageSourceVIUC3)

def itkPhysicalPointImageSourceVIUC4_New():
    return itkPhysicalPointImageSourceVIUC4.New()

class itkPhysicalPointImageSourceVIUC4(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUC4):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIUC4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIUC4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC4_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIUC4

        Create a new object of the class itkPhysicalPointImageSourceVIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIUC4 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUC4_swigregister(itkPhysicalPointImageSourceVIUC4)

def itkPhysicalPointImageSourceVIUS2_New():
    return itkPhysicalPointImageSourceVIUS2.New()

class itkPhysicalPointImageSourceVIUS2(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUS2):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIUS2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIUS2_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS2_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIUS2

        Create a new object of the class itkPhysicalPointImageSourceVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIUS2 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS2_swigregister(itkPhysicalPointImageSourceVIUS2)

def itkPhysicalPointImageSourceVIUS3_New():
    return itkPhysicalPointImageSourceVIUS3.New()

class itkPhysicalPointImageSourceVIUS3(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUS3):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIUS3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIUS3_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS3_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIUS3

        Create a new object of the class itkPhysicalPointImageSourceVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIUS3 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS3_swigregister(itkPhysicalPointImageSourceVIUS3)

def itkPhysicalPointImageSourceVIUS4_New():
    return itkPhysicalPointImageSourceVIUS4.New()

class itkPhysicalPointImageSourceVIUS4(itk.itkGenerateImageSourcePython.itkGenerateImageSourceVIUS4):
    r"""Proxy of C++ itkPhysicalPointImageSourceVIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhysicalPointImageSourceVIUS4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhysicalPointImageSourceVIUS4_Pointer"""
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS4_Clone(self)
    __swig_destroy__ = _itkPhysicalPointImageSourcePython.delete_itkPhysicalPointImageSourceVIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhysicalPointImageSourceVIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhysicalPointImageSourceVIUS4

        Create a new object of the class itkPhysicalPointImageSourceVIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhysicalPointImageSourceVIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhysicalPointImageSourceVIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhysicalPointImageSourceVIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhysicalPointImageSourceVIUS4 in _itkPhysicalPointImageSourcePython:
_itkPhysicalPointImageSourcePython.itkPhysicalPointImageSourceVIUS4_swigregister(itkPhysicalPointImageSourceVIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def physical_point_image_source(*args,  use_reference_image: bool=..., size: Sequence[int]=..., spacing: Sequence[float]=..., origin: Sequence[float]=..., direction=..., start_index: Sequence[int]=..., output_parameters_from_image: itkt.ImageBase=..., reference_image: itkt.ImageBase=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for PhysicalPointImageSource"""
    import itk

    kwarg_typehints = { 'use_reference_image':use_reference_image,'size':size,'spacing':spacing,'origin':origin,'direction':direction,'start_index':start_index,'output_parameters_from_image':output_parameters_from_image,'reference_image':reference_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PhysicalPointImageSource.New(*args, **kwargs)

    return instance.__internal_call__()

def physical_point_image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageSources.PhysicalPointImageSource
    physical_point_image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    physical_point_image_source.__doc__ = filter_object.__doc__



