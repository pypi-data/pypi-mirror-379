# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIsoDataThresholdCalculatorPython
else:
    import _itkIsoDataThresholdCalculatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkHistogramThresholdCalculatorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkArrayPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkHistogramPython
import itk.itkSamplePython

def itkIsoDataThresholdCalculatorHDD_New():
    return itkIsoDataThresholdCalculatorHDD.New()

class itkIsoDataThresholdCalculatorHDD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDD):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHDD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHDD_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHDD_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDD_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHDD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHDD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHDD

        Create a new object of the class itkIsoDataThresholdCalculatorHDD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHDD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHDD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHDD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHDD in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDD_swigregister(itkIsoDataThresholdCalculatorHDD)

def itkIsoDataThresholdCalculatorHDF_New():
    return itkIsoDataThresholdCalculatorHDF.New()

class itkIsoDataThresholdCalculatorHDF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDF):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHDF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHDF_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHDF_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDF_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHDF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHDF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHDF

        Create a new object of the class itkIsoDataThresholdCalculatorHDF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHDF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHDF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHDF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHDF in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDF_swigregister(itkIsoDataThresholdCalculatorHDF)

def itkIsoDataThresholdCalculatorHDSS_New():
    return itkIsoDataThresholdCalculatorHDSS.New()

class itkIsoDataThresholdCalculatorHDSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDSS):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHDSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHDSS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHDSS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDSS_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHDSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHDSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDSS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHDSS

        Create a new object of the class itkIsoDataThresholdCalculatorHDSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHDSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHDSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHDSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHDSS in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDSS_swigregister(itkIsoDataThresholdCalculatorHDSS)

def itkIsoDataThresholdCalculatorHDUC_New():
    return itkIsoDataThresholdCalculatorHDUC.New()

class itkIsoDataThresholdCalculatorHDUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUC):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHDUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHDUC_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHDUC_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUC_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHDUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHDUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHDUC

        Create a new object of the class itkIsoDataThresholdCalculatorHDUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHDUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHDUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHDUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHDUC in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUC_swigregister(itkIsoDataThresholdCalculatorHDUC)

def itkIsoDataThresholdCalculatorHDUS_New():
    return itkIsoDataThresholdCalculatorHDUS.New()

class itkIsoDataThresholdCalculatorHDUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHDUS):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHDUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHDUS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHDUS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUS_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHDUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHDUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHDUS

        Create a new object of the class itkIsoDataThresholdCalculatorHDUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHDUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHDUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHDUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHDUS in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHDUS_swigregister(itkIsoDataThresholdCalculatorHDUS)

def itkIsoDataThresholdCalculatorHFD_New():
    return itkIsoDataThresholdCalculatorHFD.New()

class itkIsoDataThresholdCalculatorHFD(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFD):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHFD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHFD_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHFD_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFD_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHFD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHFD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFD_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHFD

        Create a new object of the class itkIsoDataThresholdCalculatorHFD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHFD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHFD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHFD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHFD in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFD_swigregister(itkIsoDataThresholdCalculatorHFD)

def itkIsoDataThresholdCalculatorHFF_New():
    return itkIsoDataThresholdCalculatorHFF.New()

class itkIsoDataThresholdCalculatorHFF(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFF):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHFF_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHFF_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFF_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHFF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHFF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHFF

        Create a new object of the class itkIsoDataThresholdCalculatorHFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHFF in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFF_swigregister(itkIsoDataThresholdCalculatorHFF)

def itkIsoDataThresholdCalculatorHFSS_New():
    return itkIsoDataThresholdCalculatorHFSS.New()

class itkIsoDataThresholdCalculatorHFSS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFSS):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHFSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHFSS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHFSS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFSS_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHFSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHFSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFSS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHFSS

        Create a new object of the class itkIsoDataThresholdCalculatorHFSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHFSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHFSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHFSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHFSS in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFSS_swigregister(itkIsoDataThresholdCalculatorHFSS)

def itkIsoDataThresholdCalculatorHFUC_New():
    return itkIsoDataThresholdCalculatorHFUC.New()

class itkIsoDataThresholdCalculatorHFUC(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUC):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHFUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHFUC_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHFUC_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUC_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHFUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHFUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHFUC

        Create a new object of the class itkIsoDataThresholdCalculatorHFUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHFUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHFUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHFUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHFUC in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUC_swigregister(itkIsoDataThresholdCalculatorHFUC)

def itkIsoDataThresholdCalculatorHFUS_New():
    return itkIsoDataThresholdCalculatorHFUS.New()

class itkIsoDataThresholdCalculatorHFUS(itk.itkHistogramThresholdCalculatorPython.itkHistogramThresholdCalculatorHFUS):
    r"""Proxy of C++ itkIsoDataThresholdCalculatorHFUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoDataThresholdCalculatorHFUS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoDataThresholdCalculatorHFUS_Pointer"""
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUS_Clone(self)
    __swig_destroy__ = _itkIsoDataThresholdCalculatorPython.delete_itkIsoDataThresholdCalculatorHFUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoDataThresholdCalculatorHFUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoDataThresholdCalculatorHFUS

        Create a new object of the class itkIsoDataThresholdCalculatorHFUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoDataThresholdCalculatorHFUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoDataThresholdCalculatorHFUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoDataThresholdCalculatorHFUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoDataThresholdCalculatorHFUS in _itkIsoDataThresholdCalculatorPython:
_itkIsoDataThresholdCalculatorPython.itkIsoDataThresholdCalculatorHFUS_swigregister(itkIsoDataThresholdCalculatorHFUS)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def iso_data_threshold_calculator(*args, **kwargs):
    """Functional interface for IsoDataThresholdCalculator"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.IsoDataThresholdCalculator.New(*args, **kwargs)

    return instance.__internal_call__()

def iso_data_threshold_calculator_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKThresholding.IsoDataThresholdCalculator
    iso_data_threshold_calculator.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    iso_data_threshold_calculator.__doc__ = filter_object.__doc__



