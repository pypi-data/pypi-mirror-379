# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryProjectionImageFilterPython
else:
    import _itkBinaryProjectionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterBPython

def itkBinaryProjectionImageFilterID2ID2_Superclass_New():
    return itkBinaryProjectionImageFilterID2ID2_Superclass.New()

class itkBinaryProjectionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID2ID2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID2ID2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Superclass_swigregister(itkBinaryProjectionImageFilterID2ID2_Superclass)

def itkBinaryProjectionImageFilterID3ID3_Superclass_New():
    return itkBinaryProjectionImageFilterID3ID3_Superclass.New()

class itkBinaryProjectionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID3ID3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID3ID3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Superclass_swigregister(itkBinaryProjectionImageFilterID3ID3_Superclass)

def itkBinaryProjectionImageFilterID4ID4_Superclass_New():
    return itkBinaryProjectionImageFilterID4ID4_Superclass.New()

class itkBinaryProjectionImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterID4ID4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID4ID4_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID4ID4_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Superclass_swigregister(itkBinaryProjectionImageFilterID4ID4_Superclass)

def itkBinaryProjectionImageFilterIF2IF2_Superclass_New():
    return itkBinaryProjectionImageFilterIF2IF2_Superclass.New()

class itkBinaryProjectionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF2IF2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF2IF2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Superclass_swigregister(itkBinaryProjectionImageFilterIF2IF2_Superclass)

def itkBinaryProjectionImageFilterIF3IF3_Superclass_New():
    return itkBinaryProjectionImageFilterIF3IF3_Superclass.New()

class itkBinaryProjectionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF3IF3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF3IF3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Superclass_swigregister(itkBinaryProjectionImageFilterIF3IF3_Superclass)

def itkBinaryProjectionImageFilterIF4IF4_Superclass_New():
    return itkBinaryProjectionImageFilterIF4IF4_Superclass.New()

class itkBinaryProjectionImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF4IF4_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF4IF4_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Superclass_swigregister(itkBinaryProjectionImageFilterIF4IF4_Superclass)

def itkBinaryProjectionImageFilterISS2ISS2_Superclass_New():
    return itkBinaryProjectionImageFilterISS2ISS2_Superclass.New()

class itkBinaryProjectionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS2ISS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Superclass_swigregister(itkBinaryProjectionImageFilterISS2ISS2_Superclass)

def itkBinaryProjectionImageFilterISS3ISS2_Superclass_New():
    return itkBinaryProjectionImageFilterISS3ISS2_Superclass.New()

class itkBinaryProjectionImageFilterISS3ISS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS3ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS3ISS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS3ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Superclass_swigregister(itkBinaryProjectionImageFilterISS3ISS2_Superclass)

def itkBinaryProjectionImageFilterISS3ISS3_Superclass_New():
    return itkBinaryProjectionImageFilterISS3ISS3_Superclass.New()

class itkBinaryProjectionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Superclass_swigregister(itkBinaryProjectionImageFilterISS3ISS3_Superclass)

def itkBinaryProjectionImageFilterISS4ISS3_Superclass_New():
    return itkBinaryProjectionImageFilterISS4ISS3_Superclass.New()

class itkBinaryProjectionImageFilterISS4ISS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4ISS3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS4ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS4ISS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS4ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS4ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS4ISS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS4ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS4ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS4ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS4ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS4ISS3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Superclass_swigregister(itkBinaryProjectionImageFilterISS4ISS3_Superclass)

def itkBinaryProjectionImageFilterISS4ISS4_Superclass_New():
    return itkBinaryProjectionImageFilterISS4ISS4_Superclass.New()

class itkBinaryProjectionImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS4ISS4_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Superclass_swigregister(itkBinaryProjectionImageFilterISS4ISS4_Superclass)

def itkBinaryProjectionImageFilterIUC2IUC2_Superclass_New():
    return itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New()

class itkBinaryProjectionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC2IUC2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Superclass_swigregister(itkBinaryProjectionImageFilterIUC2IUC2_Superclass)

def itkBinaryProjectionImageFilterIUC3IUC2_Superclass_New():
    return itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New()

class itkBinaryProjectionImageFilterIUC3IUC2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Superclass_swigregister(itkBinaryProjectionImageFilterIUC3IUC2_Superclass)

def itkBinaryProjectionImageFilterIUC3IUC3_Superclass_New():
    return itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New()

class itkBinaryProjectionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Superclass_swigregister(itkBinaryProjectionImageFilterIUC3IUC3_Superclass)

def itkBinaryProjectionImageFilterIUC4IUC3_Superclass_New():
    return itkBinaryProjectionImageFilterIUC4IUC3_Superclass.New()

class itkBinaryProjectionImageFilterIUC4IUC3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IUC3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC4IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC4IUC3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC4IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC4IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC4IUC3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC4IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC4IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC4IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC4IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC4IUC3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Superclass_swigregister(itkBinaryProjectionImageFilterIUC4IUC3_Superclass)

def itkBinaryProjectionImageFilterIUC4IUC4_Superclass_New():
    return itkBinaryProjectionImageFilterIUC4IUC4_Superclass.New()

class itkBinaryProjectionImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC4IUC4_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Superclass_swigregister(itkBinaryProjectionImageFilterIUC4IUC4_Superclass)

def itkBinaryProjectionImageFilterIUS2IUS2_Superclass_New():
    return itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New()

class itkBinaryProjectionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS2IUS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Superclass_swigregister(itkBinaryProjectionImageFilterIUS2IUS2_Superclass)

def itkBinaryProjectionImageFilterIUS3IUS2_Superclass_New():
    return itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New()

class itkBinaryProjectionImageFilterIUS3IUS2_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS2):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS2_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS2_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Superclass_swigregister(itkBinaryProjectionImageFilterIUS3IUS2_Superclass)

def itkBinaryProjectionImageFilterIUS3IUS3_Superclass_New():
    return itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New()

class itkBinaryProjectionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Superclass_swigregister(itkBinaryProjectionImageFilterIUS3IUS3_Superclass)

def itkBinaryProjectionImageFilterIUS4IUS3_Superclass_New():
    return itkBinaryProjectionImageFilterIUS4IUS3_Superclass.New()

class itkBinaryProjectionImageFilterIUS4IUS3_Superclass(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IUS3):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS4IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS4IUS3_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS4IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS4IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS4IUS3_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS4IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS4IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS4IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS4IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS4IUS3_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Superclass_swigregister(itkBinaryProjectionImageFilterIUS4IUS3_Superclass)

def itkBinaryProjectionImageFilterIUS4IUS4_Superclass_New():
    return itkBinaryProjectionImageFilterIUS4IUS4_Superclass.New()

class itkBinaryProjectionImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass_ImageDimensionCheck
    

    def SetProjectionDimension(self, _arg):
        r"""
        SetProjectionDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass_SetProjectionDimension(self, _arg)

    def GetProjectionDimension(self):
        r"""GetProjectionDimension(self) -> unsigned int const &"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass_GetProjectionDimension(self)
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkBinaryProjectionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS4IUS4_Superclass in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Superclass_swigregister(itkBinaryProjectionImageFilterIUS4IUS4_Superclass)

def itkBinaryProjectionImageFilterID2ID2_New():
    return itkBinaryProjectionImageFilterID2ID2.New()

class itkBinaryProjectionImageFilterID2ID2(itkBinaryProjectionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterID2ID2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterID2ID2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID2ID2

        Create a new object of the class itkBinaryProjectionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID2ID2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID2ID2_swigregister(itkBinaryProjectionImageFilterID2ID2)

def itkBinaryProjectionImageFilterID3ID3_New():
    return itkBinaryProjectionImageFilterID3ID3.New()

class itkBinaryProjectionImageFilterID3ID3(itkBinaryProjectionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterID3ID3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterID3ID3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID3ID3

        Create a new object of the class itkBinaryProjectionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID3ID3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID3ID3_swigregister(itkBinaryProjectionImageFilterID3ID3)

def itkBinaryProjectionImageFilterID4ID4_New():
    return itkBinaryProjectionImageFilterID4ID4.New()

class itkBinaryProjectionImageFilterID4ID4(itkBinaryProjectionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterID4ID4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterID4ID4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterID4ID4

        Create a new object of the class itkBinaryProjectionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterID4ID4 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterID4ID4_swigregister(itkBinaryProjectionImageFilterID4ID4)

def itkBinaryProjectionImageFilterIF2IF2_New():
    return itkBinaryProjectionImageFilterIF2IF2.New()

class itkBinaryProjectionImageFilterIF2IF2(itkBinaryProjectionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIF2IF2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIF2IF2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF2IF2

        Create a new object of the class itkBinaryProjectionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF2IF2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF2IF2_swigregister(itkBinaryProjectionImageFilterIF2IF2)

def itkBinaryProjectionImageFilterIF3IF3_New():
    return itkBinaryProjectionImageFilterIF3IF3.New()

class itkBinaryProjectionImageFilterIF3IF3(itkBinaryProjectionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIF3IF3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIF3IF3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF3IF3

        Create a new object of the class itkBinaryProjectionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF3IF3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF3IF3_swigregister(itkBinaryProjectionImageFilterIF3IF3)

def itkBinaryProjectionImageFilterIF4IF4_New():
    return itkBinaryProjectionImageFilterIF4IF4.New()

class itkBinaryProjectionImageFilterIF4IF4(itkBinaryProjectionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIF4IF4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIF4IF4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIF4IF4

        Create a new object of the class itkBinaryProjectionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIF4IF4 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIF4IF4_swigregister(itkBinaryProjectionImageFilterIF4IF4)

def itkBinaryProjectionImageFilterISS2ISS2_New():
    return itkBinaryProjectionImageFilterISS2ISS2.New()

class itkBinaryProjectionImageFilterISS2ISS2(itkBinaryProjectionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS2ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS2ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS2ISS2

        Create a new object of the class itkBinaryProjectionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS2ISS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS2ISS2_swigregister(itkBinaryProjectionImageFilterISS2ISS2)

def itkBinaryProjectionImageFilterISS3ISS2_New():
    return itkBinaryProjectionImageFilterISS3ISS2.New()

class itkBinaryProjectionImageFilterISS3ISS2(itkBinaryProjectionImageFilterISS3ISS2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS3ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS3ISS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS3ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS2

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS2_swigregister(itkBinaryProjectionImageFilterISS3ISS2)

def itkBinaryProjectionImageFilterISS3ISS3_New():
    return itkBinaryProjectionImageFilterISS3ISS3.New()

class itkBinaryProjectionImageFilterISS3ISS3(itkBinaryProjectionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS3ISS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS3ISS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS3ISS3

        Create a new object of the class itkBinaryProjectionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS3ISS3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS3ISS3_swigregister(itkBinaryProjectionImageFilterISS3ISS3)

def itkBinaryProjectionImageFilterISS4ISS3_New():
    return itkBinaryProjectionImageFilterISS4ISS3.New()

class itkBinaryProjectionImageFilterISS4ISS3(itkBinaryProjectionImageFilterISS4ISS3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS4ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS4ISS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS4ISS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS4ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS4ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS4ISS3

        Create a new object of the class itkBinaryProjectionImageFilterISS4ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS4ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS4ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS4ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS4ISS3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS3_swigregister(itkBinaryProjectionImageFilterISS4ISS3)

def itkBinaryProjectionImageFilterISS4ISS4_New():
    return itkBinaryProjectionImageFilterISS4ISS4.New()

class itkBinaryProjectionImageFilterISS4ISS4(itkBinaryProjectionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterISS4ISS4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterISS4ISS4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterISS4ISS4

        Create a new object of the class itkBinaryProjectionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterISS4ISS4 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterISS4ISS4_swigregister(itkBinaryProjectionImageFilterISS4ISS4)

def itkBinaryProjectionImageFilterIUC2IUC2_New():
    return itkBinaryProjectionImageFilterIUC2IUC2.New()

class itkBinaryProjectionImageFilterIUC2IUC2(itkBinaryProjectionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC2IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC2IUC2

        Create a new object of the class itkBinaryProjectionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC2IUC2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC2IUC2_swigregister(itkBinaryProjectionImageFilterIUC2IUC2)

def itkBinaryProjectionImageFilterIUC3IUC2_New():
    return itkBinaryProjectionImageFilterIUC3IUC2.New()

class itkBinaryProjectionImageFilterIUC3IUC2(itkBinaryProjectionImageFilterIUC3IUC2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC3IUC2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC3IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC2

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC2_swigregister(itkBinaryProjectionImageFilterIUC3IUC2)

def itkBinaryProjectionImageFilterIUC3IUC3_New():
    return itkBinaryProjectionImageFilterIUC3IUC3.New()

class itkBinaryProjectionImageFilterIUC3IUC3(itkBinaryProjectionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC3IUC3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC3IUC3

        Create a new object of the class itkBinaryProjectionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC3IUC3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC3IUC3_swigregister(itkBinaryProjectionImageFilterIUC3IUC3)

def itkBinaryProjectionImageFilterIUC4IUC3_New():
    return itkBinaryProjectionImageFilterIUC4IUC3.New()

class itkBinaryProjectionImageFilterIUC4IUC3(itkBinaryProjectionImageFilterIUC4IUC3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC4IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC4IUC3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC4IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC4IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC4IUC3

        Create a new object of the class itkBinaryProjectionImageFilterIUC4IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC4IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC4IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC4IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC4IUC3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC3_swigregister(itkBinaryProjectionImageFilterIUC4IUC3)

def itkBinaryProjectionImageFilterIUC4IUC4_New():
    return itkBinaryProjectionImageFilterIUC4IUC4.New()

class itkBinaryProjectionImageFilterIUC4IUC4(itkBinaryProjectionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUC4IUC4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUC4IUC4

        Create a new object of the class itkBinaryProjectionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUC4IUC4 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUC4IUC4_swigregister(itkBinaryProjectionImageFilterIUC4IUC4)

def itkBinaryProjectionImageFilterIUS2IUS2_New():
    return itkBinaryProjectionImageFilterIUS2IUS2.New()

class itkBinaryProjectionImageFilterIUS2IUS2(itkBinaryProjectionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS2IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS2IUS2

        Create a new object of the class itkBinaryProjectionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS2IUS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS2IUS2_swigregister(itkBinaryProjectionImageFilterIUS2IUS2)

def itkBinaryProjectionImageFilterIUS3IUS2_New():
    return itkBinaryProjectionImageFilterIUS3IUS2.New()

class itkBinaryProjectionImageFilterIUS3IUS2(itkBinaryProjectionImageFilterIUS3IUS2_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS3IUS2_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS3IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS2

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS2 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS2_swigregister(itkBinaryProjectionImageFilterIUS3IUS2)

def itkBinaryProjectionImageFilterIUS3IUS3_New():
    return itkBinaryProjectionImageFilterIUS3IUS3.New()

class itkBinaryProjectionImageFilterIUS3IUS3(itkBinaryProjectionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS3IUS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS3IUS3

        Create a new object of the class itkBinaryProjectionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS3IUS3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS3IUS3_swigregister(itkBinaryProjectionImageFilterIUS3IUS3)

def itkBinaryProjectionImageFilterIUS4IUS3_New():
    return itkBinaryProjectionImageFilterIUS4IUS3.New()

class itkBinaryProjectionImageFilterIUS4IUS3(itkBinaryProjectionImageFilterIUS4IUS3_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS4IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS4IUS3_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS4IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS4IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS4IUS3

        Create a new object of the class itkBinaryProjectionImageFilterIUS4IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS4IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS4IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS4IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS4IUS3 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS3_swigregister(itkBinaryProjectionImageFilterIUS4IUS3)

def itkBinaryProjectionImageFilterIUS4IUS4_New():
    return itkBinaryProjectionImageFilterIUS4IUS4.New()

class itkBinaryProjectionImageFilterIUS4IUS4(itkBinaryProjectionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkBinaryProjectionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryProjectionImageFilterIUS4IUS4_Pointer"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_GetBackgroundValue(self)
    InputPixelTypeGreaterThanComparable = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_InputPixelTypeGreaterThanComparable
    
    InputHasNumericTraitsCheck = _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkBinaryProjectionImageFilterPython.delete_itkBinaryProjectionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryProjectionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryProjectionImageFilterIUS4IUS4

        Create a new object of the class itkBinaryProjectionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryProjectionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryProjectionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryProjectionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryProjectionImageFilterIUS4IUS4 in _itkBinaryProjectionImageFilterPython:
_itkBinaryProjectionImageFilterPython.itkBinaryProjectionImageFilterIUS4IUS4_swigregister(itkBinaryProjectionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_projection_image_filter(*args: itkt.ImageLike,  foreground_value: int=..., background_value: int=..., projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'foreground_value':foreground_value,'background_value':background_value,'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.BinaryProjectionImageFilter
    binary_projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_projection_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projection_image_filter(*args: itkt.ImageLike,  projection_dimension: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectionImageFilter"""
    import itk

    kwarg_typehints = { 'projection_dimension':projection_dimension }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projection_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.ProjectionImageFilter
    projection_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projection_image_filter.__doc__ = filter_object.__doc__



