# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkDTITubeSpatialObjectPython
else:
    import _itkDTITubeSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkDTITubeSpatialObjectPointPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkTubeSpatialObjectPointPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
class listitkPointBasedSpatialObjectDTITube3_Pointer(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectDTITube3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> listitkPointBasedSpatialObjectDTITube3_Pointer

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type
        v: std::list< itkPointBasedSpatialObjectDTITube3_Pointer,std::allocator< itkPointBasedSpatialObjectDTITube3_Pointer > > const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type
        j: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> listitkPointBasedSpatialObjectDTITube3_Pointer

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::list< itkPointBasedSpatialObjectDTITube3_Pointer,std::allocator< itkPointBasedSpatialObjectDTITube3_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::difference_type
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_empty(self)

    def size(self):
        r"""size(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::list< itkPointBasedSpatialObjectDTITube3_Pointer > &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_begin(self)

    def end(self):
        r"""end(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::reverse_iterator"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::reverse_iterator"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::allocator_type"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator

        erase(self, first, last) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator

        Parameters
        ----------
        first: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator
        last: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectDTITube3_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectDTITube3_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectDTITube3_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectDTITube3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectDTITube3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_swiginit(self, _itkDTITubeSpatialObjectPython.new_listitkPointBasedSpatialObjectDTITube3_Pointer(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_push_back(self, x)

    def front(self):
        r"""front(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_front(self)

    def back(self):
        r"""back(self) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::iterator
        n: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::size_type
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_insert(self, *args)

    def pop_front(self):
        r"""pop_front(self)"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_pop_front(self)

    def push_front(self, x):
        r"""
        push_front(self, x)

        Parameters
        ----------
        x: std::list< itkPointBasedSpatialObjectDTITube3_Pointer >::value_type const &

        """
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_push_front(self, x)

    def reverse(self):
        r"""reverse(self)"""
        return _itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_reverse(self)
    __swig_destroy__ = _itkDTITubeSpatialObjectPython.delete_listitkPointBasedSpatialObjectDTITube3_Pointer

# Register listitkPointBasedSpatialObjectDTITube3_Pointer in _itkDTITubeSpatialObjectPython:
_itkDTITubeSpatialObjectPython.listitkPointBasedSpatialObjectDTITube3_Pointer_swigregister(listitkPointBasedSpatialObjectDTITube3_Pointer)

def itkPointBasedSpatialObjectDTITube3_New():
    return itkPointBasedSpatialObjectDTITube3.New()

class itkPointBasedSpatialObjectDTITube3(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""Proxy of C++ itkPointBasedSpatialObjectDTITube3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPointBasedSpatialObjectDTITube3_Pointer"""
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPointBasedSpatialObjectDTITube3_Pointer"""
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_Clone(self)

    def AddPoint(self, newPoint):
        r"""
        AddPoint(self, newPoint)

        Parameters
        ----------
        newPoint: itkDTITubeSpatialObjectPoint3 const &

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_AddPoint(self, newPoint)

    def RemovePoint(self, id):
        r"""
        RemovePoint(self, id)

        Parameters
        ----------
        id: unsigned long

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_RemovePoint(self, id)

    def SetPoints(self, newPoints):
        r"""
        SetPoints(self, newPoints)

        Parameters
        ----------
        newPoints: std::vector< itkDTITubeSpatialObjectPoint3,std::allocator< itkDTITubeSpatialObjectPoint3 > > const &

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_SetPoints(self, newPoints)

    def GetPoints(self, *args):
        r"""
        GetPoints(self) -> vectoritkDTITubeSpatialObjectPoint3
        GetPoints(self) -> vectoritkDTITubeSpatialObjectPoint3
        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_GetPoints(self, *args)

    def GetPoint(self, *args):
        r"""
        GetPoint(self, id) -> itkDTITubeSpatialObjectPoint3

        Parameters
        ----------
        id: unsigned long

        GetPoint(self, id) -> itkDTITubeSpatialObjectPoint3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_GetPoint(self, *args)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned long"""
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_GetNumberOfPoints(self)

    def ClosestPointInWorldSpace(self, point):
        r"""
        ClosestPointInWorldSpace(self, point) -> itkDTITubeSpatialObjectPoint3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_ClosestPointInWorldSpace(self, point)

    def ClosestPointInObjectSpace(self, point):
        r"""
        ClosestPointInObjectSpace(self, point) -> itkDTITubeSpatialObjectPoint3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_ClosestPointInObjectSpace(self, point)
    __swig_destroy__ = _itkDTITubeSpatialObjectPython.delete_itkPointBasedSpatialObjectDTITube3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPointBasedSpatialObjectDTITube3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectDTITube3

        Create a new object of the class itkPointBasedSpatialObjectDTITube3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectDTITube3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectDTITube3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectDTITube3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectDTITube3 in _itkDTITubeSpatialObjectPython:
_itkDTITubeSpatialObjectPython.itkPointBasedSpatialObjectDTITube3_swigregister(itkPointBasedSpatialObjectDTITube3)

def itkDTITubeSpatialObject3_Superclass_New():
    return itkDTITubeSpatialObject3_Superclass.New()

class itkDTITubeSpatialObject3_Superclass(itkPointBasedSpatialObjectDTITube3):
    r"""Proxy of C++ itkDTITubeSpatialObject3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDTITubeSpatialObject3_Superclass_Pointer"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDTITubeSpatialObject3_Superclass_Pointer"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_Clone(self)

    def SetEndRounded(self, _arg):
        r"""
        SetEndRounded(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_SetEndRounded(self, _arg)

    def GetEndRounded(self):
        r"""GetEndRounded(self) -> bool"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_GetEndRounded(self)

    def EndRoundedOn(self):
        r"""EndRoundedOn(self)"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_EndRoundedOn(self)

    def EndRoundedOff(self):
        r"""EndRoundedOff(self)"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_EndRoundedOff(self)

    def ComputeTangentsAndNormals(self):
        r"""ComputeTangentsAndNormals(self) -> bool"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_ComputeTangentsAndNormals(self)

    def RemoveDuplicatePointsInObjectSpace(self, minSpacingInObjectSpace=0):
        r"""
        RemoveDuplicatePointsInObjectSpace(self, minSpacingInObjectSpace=0) -> unsigned int

        Parameters
        ----------
        minSpacingInObjectSpace: double

        """
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_RemoveDuplicatePointsInObjectSpace(self, minSpacingInObjectSpace)

    def SetParentPoint(self, _arg):
        r"""
        SetParentPoint(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_SetParentPoint(self, _arg)

    def GetParentPoint(self):
        r"""GetParentPoint(self) -> int"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_GetParentPoint(self)

    def SetRoot(self, _arg):
        r"""
        SetRoot(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_SetRoot(self, _arg)

    def GetRoot(self):
        r"""GetRoot(self) -> bool"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_GetRoot(self)

    def RootOn(self):
        r"""RootOn(self)"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_RootOn(self)

    def RootOff(self):
        r"""RootOff(self)"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_RootOff(self)
    __swig_destroy__ = _itkDTITubeSpatialObjectPython.delete_itkDTITubeSpatialObject3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDTITubeSpatialObject3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDTITubeSpatialObject3_Superclass

        Create a new object of the class itkDTITubeSpatialObject3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDTITubeSpatialObject3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDTITubeSpatialObject3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDTITubeSpatialObject3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDTITubeSpatialObject3_Superclass in _itkDTITubeSpatialObjectPython:
_itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Superclass_swigregister(itkDTITubeSpatialObject3_Superclass)

def itkDTITubeSpatialObject3_New():
    return itkDTITubeSpatialObject3.New()

class itkDTITubeSpatialObject3(itkDTITubeSpatialObject3_Superclass):
    r"""Proxy of C++ itkDTITubeSpatialObject3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDTITubeSpatialObject3_Pointer"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDTITubeSpatialObject3_Pointer"""
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_Clone(self)
    __swig_destroy__ = _itkDTITubeSpatialObjectPython.delete_itkDTITubeSpatialObject3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDTITubeSpatialObject3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDTITubeSpatialObject3

        Create a new object of the class itkDTITubeSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDTITubeSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDTITubeSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDTITubeSpatialObject3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDTITubeSpatialObject3 in _itkDTITubeSpatialObjectPython:
_itkDTITubeSpatialObjectPython.itkDTITubeSpatialObject3_swigregister(itkDTITubeSpatialObject3)

