# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkConstrainedValueAdditionImageFilterPython
else:
    import _itkConstrainedValueAdditionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkBinaryGeneratorImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkConstrainedValueAdditionImageFilterID2ID2ID2_New():
    return itkConstrainedValueAdditionImageFilterID2ID2ID2.New()

class itkConstrainedValueAdditionImageFilterID2ID2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterID2ID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterID2ID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterID2ID2ID2

        Create a new object of the class itkConstrainedValueAdditionImageFilterID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterID2ID2ID2 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID2ID2ID2_swigregister(itkConstrainedValueAdditionImageFilterID2ID2ID2)

def itkConstrainedValueAdditionImageFilterID3ID3ID3_New():
    return itkConstrainedValueAdditionImageFilterID3ID3ID3.New()

class itkConstrainedValueAdditionImageFilterID3ID3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterID3ID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterID3ID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterID3ID3ID3

        Create a new object of the class itkConstrainedValueAdditionImageFilterID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterID3ID3ID3 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID3ID3ID3_swigregister(itkConstrainedValueAdditionImageFilterID3ID3ID3)

def itkConstrainedValueAdditionImageFilterID4ID4ID4_New():
    return itkConstrainedValueAdditionImageFilterID4ID4ID4.New()

class itkConstrainedValueAdditionImageFilterID4ID4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4ID4ID4):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterID4ID4ID4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterID4ID4ID4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterID4ID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterID4ID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterID4ID4ID4

        Create a new object of the class itkConstrainedValueAdditionImageFilterID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterID4ID4ID4 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterID4ID4ID4_swigregister(itkConstrainedValueAdditionImageFilterID4ID4ID4)

def itkConstrainedValueAdditionImageFilterIF2IF2IF2_New():
    return itkConstrainedValueAdditionImageFilterIF2IF2IF2.New()

class itkConstrainedValueAdditionImageFilterIF2IF2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIF2IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIF2IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIF2IF2IF2

        Create a new object of the class itkConstrainedValueAdditionImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIF2IF2IF2 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF2IF2IF2_swigregister(itkConstrainedValueAdditionImageFilterIF2IF2IF2)

def itkConstrainedValueAdditionImageFilterIF3IF3IF3_New():
    return itkConstrainedValueAdditionImageFilterIF3IF3IF3.New()

class itkConstrainedValueAdditionImageFilterIF3IF3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIF3IF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIF3IF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIF3IF3IF3

        Create a new object of the class itkConstrainedValueAdditionImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIF3IF3IF3 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF3IF3IF3_swigregister(itkConstrainedValueAdditionImageFilterIF3IF3IF3)

def itkConstrainedValueAdditionImageFilterIF4IF4IF4_New():
    return itkConstrainedValueAdditionImageFilterIF4IF4IF4.New()

class itkConstrainedValueAdditionImageFilterIF4IF4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IF4IF4):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIF4IF4IF4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIF4IF4IF4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIF4IF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIF4IF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIF4IF4IF4

        Create a new object of the class itkConstrainedValueAdditionImageFilterIF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIF4IF4IF4 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIF4IF4IF4_swigregister(itkConstrainedValueAdditionImageFilterIF4IF4IF4)

def itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_New():
    return itkConstrainedValueAdditionImageFilterISS2ISS2ISS2.New()

class itkConstrainedValueAdditionImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterISS2ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterISS2ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterISS2ISS2ISS2

        Create a new object of the class itkConstrainedValueAdditionImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterISS2ISS2ISS2 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS2ISS2ISS2_swigregister(itkConstrainedValueAdditionImageFilterISS2ISS2ISS2)

def itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_New():
    return itkConstrainedValueAdditionImageFilterISS3ISS3ISS3.New()

class itkConstrainedValueAdditionImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterISS3ISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterISS3ISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterISS3ISS3ISS3

        Create a new object of the class itkConstrainedValueAdditionImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterISS3ISS3ISS3 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS3ISS3ISS3_swigregister(itkConstrainedValueAdditionImageFilterISS3ISS3ISS3)

def itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_New():
    return itkConstrainedValueAdditionImageFilterISS4ISS4ISS4.New()

class itkConstrainedValueAdditionImageFilterISS4ISS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4ISS4ISS4):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterISS4ISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterISS4ISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterISS4ISS4ISS4

        Create a new object of the class itkConstrainedValueAdditionImageFilterISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterISS4ISS4ISS4 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterISS4ISS4ISS4_swigregister(itkConstrainedValueAdditionImageFilterISS4ISS4ISS4)

def itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_New():
    return itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2.New()

class itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2

        Create a new object of the class itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_swigregister(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2)

def itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_New():
    return itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3.New()

class itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3

        Create a new object of the class itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_swigregister(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3)

def itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_New():
    return itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4.New()

class itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUC4IUC4):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4

        Create a new object of the class itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4_swigregister(itkConstrainedValueAdditionImageFilterIUC4IUC4IUC4)

def itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_New():
    return itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2.New()

class itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2

        Create a new object of the class itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_swigregister(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2)

def itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_New():
    return itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3.New()

class itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3

        Create a new object of the class itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_swigregister(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3)

def itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_New():
    return itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4.New()

class itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUS4IUS4):
    r"""Proxy of C++ itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_Clone(self)
    Input1ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_Input1ConvertibleToDoubleCheck
    
    Input2ConvertibleToDoubleCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_Input2ConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCastCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_DoubleConvertibleToOutputCastCheck
    
    DoubleLessThanOutputCheck = _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_DoubleLessThanOutputCheck
    
    __swig_destroy__ = _itkConstrainedValueAdditionImageFilterPython.delete_itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4

        Create a new object of the class itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4 in _itkConstrainedValueAdditionImageFilterPython:
_itkConstrainedValueAdditionImageFilterPython.itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4_swigregister(itkConstrainedValueAdditionImageFilterIUS4IUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def constrained_value_addition_image_filter(*args: itkt.ImageLike,  constant1: int=..., constant2: int=..., constant: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ConstrainedValueAdditionImageFilter"""
    import itk

    kwarg_typehints = { 'constant1':constant1,'constant2':constant2,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ConstrainedValueAdditionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def constrained_value_addition_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.ConstrainedValueAdditionImageFilter
    constrained_value_addition_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    constrained_value_addition_image_filter.__doc__ = filter_object.__doc__



