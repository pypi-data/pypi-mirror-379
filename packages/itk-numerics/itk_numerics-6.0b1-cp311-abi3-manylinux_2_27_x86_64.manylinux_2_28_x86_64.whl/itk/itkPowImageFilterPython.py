# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPowImageFilterPython
else:
    import _itkPowImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkBinaryGeneratorImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkPowImageFilterID2ID2ID2_New():
    return itkPowImageFilterID2ID2ID2.New()

class itkPowImageFilterID2ID2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2):
    r"""Proxy of C++ itkPowImageFilterID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterID2ID2ID2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterID2ID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterID2ID2ID2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterID2ID2ID2_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterID2ID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterID2ID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterID2ID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterID2ID2ID2

        Create a new object of the class itkPowImageFilterID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterID2ID2ID2 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterID2ID2ID2_swigregister(itkPowImageFilterID2ID2ID2)

def itkPowImageFilterID3ID3ID3_New():
    return itkPowImageFilterID3ID3ID3.New()

class itkPowImageFilterID3ID3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3):
    r"""Proxy of C++ itkPowImageFilterID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterID3ID3ID3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterID3ID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterID3ID3ID3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterID3ID3ID3_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterID3ID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterID3ID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterID3ID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterID3ID3ID3

        Create a new object of the class itkPowImageFilterID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterID3ID3ID3 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterID3ID3ID3_swigregister(itkPowImageFilterID3ID3ID3)

def itkPowImageFilterID4ID4ID4_New():
    return itkPowImageFilterID4ID4ID4.New()

class itkPowImageFilterID4ID4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4ID4ID4):
    r"""Proxy of C++ itkPowImageFilterID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterID4ID4ID4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterID4ID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterID4ID4ID4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterID4ID4ID4_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterID4ID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterID4ID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterID4ID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterID4ID4ID4

        Create a new object of the class itkPowImageFilterID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterID4ID4ID4 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterID4ID4ID4_swigregister(itkPowImageFilterID4ID4ID4)

def itkPowImageFilterIF2IF2IF2_New():
    return itkPowImageFilterIF2IF2IF2.New()

class itkPowImageFilterIF2IF2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2):
    r"""Proxy of C++ itkPowImageFilterIF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIF2IF2IF2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIF2IF2IF2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIF2IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIF2IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIF2IF2IF2

        Create a new object of the class itkPowImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIF2IF2IF2 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIF2IF2IF2_swigregister(itkPowImageFilterIF2IF2IF2)

def itkPowImageFilterIF3IF3IF3_New():
    return itkPowImageFilterIF3IF3IF3.New()

class itkPowImageFilterIF3IF3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3):
    r"""Proxy of C++ itkPowImageFilterIF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIF3IF3IF3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIF3IF3IF3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIF3IF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIF3IF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIF3IF3IF3

        Create a new object of the class itkPowImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIF3IF3IF3 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIF3IF3IF3_swigregister(itkPowImageFilterIF3IF3IF3)

def itkPowImageFilterIF4IF4IF4_New():
    return itkPowImageFilterIF4IF4IF4.New()

class itkPowImageFilterIF4IF4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IF4IF4):
    r"""Proxy of C++ itkPowImageFilterIF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIF4IF4IF4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF4IF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIF4IF4IF4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIF4IF4IF4_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIF4IF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIF4IF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIF4IF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIF4IF4IF4

        Create a new object of the class itkPowImageFilterIF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIF4IF4IF4 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIF4IF4IF4_swigregister(itkPowImageFilterIF4IF4IF4)

def itkPowImageFilterISS2ISS2ISS2_New():
    return itkPowImageFilterISS2ISS2ISS2.New()

class itkPowImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""Proxy of C++ itkPowImageFilterISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterISS2ISS2ISS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterISS2ISS2ISS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterISS2ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterISS2ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterISS2ISS2ISS2

        Create a new object of the class itkPowImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterISS2ISS2ISS2 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterISS2ISS2ISS2_swigregister(itkPowImageFilterISS2ISS2ISS2)

def itkPowImageFilterISS3ISS3ISS3_New():
    return itkPowImageFilterISS3ISS3ISS3.New()

class itkPowImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""Proxy of C++ itkPowImageFilterISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterISS3ISS3ISS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterISS3ISS3ISS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterISS3ISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterISS3ISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterISS3ISS3ISS3

        Create a new object of the class itkPowImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterISS3ISS3ISS3 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterISS3ISS3ISS3_swigregister(itkPowImageFilterISS3ISS3ISS3)

def itkPowImageFilterISS4ISS4ISS4_New():
    return itkPowImageFilterISS4ISS4ISS4.New()

class itkPowImageFilterISS4ISS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4ISS4ISS4):
    r"""Proxy of C++ itkPowImageFilterISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterISS4ISS4ISS4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS4ISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterISS4ISS4ISS4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterISS4ISS4ISS4_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterISS4ISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterISS4ISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterISS4ISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterISS4ISS4ISS4

        Create a new object of the class itkPowImageFilterISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterISS4ISS4ISS4 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterISS4ISS4ISS4_swigregister(itkPowImageFilterISS4ISS4ISS4)

def itkPowImageFilterIUC2IUC2IUC2_New():
    return itkPowImageFilterIUC2IUC2IUC2.New()

class itkPowImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""Proxy of C++ itkPowImageFilterIUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUC2IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIUC2IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUC2IUC2IUC2

        Create a new object of the class itkPowImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIUC2IUC2IUC2 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIUC2IUC2IUC2_swigregister(itkPowImageFilterIUC2IUC2IUC2)

def itkPowImageFilterIUC3IUC3IUC3_New():
    return itkPowImageFilterIUC3IUC3IUC3.New()

class itkPowImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""Proxy of C++ itkPowImageFilterIUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUC3IUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIUC3IUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUC3IUC3IUC3

        Create a new object of the class itkPowImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIUC3IUC3IUC3 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIUC3IUC3IUC3_swigregister(itkPowImageFilterIUC3IUC3IUC3)

def itkPowImageFilterIUC4IUC4IUC4_New():
    return itkPowImageFilterIUC4IUC4IUC4.New()

class itkPowImageFilterIUC4IUC4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUC4IUC4):
    r"""Proxy of C++ itkPowImageFilterIUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC4IUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUC4IUC4IUC4_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUC4IUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIUC4IUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIUC4IUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUC4IUC4IUC4

        Create a new object of the class itkPowImageFilterIUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIUC4IUC4IUC4 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIUC4IUC4IUC4_swigregister(itkPowImageFilterIUC4IUC4IUC4)

def itkPowImageFilterIUS2IUS2IUS2_New():
    return itkPowImageFilterIUS2IUS2IUS2.New()

class itkPowImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""Proxy of C++ itkPowImageFilterIUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUS2IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIUS2IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUS2IUS2IUS2

        Create a new object of the class itkPowImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIUS2IUS2IUS2 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIUS2IUS2IUS2_swigregister(itkPowImageFilterIUS2IUS2IUS2)

def itkPowImageFilterIUS3IUS3IUS3_New():
    return itkPowImageFilterIUS3IUS3IUS3.New()

class itkPowImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""Proxy of C++ itkPowImageFilterIUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUS3IUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIUS3IUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUS3IUS3IUS3

        Create a new object of the class itkPowImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIUS3IUS3IUS3 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIUS3IUS3IUS3_swigregister(itkPowImageFilterIUS3IUS3IUS3)

def itkPowImageFilterIUS4IUS4IUS4_New():
    return itkPowImageFilterIUS4IUS4IUS4.New()

class itkPowImageFilterIUS4IUS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUS4IUS4):
    r"""Proxy of C++ itkPowImageFilterIUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPowImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS4IUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPowImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkPowImageFilterPython.itkPowImageFilterIUS4IUS4IUS4_Clone(self)
    __swig_destroy__ = _itkPowImageFilterPython.delete_itkPowImageFilterIUS4IUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPowImageFilterIUS4IUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPowImageFilterPython.itkPowImageFilterIUS4IUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPowImageFilterIUS4IUS4IUS4

        Create a new object of the class itkPowImageFilterIUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPowImageFilterIUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPowImageFilterIUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPowImageFilterIUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPowImageFilterIUS4IUS4IUS4 in _itkPowImageFilterPython:
_itkPowImageFilterPython.itkPowImageFilterIUS4IUS4IUS4_swigregister(itkPowImageFilterIUS4IUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def pow_image_filter(*args: itkt.ImageLike,  constant1: float=..., constant2: float=..., constant: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for PowImageFilter"""
    import itk

    kwarg_typehints = { 'constant1':constant1,'constant2':constant2,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PowImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def pow_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.PowImageFilter
    pow_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    pow_image_filter.__doc__ = filter_object.__doc__



