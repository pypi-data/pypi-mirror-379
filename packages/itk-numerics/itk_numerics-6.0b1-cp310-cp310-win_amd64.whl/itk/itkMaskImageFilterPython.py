# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskImageFilterPython
else:
    import _itkMaskImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkBinaryGeneratorImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython
import itk.itkInPlaceImageFilterBPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkMaskImageFilterICD2ISS2ICD2_New():
    return itkMaskImageFilterICD2ISS2ICD2.New()

class itkMaskImageFilterICD2ISS2ICD2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD2ISS2ICD2):
    r"""Proxy of C++ itkMaskImageFilterICD2ISS2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD2ISS2ICD2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD2ISS2ICD2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD2ISS2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD2ISS2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD2ISS2ICD2

        Create a new object of the class itkMaskImageFilterICD2ISS2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD2ISS2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD2ISS2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD2ISS2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD2ISS2ICD2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD2ISS2ICD2_swigregister(itkMaskImageFilterICD2ISS2ICD2)

def itkMaskImageFilterICD2IUC2ICD2_New():
    return itkMaskImageFilterICD2IUC2ICD2.New()

class itkMaskImageFilterICD2IUC2ICD2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD2IUC2ICD2):
    r"""Proxy of C++ itkMaskImageFilterICD2IUC2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD2IUC2ICD2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD2IUC2ICD2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD2IUC2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD2IUC2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD2IUC2ICD2

        Create a new object of the class itkMaskImageFilterICD2IUC2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD2IUC2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD2IUC2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD2IUC2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD2IUC2ICD2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD2IUC2ICD2_swigregister(itkMaskImageFilterICD2IUC2ICD2)

def itkMaskImageFilterICD2IUS2ICD2_New():
    return itkMaskImageFilterICD2IUS2ICD2.New()

class itkMaskImageFilterICD2IUS2ICD2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD2IUS2ICD2):
    r"""Proxy of C++ itkMaskImageFilterICD2IUS2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD2IUS2ICD2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD2IUS2ICD2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD2IUS2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD2IUS2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD2IUS2ICD2

        Create a new object of the class itkMaskImageFilterICD2IUS2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD2IUS2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD2IUS2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD2IUS2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD2IUS2ICD2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD2IUS2ICD2_swigregister(itkMaskImageFilterICD2IUS2ICD2)

def itkMaskImageFilterICD3ISS3ICD3_New():
    return itkMaskImageFilterICD3ISS3ICD3.New()

class itkMaskImageFilterICD3ISS3ICD3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD3ISS3ICD3):
    r"""Proxy of C++ itkMaskImageFilterICD3ISS3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD3ISS3ICD3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD3ISS3ICD3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD3ISS3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD3ISS3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD3ISS3ICD3

        Create a new object of the class itkMaskImageFilterICD3ISS3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD3ISS3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD3ISS3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD3ISS3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD3ISS3ICD3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD3ISS3ICD3_swigregister(itkMaskImageFilterICD3ISS3ICD3)

def itkMaskImageFilterICD3IUC3ICD3_New():
    return itkMaskImageFilterICD3IUC3ICD3.New()

class itkMaskImageFilterICD3IUC3ICD3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD3IUC3ICD3):
    r"""Proxy of C++ itkMaskImageFilterICD3IUC3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD3IUC3ICD3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD3IUC3ICD3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD3IUC3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD3IUC3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD3IUC3ICD3

        Create a new object of the class itkMaskImageFilterICD3IUC3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD3IUC3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD3IUC3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD3IUC3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD3IUC3ICD3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD3IUC3ICD3_swigregister(itkMaskImageFilterICD3IUC3ICD3)

def itkMaskImageFilterICD3IUS3ICD3_New():
    return itkMaskImageFilterICD3IUS3ICD3.New()

class itkMaskImageFilterICD3IUS3ICD3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD3IUS3ICD3):
    r"""Proxy of C++ itkMaskImageFilterICD3IUS3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD3IUS3ICD3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD3IUS3ICD3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD3IUS3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD3IUS3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD3IUS3ICD3

        Create a new object of the class itkMaskImageFilterICD3IUS3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD3IUS3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD3IUS3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD3IUS3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD3IUS3ICD3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD3IUS3ICD3_swigregister(itkMaskImageFilterICD3IUS3ICD3)

def itkMaskImageFilterICD4ISS4ICD4_New():
    return itkMaskImageFilterICD4ISS4ICD4.New()

class itkMaskImageFilterICD4ISS4ICD4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD4ISS4ICD4):
    r"""Proxy of C++ itkMaskImageFilterICD4ISS4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD4ISS4ICD4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD4ISS4ICD4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD4ISS4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD4ISS4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD4ISS4ICD4

        Create a new object of the class itkMaskImageFilterICD4ISS4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD4ISS4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD4ISS4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD4ISS4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD4ISS4ICD4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD4ISS4ICD4_swigregister(itkMaskImageFilterICD4ISS4ICD4)

def itkMaskImageFilterICD4IUC4ICD4_New():
    return itkMaskImageFilterICD4IUC4ICD4.New()

class itkMaskImageFilterICD4IUC4ICD4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD4IUC4ICD4):
    r"""Proxy of C++ itkMaskImageFilterICD4IUC4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD4IUC4ICD4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD4IUC4ICD4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD4IUC4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD4IUC4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD4IUC4ICD4

        Create a new object of the class itkMaskImageFilterICD4IUC4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD4IUC4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD4IUC4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD4IUC4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD4IUC4ICD4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD4IUC4ICD4_swigregister(itkMaskImageFilterICD4IUC4ICD4)

def itkMaskImageFilterICD4IUS4ICD4_New():
    return itkMaskImageFilterICD4IUS4ICD4.New()

class itkMaskImageFilterICD4IUS4ICD4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICD4IUS4ICD4):
    r"""Proxy of C++ itkMaskImageFilterICD4IUS4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICD4IUS4ICD4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICD4IUS4ICD4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexD const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexD"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICD4IUS4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICD4IUS4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICD4IUS4ICD4

        Create a new object of the class itkMaskImageFilterICD4IUS4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICD4IUS4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICD4IUS4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICD4IUS4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICD4IUS4ICD4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICD4IUS4ICD4_swigregister(itkMaskImageFilterICD4IUS4ICD4)

def itkMaskImageFilterICF2ISS2ICF2_New():
    return itkMaskImageFilterICF2ISS2ICF2.New()

class itkMaskImageFilterICF2ISS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2):
    r"""Proxy of C++ itkMaskImageFilterICF2ISS2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF2ISS2ICF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF2ISS2ICF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF2ISS2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF2ISS2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF2ISS2ICF2

        Create a new object of the class itkMaskImageFilterICF2ISS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF2ISS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF2ISS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF2ISS2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF2ISS2ICF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF2ISS2ICF2_swigregister(itkMaskImageFilterICF2ISS2ICF2)

def itkMaskImageFilterICF2IUC2ICF2_New():
    return itkMaskImageFilterICF2IUC2ICF2.New()

class itkMaskImageFilterICF2IUC2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2):
    r"""Proxy of C++ itkMaskImageFilterICF2IUC2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF2IUC2ICF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF2IUC2ICF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF2IUC2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF2IUC2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF2IUC2ICF2

        Create a new object of the class itkMaskImageFilterICF2IUC2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF2IUC2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF2IUC2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF2IUC2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF2IUC2ICF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF2IUC2ICF2_swigregister(itkMaskImageFilterICF2IUC2ICF2)

def itkMaskImageFilterICF2IUS2ICF2_New():
    return itkMaskImageFilterICF2IUS2ICF2.New()

class itkMaskImageFilterICF2IUS2ICF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2):
    r"""Proxy of C++ itkMaskImageFilterICF2IUS2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF2IUS2ICF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF2IUS2ICF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF2IUS2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF2IUS2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF2IUS2ICF2

        Create a new object of the class itkMaskImageFilterICF2IUS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF2IUS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF2IUS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF2IUS2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF2IUS2ICF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF2IUS2ICF2_swigregister(itkMaskImageFilterICF2IUS2ICF2)

def itkMaskImageFilterICF3ISS3ICF3_New():
    return itkMaskImageFilterICF3ISS3ICF3.New()

class itkMaskImageFilterICF3ISS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3):
    r"""Proxy of C++ itkMaskImageFilterICF3ISS3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF3ISS3ICF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF3ISS3ICF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF3ISS3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF3ISS3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF3ISS3ICF3

        Create a new object of the class itkMaskImageFilterICF3ISS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF3ISS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF3ISS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF3ISS3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF3ISS3ICF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF3ISS3ICF3_swigregister(itkMaskImageFilterICF3ISS3ICF3)

def itkMaskImageFilterICF3IUC3ICF3_New():
    return itkMaskImageFilterICF3IUC3ICF3.New()

class itkMaskImageFilterICF3IUC3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3):
    r"""Proxy of C++ itkMaskImageFilterICF3IUC3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF3IUC3ICF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF3IUC3ICF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF3IUC3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF3IUC3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF3IUC3ICF3

        Create a new object of the class itkMaskImageFilterICF3IUC3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF3IUC3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF3IUC3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF3IUC3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF3IUC3ICF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF3IUC3ICF3_swigregister(itkMaskImageFilterICF3IUC3ICF3)

def itkMaskImageFilterICF3IUS3ICF3_New():
    return itkMaskImageFilterICF3IUS3ICF3.New()

class itkMaskImageFilterICF3IUS3ICF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3):
    r"""Proxy of C++ itkMaskImageFilterICF3IUS3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF3IUS3ICF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF3IUS3ICF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF3IUS3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF3IUS3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF3IUS3ICF3

        Create a new object of the class itkMaskImageFilterICF3IUS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF3IUS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF3IUS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF3IUS3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF3IUS3ICF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF3IUS3ICF3_swigregister(itkMaskImageFilterICF3IUS3ICF3)

def itkMaskImageFilterICF4ISS4ICF4_New():
    return itkMaskImageFilterICF4ISS4ICF4.New()

class itkMaskImageFilterICF4ISS4ICF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF4ISS4ICF4):
    r"""Proxy of C++ itkMaskImageFilterICF4ISS4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF4ISS4ICF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF4ISS4ICF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF4ISS4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF4ISS4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF4ISS4ICF4

        Create a new object of the class itkMaskImageFilterICF4ISS4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF4ISS4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF4ISS4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF4ISS4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF4ISS4ICF4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF4ISS4ICF4_swigregister(itkMaskImageFilterICF4ISS4ICF4)

def itkMaskImageFilterICF4IUC4ICF4_New():
    return itkMaskImageFilterICF4IUC4ICF4.New()

class itkMaskImageFilterICF4IUC4ICF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF4IUC4ICF4):
    r"""Proxy of C++ itkMaskImageFilterICF4IUC4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF4IUC4ICF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF4IUC4ICF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF4IUC4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF4IUC4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF4IUC4ICF4

        Create a new object of the class itkMaskImageFilterICF4IUC4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF4IUC4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF4IUC4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF4IUC4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF4IUC4ICF4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF4IUC4ICF4_swigregister(itkMaskImageFilterICF4IUC4ICF4)

def itkMaskImageFilterICF4IUS4ICF4_New():
    return itkMaskImageFilterICF4IUS4ICF4.New()

class itkMaskImageFilterICF4IUS4ICF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF4IUS4ICF4):
    r"""Proxy of C++ itkMaskImageFilterICF4IUS4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICF4IUS4ICF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICF4IUS4ICF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: stdcomplexF const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> stdcomplexF"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICF4IUS4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICF4IUS4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICF4IUS4ICF4

        Create a new object of the class itkMaskImageFilterICF4IUS4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICF4IUS4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICF4IUS4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICF4IUS4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICF4IUS4ICF4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICF4IUS4ICF4_swigregister(itkMaskImageFilterICF4IUS4ICF4)

def itkMaskImageFilterICVF22ISS2ICVF22_New():
    return itkMaskImageFilterICVF22ISS2ICVF22.New()

class itkMaskImageFilterICVF22ISS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22):
    r"""Proxy of C++ itkMaskImageFilterICVF22ISS2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF22ISS2ICVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF22ISS2ICVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF22ISS2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF22ISS2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF22ISS2ICVF22

        Create a new object of the class itkMaskImageFilterICVF22ISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF22ISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF22ISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF22ISS2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF22ISS2ICVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF22ISS2ICVF22_swigregister(itkMaskImageFilterICVF22ISS2ICVF22)

def itkMaskImageFilterICVF22IUC2ICVF22_New():
    return itkMaskImageFilterICVF22IUC2ICVF22.New()

class itkMaskImageFilterICVF22IUC2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22):
    r"""Proxy of C++ itkMaskImageFilterICVF22IUC2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF22IUC2ICVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF22IUC2ICVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF22IUC2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF22IUC2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF22IUC2ICVF22

        Create a new object of the class itkMaskImageFilterICVF22IUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF22IUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF22IUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF22IUC2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF22IUC2ICVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUC2ICVF22_swigregister(itkMaskImageFilterICVF22IUC2ICVF22)

def itkMaskImageFilterICVF22IUS2ICVF22_New():
    return itkMaskImageFilterICVF22IUS2ICVF22.New()

class itkMaskImageFilterICVF22IUS2ICVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22):
    r"""Proxy of C++ itkMaskImageFilterICVF22IUS2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF22IUS2ICVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF22IUS2ICVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF22IUS2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF22IUS2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF22IUS2ICVF22

        Create a new object of the class itkMaskImageFilterICVF22IUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF22IUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF22IUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF22IUS2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF22IUS2ICVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF22IUS2ICVF22_swigregister(itkMaskImageFilterICVF22IUS2ICVF22)

def itkMaskImageFilterICVF23ISS3ICVF23_New():
    return itkMaskImageFilterICVF23ISS3ICVF23.New()

class itkMaskImageFilterICVF23ISS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23):
    r"""Proxy of C++ itkMaskImageFilterICVF23ISS3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF23ISS3ICVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF23ISS3ICVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF23ISS3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF23ISS3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF23ISS3ICVF23

        Create a new object of the class itkMaskImageFilterICVF23ISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF23ISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF23ISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF23ISS3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF23ISS3ICVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF23ISS3ICVF23_swigregister(itkMaskImageFilterICVF23ISS3ICVF23)

def itkMaskImageFilterICVF23IUC3ICVF23_New():
    return itkMaskImageFilterICVF23IUC3ICVF23.New()

class itkMaskImageFilterICVF23IUC3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23):
    r"""Proxy of C++ itkMaskImageFilterICVF23IUC3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF23IUC3ICVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF23IUC3ICVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF23IUC3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF23IUC3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF23IUC3ICVF23

        Create a new object of the class itkMaskImageFilterICVF23IUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF23IUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF23IUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF23IUC3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF23IUC3ICVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUC3ICVF23_swigregister(itkMaskImageFilterICVF23IUC3ICVF23)

def itkMaskImageFilterICVF23IUS3ICVF23_New():
    return itkMaskImageFilterICVF23IUS3ICVF23.New()

class itkMaskImageFilterICVF23IUS3ICVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23):
    r"""Proxy of C++ itkMaskImageFilterICVF23IUS3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF23IUS3ICVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF23IUS3ICVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF23IUS3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF23IUS3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF23IUS3ICVF23

        Create a new object of the class itkMaskImageFilterICVF23IUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF23IUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF23IUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF23IUS3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF23IUS3ICVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF23IUS3ICVF23_swigregister(itkMaskImageFilterICVF23IUS3ICVF23)

def itkMaskImageFilterICVF24ISS4ICVF24_New():
    return itkMaskImageFilterICVF24ISS4ICVF24.New()

class itkMaskImageFilterICVF24ISS4ICVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF24ISS4ICVF24):
    r"""Proxy of C++ itkMaskImageFilterICVF24ISS4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF24ISS4ICVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF24ISS4ICVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF24ISS4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF24ISS4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF24ISS4ICVF24

        Create a new object of the class itkMaskImageFilterICVF24ISS4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF24ISS4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF24ISS4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF24ISS4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF24ISS4ICVF24 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF24ISS4ICVF24_swigregister(itkMaskImageFilterICVF24ISS4ICVF24)

def itkMaskImageFilterICVF24IUC4ICVF24_New():
    return itkMaskImageFilterICVF24IUC4ICVF24.New()

class itkMaskImageFilterICVF24IUC4ICVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF24IUC4ICVF24):
    r"""Proxy of C++ itkMaskImageFilterICVF24IUC4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF24IUC4ICVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF24IUC4ICVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF24IUC4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF24IUC4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF24IUC4ICVF24

        Create a new object of the class itkMaskImageFilterICVF24IUC4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF24IUC4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF24IUC4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF24IUC4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF24IUC4ICVF24 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF24IUC4ICVF24_swigregister(itkMaskImageFilterICVF24IUC4ICVF24)

def itkMaskImageFilterICVF24IUS4ICVF24_New():
    return itkMaskImageFilterICVF24IUS4ICVF24.New()

class itkMaskImageFilterICVF24IUS4ICVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF24IUS4ICVF24):
    r"""Proxy of C++ itkMaskImageFilterICVF24IUS4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF24IUS4ICVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF24IUS4ICVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF24IUS4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF24IUS4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF24IUS4ICVF24

        Create a new object of the class itkMaskImageFilterICVF24IUS4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF24IUS4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF24IUS4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF24IUS4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF24IUS4ICVF24 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF24IUS4ICVF24_swigregister(itkMaskImageFilterICVF24IUS4ICVF24)

def itkMaskImageFilterICVF32ISS2ICVF32_New():
    return itkMaskImageFilterICVF32ISS2ICVF32.New()

class itkMaskImageFilterICVF32ISS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32):
    r"""Proxy of C++ itkMaskImageFilterICVF32ISS2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF32ISS2ICVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF32ISS2ICVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF32ISS2ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF32ISS2ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF32ISS2ICVF32

        Create a new object of the class itkMaskImageFilterICVF32ISS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF32ISS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF32ISS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF32ISS2ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF32ISS2ICVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF32ISS2ICVF32_swigregister(itkMaskImageFilterICVF32ISS2ICVF32)

def itkMaskImageFilterICVF32IUC2ICVF32_New():
    return itkMaskImageFilterICVF32IUC2ICVF32.New()

class itkMaskImageFilterICVF32IUC2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32):
    r"""Proxy of C++ itkMaskImageFilterICVF32IUC2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF32IUC2ICVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF32IUC2ICVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF32IUC2ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF32IUC2ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF32IUC2ICVF32

        Create a new object of the class itkMaskImageFilterICVF32IUC2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF32IUC2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF32IUC2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF32IUC2ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF32IUC2ICVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUC2ICVF32_swigregister(itkMaskImageFilterICVF32IUC2ICVF32)

def itkMaskImageFilterICVF32IUS2ICVF32_New():
    return itkMaskImageFilterICVF32IUS2ICVF32.New()

class itkMaskImageFilterICVF32IUS2ICVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32):
    r"""Proxy of C++ itkMaskImageFilterICVF32IUS2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF32IUS2ICVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF32IUS2ICVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF32IUS2ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF32IUS2ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF32IUS2ICVF32

        Create a new object of the class itkMaskImageFilterICVF32IUS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF32IUS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF32IUS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF32IUS2ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF32IUS2ICVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF32IUS2ICVF32_swigregister(itkMaskImageFilterICVF32IUS2ICVF32)

def itkMaskImageFilterICVF33ISS3ICVF33_New():
    return itkMaskImageFilterICVF33ISS3ICVF33.New()

class itkMaskImageFilterICVF33ISS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33):
    r"""Proxy of C++ itkMaskImageFilterICVF33ISS3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF33ISS3ICVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF33ISS3ICVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF33ISS3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF33ISS3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF33ISS3ICVF33

        Create a new object of the class itkMaskImageFilterICVF33ISS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF33ISS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF33ISS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF33ISS3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF33ISS3ICVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF33ISS3ICVF33_swigregister(itkMaskImageFilterICVF33ISS3ICVF33)

def itkMaskImageFilterICVF33IUC3ICVF33_New():
    return itkMaskImageFilterICVF33IUC3ICVF33.New()

class itkMaskImageFilterICVF33IUC3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33):
    r"""Proxy of C++ itkMaskImageFilterICVF33IUC3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF33IUC3ICVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF33IUC3ICVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF33IUC3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF33IUC3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF33IUC3ICVF33

        Create a new object of the class itkMaskImageFilterICVF33IUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF33IUC3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF33IUC3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF33IUC3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF33IUC3ICVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUC3ICVF33_swigregister(itkMaskImageFilterICVF33IUC3ICVF33)

def itkMaskImageFilterICVF33IUS3ICVF33_New():
    return itkMaskImageFilterICVF33IUS3ICVF33.New()

class itkMaskImageFilterICVF33IUS3ICVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33):
    r"""Proxy of C++ itkMaskImageFilterICVF33IUS3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF33IUS3ICVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF33IUS3ICVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF33IUS3ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF33IUS3ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF33IUS3ICVF33

        Create a new object of the class itkMaskImageFilterICVF33IUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF33IUS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF33IUS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF33IUS3ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF33IUS3ICVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF33IUS3ICVF33_swigregister(itkMaskImageFilterICVF33IUS3ICVF33)

def itkMaskImageFilterICVF34ISS4ICVF34_New():
    return itkMaskImageFilterICVF34ISS4ICVF34.New()

class itkMaskImageFilterICVF34ISS4ICVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF34ISS4ICVF34):
    r"""Proxy of C++ itkMaskImageFilterICVF34ISS4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF34ISS4ICVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF34ISS4ICVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF34ISS4ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF34ISS4ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF34ISS4ICVF34

        Create a new object of the class itkMaskImageFilterICVF34ISS4ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF34ISS4ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF34ISS4ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF34ISS4ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF34ISS4ICVF34 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF34ISS4ICVF34_swigregister(itkMaskImageFilterICVF34ISS4ICVF34)

def itkMaskImageFilterICVF34IUC4ICVF34_New():
    return itkMaskImageFilterICVF34IUC4ICVF34.New()

class itkMaskImageFilterICVF34IUC4ICVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF34IUC4ICVF34):
    r"""Proxy of C++ itkMaskImageFilterICVF34IUC4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF34IUC4ICVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF34IUC4ICVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF34IUC4ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF34IUC4ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF34IUC4ICVF34

        Create a new object of the class itkMaskImageFilterICVF34IUC4ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF34IUC4ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF34IUC4ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF34IUC4ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF34IUC4ICVF34 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF34IUC4ICVF34_swigregister(itkMaskImageFilterICVF34IUC4ICVF34)

def itkMaskImageFilterICVF34IUS4ICVF34_New():
    return itkMaskImageFilterICVF34IUS4ICVF34.New()

class itkMaskImageFilterICVF34IUS4ICVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF34IUS4ICVF34):
    r"""Proxy of C++ itkMaskImageFilterICVF34IUS4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF34IUS4ICVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF34IUS4ICVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF34IUS4ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF34IUS4ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF34IUS4ICVF34

        Create a new object of the class itkMaskImageFilterICVF34IUS4ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF34IUS4ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF34IUS4ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF34IUS4ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF34IUS4ICVF34 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF34IUS4ICVF34_swigregister(itkMaskImageFilterICVF34IUS4ICVF34)

def itkMaskImageFilterICVF42ISS2ICVF42_New():
    return itkMaskImageFilterICVF42ISS2ICVF42.New()

class itkMaskImageFilterICVF42ISS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42):
    r"""Proxy of C++ itkMaskImageFilterICVF42ISS2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF42ISS2ICVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF42ISS2ICVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF42ISS2ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF42ISS2ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF42ISS2ICVF42

        Create a new object of the class itkMaskImageFilterICVF42ISS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF42ISS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF42ISS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF42ISS2ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF42ISS2ICVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF42ISS2ICVF42_swigregister(itkMaskImageFilterICVF42ISS2ICVF42)

def itkMaskImageFilterICVF42IUC2ICVF42_New():
    return itkMaskImageFilterICVF42IUC2ICVF42.New()

class itkMaskImageFilterICVF42IUC2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42):
    r"""Proxy of C++ itkMaskImageFilterICVF42IUC2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF42IUC2ICVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF42IUC2ICVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF42IUC2ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF42IUC2ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF42IUC2ICVF42

        Create a new object of the class itkMaskImageFilterICVF42IUC2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF42IUC2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF42IUC2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF42IUC2ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF42IUC2ICVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUC2ICVF42_swigregister(itkMaskImageFilterICVF42IUC2ICVF42)

def itkMaskImageFilterICVF42IUS2ICVF42_New():
    return itkMaskImageFilterICVF42IUS2ICVF42.New()

class itkMaskImageFilterICVF42IUS2ICVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42):
    r"""Proxy of C++ itkMaskImageFilterICVF42IUS2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF42IUS2ICVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF42IUS2ICVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF42IUS2ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF42IUS2ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF42IUS2ICVF42

        Create a new object of the class itkMaskImageFilterICVF42IUS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF42IUS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF42IUS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF42IUS2ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF42IUS2ICVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF42IUS2ICVF42_swigregister(itkMaskImageFilterICVF42IUS2ICVF42)

def itkMaskImageFilterICVF43ISS3ICVF43_New():
    return itkMaskImageFilterICVF43ISS3ICVF43.New()

class itkMaskImageFilterICVF43ISS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43):
    r"""Proxy of C++ itkMaskImageFilterICVF43ISS3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF43ISS3ICVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF43ISS3ICVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF43ISS3ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF43ISS3ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF43ISS3ICVF43

        Create a new object of the class itkMaskImageFilterICVF43ISS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF43ISS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF43ISS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF43ISS3ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF43ISS3ICVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF43ISS3ICVF43_swigregister(itkMaskImageFilterICVF43ISS3ICVF43)

def itkMaskImageFilterICVF43IUC3ICVF43_New():
    return itkMaskImageFilterICVF43IUC3ICVF43.New()

class itkMaskImageFilterICVF43IUC3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43):
    r"""Proxy of C++ itkMaskImageFilterICVF43IUC3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF43IUC3ICVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF43IUC3ICVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF43IUC3ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF43IUC3ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF43IUC3ICVF43

        Create a new object of the class itkMaskImageFilterICVF43IUC3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF43IUC3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF43IUC3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF43IUC3ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF43IUC3ICVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUC3ICVF43_swigregister(itkMaskImageFilterICVF43IUC3ICVF43)

def itkMaskImageFilterICVF43IUS3ICVF43_New():
    return itkMaskImageFilterICVF43IUS3ICVF43.New()

class itkMaskImageFilterICVF43IUS3ICVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43):
    r"""Proxy of C++ itkMaskImageFilterICVF43IUS3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF43IUS3ICVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF43IUS3ICVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF43IUS3ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF43IUS3ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF43IUS3ICVF43

        Create a new object of the class itkMaskImageFilterICVF43IUS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF43IUS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF43IUS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF43IUS3ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF43IUS3ICVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF43IUS3ICVF43_swigregister(itkMaskImageFilterICVF43IUS3ICVF43)

def itkMaskImageFilterICVF44ISS4ICVF44_New():
    return itkMaskImageFilterICVF44ISS4ICVF44.New()

class itkMaskImageFilterICVF44ISS4ICVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF44ISS4ICVF44):
    r"""Proxy of C++ itkMaskImageFilterICVF44ISS4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF44ISS4ICVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF44ISS4ICVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF44ISS4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF44ISS4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF44ISS4ICVF44

        Create a new object of the class itkMaskImageFilterICVF44ISS4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF44ISS4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF44ISS4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF44ISS4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF44ISS4ICVF44 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF44ISS4ICVF44_swigregister(itkMaskImageFilterICVF44ISS4ICVF44)

def itkMaskImageFilterICVF44IUC4ICVF44_New():
    return itkMaskImageFilterICVF44IUC4ICVF44.New()

class itkMaskImageFilterICVF44IUC4ICVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF44IUC4ICVF44):
    r"""Proxy of C++ itkMaskImageFilterICVF44IUC4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF44IUC4ICVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF44IUC4ICVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF44IUC4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF44IUC4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF44IUC4ICVF44

        Create a new object of the class itkMaskImageFilterICVF44IUC4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF44IUC4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF44IUC4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF44IUC4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF44IUC4ICVF44 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF44IUC4ICVF44_swigregister(itkMaskImageFilterICVF44IUC4ICVF44)

def itkMaskImageFilterICVF44IUS4ICVF44_New():
    return itkMaskImageFilterICVF44IUS4ICVF44.New()

class itkMaskImageFilterICVF44IUS4ICVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF44IUS4ICVF44):
    r"""Proxy of C++ itkMaskImageFilterICVF44IUS4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterICVF44IUS4ICVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterICVF44IUS4ICVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkCovariantVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkCovariantVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterICVF44IUS4ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterICVF44IUS4ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterICVF44IUS4ICVF44

        Create a new object of the class itkMaskImageFilterICVF44IUS4ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterICVF44IUS4ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterICVF44IUS4ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterICVF44IUS4ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterICVF44IUS4ICVF44 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterICVF44IUS4ICVF44_swigregister(itkMaskImageFilterICVF44IUS4ICVF44)

def itkMaskImageFilterID2ISS2ID2_New():
    return itkMaskImageFilterID2ISS2ID2.New()

class itkMaskImageFilterID2ISS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2):
    r"""Proxy of C++ itkMaskImageFilterID2ISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID2ISS2ID2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID2ISS2ID2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID2ISS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID2ISS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID2ISS2ID2

        Create a new object of the class itkMaskImageFilterID2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID2ISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID2ISS2ID2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID2ISS2ID2_swigregister(itkMaskImageFilterID2ISS2ID2)

def itkMaskImageFilterID2IUC2ID2_New():
    return itkMaskImageFilterID2IUC2ID2.New()

class itkMaskImageFilterID2IUC2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2):
    r"""Proxy of C++ itkMaskImageFilterID2IUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID2IUC2ID2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID2IUC2ID2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID2IUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID2IUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID2IUC2ID2

        Create a new object of the class itkMaskImageFilterID2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID2IUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID2IUC2ID2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID2IUC2ID2_swigregister(itkMaskImageFilterID2IUC2ID2)

def itkMaskImageFilterID2IUS2ID2_New():
    return itkMaskImageFilterID2IUS2ID2.New()

class itkMaskImageFilterID2IUS2ID2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2):
    r"""Proxy of C++ itkMaskImageFilterID2IUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID2IUS2ID2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID2IUS2ID2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID2IUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID2IUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID2IUS2ID2

        Create a new object of the class itkMaskImageFilterID2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID2IUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID2IUS2ID2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID2IUS2ID2_swigregister(itkMaskImageFilterID2IUS2ID2)

def itkMaskImageFilterID3ISS3ID3_New():
    return itkMaskImageFilterID3ISS3ID3.New()

class itkMaskImageFilterID3ISS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3):
    r"""Proxy of C++ itkMaskImageFilterID3ISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID3ISS3ID3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID3ISS3ID3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID3ISS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID3ISS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID3ISS3ID3

        Create a new object of the class itkMaskImageFilterID3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID3ISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID3ISS3ID3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID3ISS3ID3_swigregister(itkMaskImageFilterID3ISS3ID3)

def itkMaskImageFilterID3IUC3ID3_New():
    return itkMaskImageFilterID3IUC3ID3.New()

class itkMaskImageFilterID3IUC3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3):
    r"""Proxy of C++ itkMaskImageFilterID3IUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID3IUC3ID3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID3IUC3ID3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID3IUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID3IUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID3IUC3ID3

        Create a new object of the class itkMaskImageFilterID3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID3IUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID3IUC3ID3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID3IUC3ID3_swigregister(itkMaskImageFilterID3IUC3ID3)

def itkMaskImageFilterID3IUS3ID3_New():
    return itkMaskImageFilterID3IUS3ID3.New()

class itkMaskImageFilterID3IUS3ID3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3):
    r"""Proxy of C++ itkMaskImageFilterID3IUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID3IUS3ID3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID3IUS3ID3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID3IUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID3IUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID3IUS3ID3

        Create a new object of the class itkMaskImageFilterID3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID3IUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID3IUS3ID3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID3IUS3ID3_swigregister(itkMaskImageFilterID3IUS3ID3)

def itkMaskImageFilterID4ISS4ID4_New():
    return itkMaskImageFilterID4ISS4ID4.New()

class itkMaskImageFilterID4ISS4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4ISS4ID4):
    r"""Proxy of C++ itkMaskImageFilterID4ISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID4ISS4ID4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID4ISS4ID4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID4ISS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID4ISS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID4ISS4ID4

        Create a new object of the class itkMaskImageFilterID4ISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID4ISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID4ISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID4ISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID4ISS4ID4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID4ISS4ID4_swigregister(itkMaskImageFilterID4ISS4ID4)

def itkMaskImageFilterID4IUC4ID4_New():
    return itkMaskImageFilterID4IUC4ID4.New()

class itkMaskImageFilterID4IUC4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4IUC4ID4):
    r"""Proxy of C++ itkMaskImageFilterID4IUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID4IUC4ID4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID4IUC4ID4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID4IUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID4IUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID4IUC4ID4

        Create a new object of the class itkMaskImageFilterID4IUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID4IUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID4IUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID4IUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID4IUC4ID4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID4IUC4ID4_swigregister(itkMaskImageFilterID4IUC4ID4)

def itkMaskImageFilterID4IUS4ID4_New():
    return itkMaskImageFilterID4IUS4ID4.New()

class itkMaskImageFilterID4IUS4ID4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID4IUS4ID4):
    r"""Proxy of C++ itkMaskImageFilterID4IUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterID4IUS4ID4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterID4IUS4ID4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: double const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterID4IUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterID4IUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterID4IUS4ID4

        Create a new object of the class itkMaskImageFilterID4IUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterID4IUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterID4IUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterID4IUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterID4IUS4ID4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterID4IUS4ID4_swigregister(itkMaskImageFilterID4IUS4ID4)

def itkMaskImageFilterIF2ISS2IF2_New():
    return itkMaskImageFilterIF2ISS2IF2.New()

class itkMaskImageFilterIF2ISS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2):
    r"""Proxy of C++ itkMaskImageFilterIF2ISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF2ISS2IF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF2ISS2IF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF2ISS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF2ISS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF2ISS2IF2

        Create a new object of the class itkMaskImageFilterIF2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF2ISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF2ISS2IF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF2ISS2IF2_swigregister(itkMaskImageFilterIF2ISS2IF2)

def itkMaskImageFilterIF2IUC2IF2_New():
    return itkMaskImageFilterIF2IUC2IF2.New()

class itkMaskImageFilterIF2IUC2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2):
    r"""Proxy of C++ itkMaskImageFilterIF2IUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF2IUC2IF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF2IUC2IF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF2IUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF2IUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF2IUC2IF2

        Create a new object of the class itkMaskImageFilterIF2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF2IUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF2IUC2IF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF2IUC2IF2_swigregister(itkMaskImageFilterIF2IUC2IF2)

def itkMaskImageFilterIF2IUS2IF2_New():
    return itkMaskImageFilterIF2IUS2IF2.New()

class itkMaskImageFilterIF2IUS2IF2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2):
    r"""Proxy of C++ itkMaskImageFilterIF2IUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF2IUS2IF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF2IUS2IF2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF2IUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF2IUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF2IUS2IF2

        Create a new object of the class itkMaskImageFilterIF2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF2IUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF2IUS2IF2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF2IUS2IF2_swigregister(itkMaskImageFilterIF2IUS2IF2)

def itkMaskImageFilterIF3ISS3IF3_New():
    return itkMaskImageFilterIF3ISS3IF3.New()

class itkMaskImageFilterIF3ISS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3):
    r"""Proxy of C++ itkMaskImageFilterIF3ISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF3ISS3IF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF3ISS3IF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF3ISS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF3ISS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF3ISS3IF3

        Create a new object of the class itkMaskImageFilterIF3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF3ISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF3ISS3IF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF3ISS3IF3_swigregister(itkMaskImageFilterIF3ISS3IF3)

def itkMaskImageFilterIF3IUC3IF3_New():
    return itkMaskImageFilterIF3IUC3IF3.New()

class itkMaskImageFilterIF3IUC3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3):
    r"""Proxy of C++ itkMaskImageFilterIF3IUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF3IUC3IF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF3IUC3IF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF3IUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF3IUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF3IUC3IF3

        Create a new object of the class itkMaskImageFilterIF3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF3IUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF3IUC3IF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF3IUC3IF3_swigregister(itkMaskImageFilterIF3IUC3IF3)

def itkMaskImageFilterIF3IUS3IF3_New():
    return itkMaskImageFilterIF3IUS3IF3.New()

class itkMaskImageFilterIF3IUS3IF3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3):
    r"""Proxy of C++ itkMaskImageFilterIF3IUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF3IUS3IF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF3IUS3IF3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF3IUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF3IUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF3IUS3IF3

        Create a new object of the class itkMaskImageFilterIF3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF3IUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF3IUS3IF3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF3IUS3IF3_swigregister(itkMaskImageFilterIF3IUS3IF3)

def itkMaskImageFilterIF4ISS4IF4_New():
    return itkMaskImageFilterIF4ISS4IF4.New()

class itkMaskImageFilterIF4ISS4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4ISS4IF4):
    r"""Proxy of C++ itkMaskImageFilterIF4ISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF4ISS4IF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF4ISS4IF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF4ISS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF4ISS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF4ISS4IF4

        Create a new object of the class itkMaskImageFilterIF4ISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF4ISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF4ISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF4ISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF4ISS4IF4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF4ISS4IF4_swigregister(itkMaskImageFilterIF4ISS4IF4)

def itkMaskImageFilterIF4IUC4IF4_New():
    return itkMaskImageFilterIF4IUC4IF4.New()

class itkMaskImageFilterIF4IUC4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IUC4IF4):
    r"""Proxy of C++ itkMaskImageFilterIF4IUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF4IUC4IF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF4IUC4IF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF4IUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF4IUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF4IUC4IF4

        Create a new object of the class itkMaskImageFilterIF4IUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF4IUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF4IUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF4IUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF4IUC4IF4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF4IUC4IF4_swigregister(itkMaskImageFilterIF4IUC4IF4)

def itkMaskImageFilterIF4IUS4IF4_New():
    return itkMaskImageFilterIF4IUS4IF4.New()

class itkMaskImageFilterIF4IUS4IF4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF4IUS4IF4):
    r"""Proxy of C++ itkMaskImageFilterIF4IUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIF4IUS4IF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIF4IUS4IF4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: float const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIF4IUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIF4IUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIF4IUS4IF4

        Create a new object of the class itkMaskImageFilterIF4IUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIF4IUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIF4IUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIF4IUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIF4IUS4IF4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIF4IUS4IF4_swigregister(itkMaskImageFilterIF4IUS4IF4)

def itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_New():
    return itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.New()

class itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2

        Create a new object of the class itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2_swigregister(itkMaskImageFilterIRGBAUC2ISS2IRGBAUC2)

def itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_New():
    return itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.New()

class itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2

        Create a new object of the class itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2_swigregister(itkMaskImageFilterIRGBAUC2IUC2IRGBAUC2)

def itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_New():
    return itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.New()

class itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2

        Create a new object of the class itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2_swigregister(itkMaskImageFilterIRGBAUC2IUS2IRGBAUC2)

def itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_New():
    return itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.New()

class itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3

        Create a new object of the class itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3_swigregister(itkMaskImageFilterIRGBAUC3ISS3IRGBAUC3)

def itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_New():
    return itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.New()

class itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3

        Create a new object of the class itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3_swigregister(itkMaskImageFilterIRGBAUC3IUC3IRGBAUC3)

def itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_New():
    return itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.New()

class itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3

        Create a new object of the class itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3_swigregister(itkMaskImageFilterIRGBAUC3IUS3IRGBAUC3)

def itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_New():
    return itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4.New()

class itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC4ISS4IRGBAUC4):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4

        Create a new object of the class itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4_swigregister(itkMaskImageFilterIRGBAUC4ISS4IRGBAUC4)

def itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_New():
    return itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4.New()

class itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC4IUC4IRGBAUC4):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4

        Create a new object of the class itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4_swigregister(itkMaskImageFilterIRGBAUC4IUC4IRGBAUC4)

def itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_New():
    return itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4.New()

class itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC4IUS4IRGBAUC4):
    r"""Proxy of C++ itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBAPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBAPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4

        Create a new object of the class itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4_swigregister(itkMaskImageFilterIRGBAUC4IUS4IRGBAUC4)

def itkMaskImageFilterIRGBUC2ISS2IRGBUC2_New():
    return itkMaskImageFilterIRGBUC2ISS2IRGBUC2.New()

class itkMaskImageFilterIRGBUC2ISS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC2ISS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC2ISS2IRGBUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC2ISS2IRGBUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC2ISS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC2ISS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC2ISS2IRGBUC2

        Create a new object of the class itkMaskImageFilterIRGBUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC2ISS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC2ISS2IRGBUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2ISS2IRGBUC2_swigregister(itkMaskImageFilterIRGBUC2ISS2IRGBUC2)

def itkMaskImageFilterIRGBUC2IUC2IRGBUC2_New():
    return itkMaskImageFilterIRGBUC2IUC2IRGBUC2.New()

class itkMaskImageFilterIRGBUC2IUC2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC2IUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC2IUC2IRGBUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC2IUC2IRGBUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC2IUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC2IUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC2IUC2IRGBUC2

        Create a new object of the class itkMaskImageFilterIRGBUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC2IUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC2IUC2IRGBUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUC2IRGBUC2_swigregister(itkMaskImageFilterIRGBUC2IUC2IRGBUC2)

def itkMaskImageFilterIRGBUC2IUS2IRGBUC2_New():
    return itkMaskImageFilterIRGBUC2IUS2IRGBUC2.New()

class itkMaskImageFilterIRGBUC2IUS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC2IUS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC2IUS2IRGBUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC2IUS2IRGBUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC2IUS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC2IUS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC2IUS2IRGBUC2

        Create a new object of the class itkMaskImageFilterIRGBUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC2IUS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC2IUS2IRGBUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC2IUS2IRGBUC2_swigregister(itkMaskImageFilterIRGBUC2IUS2IRGBUC2)

def itkMaskImageFilterIRGBUC3ISS3IRGBUC3_New():
    return itkMaskImageFilterIRGBUC3ISS3IRGBUC3.New()

class itkMaskImageFilterIRGBUC3ISS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC3ISS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC3ISS3IRGBUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC3ISS3IRGBUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC3ISS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC3ISS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC3ISS3IRGBUC3

        Create a new object of the class itkMaskImageFilterIRGBUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC3ISS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC3ISS3IRGBUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3ISS3IRGBUC3_swigregister(itkMaskImageFilterIRGBUC3ISS3IRGBUC3)

def itkMaskImageFilterIRGBUC3IUC3IRGBUC3_New():
    return itkMaskImageFilterIRGBUC3IUC3IRGBUC3.New()

class itkMaskImageFilterIRGBUC3IUC3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC3IUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC3IUC3IRGBUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC3IUC3IRGBUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC3IUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC3IUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC3IUC3IRGBUC3

        Create a new object of the class itkMaskImageFilterIRGBUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC3IUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC3IUC3IRGBUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUC3IRGBUC3_swigregister(itkMaskImageFilterIRGBUC3IUC3IRGBUC3)

def itkMaskImageFilterIRGBUC3IUS3IRGBUC3_New():
    return itkMaskImageFilterIRGBUC3IUS3IRGBUC3.New()

class itkMaskImageFilterIRGBUC3IUS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC3IUS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC3IUS3IRGBUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC3IUS3IRGBUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC3IUS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC3IUS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC3IUS3IRGBUC3

        Create a new object of the class itkMaskImageFilterIRGBUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC3IUS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC3IUS3IRGBUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC3IUS3IRGBUC3_swigregister(itkMaskImageFilterIRGBUC3IUS3IRGBUC3)

def itkMaskImageFilterIRGBUC4ISS4IRGBUC4_New():
    return itkMaskImageFilterIRGBUC4ISS4IRGBUC4.New()

class itkMaskImageFilterIRGBUC4ISS4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC4ISS4IRGBUC4):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC4ISS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC4ISS4IRGBUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC4ISS4IRGBUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC4ISS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC4ISS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC4ISS4IRGBUC4

        Create a new object of the class itkMaskImageFilterIRGBUC4ISS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC4ISS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC4ISS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC4ISS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC4ISS4IRGBUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4ISS4IRGBUC4_swigregister(itkMaskImageFilterIRGBUC4ISS4IRGBUC4)

def itkMaskImageFilterIRGBUC4IUC4IRGBUC4_New():
    return itkMaskImageFilterIRGBUC4IUC4IRGBUC4.New()

class itkMaskImageFilterIRGBUC4IUC4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC4IUC4IRGBUC4):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC4IUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC4IUC4IRGBUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC4IUC4IRGBUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC4IUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC4IUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC4IUC4IRGBUC4

        Create a new object of the class itkMaskImageFilterIRGBUC4IUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC4IUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC4IUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC4IUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC4IUC4IRGBUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUC4IRGBUC4_swigregister(itkMaskImageFilterIRGBUC4IUC4IRGBUC4)

def itkMaskImageFilterIRGBUC4IUS4IRGBUC4_New():
    return itkMaskImageFilterIRGBUC4IUS4IRGBUC4.New()

class itkMaskImageFilterIRGBUC4IUS4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC4IUS4IRGBUC4):
    r"""Proxy of C++ itkMaskImageFilterIRGBUC4IUS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIRGBUC4IUS4IRGBUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIRGBUC4IUS4IRGBUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkRGBPixelUC const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkRGBPixelUC"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIRGBUC4IUS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIRGBUC4IUS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIRGBUC4IUS4IRGBUC4

        Create a new object of the class itkMaskImageFilterIRGBUC4IUS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIRGBUC4IUS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIRGBUC4IUS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIRGBUC4IUS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIRGBUC4IUS4IRGBUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIRGBUC4IUS4IRGBUC4_swigregister(itkMaskImageFilterIRGBUC4IUS4IRGBUC4)

def itkMaskImageFilterISS2ISS2ISS2_New():
    return itkMaskImageFilterISS2ISS2ISS2.New()

class itkMaskImageFilterISS2ISS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2):
    r"""Proxy of C++ itkMaskImageFilterISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS2ISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS2ISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS2ISS2ISS2

        Create a new object of the class itkMaskImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS2ISS2ISS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS2ISS2ISS2_swigregister(itkMaskImageFilterISS2ISS2ISS2)

def itkMaskImageFilterISS2IUC2ISS2_New():
    return itkMaskImageFilterISS2IUC2ISS2.New()

class itkMaskImageFilterISS2IUC2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2):
    r"""Proxy of C++ itkMaskImageFilterISS2IUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS2IUC2ISS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS2IUC2ISS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS2IUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS2IUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS2IUC2ISS2

        Create a new object of the class itkMaskImageFilterISS2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS2IUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS2IUC2ISS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS2IUC2ISS2_swigregister(itkMaskImageFilterISS2IUC2ISS2)

def itkMaskImageFilterISS2IUS2ISS2_New():
    return itkMaskImageFilterISS2IUS2ISS2.New()

class itkMaskImageFilterISS2IUS2ISS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2):
    r"""Proxy of C++ itkMaskImageFilterISS2IUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS2IUS2ISS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS2IUS2ISS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS2IUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS2IUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS2IUS2ISS2

        Create a new object of the class itkMaskImageFilterISS2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS2IUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS2IUS2ISS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS2IUS2ISS2_swigregister(itkMaskImageFilterISS2IUS2ISS2)

def itkMaskImageFilterISS3ISS3ISS3_New():
    return itkMaskImageFilterISS3ISS3ISS3.New()

class itkMaskImageFilterISS3ISS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3):
    r"""Proxy of C++ itkMaskImageFilterISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS3ISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS3ISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS3ISS3ISS3

        Create a new object of the class itkMaskImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS3ISS3ISS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS3ISS3ISS3_swigregister(itkMaskImageFilterISS3ISS3ISS3)

def itkMaskImageFilterISS3IUC3ISS3_New():
    return itkMaskImageFilterISS3IUC3ISS3.New()

class itkMaskImageFilterISS3IUC3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3):
    r"""Proxy of C++ itkMaskImageFilterISS3IUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS3IUC3ISS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS3IUC3ISS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS3IUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS3IUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS3IUC3ISS3

        Create a new object of the class itkMaskImageFilterISS3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS3IUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS3IUC3ISS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS3IUC3ISS3_swigregister(itkMaskImageFilterISS3IUC3ISS3)

def itkMaskImageFilterISS3IUS3ISS3_New():
    return itkMaskImageFilterISS3IUS3ISS3.New()

class itkMaskImageFilterISS3IUS3ISS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3):
    r"""Proxy of C++ itkMaskImageFilterISS3IUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS3IUS3ISS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS3IUS3ISS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS3IUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS3IUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS3IUS3ISS3

        Create a new object of the class itkMaskImageFilterISS3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS3IUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS3IUS3ISS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS3IUS3ISS3_swigregister(itkMaskImageFilterISS3IUS3ISS3)

def itkMaskImageFilterISS4ISS4ISS4_New():
    return itkMaskImageFilterISS4ISS4ISS4.New()

class itkMaskImageFilterISS4ISS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4ISS4ISS4):
    r"""Proxy of C++ itkMaskImageFilterISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS4ISS4ISS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS4ISS4ISS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS4ISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS4ISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS4ISS4ISS4

        Create a new object of the class itkMaskImageFilterISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS4ISS4ISS4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS4ISS4ISS4_swigregister(itkMaskImageFilterISS4ISS4ISS4)

def itkMaskImageFilterISS4IUC4ISS4_New():
    return itkMaskImageFilterISS4IUC4ISS4.New()

class itkMaskImageFilterISS4IUC4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4IUC4ISS4):
    r"""Proxy of C++ itkMaskImageFilterISS4IUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS4IUC4ISS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS4IUC4ISS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS4IUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS4IUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS4IUC4ISS4

        Create a new object of the class itkMaskImageFilterISS4IUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS4IUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS4IUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS4IUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS4IUC4ISS4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS4IUC4ISS4_swigregister(itkMaskImageFilterISS4IUC4ISS4)

def itkMaskImageFilterISS4IUS4ISS4_New():
    return itkMaskImageFilterISS4IUS4ISS4.New()

class itkMaskImageFilterISS4IUS4ISS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS4IUS4ISS4):
    r"""Proxy of C++ itkMaskImageFilterISS4IUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterISS4IUS4ISS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterISS4IUS4ISS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterISS4IUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterISS4IUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterISS4IUS4ISS4

        Create a new object of the class itkMaskImageFilterISS4IUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterISS4IUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterISS4IUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterISS4IUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterISS4IUS4ISS4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterISS4IUS4ISS4_swigregister(itkMaskImageFilterISS4IUS4ISS4)

def itkMaskImageFilterIUC2ISS2IUC2_New():
    return itkMaskImageFilterIUC2ISS2IUC2.New()

class itkMaskImageFilterIUC2ISS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2):
    r"""Proxy of C++ itkMaskImageFilterIUC2ISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC2ISS2IUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC2ISS2IUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC2ISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC2ISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC2ISS2IUC2

        Create a new object of the class itkMaskImageFilterIUC2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC2ISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC2ISS2IUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC2ISS2IUC2_swigregister(itkMaskImageFilterIUC2ISS2IUC2)

def itkMaskImageFilterIUC2IUC2IUC2_New():
    return itkMaskImageFilterIUC2IUC2IUC2.New()

class itkMaskImageFilterIUC2IUC2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2):
    r"""Proxy of C++ itkMaskImageFilterIUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC2IUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC2IUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC2IUC2IUC2

        Create a new object of the class itkMaskImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC2IUC2IUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUC2IUC2_swigregister(itkMaskImageFilterIUC2IUC2IUC2)

def itkMaskImageFilterIUC2IUS2IUC2_New():
    return itkMaskImageFilterIUC2IUS2IUC2.New()

class itkMaskImageFilterIUC2IUS2IUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2):
    r"""Proxy of C++ itkMaskImageFilterIUC2IUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC2IUS2IUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC2IUS2IUC2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC2IUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC2IUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC2IUS2IUC2

        Create a new object of the class itkMaskImageFilterIUC2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC2IUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC2IUS2IUC2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC2IUS2IUC2_swigregister(itkMaskImageFilterIUC2IUS2IUC2)

def itkMaskImageFilterIUC3ISS3IUC3_New():
    return itkMaskImageFilterIUC3ISS3IUC3.New()

class itkMaskImageFilterIUC3ISS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3):
    r"""Proxy of C++ itkMaskImageFilterIUC3ISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC3ISS3IUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC3ISS3IUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC3ISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC3ISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC3ISS3IUC3

        Create a new object of the class itkMaskImageFilterIUC3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC3ISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC3ISS3IUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC3ISS3IUC3_swigregister(itkMaskImageFilterIUC3ISS3IUC3)

def itkMaskImageFilterIUC3IUC3IUC3_New():
    return itkMaskImageFilterIUC3IUC3IUC3.New()

class itkMaskImageFilterIUC3IUC3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3):
    r"""Proxy of C++ itkMaskImageFilterIUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC3IUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC3IUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC3IUC3IUC3

        Create a new object of the class itkMaskImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC3IUC3IUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUC3IUC3_swigregister(itkMaskImageFilterIUC3IUC3IUC3)

def itkMaskImageFilterIUC3IUS3IUC3_New():
    return itkMaskImageFilterIUC3IUS3IUC3.New()

class itkMaskImageFilterIUC3IUS3IUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3):
    r"""Proxy of C++ itkMaskImageFilterIUC3IUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC3IUS3IUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC3IUS3IUC3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC3IUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC3IUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC3IUS3IUC3

        Create a new object of the class itkMaskImageFilterIUC3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC3IUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC3IUS3IUC3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC3IUS3IUC3_swigregister(itkMaskImageFilterIUC3IUS3IUC3)

def itkMaskImageFilterIUC4ISS4IUC4_New():
    return itkMaskImageFilterIUC4ISS4IUC4.New()

class itkMaskImageFilterIUC4ISS4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4ISS4IUC4):
    r"""Proxy of C++ itkMaskImageFilterIUC4ISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC4ISS4IUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC4ISS4IUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC4ISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC4ISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC4ISS4IUC4

        Create a new object of the class itkMaskImageFilterIUC4ISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC4ISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC4ISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC4ISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC4ISS4IUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC4ISS4IUC4_swigregister(itkMaskImageFilterIUC4ISS4IUC4)

def itkMaskImageFilterIUC4IUC4IUC4_New():
    return itkMaskImageFilterIUC4IUC4IUC4.New()

class itkMaskImageFilterIUC4IUC4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUC4IUC4):
    r"""Proxy of C++ itkMaskImageFilterIUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC4IUC4IUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC4IUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC4IUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC4IUC4IUC4

        Create a new object of the class itkMaskImageFilterIUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC4IUC4IUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC4IUC4IUC4_swigregister(itkMaskImageFilterIUC4IUC4IUC4)

def itkMaskImageFilterIUC4IUS4IUC4_New():
    return itkMaskImageFilterIUC4IUS4IUC4.New()

class itkMaskImageFilterIUC4IUS4IUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUS4IUC4):
    r"""Proxy of C++ itkMaskImageFilterIUC4IUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUC4IUS4IUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUC4IUS4IUC4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUC4IUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUC4IUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUC4IUS4IUC4

        Create a new object of the class itkMaskImageFilterIUC4IUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUC4IUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUC4IUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUC4IUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUC4IUS4IUC4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUC4IUS4IUC4_swigregister(itkMaskImageFilterIUC4IUS4IUC4)

def itkMaskImageFilterIUS2ISS2IUS2_New():
    return itkMaskImageFilterIUS2ISS2IUS2.New()

class itkMaskImageFilterIUS2ISS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2):
    r"""Proxy of C++ itkMaskImageFilterIUS2ISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS2ISS2IUS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS2ISS2IUS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS2ISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS2ISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS2ISS2IUS2

        Create a new object of the class itkMaskImageFilterIUS2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS2ISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS2ISS2IUS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS2ISS2IUS2_swigregister(itkMaskImageFilterIUS2ISS2IUS2)

def itkMaskImageFilterIUS2IUC2IUS2_New():
    return itkMaskImageFilterIUS2IUC2IUS2.New()

class itkMaskImageFilterIUS2IUC2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2):
    r"""Proxy of C++ itkMaskImageFilterIUS2IUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS2IUC2IUS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS2IUC2IUS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS2IUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS2IUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS2IUC2IUS2

        Create a new object of the class itkMaskImageFilterIUS2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS2IUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS2IUC2IUS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUC2IUS2_swigregister(itkMaskImageFilterIUS2IUC2IUS2)

def itkMaskImageFilterIUS2IUS2IUS2_New():
    return itkMaskImageFilterIUS2IUS2IUS2.New()

class itkMaskImageFilterIUS2IUS2IUS2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2):
    r"""Proxy of C++ itkMaskImageFilterIUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS2IUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS2IUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS2IUS2IUS2

        Create a new object of the class itkMaskImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS2IUS2IUS2 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS2IUS2IUS2_swigregister(itkMaskImageFilterIUS2IUS2IUS2)

def itkMaskImageFilterIUS3ISS3IUS3_New():
    return itkMaskImageFilterIUS3ISS3IUS3.New()

class itkMaskImageFilterIUS3ISS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3):
    r"""Proxy of C++ itkMaskImageFilterIUS3ISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS3ISS3IUS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS3ISS3IUS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS3ISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS3ISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS3ISS3IUS3

        Create a new object of the class itkMaskImageFilterIUS3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS3ISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS3ISS3IUS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS3ISS3IUS3_swigregister(itkMaskImageFilterIUS3ISS3IUS3)

def itkMaskImageFilterIUS3IUC3IUS3_New():
    return itkMaskImageFilterIUS3IUC3IUS3.New()

class itkMaskImageFilterIUS3IUC3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3):
    r"""Proxy of C++ itkMaskImageFilterIUS3IUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS3IUC3IUS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS3IUC3IUS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS3IUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS3IUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS3IUC3IUS3

        Create a new object of the class itkMaskImageFilterIUS3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS3IUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS3IUC3IUS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUC3IUS3_swigregister(itkMaskImageFilterIUS3IUC3IUS3)

def itkMaskImageFilterIUS3IUS3IUS3_New():
    return itkMaskImageFilterIUS3IUS3IUS3.New()

class itkMaskImageFilterIUS3IUS3IUS3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3):
    r"""Proxy of C++ itkMaskImageFilterIUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS3IUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS3IUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS3IUS3IUS3

        Create a new object of the class itkMaskImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS3IUS3IUS3 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS3IUS3IUS3_swigregister(itkMaskImageFilterIUS3IUS3IUS3)

def itkMaskImageFilterIUS4ISS4IUS4_New():
    return itkMaskImageFilterIUS4ISS4IUS4.New()

class itkMaskImageFilterIUS4ISS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4ISS4IUS4):
    r"""Proxy of C++ itkMaskImageFilterIUS4ISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS4ISS4IUS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS4ISS4IUS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS4ISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS4ISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS4ISS4IUS4

        Create a new object of the class itkMaskImageFilterIUS4ISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS4ISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS4ISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS4ISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS4ISS4IUS4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS4ISS4IUS4_swigregister(itkMaskImageFilterIUS4ISS4IUS4)

def itkMaskImageFilterIUS4IUC4IUS4_New():
    return itkMaskImageFilterIUS4IUC4IUS4.New()

class itkMaskImageFilterIUS4IUC4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUC4IUS4):
    r"""Proxy of C++ itkMaskImageFilterIUS4IUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS4IUC4IUS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS4IUC4IUS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS4IUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS4IUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS4IUC4IUS4

        Create a new object of the class itkMaskImageFilterIUS4IUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS4IUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS4IUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS4IUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS4IUC4IUS4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS4IUC4IUS4_swigregister(itkMaskImageFilterIUS4IUC4IUS4)

def itkMaskImageFilterIUS4IUS4IUS4_New():
    return itkMaskImageFilterIUS4IUS4IUS4.New()

class itkMaskImageFilterIUS4IUS4IUS4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS4IUS4IUS4):
    r"""Proxy of C++ itkMaskImageFilterIUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIUS4IUS4IUS4_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIUS4IUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIUS4IUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIUS4IUS4IUS4

        Create a new object of the class itkMaskImageFilterIUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIUS4IUS4IUS4 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIUS4IUS4IUS4_swigregister(itkMaskImageFilterIUS4IUS4IUS4)

def itkMaskImageFilterIVF22ISS2IVF22_New():
    return itkMaskImageFilterIVF22ISS2IVF22.New()

class itkMaskImageFilterIVF22ISS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22):
    r"""Proxy of C++ itkMaskImageFilterIVF22ISS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF22ISS2IVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF22ISS2IVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF22ISS2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF22ISS2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF22ISS2IVF22

        Create a new object of the class itkMaskImageFilterIVF22ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF22ISS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF22ISS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF22ISS2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF22ISS2IVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF22ISS2IVF22_swigregister(itkMaskImageFilterIVF22ISS2IVF22)

def itkMaskImageFilterIVF22IUC2IVF22_New():
    return itkMaskImageFilterIVF22IUC2IVF22.New()

class itkMaskImageFilterIVF22IUC2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22):
    r"""Proxy of C++ itkMaskImageFilterIVF22IUC2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF22IUC2IVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF22IUC2IVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF22IUC2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF22IUC2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF22IUC2IVF22

        Create a new object of the class itkMaskImageFilterIVF22IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF22IUC2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF22IUC2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF22IUC2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF22IUC2IVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUC2IVF22_swigregister(itkMaskImageFilterIVF22IUC2IVF22)

def itkMaskImageFilterIVF22IUS2IVF22_New():
    return itkMaskImageFilterIVF22IUS2IVF22.New()

class itkMaskImageFilterIVF22IUS2IVF22(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22):
    r"""Proxy of C++ itkMaskImageFilterIVF22IUS2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF22IUS2IVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF22IUS2IVF22_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF22IUS2IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF22IUS2IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF22IUS2IVF22

        Create a new object of the class itkMaskImageFilterIVF22IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF22IUS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF22IUS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF22IUS2IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF22IUS2IVF22 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF22IUS2IVF22_swigregister(itkMaskImageFilterIVF22IUS2IVF22)

def itkMaskImageFilterIVF23ISS3IVF23_New():
    return itkMaskImageFilterIVF23ISS3IVF23.New()

class itkMaskImageFilterIVF23ISS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23):
    r"""Proxy of C++ itkMaskImageFilterIVF23ISS3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF23ISS3IVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF23ISS3IVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF23ISS3IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF23ISS3IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF23ISS3IVF23

        Create a new object of the class itkMaskImageFilterIVF23ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF23ISS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF23ISS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF23ISS3IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF23ISS3IVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF23ISS3IVF23_swigregister(itkMaskImageFilterIVF23ISS3IVF23)

def itkMaskImageFilterIVF23IUC3IVF23_New():
    return itkMaskImageFilterIVF23IUC3IVF23.New()

class itkMaskImageFilterIVF23IUC3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23):
    r"""Proxy of C++ itkMaskImageFilterIVF23IUC3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF23IUC3IVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF23IUC3IVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF23IUC3IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF23IUC3IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF23IUC3IVF23

        Create a new object of the class itkMaskImageFilterIVF23IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF23IUC3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF23IUC3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF23IUC3IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF23IUC3IVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUC3IVF23_swigregister(itkMaskImageFilterIVF23IUC3IVF23)

def itkMaskImageFilterIVF23IUS3IVF23_New():
    return itkMaskImageFilterIVF23IUS3IVF23.New()

class itkMaskImageFilterIVF23IUS3IVF23(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23):
    r"""Proxy of C++ itkMaskImageFilterIVF23IUS3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF23IUS3IVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF23IUS3IVF23_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF23IUS3IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF23IUS3IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF23IUS3IVF23

        Create a new object of the class itkMaskImageFilterIVF23IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF23IUS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF23IUS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF23IUS3IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF23IUS3IVF23 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF23IUS3IVF23_swigregister(itkMaskImageFilterIVF23IUS3IVF23)

def itkMaskImageFilterIVF24ISS4IVF24_New():
    return itkMaskImageFilterIVF24ISS4IVF24.New()

class itkMaskImageFilterIVF24ISS4IVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF24ISS4IVF24):
    r"""Proxy of C++ itkMaskImageFilterIVF24ISS4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF24ISS4IVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF24ISS4IVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF24ISS4IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF24ISS4IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF24ISS4IVF24

        Create a new object of the class itkMaskImageFilterIVF24ISS4IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF24ISS4IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF24ISS4IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF24ISS4IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF24ISS4IVF24 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF24ISS4IVF24_swigregister(itkMaskImageFilterIVF24ISS4IVF24)

def itkMaskImageFilterIVF24IUC4IVF24_New():
    return itkMaskImageFilterIVF24IUC4IVF24.New()

class itkMaskImageFilterIVF24IUC4IVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF24IUC4IVF24):
    r"""Proxy of C++ itkMaskImageFilterIVF24IUC4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF24IUC4IVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF24IUC4IVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF24IUC4IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF24IUC4IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF24IUC4IVF24

        Create a new object of the class itkMaskImageFilterIVF24IUC4IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF24IUC4IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF24IUC4IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF24IUC4IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF24IUC4IVF24 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF24IUC4IVF24_swigregister(itkMaskImageFilterIVF24IUC4IVF24)

def itkMaskImageFilterIVF24IUS4IVF24_New():
    return itkMaskImageFilterIVF24IUS4IVF24.New()

class itkMaskImageFilterIVF24IUS4IVF24(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF24IUS4IVF24):
    r"""Proxy of C++ itkMaskImageFilterIVF24IUS4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF24IUS4IVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF24IUS4IVF24_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF2 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF24IUS4IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF24IUS4IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF24IUS4IVF24

        Create a new object of the class itkMaskImageFilterIVF24IUS4IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF24IUS4IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF24IUS4IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF24IUS4IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF24IUS4IVF24 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF24IUS4IVF24_swigregister(itkMaskImageFilterIVF24IUS4IVF24)

def itkMaskImageFilterIVF32ISS2IVF32_New():
    return itkMaskImageFilterIVF32ISS2IVF32.New()

class itkMaskImageFilterIVF32ISS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32):
    r"""Proxy of C++ itkMaskImageFilterIVF32ISS2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF32ISS2IVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF32ISS2IVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF32ISS2IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF32ISS2IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF32ISS2IVF32

        Create a new object of the class itkMaskImageFilterIVF32ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF32ISS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF32ISS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF32ISS2IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF32ISS2IVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF32ISS2IVF32_swigregister(itkMaskImageFilterIVF32ISS2IVF32)

def itkMaskImageFilterIVF32IUC2IVF32_New():
    return itkMaskImageFilterIVF32IUC2IVF32.New()

class itkMaskImageFilterIVF32IUC2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32):
    r"""Proxy of C++ itkMaskImageFilterIVF32IUC2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF32IUC2IVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF32IUC2IVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF32IUC2IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF32IUC2IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF32IUC2IVF32

        Create a new object of the class itkMaskImageFilterIVF32IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF32IUC2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF32IUC2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF32IUC2IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF32IUC2IVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUC2IVF32_swigregister(itkMaskImageFilterIVF32IUC2IVF32)

def itkMaskImageFilterIVF32IUS2IVF32_New():
    return itkMaskImageFilterIVF32IUS2IVF32.New()

class itkMaskImageFilterIVF32IUS2IVF32(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32):
    r"""Proxy of C++ itkMaskImageFilterIVF32IUS2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF32IUS2IVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF32IUS2IVF32_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF32IUS2IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF32IUS2IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF32IUS2IVF32

        Create a new object of the class itkMaskImageFilterIVF32IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF32IUS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF32IUS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF32IUS2IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF32IUS2IVF32 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF32IUS2IVF32_swigregister(itkMaskImageFilterIVF32IUS2IVF32)

def itkMaskImageFilterIVF33ISS3IVF33_New():
    return itkMaskImageFilterIVF33ISS3IVF33.New()

class itkMaskImageFilterIVF33ISS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33):
    r"""Proxy of C++ itkMaskImageFilterIVF33ISS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF33ISS3IVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF33ISS3IVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF33ISS3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF33ISS3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF33ISS3IVF33

        Create a new object of the class itkMaskImageFilterIVF33ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF33ISS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF33ISS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF33ISS3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF33ISS3IVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF33ISS3IVF33_swigregister(itkMaskImageFilterIVF33ISS3IVF33)

def itkMaskImageFilterIVF33IUC3IVF33_New():
    return itkMaskImageFilterIVF33IUC3IVF33.New()

class itkMaskImageFilterIVF33IUC3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33):
    r"""Proxy of C++ itkMaskImageFilterIVF33IUC3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF33IUC3IVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF33IUC3IVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF33IUC3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF33IUC3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF33IUC3IVF33

        Create a new object of the class itkMaskImageFilterIVF33IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF33IUC3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF33IUC3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF33IUC3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF33IUC3IVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUC3IVF33_swigregister(itkMaskImageFilterIVF33IUC3IVF33)

def itkMaskImageFilterIVF33IUS3IVF33_New():
    return itkMaskImageFilterIVF33IUS3IVF33.New()

class itkMaskImageFilterIVF33IUS3IVF33(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33):
    r"""Proxy of C++ itkMaskImageFilterIVF33IUS3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF33IUS3IVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF33IUS3IVF33_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF33IUS3IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF33IUS3IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF33IUS3IVF33

        Create a new object of the class itkMaskImageFilterIVF33IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF33IUS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF33IUS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF33IUS3IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF33IUS3IVF33 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF33IUS3IVF33_swigregister(itkMaskImageFilterIVF33IUS3IVF33)

def itkMaskImageFilterIVF34ISS4IVF34_New():
    return itkMaskImageFilterIVF34ISS4IVF34.New()

class itkMaskImageFilterIVF34ISS4IVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF34ISS4IVF34):
    r"""Proxy of C++ itkMaskImageFilterIVF34ISS4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF34ISS4IVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF34ISS4IVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF34ISS4IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF34ISS4IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF34ISS4IVF34

        Create a new object of the class itkMaskImageFilterIVF34ISS4IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF34ISS4IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF34ISS4IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF34ISS4IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF34ISS4IVF34 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF34ISS4IVF34_swigregister(itkMaskImageFilterIVF34ISS4IVF34)

def itkMaskImageFilterIVF34IUC4IVF34_New():
    return itkMaskImageFilterIVF34IUC4IVF34.New()

class itkMaskImageFilterIVF34IUC4IVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF34IUC4IVF34):
    r"""Proxy of C++ itkMaskImageFilterIVF34IUC4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF34IUC4IVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF34IUC4IVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF34IUC4IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF34IUC4IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF34IUC4IVF34

        Create a new object of the class itkMaskImageFilterIVF34IUC4IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF34IUC4IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF34IUC4IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF34IUC4IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF34IUC4IVF34 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF34IUC4IVF34_swigregister(itkMaskImageFilterIVF34IUC4IVF34)

def itkMaskImageFilterIVF34IUS4IVF34_New():
    return itkMaskImageFilterIVF34IUS4IVF34.New()

class itkMaskImageFilterIVF34IUS4IVF34(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF34IUS4IVF34):
    r"""Proxy of C++ itkMaskImageFilterIVF34IUS4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF34IUS4IVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF34IUS4IVF34_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF3 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF34IUS4IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF34IUS4IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF34IUS4IVF34

        Create a new object of the class itkMaskImageFilterIVF34IUS4IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF34IUS4IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF34IUS4IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF34IUS4IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF34IUS4IVF34 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF34IUS4IVF34_swigregister(itkMaskImageFilterIVF34IUS4IVF34)

def itkMaskImageFilterIVF42ISS2IVF42_New():
    return itkMaskImageFilterIVF42ISS2IVF42.New()

class itkMaskImageFilterIVF42ISS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42):
    r"""Proxy of C++ itkMaskImageFilterIVF42ISS2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF42ISS2IVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF42ISS2IVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF42ISS2IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF42ISS2IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF42ISS2IVF42

        Create a new object of the class itkMaskImageFilterIVF42ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF42ISS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF42ISS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF42ISS2IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF42ISS2IVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF42ISS2IVF42_swigregister(itkMaskImageFilterIVF42ISS2IVF42)

def itkMaskImageFilterIVF42IUC2IVF42_New():
    return itkMaskImageFilterIVF42IUC2IVF42.New()

class itkMaskImageFilterIVF42IUC2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42):
    r"""Proxy of C++ itkMaskImageFilterIVF42IUC2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF42IUC2IVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF42IUC2IVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF42IUC2IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF42IUC2IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF42IUC2IVF42

        Create a new object of the class itkMaskImageFilterIVF42IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF42IUC2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF42IUC2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF42IUC2IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF42IUC2IVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUC2IVF42_swigregister(itkMaskImageFilterIVF42IUC2IVF42)

def itkMaskImageFilterIVF42IUS2IVF42_New():
    return itkMaskImageFilterIVF42IUS2IVF42.New()

class itkMaskImageFilterIVF42IUS2IVF42(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42):
    r"""Proxy of C++ itkMaskImageFilterIVF42IUS2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF42IUS2IVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF42IUS2IVF42_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS2 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF42IUS2IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF42IUS2IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF42IUS2IVF42

        Create a new object of the class itkMaskImageFilterIVF42IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF42IUS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF42IUS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF42IUS2IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF42IUS2IVF42 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF42IUS2IVF42_swigregister(itkMaskImageFilterIVF42IUS2IVF42)

def itkMaskImageFilterIVF43ISS3IVF43_New():
    return itkMaskImageFilterIVF43ISS3IVF43.New()

class itkMaskImageFilterIVF43ISS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43):
    r"""Proxy of C++ itkMaskImageFilterIVF43ISS3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF43ISS3IVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF43ISS3IVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF43ISS3IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF43ISS3IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF43ISS3IVF43

        Create a new object of the class itkMaskImageFilterIVF43ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF43ISS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF43ISS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF43ISS3IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF43ISS3IVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF43ISS3IVF43_swigregister(itkMaskImageFilterIVF43ISS3IVF43)

def itkMaskImageFilterIVF43IUC3IVF43_New():
    return itkMaskImageFilterIVF43IUC3IVF43.New()

class itkMaskImageFilterIVF43IUC3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43):
    r"""Proxy of C++ itkMaskImageFilterIVF43IUC3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF43IUC3IVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF43IUC3IVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF43IUC3IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF43IUC3IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF43IUC3IVF43

        Create a new object of the class itkMaskImageFilterIVF43IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF43IUC3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF43IUC3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF43IUC3IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF43IUC3IVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUC3IVF43_swigregister(itkMaskImageFilterIVF43IUC3IVF43)

def itkMaskImageFilterIVF43IUS3IVF43_New():
    return itkMaskImageFilterIVF43IUS3IVF43.New()

class itkMaskImageFilterIVF43IUS3IVF43(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43):
    r"""Proxy of C++ itkMaskImageFilterIVF43IUS3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF43IUS3IVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF43IUS3IVF43_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS3 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF43IUS3IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF43IUS3IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF43IUS3IVF43

        Create a new object of the class itkMaskImageFilterIVF43IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF43IUS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF43IUS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF43IUS3IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF43IUS3IVF43 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF43IUS3IVF43_swigregister(itkMaskImageFilterIVF43IUS3IVF43)

def itkMaskImageFilterIVF44ISS4IVF44_New():
    return itkMaskImageFilterIVF44ISS4IVF44.New()

class itkMaskImageFilterIVF44ISS4IVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF44ISS4IVF44):
    r"""Proxy of C++ itkMaskImageFilterIVF44ISS4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF44ISS4IVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF44ISS4IVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageSS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF44ISS4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF44ISS4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF44ISS4IVF44

        Create a new object of the class itkMaskImageFilterIVF44ISS4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF44ISS4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF44ISS4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF44ISS4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF44ISS4IVF44 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF44ISS4IVF44_swigregister(itkMaskImageFilterIVF44ISS4IVF44)

def itkMaskImageFilterIVF44IUC4IVF44_New():
    return itkMaskImageFilterIVF44IUC4IVF44.New()

class itkMaskImageFilterIVF44IUC4IVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF44IUC4IVF44):
    r"""Proxy of C++ itkMaskImageFilterIVF44IUC4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF44IUC4IVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF44IUC4IVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUC4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned char const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned char const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF44IUC4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF44IUC4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF44IUC4IVF44

        Create a new object of the class itkMaskImageFilterIVF44IUC4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF44IUC4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF44IUC4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF44IUC4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF44IUC4IVF44 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF44IUC4IVF44_swigregister(itkMaskImageFilterIVF44IUC4IVF44)

def itkMaskImageFilterIVF44IUS4IVF44_New():
    return itkMaskImageFilterIVF44IUS4IVF44.New()

class itkMaskImageFilterIVF44IUS4IVF44(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF44IUS4IVF44):
    r"""Proxy of C++ itkMaskImageFilterIVF44IUS4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskImageFilterIVF44IUS4IVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskImageFilterIVF44IUS4IVF44_Pointer"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_Clone(self)

    def SetMaskImage(self, maskImage):
        r"""
        SetMaskImage(self, maskImage)

        Parameters
        ----------
        maskImage: itkImageUS4 const *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_SetMaskImage(self, maskImage)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_GetMaskImage(self)

    def SetOutsideValue(self, outsideValue):
        r"""
        SetOutsideValue(self, outsideValue)

        Parameters
        ----------
        outsideValue: itkVectorF4 const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_SetOutsideValue(self, outsideValue)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> itkVectorF4"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_GetOutsideValue(self)

    def SetMaskingValue(self, maskingValue):
        r"""
        SetMaskingValue(self, maskingValue)

        Parameters
        ----------
        maskingValue: unsigned short const &

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_SetMaskingValue(self, maskingValue)

    def GetMaskingValue(self):
        r"""GetMaskingValue(self) -> unsigned short const &"""
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_GetMaskingValue(self)
    MaskEqualityComparableCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_MaskEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMaskImageFilterPython.delete_itkMaskImageFilterIVF44IUS4IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskImageFilterIVF44IUS4IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskImageFilterIVF44IUS4IVF44

        Create a new object of the class itkMaskImageFilterIVF44IUS4IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskImageFilterIVF44IUS4IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskImageFilterIVF44IUS4IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskImageFilterIVF44IUS4IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskImageFilterIVF44IUS4IVF44 in _itkMaskImageFilterPython:
_itkMaskImageFilterPython.itkMaskImageFilterIVF44IUS4IVF44_swigregister(itkMaskImageFilterIVF44IUS4IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def mask_image_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., outside_value: Sequence[float]=..., masking_value: int=..., constant1: Sequence[float]=..., constant2: int=..., constant: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MaskImageFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'outside_value':outside_value,'masking_value':masking_value,'constant1':constant1,'constant2':constant2,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MaskImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mask_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.MaskImageFilter
    mask_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mask_image_filter.__doc__ = filter_object.__doc__



