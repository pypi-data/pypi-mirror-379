name: Test

on:
  push:
    branches: [main, stable]
    paths:
      - "**/*.py"
      - "**/*.pyi"
      - ".github/workflows/test.yml"
      - "pyproject.toml"
      - "uv.lock"
  pull_request:
    branches: [main, stable]
    paths:
      - "**/*.py"
      - "**/*.pyi"
      - ".github/workflows/test.yml"
      - "pyproject.toml"
      - "uv.lock"

env:
  PYTHON_VERSION: "3.12"

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.12", "3.13"]

    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.14"
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Check installed packages
        run: |
          echo "Python version:"
          uv run python -V
          echo "All installed packages:"
          uv pip list

      - name: Run pytest with coverage
        run: |
          uv run pytest -v --log-level=INFO --cov

  # run_converage-report:
  #   runs-on: ubuntu-24.04
  #   timeout-minutes: 20

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install uv and set the python version
  #       uses: astral-sh/setup-uv@v4
  #       with:
  #         version: ${{ env.UV_VERSION }}
  #         python-version: ${{ env.PYTHON_VERSION }}
  #         enable-cache: true

  #     - name: Cache uv dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: .venv
  #         key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock', 'pyproject.toml') }}

  #     - name: Install dependencies
  #       run: uv sync --all-extras

  #     - name: Check installed packages
  #       run: |
  #         echo "Python version:"
  #         uv run python -V
  #         echo "All installed packages:"
  #         uv pip list

  #     - name: Run pytest with coverage
  #       run: |
  #         uv run pytest --log-level=INFO --cov=pamiq_core --cov-branch --cov-report=xml

  #     - name: Upload coverage reports to Codecov
  #       uses: codecov/codecov-action@v5
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         slug: MLShukai/pamiq-core
