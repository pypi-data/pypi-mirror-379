name: Publish to MCP Registry

on:
  push:
    tags: ["v*"]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run tests
        run: |
          uv run pytest -q

      - name: Build wheel
        run: |
          uv build

      - name: Validate server.json against schema
        run: |
          uv run python - <<'PY'
          import json, sys, urllib.request
          from jsonschema import validate
          from jsonschema.exceptions import ValidationError
          server = json.load(open('server.json'))
          schema_url = server.get('$schema')
          with urllib.request.urlopen(schema_url) as r:
              schema = json.load(r)
          try:
              validate(instance=server, schema=schema)
          except ValidationError as e:
              print('Schema validation failed:', e, file=sys.stderr)
              sys.exit(1)
          print('server.json is valid')
          PY

      - name: Install MCP Publisher
        run: |
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v1.0.0/mcp-publisher_1.0.0_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher

      - name: Login to MCP Registry (DNS auth)
        run: |
          echo "${{ secrets.MCP_PRIVATE_KEY }}" > key.pem
          ./mcp-publisher login dns --domain pipeboard.co --private-key-file key.pem
          shred -u key.pem || rm -f key.pem

      - name: Publish to MCP Registry
        run: ./mcp-publisher publish

