name: check

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history and tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install .
        pip install -e .[dev]

    - name: Run tests
      run: |
        pytest --cov --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Check code formatting with Black
      run: |
        black --check .

    - name: Lint code with Flake8
      run: |
        flake8 .

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Test package installation
      run: |
        pip install dist/*.whl
        python -c "import pycopanlpjml; print(f'pycopanlpjml version: {pycopanlpjml.__version__}')"

    - name: Update CITATION.cff with current version
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        # Reset any uncommitted changes to avoid including workflow files
        git reset --hard HEAD
        
        # Update CITATION.cff with current version using our script
        python3 scripts/update_citation.py
        
        # Check if there are changes to commit
        if ! git diff --quiet CITATION.cff; then
          echo "CITATION.cff updated, committing changes..."
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add and commit the changes
          git add CITATION.cff
          git commit -m "Update CITATION.cff to current version [skip ci]"
          
          # Push changes to main branch
          git push origin HEAD:main
          
          echo "CITATION.cff changes pushed to main branch"
        else
          echo "No changes to CITATION.cff needed"
        fi

    # Publishing is handled by the separate release.yml workflow

