{"name": "aibi-customer-support", "category": "AI-BI", "title": "AI/BI: AI-Assisted Customer Support Performance Review", "custom_schema_supported": true, "default_catalog": "main", "default_schema": "dbdemos_aibi_customer_support", "description": "Enhance your customer support effectiveness and analytics with AI/BI Dashboards. Then, utilize Genie to drill deeper into team performance.", "bundle": true, "notebooks": [{"path": "AI-BI-Customer-support", "pre_run": false, "publish_on_website": true, "add_cluster_setup_cell": false, "title": "AI BI: Customer Support Review", "description": "Discover Databricks Intelligence Data Platform capabilities.", "object_type": "NOTEBOOK"}], "init_job": {}, "serverless_supported": true, "cluster": {}, "pipelines": [], "dashboards": [{"name": "[dbdemos] AIBI - AI-Assisted Customer Support Team Review", "id": "customer-support"}], "data_folders": [{"source_folder": "aibi/dbdemos_aibi_customer_support/agents_bronze", "source_format": "parquet", "target_volume_folder": "agents_bronze", "target_format": "parquet"}, {"source_folder": "aibi/dbdemos_aibi_customer_support/tickets_bronze", "source_format": "parquet", "target_volume_folder": "tickets_bronze", "target_format": "parquet"}, {"source_folder": "aibi/dbdemos_aibi_customer_support/sla_bronze", "source_format": "parquet", "target_volume_folder": "sla_bronze", "target_format": "parquet"}], "sql_queries": [["\n        CREATE OR REPLACE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.agents_bronze \n        TBLPROPERTIES (delta.autooptimize.optimizewrite = true, delta.autooptimize.autocompact = true) \n        COMMENT 'Bronze table containing customer support agent information' \n        AS SELECT * EXCEPT (_rescued_data) \n        FROM read_files('/Volumes/{{CATALOG}}/{{SCHEMA}}/dbdemos_raw_data/agents_bronze', format => 'parquet', pathGlobFilter => '*.parquet')\n        ", "\n        CREATE OR REPLACE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.sla_bronze \n        TBLPROPERTIES (delta.autooptimize.optimizewrite = true, delta.autooptimize.autocompact = true) \n        COMMENT 'Bronze table containing service level agreement metrics for customer support tickets' \n        AS SELECT * EXCEPT (_rescued_data) \n        FROM read_files('/Volumes/{{CATALOG}}/{{SCHEMA}}/dbdemos_raw_data/sla_bronze', format => 'parquet', pathGlobFilter => '*.parquet')\n        ", "\n        CREATE OR REPLACE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.tickets_bronze \n        TBLPROPERTIES (delta.autooptimize.optimizewrite = true, delta.autooptimize.autocompact = true) \n        COMMENT 'Bronze table containing customer support ticket information and history' \n        AS SELECT * EXCEPT (_rescued_data) \n        FROM read_files('/Volumes/{{CATALOG}}/{{SCHEMA}}/dbdemos_raw_data/tickets_bronze', format => 'parquet', pathGlobFilter => '*.parquet')\n        "], ["\n        CREATE OR REPLACE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.agents_clean (\n            ticket_id BIGINT COMMENT 'Unique identifier for the customer support ticket, allowing tracking of individual tickets and their support.',\n            agent_group STRING COMMENT 'Represents the group of agents responsible for the ticket, providing a way to analyze performance and workload.',\n            agent_name STRING COMMENT 'Identifies the individual agent responsible for the ticket, allowing tracking of individual agent performance.',\n            agent_interactions DOUBLE COMMENT 'Represents the number of interactions the agent has had with the customer, giving insight into the complexity of the issue and the agents workload.',\n            ai_suggestion_accepted INTEGER COMMENT 'Indicates whether the AI-generated suggestion was accepted by the customer.',\n            PRIMARY KEY (ticket_id) RELY\n        )\n        USING delta COMMENT 'The agents_clean table contains information about the customer support agents and their interactions with customers. It includes details such as the number of interactions per agent and the agent group they belong to. This data can be used to analyze agent performance, identify high-performing and low-performing groups, and optimize agent allocation for better customer support. Additionally, it can help in identifying potential training needs for individual agents or groups.';\n        ", "\n        CREATE OR REPLACE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.tickets_clean (\n              ticket_id BIGINT COMMENT 'Unique identifier for each ticket, allowing for easy tracking and reference.',\n              status STRING COMMENT 'Represents the current status of the ticket, indicating whether it is open, closed, or in progress.',\n              priority STRING COMMENT 'Describes the urgency of the ticket, allowing for prioritization and efficient allocation of resources.',\n              source STRING COMMENT 'Identifies the source of the ticket, providing information about the customer or system that generated it.',\n              topic STRING COMMENT 'Represents the topic or issue related to the ticket, allowing for categorization and efficient handling.',\n              created_time TIMESTAMP COMMENT 'The timestamp when the ticket was created, indicating when it was first reported.',\n              close_time TIMESTAMP COMMENT 'The timestamp when the ticket was closed, indicating when it was resolved.',\n              product_group STRING COMMENT 'Identifies the product or service group associated with the ticket, allowing for categorization and efficient handling.',\n              support_level STRING COMMENT 'Represents the level of support provided for the ticket, indicating the resources allocated to its resolution.',\n              country STRING COMMENT 'Identifies the country where the ticket was generated, providing information about the geographical location of the customer or system.',\n              country_code STRING COMMENT 'Identifies the country where the ticket was generated, providing information about the geographical location of the customer or system.',\n              continental_region STRING COMMENT 'Represents the continent where the ticket was generated',\n              latitude DOUBLE COMMENT 'Represents the latitude of the customer or system location, providing more precise information about the geographical location.',\n              longitude DOUBLE COMMENT 'Represents the longitude of the customer or system location, providing more precise information about the geographical location.',\n              operational_cost DOUBLE COMMENT 'Represents the operational cost associated with the ticket',\n              call_transcript STRING COMMENT 'Contains the transcript of the customer support conversation, allowing for analysis of the customer support conversation and its impact on the ticket resolution time.',\n              compliance_greeting STRING COMMENT 'Represents the compliance status of the ticket',\n              compliance_data_leak STRING COMMENT 'Represents the data leak status of the ticket',\n              call_sentiment_score DOUBLE COMMENT 'Represents the sentiment score of the customer support conversation',\n              compliance_score DOUBLE COMMENT 'Represents the compliance score of the ticket',    \n              csat_score DOUBLE COMMENT 'The CSAT score of the ticket',\n              first_time_resolution BOOLEAN COMMENT 'Indicates whether the ticket was resolved in the first attempt or not',\n              agent_experience_level INTEGER COMMENT 'Represents the experience level of the agent who handled the ticket',\n              agent_specialization_match BOOLEAN COMMENT 'Indicates whether the agent who handled the ticket had a matching specialization with the ticket topic',\n              ticket_in_business_hours BOOLEAN COMMENT 'Indicates whether the ticket was created during business hours or not',\n              PRIMARY KEY (ticket_id) RELY\n        ) USING delta COMMENT 'The tickets_clean table contains customer support tickets that have been cleaned and preprocessed. It includes details such as ticket status, priority, source, topic, and geographical location. This data can be used for monitoring and managing customer support tickets, tracking ticket resolution times, and analyzing customer support patterns based on factors like ticket source, priority, and geographical location. This information can help improve customer support processes and identify potential areas for improvement.';\n        ", "\n        CREATE OR REPLACE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.sla_clean (\n            ticket_id BIGINT COMMENT 'Unique identifier for the customer support ticket.',\n            expected_sla_to_resolve BIGINT COMMENT 'The expected service level agreement (SLA) for resolving the ticket.',\n            expected_sla_to_first_response BIGINT COMMENT 'The expected SLA for the first response to the ticket.',\n            first_response_time BIGINT COMMENT 'The actual time taken for the first response to the ticket.',\n            sla_for_first_response STRING COMMENT 'The SLA achieved for the first response to the ticket.',\n            resolution_time BIGINT COMMENT 'The actual time taken to resolve the ticket.',\n            sla_for_resolution STRING COMMENT 'The SLA achieved for resolving the ticket.',\n            survey_results DOUBLE COMMENT 'The survey results for the customers experience with the support ticket, measured on a numerical scale.',\n            sla_penalty_cost DOUBLE COMMENT 'The penalty incurred for not meeting the SLA for resolving the ticket.',\n            clv_risk DOUBLE COMMENT 'The customer lifetime value (CLV) risk associated with the ticket.',\n            interaction_notes STRING COMMENT 'Contains any additional notes or comments related to the agents interactions with the customer.',\n            first_time_interaction BOOLEAN COMMENT 'Indicates whether the agent had a first-time interaction with the customer or not.',\n            resolution_attempt_number INTEGER COMMENT 'The number of attempts made to resolve the ticket before it was successfully resolved',\n            PRIMARY KEY (ticket_id) RELY\n        )\n        USING delta COMMENT 'The sla_clean table contains information about the Service Level Agreements (SLAs) for customer support tickets. It includes details about the expected SLAs for first response and resolution, as well as the actual SLAs achieved. This data can be used to assess the performance of customer support teams, identify bottlenecks, and track improvements in SLAs over time. Additionally, survey results are included to provide feedback on the quality of customer support.';\n        "], ["\n        INSERT OVERWRITE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.agents_clean\n        SELECT ticket_id, agent_group, agent_name, try_cast(agent_interactions AS DOUBLE) AS agent_interactions, ai_suggestion_accepted\n        FROM `{{CATALOG}}`.`{{SCHEMA}}`.agents_bronze;\n        ", "\n        INSERT OVERWRITE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.tickets_clean\n        SELECT ticket_id\n        , status\n        , priority\n        , source\n        , topic\n        , created_time\n        , close_time\n        , product_group\n        , support_level\n        , country\n        , country_code\n        , continental_region\n        , try_cast(latitude AS DOUBLE) AS latitude\n        , try_cast(longitude AS DOUBLE) AS longitude\n        , try_cast(operational_cost AS DOUBLE) AS operational_cost\n        , call_transcript\n        , compliance_greeting\n        , compliance_data_leak\n        , call_sentiment_score\n        , compliance_score\n        , csat_score\n        , first_time_resolution\n        , agent_experience_level\n        , agent_specialization_match\n        , ticket_in_business_hours \n        FROM `{{CATALOG}}`.`{{SCHEMA}}`.tickets_bronze;\n        ", "\n        INSERT OVERWRITE TABLE `{{CATALOG}}`.`{{SCHEMA}}`.sla_clean\n        SELECT ticket_id\n        , expected_sla_to_resolve\n        , expected_sla_to_first_response\n        , first_response_time\n        , sla_for_first_response\n        , resolution_time\n        , sla_for_resolution\n        , try_cast(survey_results AS DOUBLE) AS survey_results\n        , try_cast(sla_penalty_cost AS DOUBLE) AS sla_penalty_cost\n        , try_cast(clv_risk AS DOUBLE) AS clv_risk\n        , interaction_notes\n        , first_time_resolution\n        , resolution_attempt_number \n        FROM `{{CATALOG}}`.`{{SCHEMA}}`.sla_bronze;\n        "], ["\nCREATE OR REPLACE FUNCTION `{{CATALOG}}`.`{{SCHEMA}}`.get_top_agents_by_survey_score(\n  catalog_name STRING, \n  schema_name STRING, \n  rank_cutoff INT\n) \nRETURNS TABLE (\n  agent_name STRING, \n  avg_survey_score DECIMAL(10,2), \n  performance_rank INT\n) \nRETURN (\n  WITH ranked_agents AS (\n    SELECT \n      a.agent_name, \n      AVG(s.survey_results) AS avg_survey_score, \n      ROW_NUMBER() OVER (\n        ORDER BY AVG(s.survey_results) DESC\n      ) AS performance_rank \n    FROM `{{CATALOG}}`.`{{SCHEMA}}`.tickets_clean t \n    JOIN `{{CATALOG}}`.`{{SCHEMA}}`.agents_clean a ON t.ticket_id = a.ticket_id \n    JOIN `{{CATALOG}}`.`{{SCHEMA}}`.sla_clean s ON t.ticket_id = s.ticket_id \n    GROUP BY a.agent_name\n  )\n  SELECT agent_name, avg_survey_score, performance_rank \n  FROM ranked_agents \n  WHERE performance_rank <= rank_cutoff\n);\n        ", "\n        ALTER TABLE `{{CATALOG}}`.`{{SCHEMA}}`.agents_clean \n        ADD CONSTRAINT agents_clean_tickets_fk FOREIGN KEY (ticket_id) \n        REFERENCES `{{CATALOG}}`.`{{SCHEMA}}`.tickets_clean (ticket_id);\n        ", "\n        ALTER TABLE `{{CATALOG}}`.`{{SCHEMA}}`.sla_clean \n        ADD CONSTRAINT sla_clean_tickets_fk FOREIGN KEY (ticket_id) \n        REFERENCES `{{CATALOG}}`.`{{SCHEMA}}`.tickets_clean (ticket_id);\n        "], ["\n          CREATE OR REPLACE VIEW `{{CATALOG}}`.`{{SCHEMA}}`.`cost_metrics`\n          WITH METRICS\n          LANGUAGE YAML\n          AS $$\n          version: 0.1\n          source: | \n            SELECT sla_clean.*,\n                  agents_clean.*,\n                  tickets_clean.*\n            FROM {{CATALOG}}.{{SCHEMA}}.sla_clean  \n            JOIN {{CATALOG}}.{{SCHEMA}}.agents_clean USING (ticket_id)  \n            JOIN {{CATALOG}}.{{SCHEMA}}.tickets_clean USING (ticket_id)\n          dimensions:\n            - name: Agent Group\n              expr: agent_group\n            - name: Product Group\n              expr: product_group\n            - name: Country\n              expr: country\n          measures:\n            - name: Total Operational Cost\n              expr: SUM(source.operational_cost)\n            - name: Total SLA Penalty Cost\n              expr: SUM(source.sla_penalty_cost)\n            - name: Average CLV Risk\n              expr: AVG(source.clv_risk)\n          $$;\n          "]], "genie_rooms": [{"id": "customer-support", "display_name": "DBDemos - AI/BI - Customer Support Review", "description": "Leverage Databricks AI and BI to gain actionable insights into your customer support performance! As a customer support manager, understanding team performance and customer engagement is critical to delivering exceptional service. With Databricks, you can analyze your support data seamlessly, exploring key metrics like response efficiency, ticket volume trends, and seasonal patterns. Dive deep into customer interactions to identify bottlenecks, improve workflows, and uncover insights that enhance customer satisfaction. Use the power of Databricks' AI-driven analytics to make data-driven decisions, optimize resource allocation, and forecast support demand, ensuring your team consistently exceeds expectations.", "table_identifiers": ["{{CATALOG}}.{{SCHEMA}}.agents_clean", "{{CATALOG}}.{{SCHEMA}}.tickets_clean", "{{CATALOG}}.{{SCHEMA}}.sla_clean"], "sql_instructions": [{"title": "Agent performance by tickets closed per month", "content": "\nWITH monthly_ranked_agents AS (\n    SELECT a.`agent_name`, DATE_TRUNC('month', t.`created_time`) AS month, \n            SUM(s.`survey_results`) AS total_survey_results, \n            ROW_NUMBER() OVER (PARTITION BY DATE_TRUNC('month', t.`created_time`) \n            ORDER BY SUM(s.`survey_results`) DESC) AS performance_rank \n    FROM {{CATALOG}}.{{SCHEMA}}.tickets_clean t \n    JOIN {{CATALOG}}.{{SCHEMA}}.agents_clean a ON t.`ticket_id` = a.`ticket_id` \n    JOIN {{CATALOG}}.{{SCHEMA}}.sla_clean s ON t.`ticket_id` = s.`ticket_id` \n    WHERE t.`created_time` IS NOT NULL \n    GROUP BY a.`agent_name`, DATE_TRUNC('month', t.`created_time`)\n) \nSELECT `agent_name`, `month`, `total_survey_results` \nFROM monthly_ranked_agents \nWHERE performance_rank <= 10 \nORDER BY `month`, performance_rank;\n            "}, {"title": "Proportion of tickets per month that violate first response SLA", "content": "\nWITH monthly_tickets AS (\n    SELECT DATE_TRUNC('month', t.`created_time`) AS month, COUNT(*) AS total_tickets, \n            SUM(CASE WHEN s.`first_response_time` > s.`expected_sla_to_first_response` THEN 1 ELSE 0 END) AS sla_violations \n    FROM {{CATALOG}}.{{SCHEMA}}.tickets_clean t \n    JOIN {{CATALOG}}.{{SCHEMA}}.sla_clean s ON t.`ticket_id` = s.`ticket_id` \n    WHERE t.`created_time` IS NOT NULL AND s.`first_response_time` IS NOT NULL AND s.`expected_sla_to_first_response` IS NOT NULL \n    GROUP BY DATE_TRUNC('month', t.`created_time`)\n) \nSELECT month, ROUND((sla_violations / total_tickets :: decimal) * 100, 2) AS violation_percentage \nFROM monthly_tickets \nORDER BY month;\n            "}, {"title": "Which agents violate the resolution SLA most often compared to their number of closed tickets?", "content": "\nSELECT a.`agent_name`, a.`violation_count`, t2.`total_tickets`, \n        ROUND((a.`violation_count` :: decimal / t2.`total_tickets`) * 100, 2) AS violation_percentage \nFROM (\n    SELECT a.`agent_name`, COUNT(*) AS violation_count \n    FROM {{CATALOG}}.{{SCHEMA}}.tickets_clean t \n    JOIN {{CATALOG}}.{{SCHEMA}}.agents_clean a ON t.`ticket_id` = a.`ticket_id` \n    JOIN {{CATALOG}}.{{SCHEMA}}.sla_clean s ON t.`ticket_id` = s.`ticket_id` \n    WHERE a.`agent_name` IS NOT NULL AND s.`resolution_time` > s.`expected_sla_to_resolve` \n    GROUP BY a.`agent_name`\n) a \nJOIN (\n    SELECT a.`agent_name`, COUNT(*) AS total_tickets \n    FROM {{CATALOG}}.{{SCHEMA}}.tickets_clean t \n    JOIN {{CATALOG}}.{{SCHEMA}}.agents_clean a ON t.`ticket_id` = a.`ticket_id` \n    JOIN {{CATALOG}}.{{SCHEMA}}.sla_clean s ON t.`ticket_id` = s.`ticket_id` \n    WHERE a.`agent_name` IS NOT NULL AND t.`close_time` IS NOT NULL \n    GROUP BY a.`agent_name`\n) t2 ON a.`agent_name` = t2.`agent_name` \nORDER BY violation_percentage DESC;\n            "}], "instructions": "SLA stands for \"Service Level Agreement,\" and violating an SLA (whether for first response time to each customer issue, or for time-to-resolution, is a huge problem for a business.)", "function_names": ["{{CATALOG}}.{{SCHEMA}}.get_top_agents_by_survey_score"], "curated_questions": ["Proportion of tickets per month that violate first response SLA", "Agent performance by tickets closed per month", "Number of tickets in 2023 by country", "How has my team's percentage of resolution SLA violations changed over all time?"]}]}