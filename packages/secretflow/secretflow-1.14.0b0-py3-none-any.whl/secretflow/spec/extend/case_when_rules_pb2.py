# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: secretflow/spec/extend/case_when_rules.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,secretflow/spec/extend/case_when_rules.proto\x12\x16secretflow.spec.extend\"\x88\x07\n\x0c\x43\x61seWhenRule\x12\x38\n\x05whens\x18\x01 \x03(\x0b\x32).secretflow.spec.extend.CaseWhenRule.When\x12\x42\n\nelse_value\x18\x02 \x01(\x0b\x32..secretflow.spec.extend.CaseWhenRule.ValueExpr\x12\x15\n\routput_column\x18\x03 \x01(\t\x12\x15\n\rfloat_epsilon\x18\x04 \x01(\x01\x12\x10\n\x08\x61s_label\x18\x05 \x01(\x08\x1a\xdc\x01\n\tValueExpr\x12\x46\n\x04type\x18\x01 \x01(\x0e\x32\x38.secretflow.spec.extend.CaseWhenRule.ValueExpr.ValueType\x12\x13\n\x0b\x63olumn_name\x18\x02 \x01(\t\x12\t\n\x01i\x18\x03 \x01(\x03\x12\t\n\x01\x66\x18\x04 \x01(\x01\x12\t\n\x01s\x18\x05 \x01(\t\"Q\n\tValueType\x12\t\n\x05INVAL\x10\x00\x12\r\n\tCONST_INT\x10\x01\x12\x0f\n\x0b\x43ONST_FLOAT\x10\x02\x12\r\n\tCONST_STR\x10\x03\x12\n\n\x06\x43OLUMN\x10\x04\x1a\xe2\x01\n\x04\x43ond\x12\x13\n\x0b\x63ond_column\x18\x01 \x01(\t\x12<\n\x02op\x18\x02 \x01(\x0e\x32\x30.secretflow.spec.extend.CaseWhenRule.Cond.CondOp\x12\x42\n\ncond_value\x18\x03 \x01(\x0b\x32..secretflow.spec.extend.CaseWhenRule.ValueExpr\"C\n\x06\x43ondOp\x12\t\n\x05INVAL\x10\x00\x12\x06\n\x02\x45Q\x10\x01\x12\x06\n\x02NE\x10\x02\x12\x06\n\x02LT\x10\x03\x12\x06\n\x02LE\x10\x04\x12\x06\n\x02GT\x10\x05\x12\x06\n\x02GE\x10\x06\x1a\xf5\x01\n\x04When\x12\x38\n\x05\x63onds\x18\x01 \x03(\x0b\x32).secretflow.spec.extend.CaseWhenRule.Cond\x12J\n\x0b\x63onnections\x18\x02 \x03(\x0e\x32\x35.secretflow.spec.extend.CaseWhenRule.When.ConnectType\x12<\n\x04then\x18\x03 \x01(\x0b\x32..secretflow.spec.extend.CaseWhenRule.ValueExpr\")\n\x0b\x43onnectType\x12\t\n\x05INVAL\x10\x00\x12\x07\n\x03\x41ND\x10\x01\x12\x06\n\x02OR\x10\x02\x42\x1c\n\x1aorg.secretflow.spec.extendb\x06proto3')



_CASEWHENRULE = DESCRIPTOR.message_types_by_name['CaseWhenRule']
_CASEWHENRULE_VALUEEXPR = _CASEWHENRULE.nested_types_by_name['ValueExpr']
_CASEWHENRULE_COND = _CASEWHENRULE.nested_types_by_name['Cond']
_CASEWHENRULE_WHEN = _CASEWHENRULE.nested_types_by_name['When']
_CASEWHENRULE_VALUEEXPR_VALUETYPE = _CASEWHENRULE_VALUEEXPR.enum_types_by_name['ValueType']
_CASEWHENRULE_COND_CONDOP = _CASEWHENRULE_COND.enum_types_by_name['CondOp']
_CASEWHENRULE_WHEN_CONNECTTYPE = _CASEWHENRULE_WHEN.enum_types_by_name['ConnectType']
CaseWhenRule = _reflection.GeneratedProtocolMessageType('CaseWhenRule', (_message.Message,), {

  'ValueExpr' : _reflection.GeneratedProtocolMessageType('ValueExpr', (_message.Message,), {
    'DESCRIPTOR' : _CASEWHENRULE_VALUEEXPR,
    '__module__' : 'secretflow.spec.extend.case_when_rules_pb2'
    # @@protoc_insertion_point(class_scope:secretflow.spec.extend.CaseWhenRule.ValueExpr)
    })
  ,

  'Cond' : _reflection.GeneratedProtocolMessageType('Cond', (_message.Message,), {
    'DESCRIPTOR' : _CASEWHENRULE_COND,
    '__module__' : 'secretflow.spec.extend.case_when_rules_pb2'
    # @@protoc_insertion_point(class_scope:secretflow.spec.extend.CaseWhenRule.Cond)
    })
  ,

  'When' : _reflection.GeneratedProtocolMessageType('When', (_message.Message,), {
    'DESCRIPTOR' : _CASEWHENRULE_WHEN,
    '__module__' : 'secretflow.spec.extend.case_when_rules_pb2'
    # @@protoc_insertion_point(class_scope:secretflow.spec.extend.CaseWhenRule.When)
    })
  ,
  'DESCRIPTOR' : _CASEWHENRULE,
  '__module__' : 'secretflow.spec.extend.case_when_rules_pb2'
  # @@protoc_insertion_point(class_scope:secretflow.spec.extend.CaseWhenRule)
  })
_sym_db.RegisterMessage(CaseWhenRule)
_sym_db.RegisterMessage(CaseWhenRule.ValueExpr)
_sym_db.RegisterMessage(CaseWhenRule.Cond)
_sym_db.RegisterMessage(CaseWhenRule.When)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\032org.secretflow.spec.extend'
  _CASEWHENRULE._serialized_start=73
  _CASEWHENRULE._serialized_end=977
  _CASEWHENRULE_VALUEEXPR._serialized_start=280
  _CASEWHENRULE_VALUEEXPR._serialized_end=500
  _CASEWHENRULE_VALUEEXPR_VALUETYPE._serialized_start=419
  _CASEWHENRULE_VALUEEXPR_VALUETYPE._serialized_end=500
  _CASEWHENRULE_COND._serialized_start=503
  _CASEWHENRULE_COND._serialized_end=729
  _CASEWHENRULE_COND_CONDOP._serialized_start=662
  _CASEWHENRULE_COND_CONDOP._serialized_end=729
  _CASEWHENRULE_WHEN._serialized_start=732
  _CASEWHENRULE_WHEN._serialized_end=977
  _CASEWHENRULE_WHEN_CONNECTTYPE._serialized_start=936
  _CASEWHENRULE_WHEN_CONNECTTYPE._serialized_end=977
# @@protoc_insertion_point(module_scope)
