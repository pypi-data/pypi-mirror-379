# ============================================================================
# PACKAGE CONFIGURATION
# ============================================================================

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0", "wheel"]

[project]
name = "riso-pykit"
description = "RisoTech Python Kit - A collection of Python tools and libraries for the Riso framework"
readme = "README.md"
authors = [
  {name = "Bin Nguyen", email = "tu.nguyen@risotech.vn"}
]
keywords = ["riso", "pykit", "risotech", "python", "toolkit", "utilities", "logger"]
requires-python = ">=3.12"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12"
]
dynamic = ["dependencies", "version"]

[project.urls]
Homepage = "https://github.com/libs-factory/riso-pykit"
Documentation = "https://github.com/libs-factory/riso-pykit#readme"
Repository = "https://github.com/libs-factory/riso-pykit"
"Bug Tracker" = "https://github.com/libs-factory/riso-pykit/issues"

# ==== setuptools ====
[tool.setuptools]
packages = ["pykit"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements/requirements.in"]}
version = {attr = "pykit.__version__"}

# ============================================================================
# CODE QUALITY TOOLS
# ============================================================================

# ==== Ruff (Python linter and formatter) ====
[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
  "F",    # Pyflakes
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "I",    # isort
  "N",    # pep8-naming
  "UP",   # pyupgrade
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "DTZ",  # flake8-datetimez
  "T10",  # flake8-debugger
  "ISC",  # flake8-implicit-str-concat
  "ICN",  # flake8-import-conventions
  "RET",  # flake8-return
  "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  "PTH",  # flake8-use-pathlib
  "PL",   # Pylint
  "RUF",  # Ruff-specific rules
]
ignore = [
  "S101",  # Use of assert detected
]

[tool.ruff.lint.isort]
force-single-line = true

# ==== pytest ====
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=pykit",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80"
]

# ==== coverage ====
[tool.coverage.run]
source = ["pykit"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
