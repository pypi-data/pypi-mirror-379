[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dj-health-checker"
dynamic = ["version"]
description = "A comprehensive Django health checker app for monitoring application health"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AZCare Team", email = "support@azcare.com"},
]
maintainers = [
    {name = "AZCare Team", email = "support@azcare.com"},
]
keywords = ["django", "health", "check", "monitoring", "kubernetes", "docker", "probe"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
]
requires-python = ">=3.8"
dependencies = [
    "Django>=3.2,<6.0",
    "psutil>=5.8.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-django>=4.0.0",
    "pytest-cov>=2.10.0",
    "coverage>=5.0.0",
    "flake8>=3.8.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
    "build>=0.7.0",
    "twine>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/azcare/dj-health-checker"
Documentation = "https://github.com/azcare/dj-health-checker#readme"
Repository = "https://github.com/azcare/dj-health-checker"
"Bug Tracker" = "https://github.com/azcare/dj-health-checker/issues"

[tool.setuptools]
packages = ["dj_health_checker"]

[tool.setuptools.package-data]
dj_health_checker = ["templates/**/*", "static/**/*", "locale/**/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["dj_health_checker"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
