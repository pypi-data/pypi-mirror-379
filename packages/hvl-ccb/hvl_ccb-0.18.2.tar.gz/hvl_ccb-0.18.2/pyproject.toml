[build-system]
build-backend="setuptools.build_meta"
requires     =["setuptools"]

[project]
name="hvl_ccb"
dependencies=[
    "aenum>=3.1.11",
    "asyncua>=1.0.1",
    "bitstring>=3.1.9",
    "numpy>=1.23.4",
    "pymodbus>=3.1.1",
    "pyserial>=3.5",
    "pyvisa-py>=0.5.3",
    "pyvisa>=1.12.0",
    "typeguard>=3.0.0",
]
requires-python=">=3.10, <3.14"
authors=[
    {name="Pit Bechtold"},
    {name="Fabian Bill"},
    {name="Alise Chachereau"},
    {name="Maria Del"},
    {name="Joseph Engelbrecht"},
    {name="Raphael Faerber"},
    {name="David Graber"},
    {name="Chi-Ching Hsu"},
    {name="Henning Janssen"},
    {name="Henrik Menne"},
    {name="Luca Nembrini"},
    {name="Mikołaj Rybiński"},
    {name="Ruben Stadler"},
    {name="David Taylor"},
    {name="Hanut Vemulapalli"},
]
maintainers=[
    {name="Chi-Ching Hsu", email="contact-project+ethz-hvl-hvl-ccb-15975897-issue-@incoming.gitlab.com"},
    {name="Henning Janssen", email="contact-project+ethz-hvl-hvl-ccb-15975897-issue-@incoming.gitlab.com"},
]
description="Python common code base to control research devices, in particular, as used in Christian Franck's High Voltage Lab (HVL), D-ITET, ETH Zurich"
readme={file="README.md", content-type="text/markdown"}
license={text="GNU General Public License v3"}
keywords=[
    "control",
    "experimenting",
    "high-voltage",
    "instrument",
    "laboratory",
    "research",
    "university",
]
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
]
dynamic=["version"]

[project.optional-dependencies]
all=["hvl_ccb[tiepie, labjack, picotech]"]
dev=[
    "build",
    "coverage>=5.4",
    "ipdb>=0.13.4",
    "ipython>=7.19.0",
    "myst-parser>=4.0",
    "pip>=21.0",
    "pre-commit>=2.17",
    "pytest-cov>=2.11.1",
    "pytest-env>=1.1.3",
    "pytest-mock>=3.5.1",
    "pytest-profiling>=1.8.1",
    "pytest-xdist>=2.2.0",
    "sphinx==7.3.7",
    "sphinx_rtd_theme>=0.5.1",
    "twine>=3.3.0",
    "watchdog>=1.0.2",
    "wheel>=0.36.2",
    "ruff>=0.12.7",
]
labjack=["labjack-ljm>=1.21.0"]
picotech=["PicoSDK==1.0"]
tiepie=["python-libtiepie-bi>=1.2.5.1"]

[dependency-groups]
dev =["bumpver>=2024.1130", "mypy>=1.15.0", "pytest>=8.3.4", "tox>=4.24.1"]
lint=["ruff>=0.11.2"]

[tool.setuptools.dynamic]
version={file=["VERSION"]}

[tool.setuptools.package-data]
hvl_ccb=["py.typed"]

[tool.setuptools.packages.find]
include=["hvl_ccb*"]
where  =["src"]

[project.urls]
Changelog    ="https://pypi.org/project/hvl-ccb/#history"
Documentation="https://hvl-ccb.readthedocs.io/en/latest/"
Homepage     ="https://gitlab.com/ethz_hvl/hvl_ccb/"
Repository   ="https://gitlab.com/ethz_hvl/hvl_ccb/"

[tool.bumpver]
commit         =true
commit_message ="Bump version: {old_version} → {new_version}"
current_version="0.18.2"
tag            =true
tag_message    ="Bump version: {old_version} → {new_version}"
version_pattern="MAJOR.MINOR.PATCH"

[tool.bumpver.file_patterns]
"VERSION"                =['{version}$']
"src/hvl_ccb/__init__.py"=['^__version__ = "{version}"$']

[tool.coverage.report]
precision=2

[tool.pytest]
collect_ignore=["setup.py"]

[tool.pytest.ini_options]
filterwarnings=[
    "ignore::UserWarning",
    "error::DeprecationWarning",
    "ignore:There is no current event loop:DeprecationWarning",
]

env="COVERAGE_CORE=sysmon"

[tool.mypy]
plugins=["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
ignore_missing_imports=true
module=[
    "aenum.*",
    "asyncua.*",
    "bitstring.*",
    "labjack.*",
    "libtiepie.*",
    "pymodbus.*",
    "pyvisa.*",
    "serial.*",
    "visa.*",
]


[tool.aliases]
test="pytest"

[tool.bdist_wheel]
universal=1

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude=[
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".vscode",
    "build",
    "dist",
]

# Same as Black.
indent-width=4
line-length =88

# Assume Python 3.10
target-version="py310"

[tool.ruff.lint]
# Relevant rules: https://docs.astral.sh/ruff/rules/
ignore=[
    "G004",
    "PT011",
    "TD002",
    "C90",
    "D",
    "D203",
    "D212",
    "ANN",
    "FBT",
    "COM",
    "DTZ",
    "ISC",
    "SLF",
    "ERA",
    "PL",
    "FURB",
]
select=["ALL", "ANN201", "ANN204", "ANN206", "PLR0402", "PLR5501"]


# Allow fix for all enabled rules (when `--fix`) is provided.
fixable  =["ALL"]
unfixable=[]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx="^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-builtins]
builtins-allowed-modules=["enum", "typing"]

[tool.ruff.lint.isort]
known-first-party=["hvl_ccb", "masked_comm", "mock_libtiepie", "mocked_comm"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing=true

[tool.ruff.lint.per-file-ignores]
"examples/*"=["T20", "INP001"]
"tests/*"   =["ANN201", "S101", "INP001"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style="double"

# Like Black, indent with spaces, rather than tabs.
indent-style="space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma=false

# Like Black, automatically detect the appropriate line ending.
line-ending="auto"


[tool.tox]
legacy_tox_ini="""
[tox]
envlist = py{310,311,312,313}, mypy, ruff

[testenv]
extras = all, dev
setenv =
	PYTHONPATH = {toxinidir}
    COVERAGE_CORE = sysmon
deps =
	PicoSDK@git+https://github.com/trybik/picosdk-python-wrappers.git@fix_lib_load_linux#egg=PicoSDK-1.0
commands =
	py.test --junit-xml=rspec.xml --cov {envsitepackagesdir}/hvl_ccb --cov-report term --cov-report xml --basetemp={envtmpdir} tests/

[testenv:mypy]
basepython = python3
deps =
	mypy
	numpy
skip_install = True
skipsdist = True
commands = mypy --show-error-codes src

[testenv:ruff]
basepython = python3
deps = ruff
# skip_install = True  # Install hvl_ccb for dependencies
skipsdist = True
commands =
    ruff check --exit-non-zero-on-fix src/ tests/ examples/ docs/
    ruff format --check src/ tests/ examples/ docs/
"""
