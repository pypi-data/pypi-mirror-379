Metadata-Version: 2.4
Name: aind-metadata-mapper
Version: 0.29.0
Summary: Package to manage mapping of source data into aind-data-schema metadata files.
Author: Allen Institute for Neural Dynamics
License: MIT
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aind-data-schema-models<1.0.0,>=0.3.2
Requires-Dist: pydantic-settings>=2.0
Provides-Extra: dev
Requires-Dist: aind-metadata-mapper[all]; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: interrogate; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: furo; extra == "dev"
Provides-Extra: fip
Requires-Dist: aind-metadata-mapper[schema]; extra == "fip"
Requires-Dist: tzlocal>=5.3.1; extra == "fip"
Requires-Dist: pandas>=2.2.2; extra == "fip"
Provides-Extra: all
Requires-Dist: aind-metadata-mapper[bergamo]; extra == "all"
Requires-Dist: aind-metadata-mapper[bruker]; extra == "all"
Requires-Dist: aind-metadata-mapper[mesoscope]; extra == "all"
Requires-Dist: aind-metadata-mapper[openephys]; extra == "all"
Requires-Dist: aind-metadata-mapper[dynamicrouting]; extra == "all"
Requires-Dist: aind-metadata-mapper[u19]; extra == "all"
Requires-Dist: aind-metadata-mapper[fip]; extra == "all"
Provides-Extra: schema
Requires-Dist: aind-data-schema<1.3.0,>=1.2.0; extra == "schema"
Provides-Extra: bergamo
Requires-Dist: aind-metadata-mapper[schema]; extra == "bergamo"
Requires-Dist: scanimage-tiff-reader==1.4.1.4; extra == "bergamo"
Requires-Dist: numpy>=1.26.4; extra == "bergamo"
Provides-Extra: bruker
Requires-Dist: aind-metadata-mapper[schema]; extra == "bruker"
Requires-Dist: bruker2nifti==1.0.4; extra == "bruker"
Provides-Extra: mesoscope
Requires-Dist: aind-metadata-mapper[bergamo]; extra == "mesoscope"
Requires-Dist: pillow>=10.4.0; extra == "mesoscope"
Requires-Dist: tifffile==2024.2.12; extra == "mesoscope"
Requires-Dist: numpy>=1.26.4; extra == "mesoscope"
Requires-Dist: h5py>=3.11.0; extra == "mesoscope"
Requires-Dist: scipy>=1.11.0; extra == "mesoscope"
Requires-Dist: pandas>=2.2.2; extra == "mesoscope"
Provides-Extra: openephys
Requires-Dist: aind-metadata-mapper[schema]; extra == "openephys"
Requires-Dist: h5py>=3.11.0; extra == "openephys"
Requires-Dist: hdmf<4.0.0; extra == "openephys"
Requires-Dist: npc_ephys==0.1.35; extra == "openephys"
Requires-Dist: scipy>=1.11.0; extra == "openephys"
Requires-Dist: pandas>=2.2.2; extra == "openephys"
Requires-Dist: numpy>=1.26.4; extra == "openephys"
Requires-Dist: npc_mvr==0.1.11; extra == "openephys"
Requires-Dist: wavpack-numcodecs<0.2.2; extra == "openephys"
Requires-Dist: pyarrow==20.0.0; extra == "openephys"
Requires-Dist: numcodecs<0.16.0; extra == "openephys"
Provides-Extra: dynamicrouting
Requires-Dist: aind-metadata-mapper[schema]; extra == "dynamicrouting"
Requires-Dist: pyyaml>=6.0.0; extra == "dynamicrouting"
Provides-Extra: u19
Requires-Dist: aind-metadata-mapper[schema]; extra == "u19"
Requires-Dist: pandas>=2.2.2; extra == "u19"
Provides-Extra: smartspim
Requires-Dist: aind-metadata-mapper[schema]; extra == "smartspim"
Requires-Dist: requests; extra == "smartspim"
Provides-Extra: doc
Requires-Dist: Sphinx<6.0; extra == "doc"
Requires-Dist: furo; extra == "doc"
Dynamic: license-file

# aind-metadata-mapper

[![License](https://img.shields.io/badge/license-MIT-brightgreen)](LICENSE)
![Code Style](https://img.shields.io/badge/code%20style-black-black)
[![semantic-release: angular](https://img.shields.io/badge/semantic--release-angular-e10079?logo=semantic-release)](https://github.com/semantic-release/semantic-release)
![Interrogate](https://img.shields.io/badge/interrogate-100.0%25-brightgreen)
![Coverage](https://img.shields.io/badge/coverage-86%25-yellow?logo=codecov)
![Python](https://img.shields.io/badge/python->=3.10-blue?logo=python)

Repository to contain code that will parse source files into aind-data-schema models.

## Usage

## Installation
To use the software, in the root directory, run
```bash
pip install -e ".[all]"
```

It's possible to install just a small subset of dependencies. For example,
```bash
pip install -e ".[bergamo]"
```

To develop the code, run
```bash
pip install -e ".[dev]"
```

## Issues and Discussions
If you've found a bug in the schemas or would like to make a minor change, open an [issue](https://github.com/AllenNeuralDynamics/aind-metadata-mapper/issues) and please use the provided templates. If you'd like to propose a large change or addition, or generally have a question about how things work, head start a new Discussion!

## Contributing
Contributions are more than welcome for this project! If you'd like to develop the code, please follow the standards outlined in the [contribution guide](https://github.com/AllenNeuralDynamics/aind-metadata-mapper/blob/dev/CONTRIBUTING.md).

### Documentation
To generate the rst files source files for documentation, run
```bash
sphinx-apidoc -o docs/source/ src 
```
Then to create the documentation HTML files, run
```bash
sphinx-build -b html docs/source/ docs/build/html
```
More info on sphinx installation can be found [here](https://www.sphinx-doc.org/en/master/usage/installation.html).


More information including a user guide and contributor guidelines can be found at [readthedocs](https://aind-metadata-mapper.readthedocs.io/en/latest/).
