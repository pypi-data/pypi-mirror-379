[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "aind-metadata-mapper"
description = "Package to manage mapping of source data into aind-data-schema metadata files."
license = {text = "MIT"}
requires-python = ">=3.9"
authors = [
    {name = "Allen Institute for Neural Dynamics"}
]
classifiers = [
    "Programming Language :: Python :: 3"
]
readme = "README.md"
dynamic = ["version"]

dependencies = [
    "aind-data-schema-models>=0.3.2,<1.0.0",
    "pydantic-settings>=2.0"
]

[project.optional-dependencies]
dev = [
    "aind-metadata-mapper[all]",
    "black",
    "coverage",
    "flake8",
    "interrogate",
    "isort",
    "furo",
]

fip = [
    "aind-metadata-mapper[schema]",
    "tzlocal>=5.3.1",
    "pandas>=2.2.2"
]

all = [
    "aind-metadata-mapper[bergamo]",
    "aind-metadata-mapper[bruker]",
    "aind-metadata-mapper[mesoscope]",
    "aind-metadata-mapper[openephys]",
    "aind-metadata-mapper[dynamicrouting]",
    "aind-metadata-mapper[u19]",
    "aind-metadata-mapper[fip]",
]

schema = [
    "aind-data-schema>=1.2.0,<1.3.0",
]

bergamo = [
    "aind-metadata-mapper[schema]",
    "scanimage-tiff-reader==1.4.1.4",
    "numpy >= 1.26.4",
]

bruker = [
    "aind-metadata-mapper[schema]",
    "bruker2nifti==1.0.4",
]

mesoscope = [
    "aind-metadata-mapper[bergamo]",
    "pillow >= 10.4.0",
    "tifffile==2024.2.12",
    "numpy >= 1.26.4",
    "h5py >= 3.11.0",
    "scipy >= 1.11.0",
    "pandas >= 2.2.2",
]

openephys = [
    "aind-metadata-mapper[schema]",
    "h5py >= 3.11.0",
    "hdmf < 4.0.0",
    "npc_ephys == 0.1.35",
    "scipy >= 1.11.0",
    "pandas >= 2.2.2",
    "numpy >= 1.26.4",
    "npc_mvr == 0.1.11",
    "wavpack-numcodecs<0.2.2",
    "pyarrow == 20.0.0",
    "numcodecs<0.16.0",
]

dynamicrouting = [
    "aind-metadata-mapper[schema]",
    "pyyaml >= 6.0.0",
]

u19 = [
    "aind-metadata-mapper[schema]",
    "pandas >= 2.2.2",
]

smartspim = [
    "aind-metadata-mapper[schema]",
    "requests",
]

doc = [
    "Sphinx<6.0",
    "furo"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "aind_metadata_mapper.__version__"}

[tool.black]
line-length = 79
target_version = ['py310']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  | .gitignore
)
'''

[tool.coverage.run]
omit = ["*__init__*", "tests/integration/*"]
source = ["aind_metadata_mapper", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "from",
    "import",
    "pragma: no cover"
]
fail_under = 80

[tool.isort]
line_length = 79
profile = "black"

[tool.interrogate]
exclude = ["setup.py", "docs", "build"]
fail-under = 100
