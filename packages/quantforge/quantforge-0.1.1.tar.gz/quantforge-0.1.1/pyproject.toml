[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "quantforge"
dynamic = ["version"]
description = "High-performance option pricing library powered by Rust + PyO3"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.12"
dependencies = [
    "numpy>=1.20",
    "psutil>=7.0.0",
    "pyarrow>=10.0.0",
    "arro3-core>=0.4.0",
    "pandas>=2.3.2",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Rust",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Operating System :: OS Independent",
]
keywords = ["quantitative-finance", "options", "derivatives", "black-scholes", "option-pricing", "financial-engineering", "rust", "high-performance"]
authors = [
    {name = "driller", email = ""}
]
maintainers = [
    {name = "driller", email = ""}
]

[project.urls]
Homepage = "https://github.com/drillan/quantforge"
Documentation = "https://github.com/drillan/quantforge/tree/main/docs"
Repository = "https://github.com/drillan/quantforge.git"
Issues = "https://github.com/drillan/quantforge/issues"
Changelog = "https://github.com/drillan/quantforge/blob/main/CHANGELOG.md"
[project.optional-dependencies]
docs = [
    "sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
    "myst-parser>=4.0.1",
    "linkify-it-py>=2.0.3",
    "sphinxext-opengraph>=0.9.1",
    "sphinxcontrib-mermaid>=1.0.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-tabs>=3.4.7",
]

[dependency-groups]
dev = [
    "maturin>=1.9.3",
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.1",
    "pytest-timeout>=2.3.1",
    "pytest-mock>=3.14.0",
    "hypothesis>=6.100.0",
    "ruff>=0.12.10",
    "scipy>=1.16.1",
    "types-pyyaml>=6.0.12.20250822",
    "scipy-stubs>=1.16.1.1",
    "types-psutil>=7.0.0.20250822",
    "pyyaml>=6.0.2",
    "pandas-stubs>=2.3.2.250827",
    "myst-parser>=4.0.1",
    "docutils>=0.18",
]

[tool.ruff]
target-version = "py312"
line-length = 120
indent-width = 4
exclude = [
    "playground/",
    "scratch/",
    "draft/",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.setuptools.packages.find]
where = ["."]
include = ["quantforge*", "benchmarks*"]
namespaces = false

[tool.setuptools.package-data]
benchmarks = ["*.json", "*.md", "results/*.json", "results/*.jsonl", "results/*.csv"]

[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "quantforge.quantforge"
manifest-path = "bindings/python/Cargo.toml"
python-source = "bindings/python/python"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = [".", "benchmarks"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--benchmark-storage=file://benchmark_results",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmark tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "property: marks tests as property-based tests",
    "golden: marks tests as golden master tests",
]

[tool.pytest-benchmark]
storage = "file://benchmark_results"
only_compare = true
disable_gc = false
min_rounds = 5
max_time = 1.0
calibration_precision = 10
save_as = "benchmark"

# Coverage configuration removed - not applicable to Rust extensions

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # False for extension modules
disallow_any_unimported = false  # False for numpy types
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
check_untyped_defs = true
mypy_path = "bindings/python/stubs"
explicit_package_bases = true
exclude = [
    "playground/",  # 一時的な検証スクリプトは除外
    "scratch/",  # テンポラリファイルは除外
    "draft/",  # ドラフトファイルは除外
    "plans/",  # 計画文書は除外
    "tests/integration/test_put_options.py",  # 型スタブ未対応のため一時除外
    "tests/unit/test_implied_volatility.py",  # PyO3バインディングの型情報不完全
    "docs/",  # Sphinx configuration files
    ".internal/",  # Internal tools
    "bindings/python/python/",  # Exclude duplicated module path
]

[[tool.mypy.overrides]]
module = "quantforge.*"
ignore_missing_imports = true  # Temporary: ignore missing imports for Rust modules

[[tool.mypy.overrides]]
module = "quantforge.quantforge"
ignore_errors = true  # Native extension module

[[tool.mypy.overrides]]
module = [
    "matplotlib",
    "matplotlib.*",
    "docutils",
    "docutils.*",
]
ignore_missing_imports = true  # External libraries without type stubs
