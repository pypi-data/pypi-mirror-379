# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHoughTransform2DCirclesImageFilterPython
else:
    import _itkHoughTransform2DCirclesImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkEllipseSpatialObjectPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkMapContainerPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkImageToImageFilterCommonPython

def itkHoughTransform2DCirclesImageFilterDULF_New():
    return itkHoughTransform2DCirclesImageFilterDULF.New()

class itkHoughTransform2DCirclesImageFilterDULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2):
    r"""Proxy of C++ itkHoughTransform2DCirclesImageFilterDULF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHoughTransform2DCirclesImageFilterDULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHoughTransform2DCirclesImageFilterDULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_Clone(self)

    def VerifyPreconditions(self):
        r"""VerifyPreconditions(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_VerifyPreconditions(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GenerateData(self)

    def SetRadius(self, radius):
        r"""
        SetRadius(self, radius)

        Parameters
        ----------
        radius: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetRadius(self, radius)

    def SetMinimumRadius(self, _arg):
        r"""
        SetMinimumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetMinimumRadius(self, _arg)

    def GetMinimumRadius(self):
        r"""GetMinimumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetMinimumRadius(self)

    def SetMaximumRadius(self, _arg):
        r"""
        SetMaximumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetMaximumRadius(self, _arg)

    def GetMaximumRadius(self):
        r"""GetMaximumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetMaximumRadius(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetThreshold(self)

    def SetGradientNormThreshold(self, _arg):
        r"""
        SetGradientNormThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetGradientNormThreshold(self, _arg)

    def GetGradientNormThreshold(self):
        r"""GetGradientNormThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetGradientNormThreshold(self)

    def GetModifiableRadiusImage(self):
        r"""GetModifiableRadiusImage(self) -> itkImageF2"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetModifiableRadiusImage(self)

    def GetRadiusImage(self, *args):
        r"""
        GetRadiusImage(self) -> itkImageF2
        GetRadiusImage(self) -> itkImageF2
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetRadiusImage(self, *args)

    def SetSigmaGradient(self, _arg):
        r"""
        SetSigmaGradient(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetSigmaGradient(self, _arg)

    def GetSigmaGradient(self):
        r"""GetSigmaGradient(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetSigmaGradient(self)

    def GetCircles(self):
        r"""GetCircles(self) -> listitkEllipseSpatialObject2_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetCircles(self)

    def SetNumberOfCircles(self, _arg):
        r"""
        SetNumberOfCircles(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetNumberOfCircles(self, _arg)

    def GetNumberOfCircles(self):
        r"""GetNumberOfCircles(self) -> unsigned long"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetNumberOfCircles(self)

    def SetDiscRadiusRatio(self, _arg):
        r"""
        SetDiscRadiusRatio(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetDiscRadiusRatio(self, _arg)

    def GetDiscRadiusRatio(self):
        r"""GetDiscRadiusRatio(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetDiscRadiusRatio(self)

    def SetVariance(self, _arg):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetVariance(self, _arg)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetVariance(self)

    def SetSweepAngle(self, _arg):
        r"""
        SetSweepAngle(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetSweepAngle(self, _arg)

    def GetSweepAngle(self):
        r"""GetSweepAngle(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetSweepAngle(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_GetUseImageSpacing(self)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterDULF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHoughTransform2DCirclesImageFilterDULF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterDULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterDULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterDULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterDULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterDULF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterDULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterDULF_swigregister(itkHoughTransform2DCirclesImageFilterDULF)

def itkHoughTransform2DCirclesImageFilterFULF_New():
    return itkHoughTransform2DCirclesImageFilterFULF.New()

class itkHoughTransform2DCirclesImageFilterFULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2):
    r"""Proxy of C++ itkHoughTransform2DCirclesImageFilterFULF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHoughTransform2DCirclesImageFilterFULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHoughTransform2DCirclesImageFilterFULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_Clone(self)

    def VerifyPreconditions(self):
        r"""VerifyPreconditions(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_VerifyPreconditions(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GenerateData(self)

    def SetRadius(self, radius):
        r"""
        SetRadius(self, radius)

        Parameters
        ----------
        radius: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetRadius(self, radius)

    def SetMinimumRadius(self, _arg):
        r"""
        SetMinimumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetMinimumRadius(self, _arg)

    def GetMinimumRadius(self):
        r"""GetMinimumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetMinimumRadius(self)

    def SetMaximumRadius(self, _arg):
        r"""
        SetMaximumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetMaximumRadius(self, _arg)

    def GetMaximumRadius(self):
        r"""GetMaximumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetMaximumRadius(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetThreshold(self)

    def SetGradientNormThreshold(self, _arg):
        r"""
        SetGradientNormThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetGradientNormThreshold(self, _arg)

    def GetGradientNormThreshold(self):
        r"""GetGradientNormThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetGradientNormThreshold(self)

    def GetModifiableRadiusImage(self):
        r"""GetModifiableRadiusImage(self) -> itkImageF2"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetModifiableRadiusImage(self)

    def GetRadiusImage(self, *args):
        r"""
        GetRadiusImage(self) -> itkImageF2
        GetRadiusImage(self) -> itkImageF2
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetRadiusImage(self, *args)

    def SetSigmaGradient(self, _arg):
        r"""
        SetSigmaGradient(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetSigmaGradient(self, _arg)

    def GetSigmaGradient(self):
        r"""GetSigmaGradient(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetSigmaGradient(self)

    def GetCircles(self):
        r"""GetCircles(self) -> listitkEllipseSpatialObject2_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetCircles(self)

    def SetNumberOfCircles(self, _arg):
        r"""
        SetNumberOfCircles(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetNumberOfCircles(self, _arg)

    def GetNumberOfCircles(self):
        r"""GetNumberOfCircles(self) -> unsigned long"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetNumberOfCircles(self)

    def SetDiscRadiusRatio(self, _arg):
        r"""
        SetDiscRadiusRatio(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetDiscRadiusRatio(self, _arg)

    def GetDiscRadiusRatio(self):
        r"""GetDiscRadiusRatio(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetDiscRadiusRatio(self)

    def SetVariance(self, _arg):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetVariance(self, _arg)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetVariance(self)

    def SetSweepAngle(self, _arg):
        r"""
        SetSweepAngle(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetSweepAngle(self, _arg)

    def GetSweepAngle(self):
        r"""GetSweepAngle(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetSweepAngle(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_GetUseImageSpacing(self)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterFULF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHoughTransform2DCirclesImageFilterFULF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterFULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterFULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterFULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterFULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterFULF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterFULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFULF_swigregister(itkHoughTransform2DCirclesImageFilterFULF)

def itkHoughTransform2DCirclesImageFilterSSULF_New():
    return itkHoughTransform2DCirclesImageFilterSSULF.New()

class itkHoughTransform2DCirclesImageFilterSSULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2):
    r"""Proxy of C++ itkHoughTransform2DCirclesImageFilterSSULF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHoughTransform2DCirclesImageFilterSSULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHoughTransform2DCirclesImageFilterSSULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_Clone(self)

    def VerifyPreconditions(self):
        r"""VerifyPreconditions(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_VerifyPreconditions(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GenerateData(self)

    def SetRadius(self, radius):
        r"""
        SetRadius(self, radius)

        Parameters
        ----------
        radius: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetRadius(self, radius)

    def SetMinimumRadius(self, _arg):
        r"""
        SetMinimumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetMinimumRadius(self, _arg)

    def GetMinimumRadius(self):
        r"""GetMinimumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetMinimumRadius(self)

    def SetMaximumRadius(self, _arg):
        r"""
        SetMaximumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetMaximumRadius(self, _arg)

    def GetMaximumRadius(self):
        r"""GetMaximumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetMaximumRadius(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetThreshold(self)

    def SetGradientNormThreshold(self, _arg):
        r"""
        SetGradientNormThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetGradientNormThreshold(self, _arg)

    def GetGradientNormThreshold(self):
        r"""GetGradientNormThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetGradientNormThreshold(self)

    def GetModifiableRadiusImage(self):
        r"""GetModifiableRadiusImage(self) -> itkImageF2"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetModifiableRadiusImage(self)

    def GetRadiusImage(self, *args):
        r"""
        GetRadiusImage(self) -> itkImageF2
        GetRadiusImage(self) -> itkImageF2
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetRadiusImage(self, *args)

    def SetSigmaGradient(self, _arg):
        r"""
        SetSigmaGradient(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetSigmaGradient(self, _arg)

    def GetSigmaGradient(self):
        r"""GetSigmaGradient(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetSigmaGradient(self)

    def GetCircles(self):
        r"""GetCircles(self) -> listitkEllipseSpatialObject2_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetCircles(self)

    def SetNumberOfCircles(self, _arg):
        r"""
        SetNumberOfCircles(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetNumberOfCircles(self, _arg)

    def GetNumberOfCircles(self):
        r"""GetNumberOfCircles(self) -> unsigned long"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetNumberOfCircles(self)

    def SetDiscRadiusRatio(self, _arg):
        r"""
        SetDiscRadiusRatio(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetDiscRadiusRatio(self, _arg)

    def GetDiscRadiusRatio(self):
        r"""GetDiscRadiusRatio(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetDiscRadiusRatio(self)

    def SetVariance(self, _arg):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetVariance(self, _arg)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetVariance(self)

    def SetSweepAngle(self, _arg):
        r"""
        SetSweepAngle(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetSweepAngle(self, _arg)

    def GetSweepAngle(self):
        r"""GetSweepAngle(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetSweepAngle(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_GetUseImageSpacing(self)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterSSULF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHoughTransform2DCirclesImageFilterSSULF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterSSULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterSSULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterSSULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterSSULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterSSULF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterSSULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterSSULF_swigregister(itkHoughTransform2DCirclesImageFilterSSULF)

def itkHoughTransform2DCirclesImageFilterUCULF_New():
    return itkHoughTransform2DCirclesImageFilterUCULF.New()

class itkHoughTransform2DCirclesImageFilterUCULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    r"""Proxy of C++ itkHoughTransform2DCirclesImageFilterUCULF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHoughTransform2DCirclesImageFilterUCULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHoughTransform2DCirclesImageFilterUCULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_Clone(self)

    def VerifyPreconditions(self):
        r"""VerifyPreconditions(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_VerifyPreconditions(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GenerateData(self)

    def SetRadius(self, radius):
        r"""
        SetRadius(self, radius)

        Parameters
        ----------
        radius: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetRadius(self, radius)

    def SetMinimumRadius(self, _arg):
        r"""
        SetMinimumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetMinimumRadius(self, _arg)

    def GetMinimumRadius(self):
        r"""GetMinimumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetMinimumRadius(self)

    def SetMaximumRadius(self, _arg):
        r"""
        SetMaximumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetMaximumRadius(self, _arg)

    def GetMaximumRadius(self):
        r"""GetMaximumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetMaximumRadius(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetThreshold(self)

    def SetGradientNormThreshold(self, _arg):
        r"""
        SetGradientNormThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetGradientNormThreshold(self, _arg)

    def GetGradientNormThreshold(self):
        r"""GetGradientNormThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetGradientNormThreshold(self)

    def GetModifiableRadiusImage(self):
        r"""GetModifiableRadiusImage(self) -> itkImageF2"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetModifiableRadiusImage(self)

    def GetRadiusImage(self, *args):
        r"""
        GetRadiusImage(self) -> itkImageF2
        GetRadiusImage(self) -> itkImageF2
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetRadiusImage(self, *args)

    def SetSigmaGradient(self, _arg):
        r"""
        SetSigmaGradient(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetSigmaGradient(self, _arg)

    def GetSigmaGradient(self):
        r"""GetSigmaGradient(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetSigmaGradient(self)

    def GetCircles(self):
        r"""GetCircles(self) -> listitkEllipseSpatialObject2_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetCircles(self)

    def SetNumberOfCircles(self, _arg):
        r"""
        SetNumberOfCircles(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetNumberOfCircles(self, _arg)

    def GetNumberOfCircles(self):
        r"""GetNumberOfCircles(self) -> unsigned long"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetNumberOfCircles(self)

    def SetDiscRadiusRatio(self, _arg):
        r"""
        SetDiscRadiusRatio(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetDiscRadiusRatio(self, _arg)

    def GetDiscRadiusRatio(self):
        r"""GetDiscRadiusRatio(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetDiscRadiusRatio(self)

    def SetVariance(self, _arg):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetVariance(self, _arg)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetVariance(self)

    def SetSweepAngle(self, _arg):
        r"""
        SetSweepAngle(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetSweepAngle(self, _arg)

    def GetSweepAngle(self):
        r"""GetSweepAngle(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetSweepAngle(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_GetUseImageSpacing(self)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterUCULF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHoughTransform2DCirclesImageFilterUCULF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterUCULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterUCULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterUCULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterUCULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterUCULF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterUCULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUCULF_swigregister(itkHoughTransform2DCirclesImageFilterUCULF)

def itkHoughTransform2DCirclesImageFilterUSULF_New():
    return itkHoughTransform2DCirclesImageFilterUSULF.New()

class itkHoughTransform2DCirclesImageFilterUSULF(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    r"""Proxy of C++ itkHoughTransform2DCirclesImageFilterUSULF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHoughTransform2DCirclesImageFilterUSULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHoughTransform2DCirclesImageFilterUSULF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_Clone(self)

    def VerifyPreconditions(self):
        r"""VerifyPreconditions(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_VerifyPreconditions(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GenerateData(self)

    def SetRadius(self, radius):
        r"""
        SetRadius(self, radius)

        Parameters
        ----------
        radius: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetRadius(self, radius)

    def SetMinimumRadius(self, _arg):
        r"""
        SetMinimumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetMinimumRadius(self, _arg)

    def GetMinimumRadius(self):
        r"""GetMinimumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetMinimumRadius(self)

    def SetMaximumRadius(self, _arg):
        r"""
        SetMaximumRadius(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetMaximumRadius(self, _arg)

    def GetMaximumRadius(self):
        r"""GetMaximumRadius(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetMaximumRadius(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetThreshold(self)

    def SetGradientNormThreshold(self, _arg):
        r"""
        SetGradientNormThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetGradientNormThreshold(self, _arg)

    def GetGradientNormThreshold(self):
        r"""GetGradientNormThreshold(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetGradientNormThreshold(self)

    def GetModifiableRadiusImage(self):
        r"""GetModifiableRadiusImage(self) -> itkImageF2"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetModifiableRadiusImage(self)

    def GetRadiusImage(self, *args):
        r"""
        GetRadiusImage(self) -> itkImageF2
        GetRadiusImage(self) -> itkImageF2
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetRadiusImage(self, *args)

    def SetSigmaGradient(self, _arg):
        r"""
        SetSigmaGradient(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetSigmaGradient(self, _arg)

    def GetSigmaGradient(self):
        r"""GetSigmaGradient(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetSigmaGradient(self)

    def GetCircles(self):
        r"""GetCircles(self) -> listitkEllipseSpatialObject2_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetCircles(self)

    def SetNumberOfCircles(self, _arg):
        r"""
        SetNumberOfCircles(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetNumberOfCircles(self, _arg)

    def GetNumberOfCircles(self):
        r"""GetNumberOfCircles(self) -> unsigned long"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetNumberOfCircles(self)

    def SetDiscRadiusRatio(self, _arg):
        r"""
        SetDiscRadiusRatio(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetDiscRadiusRatio(self, _arg)

    def GetDiscRadiusRatio(self):
        r"""GetDiscRadiusRatio(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetDiscRadiusRatio(self)

    def SetVariance(self, _arg):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetVariance(self, _arg)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetVariance(self)

    def SetSweepAngle(self, _arg):
        r"""
        SetSweepAngle(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetSweepAngle(self, _arg)

    def GetSweepAngle(self):
        r"""GetSweepAngle(self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetSweepAngle(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_GetUseImageSpacing(self)
    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_IntConvertibleToOutputCheck
    
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_InputGreaterThanDoubleCheck
    
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_OutputPlusIntCheck
    
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_OutputDividedByIntCheck
    
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterUSULF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHoughTransform2DCirclesImageFilterUSULF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterUSULF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterUSULF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterUSULF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterUSULF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHoughTransform2DCirclesImageFilterUSULF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHoughTransform2DCirclesImageFilterUSULF in _itkHoughTransform2DCirclesImageFilterPython:
_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterUSULF_swigregister(itkHoughTransform2DCirclesImageFilterUSULF)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def hough_transform2_d_circles_image_filter(*args: itkt.ImageLike,  radius: float=..., minimum_radius: float=..., maximum_radius: float=..., threshold: float=..., gradient_norm_threshold: float=..., sigma_gradient: float=..., number_of_circles: int=..., disc_radius_ratio: float=..., variance: float=..., sweep_angle: float=..., use_image_spacing: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for HoughTransform2DCirclesImageFilter"""
    import itk

    kwarg_typehints = { 'radius':radius,'minimum_radius':minimum_radius,'maximum_radius':maximum_radius,'threshold':threshold,'gradient_norm_threshold':gradient_norm_threshold,'sigma_gradient':sigma_gradient,'number_of_circles':number_of_circles,'disc_radius_ratio':disc_radius_ratio,'variance':variance,'sweep_angle':sweep_angle,'use_image_spacing':use_image_spacing }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.HoughTransform2DCirclesImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def hough_transform2_d_circles_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFeature.HoughTransform2DCirclesImageFilter
    hough_transform2_d_circles_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    hough_transform2_d_circles_image_filter.__doc__ = filter_object.__doc__



