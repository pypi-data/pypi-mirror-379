# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageComparePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSimilarityIndexImageFilterPython
else:
    import _itkSimilarityIndexImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkSimilarityIndexImageFilterID2ID2_New():
    return itkSimilarityIndexImageFilterID2ID2.New()

class itkSimilarityIndexImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkSimilarityIndexImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterID2ID2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterID2ID2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageD2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageD2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterID2ID2

        Create a new object of the class itkSimilarityIndexImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterID2ID2 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID2ID2_swigregister(itkSimilarityIndexImageFilterID2ID2)

def itkSimilarityIndexImageFilterID3ID3_New():
    return itkSimilarityIndexImageFilterID3ID3.New()

class itkSimilarityIndexImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkSimilarityIndexImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterID3ID3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterID3ID3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageD3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageD3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterID3ID3

        Create a new object of the class itkSimilarityIndexImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterID3ID3 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID3ID3_swigregister(itkSimilarityIndexImageFilterID3ID3)

def itkSimilarityIndexImageFilterID4ID4_New():
    return itkSimilarityIndexImageFilterID4ID4.New()

class itkSimilarityIndexImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkSimilarityIndexImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterID4ID4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterID4ID4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageD4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageD4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterID4ID4

        Create a new object of the class itkSimilarityIndexImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterID4ID4 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterID4ID4_swigregister(itkSimilarityIndexImageFilterID4ID4)

def itkSimilarityIndexImageFilterIF2IF2_New():
    return itkSimilarityIndexImageFilterIF2IF2.New()

class itkSimilarityIndexImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIF2IF2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIF2IF2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageF2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageF2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIF2IF2

        Create a new object of the class itkSimilarityIndexImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIF2IF2 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF2IF2_swigregister(itkSimilarityIndexImageFilterIF2IF2)

def itkSimilarityIndexImageFilterIF3IF3_New():
    return itkSimilarityIndexImageFilterIF3IF3.New()

class itkSimilarityIndexImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIF3IF3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIF3IF3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageF3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageF3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIF3IF3

        Create a new object of the class itkSimilarityIndexImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIF3IF3 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF3IF3_swigregister(itkSimilarityIndexImageFilterIF3IF3)

def itkSimilarityIndexImageFilterIF4IF4_New():
    return itkSimilarityIndexImageFilterIF4IF4.New()

class itkSimilarityIndexImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIF4IF4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIF4IF4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageF4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageF4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIF4IF4

        Create a new object of the class itkSimilarityIndexImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIF4IF4 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIF4IF4_swigregister(itkSimilarityIndexImageFilterIF4IF4)

def itkSimilarityIndexImageFilterISS2ISS2_New():
    return itkSimilarityIndexImageFilterISS2ISS2.New()

class itkSimilarityIndexImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkSimilarityIndexImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterISS2ISS2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterISS2ISS2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageSS2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageSS2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageSS2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageSS2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterISS2ISS2

        Create a new object of the class itkSimilarityIndexImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterISS2ISS2 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS2ISS2_swigregister(itkSimilarityIndexImageFilterISS2ISS2)

def itkSimilarityIndexImageFilterISS3ISS3_New():
    return itkSimilarityIndexImageFilterISS3ISS3.New()

class itkSimilarityIndexImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkSimilarityIndexImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterISS3ISS3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterISS3ISS3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageSS3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageSS3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterISS3ISS3

        Create a new object of the class itkSimilarityIndexImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterISS3ISS3 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS3ISS3_swigregister(itkSimilarityIndexImageFilterISS3ISS3)

def itkSimilarityIndexImageFilterISS4ISS4_New():
    return itkSimilarityIndexImageFilterISS4ISS4.New()

class itkSimilarityIndexImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkSimilarityIndexImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterISS4ISS4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterISS4ISS4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageSS4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageSS4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageSS4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageSS4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterISS4ISS4

        Create a new object of the class itkSimilarityIndexImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterISS4ISS4 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterISS4ISS4_swigregister(itkSimilarityIndexImageFilterISS4ISS4)

def itkSimilarityIndexImageFilterIUC2IUC2_New():
    return itkSimilarityIndexImageFilterIUC2IUC2.New()

class itkSimilarityIndexImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIUC2IUC2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIUC2IUC2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageUC2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageUC2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageUC2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageUC2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIUC2IUC2

        Create a new object of the class itkSimilarityIndexImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIUC2IUC2 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC2IUC2_swigregister(itkSimilarityIndexImageFilterIUC2IUC2)

def itkSimilarityIndexImageFilterIUC3IUC3_New():
    return itkSimilarityIndexImageFilterIUC3IUC3.New()

class itkSimilarityIndexImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIUC3IUC3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIUC3IUC3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageUC3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageUC3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIUC3IUC3

        Create a new object of the class itkSimilarityIndexImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIUC3IUC3 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC3IUC3_swigregister(itkSimilarityIndexImageFilterIUC3IUC3)

def itkSimilarityIndexImageFilterIUC4IUC4_New():
    return itkSimilarityIndexImageFilterIUC4IUC4.New()

class itkSimilarityIndexImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIUC4IUC4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIUC4IUC4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageUC4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageUC4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageUC4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageUC4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIUC4IUC4

        Create a new object of the class itkSimilarityIndexImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIUC4IUC4 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUC4IUC4_swigregister(itkSimilarityIndexImageFilterIUC4IUC4)

def itkSimilarityIndexImageFilterIUS2IUS2_New():
    return itkSimilarityIndexImageFilterIUS2IUS2.New()

class itkSimilarityIndexImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIUS2IUS2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIUS2IUS2_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageUS2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageUS2 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageUS2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageUS2"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIUS2IUS2

        Create a new object of the class itkSimilarityIndexImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIUS2IUS2 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS2IUS2_swigregister(itkSimilarityIndexImageFilterIUS2IUS2)

def itkSimilarityIndexImageFilterIUS3IUS3_New():
    return itkSimilarityIndexImageFilterIUS3IUS3.New()

class itkSimilarityIndexImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIUS3IUS3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIUS3IUS3_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageUS3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageUS3"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIUS3IUS3

        Create a new object of the class itkSimilarityIndexImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIUS3IUS3 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS3IUS3_swigregister(itkSimilarityIndexImageFilterIUS3IUS3)

def itkSimilarityIndexImageFilterIUS4IUS4_New():
    return itkSimilarityIndexImageFilterIUS4IUS4.New()

class itkSimilarityIndexImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkSimilarityIndexImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSimilarityIndexImageFilterIUS4IUS4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSimilarityIndexImageFilterIUS4IUS4_Pointer"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_Clone(self)

    def SetInput1(self, image):
        r"""
        SetInput1(self, image)

        Parameters
        ----------
        image: itkImageUS4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_SetInput1(self, image)

    def SetInput2(self, image):
        r"""
        SetInput2(self, image)

        Parameters
        ----------
        image: itkImageUS4 const *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_SetInput2(self, image)

    def GetInput1(self):
        r"""GetInput1(self) -> itkImageUS4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_GetInput1(self)

    def GetInput2(self):
        r"""GetInput2(self) -> itkImageUS4"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_GetInput2(self)

    def GetSimilarityIndex(self):
        r"""GetSimilarityIndex(self) -> double"""
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_GetSimilarityIndex(self)
    Input1HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_Input1HasNumericTraitsCheck
    
    Input2HasNumericTraitsCheck = _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_Input2HasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimilarityIndexImageFilterPython.delete_itkSimilarityIndexImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSimilarityIndexImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSimilarityIndexImageFilterIUS4IUS4

        Create a new object of the class itkSimilarityIndexImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimilarityIndexImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimilarityIndexImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimilarityIndexImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimilarityIndexImageFilterIUS4IUS4 in _itkSimilarityIndexImageFilterPython:
_itkSimilarityIndexImageFilterPython.itkSimilarityIndexImageFilterIUS4IUS4_swigregister(itkSimilarityIndexImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def similarity_index_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SimilarityIndexImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SimilarityIndexImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def similarity_index_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageCompare.SimilarityIndexImageFilter
    similarity_index_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    similarity_index_image_filter.__doc__ = filter_object.__doc__



