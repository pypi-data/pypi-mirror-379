# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkValuedRegionalMinimaImageFilterPython
else:
    import _itkValuedRegionalMinimaImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkValuedRegionalMinimaImageFilterID2ID2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterID2ID2_Superclass.New()

class itkValuedRegionalMinimaImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterID2ID2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterID2ID2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> double const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID2ID2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID2ID2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterID2ID2_Superclass)

def itkValuedRegionalMinimaImageFilterID3ID3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterID3ID3_Superclass.New()

class itkValuedRegionalMinimaImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterID3ID3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterID3ID3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> double const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID3ID3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID3ID3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterID3ID3_Superclass)

def itkValuedRegionalMinimaImageFilterID4ID4_Superclass_New():
    return itkValuedRegionalMinimaImageFilterID4ID4_Superclass.New()

class itkValuedRegionalMinimaImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterID4ID4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterID4ID4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> double const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID4ID4_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID4ID4_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Superclass_swigregister(itkValuedRegionalMinimaImageFilterID4ID4_Superclass)

def itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.New()

class itkValuedRegionalMinimaImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> float const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF2IF2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF2IF2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIF2IF2_Superclass)

def itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.New()

class itkValuedRegionalMinimaImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> float const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF3IF3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF3IF3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIF3IF3_Superclass)

def itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIF4IF4_Superclass.New()

class itkValuedRegionalMinimaImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> float const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF4IF4_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF4IF4_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIF4IF4_Superclass)

def itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.New()

class itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> short const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass)

def itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.New()

class itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> short const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass)

def itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_New():
    return itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass.New()

class itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> short const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass_swigregister(itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass)

def itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> unsigned char const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass)

def itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> unsigned char const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass)

def itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> unsigned char const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass)

def itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> unsigned short const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass)

def itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> unsigned short const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass)

def itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_FullyConnectedOff(self)

    def SetMarkerValue(self, _arg):
        r"""
        SetMarkerValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_SetMarkerValue(self, _arg)

    def GetMarkerValue(self):
        r"""GetMarkerValue(self) -> unsigned short const &"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_GetMarkerValue(self)

    def GetFlat(self):
        r"""GetFlat(self) -> bool"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_GetFlat(self)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass)

def itkValuedRegionalMinimaImageFilterID2ID2_New():
    return itkValuedRegionalMinimaImageFilterID2ID2.New()

class itkValuedRegionalMinimaImageFilterID2ID2(itkValuedRegionalMinimaImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterID2ID2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterID2ID2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID2ID2

        Create a new object of the class itkValuedRegionalMinimaImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID2ID2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_swigregister(itkValuedRegionalMinimaImageFilterID2ID2)

def itkValuedRegionalMinimaImageFilterID3ID3_New():
    return itkValuedRegionalMinimaImageFilterID3ID3.New()

class itkValuedRegionalMinimaImageFilterID3ID3(itkValuedRegionalMinimaImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterID3ID3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterID3ID3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID3ID3

        Create a new object of the class itkValuedRegionalMinimaImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID3ID3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_swigregister(itkValuedRegionalMinimaImageFilterID3ID3)

def itkValuedRegionalMinimaImageFilterID4ID4_New():
    return itkValuedRegionalMinimaImageFilterID4ID4.New()

class itkValuedRegionalMinimaImageFilterID4ID4(itkValuedRegionalMinimaImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterID4ID4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterID4ID4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID4ID4

        Create a new object of the class itkValuedRegionalMinimaImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID4ID4 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID4ID4_swigregister(itkValuedRegionalMinimaImageFilterID4ID4)

def itkValuedRegionalMinimaImageFilterIF2IF2_New():
    return itkValuedRegionalMinimaImageFilterIF2IF2.New()

class itkValuedRegionalMinimaImageFilterIF2IF2(itkValuedRegionalMinimaImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIF2IF2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIF2IF2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF2IF2

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF2IF2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_swigregister(itkValuedRegionalMinimaImageFilterIF2IF2)

def itkValuedRegionalMinimaImageFilterIF3IF3_New():
    return itkValuedRegionalMinimaImageFilterIF3IF3.New()

class itkValuedRegionalMinimaImageFilterIF3IF3(itkValuedRegionalMinimaImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIF3IF3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIF3IF3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF3IF3

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF3IF3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_swigregister(itkValuedRegionalMinimaImageFilterIF3IF3)

def itkValuedRegionalMinimaImageFilterIF4IF4_New():
    return itkValuedRegionalMinimaImageFilterIF4IF4.New()

class itkValuedRegionalMinimaImageFilterIF4IF4(itkValuedRegionalMinimaImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIF4IF4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIF4IF4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF4IF4

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF4IF4 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF4IF4_swigregister(itkValuedRegionalMinimaImageFilterIF4IF4)

def itkValuedRegionalMinimaImageFilterISS2ISS2_New():
    return itkValuedRegionalMinimaImageFilterISS2ISS2.New()

class itkValuedRegionalMinimaImageFilterISS2ISS2(itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterISS2ISS2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterISS2ISS2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS2ISS2

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS2ISS2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_swigregister(itkValuedRegionalMinimaImageFilterISS2ISS2)

def itkValuedRegionalMinimaImageFilterISS3ISS3_New():
    return itkValuedRegionalMinimaImageFilterISS3ISS3.New()

class itkValuedRegionalMinimaImageFilterISS3ISS3(itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterISS3ISS3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterISS3ISS3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS3ISS3

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS3ISS3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_swigregister(itkValuedRegionalMinimaImageFilterISS3ISS3)

def itkValuedRegionalMinimaImageFilterISS4ISS4_New():
    return itkValuedRegionalMinimaImageFilterISS4ISS4.New()

class itkValuedRegionalMinimaImageFilterISS4ISS4(itkValuedRegionalMinimaImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterISS4ISS4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterISS4ISS4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS4ISS4

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS4ISS4 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS4ISS4_swigregister(itkValuedRegionalMinimaImageFilterISS4ISS4)

def itkValuedRegionalMinimaImageFilterIUC2IUC2_New():
    return itkValuedRegionalMinimaImageFilterIUC2IUC2.New()

class itkValuedRegionalMinimaImageFilterIUC2IUC2(itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC2IUC2

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC2IUC2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_swigregister(itkValuedRegionalMinimaImageFilterIUC2IUC2)

def itkValuedRegionalMinimaImageFilterIUC3IUC3_New():
    return itkValuedRegionalMinimaImageFilterIUC3IUC3.New()

class itkValuedRegionalMinimaImageFilterIUC3IUC3(itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC3IUC3

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC3IUC3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_swigregister(itkValuedRegionalMinimaImageFilterIUC3IUC3)

def itkValuedRegionalMinimaImageFilterIUC4IUC4_New():
    return itkValuedRegionalMinimaImageFilterIUC4IUC4.New()

class itkValuedRegionalMinimaImageFilterIUC4IUC4(itkValuedRegionalMinimaImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUC4IUC4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUC4IUC4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC4IUC4

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC4IUC4 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC4IUC4_swigregister(itkValuedRegionalMinimaImageFilterIUC4IUC4)

def itkValuedRegionalMinimaImageFilterIUS2IUS2_New():
    return itkValuedRegionalMinimaImageFilterIUS2IUS2.New()

class itkValuedRegionalMinimaImageFilterIUS2IUS2(itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS2IUS2

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS2IUS2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_swigregister(itkValuedRegionalMinimaImageFilterIUS2IUS2)

def itkValuedRegionalMinimaImageFilterIUS3IUS3_New():
    return itkValuedRegionalMinimaImageFilterIUS3IUS3.New()

class itkValuedRegionalMinimaImageFilterIUS3IUS3(itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS3IUS3

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS3IUS3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_swigregister(itkValuedRegionalMinimaImageFilterIUS3IUS3)

def itkValuedRegionalMinimaImageFilterIUS4IUS4_New():
    return itkValuedRegionalMinimaImageFilterIUS4IUS4.New()

class itkValuedRegionalMinimaImageFilterIUS4IUS4(itkValuedRegionalMinimaImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkValuedRegionalMinimaImageFilterIUS4IUS4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkValuedRegionalMinimaImageFilterIUS4IUS4_Pointer"""
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_Clone(self)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkValuedRegionalMinimaImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS4IUS4

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS4IUS4 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS4IUS4_swigregister(itkValuedRegionalMinimaImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def valued_regional_minima_image_filter(*args: itkt.ImageLike,  fully_connected: bool=..., marker_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ValuedRegionalMinimaImageFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected,'marker_value':marker_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ValuedRegionalMinimaImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def valued_regional_minima_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.ValuedRegionalMinimaImageFilter
    valued_regional_minima_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    valued_regional_minima_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def valued_regional_extrema_image_filter(*args: itkt.ImageLike,  fully_connected: bool=..., marker_value: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ValuedRegionalExtremaImageFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected,'marker_value':marker_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ValuedRegionalExtremaImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def valued_regional_extrema_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.ValuedRegionalExtremaImageFilter
    valued_regional_extrema_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    valued_regional_extrema_image_filter.__doc__ = filter_object.__doc__



