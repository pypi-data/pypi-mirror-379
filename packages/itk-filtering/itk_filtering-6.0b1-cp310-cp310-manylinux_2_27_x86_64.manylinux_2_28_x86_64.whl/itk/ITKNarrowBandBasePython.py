# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKNarrowBandPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKNarrowBandBasePython
else:
    import _ITKNarrowBandBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
class itkBandNodeI2D(object):
    r"""Proxy of C++ itkBandNodeI2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI2D
        __init__(self, arg0) -> itkBandNodeI2D

        Parameters
        ----------
        arg0: itkBandNodeI2D const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI2D_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2D(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2D

# Register itkBandNodeI2D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2D_swigregister(itkBandNodeI2D)
class itkBandNodeI2F(object):
    r"""Proxy of C++ itkBandNodeI2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI2F
        __init__(self, arg0) -> itkBandNodeI2F

        Parameters
        ----------
        arg0: itkBandNodeI2F const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI2F_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2F(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2F

# Register itkBandNodeI2F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2F_swigregister(itkBandNodeI2F)
class itkBandNodeI2SS(object):
    r"""Proxy of C++ itkBandNodeI2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI2SS
        __init__(self, arg0) -> itkBandNodeI2SS

        Parameters
        ----------
        arg0: itkBandNodeI2SS const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI2SS_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2SS(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2SS

# Register itkBandNodeI2SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2SS_swigregister(itkBandNodeI2SS)
class itkBandNodeI2UC(object):
    r"""Proxy of C++ itkBandNodeI2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI2UC
        __init__(self, arg0) -> itkBandNodeI2UC

        Parameters
        ----------
        arg0: itkBandNodeI2UC const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI2UC_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2UC(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2UC

# Register itkBandNodeI2UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2UC_swigregister(itkBandNodeI2UC)
class itkBandNodeI2US(object):
    r"""Proxy of C++ itkBandNodeI2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI2US
        __init__(self, arg0) -> itkBandNodeI2US

        Parameters
        ----------
        arg0: itkBandNodeI2US const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI2US_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI2US(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI2US

# Register itkBandNodeI2US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI2US_swigregister(itkBandNodeI2US)
class itkBandNodeI3D(object):
    r"""Proxy of C++ itkBandNodeI3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI3D
        __init__(self, arg0) -> itkBandNodeI3D

        Parameters
        ----------
        arg0: itkBandNodeI3D const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI3D_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3D(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3D

# Register itkBandNodeI3D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3D_swigregister(itkBandNodeI3D)
class itkBandNodeI3F(object):
    r"""Proxy of C++ itkBandNodeI3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI3F
        __init__(self, arg0) -> itkBandNodeI3F

        Parameters
        ----------
        arg0: itkBandNodeI3F const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI3F_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3F(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3F

# Register itkBandNodeI3F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3F_swigregister(itkBandNodeI3F)
class itkBandNodeI3SS(object):
    r"""Proxy of C++ itkBandNodeI3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI3SS
        __init__(self, arg0) -> itkBandNodeI3SS

        Parameters
        ----------
        arg0: itkBandNodeI3SS const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI3SS_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3SS(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3SS

# Register itkBandNodeI3SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3SS_swigregister(itkBandNodeI3SS)
class itkBandNodeI3UC(object):
    r"""Proxy of C++ itkBandNodeI3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI3UC
        __init__(self, arg0) -> itkBandNodeI3UC

        Parameters
        ----------
        arg0: itkBandNodeI3UC const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI3UC_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3UC(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3UC

# Register itkBandNodeI3UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3UC_swigregister(itkBandNodeI3UC)
class itkBandNodeI3US(object):
    r"""Proxy of C++ itkBandNodeI3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI3US
        __init__(self, arg0) -> itkBandNodeI3US

        Parameters
        ----------
        arg0: itkBandNodeI3US const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI3US_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI3US(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI3US

# Register itkBandNodeI3US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI3US_swigregister(itkBandNodeI3US)
class itkBandNodeI4D(object):
    r"""Proxy of C++ itkBandNodeI4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI4D
        __init__(self, arg0) -> itkBandNodeI4D

        Parameters
        ----------
        arg0: itkBandNodeI4D const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI4D_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI4D(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI4D

# Register itkBandNodeI4D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI4D_swigregister(itkBandNodeI4D)
class itkBandNodeI4F(object):
    r"""Proxy of C++ itkBandNodeI4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI4F
        __init__(self, arg0) -> itkBandNodeI4F

        Parameters
        ----------
        arg0: itkBandNodeI4F const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI4F_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI4F(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI4F

# Register itkBandNodeI4F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI4F_swigregister(itkBandNodeI4F)
class itkBandNodeI4SS(object):
    r"""Proxy of C++ itkBandNodeI4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI4SS
        __init__(self, arg0) -> itkBandNodeI4SS

        Parameters
        ----------
        arg0: itkBandNodeI4SS const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI4SS_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI4SS(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI4SS

# Register itkBandNodeI4SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI4SS_swigregister(itkBandNodeI4SS)
class itkBandNodeI4UC(object):
    r"""Proxy of C++ itkBandNodeI4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI4UC
        __init__(self, arg0) -> itkBandNodeI4UC

        Parameters
        ----------
        arg0: itkBandNodeI4UC const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI4UC_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI4UC(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI4UC

# Register itkBandNodeI4UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI4UC_swigregister(itkBandNodeI4UC)
class itkBandNodeI4US(object):
    r"""Proxy of C++ itkBandNodeI4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBandNodeI4US
        __init__(self, arg0) -> itkBandNodeI4US

        Parameters
        ----------
        arg0: itkBandNodeI4US const &

        """
        _ITKNarrowBandBasePython.itkBandNodeI4US_swiginit(self, _ITKNarrowBandBasePython.new_itkBandNodeI4US(*args))
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkBandNodeI4US

# Register itkBandNodeI4US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkBandNodeI4US_swigregister(itkBandNodeI4US)

def itkNarrowBandBNI2D_New():
    return itkNarrowBandBNI2D.New()

class itkNarrowBandBNI2D(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI2D_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI2D_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI2D const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2D

        Create a new object of the class itkNarrowBandBNI2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2D_swigregister(itkNarrowBandBNI2D)

def itkNarrowBandBNI2F_New():
    return itkNarrowBandBNI2F.New()

class itkNarrowBandBNI2F(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI2F_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI2F_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI2F const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2F

        Create a new object of the class itkNarrowBandBNI2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2F_swigregister(itkNarrowBandBNI2F)

def itkNarrowBandBNI2SS_New():
    return itkNarrowBandBNI2SS.New()

class itkNarrowBandBNI2SS(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI2SS_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI2SS_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI2SS const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI2SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2SS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2SS

        Create a new object of the class itkNarrowBandBNI2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2SS_swigregister(itkNarrowBandBNI2SS)

def itkNarrowBandBNI2UC_New():
    return itkNarrowBandBNI2UC.New()

class itkNarrowBandBNI2UC(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI2UC_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI2UC_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI2UC const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI2UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2UC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2UC

        Create a new object of the class itkNarrowBandBNI2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2UC_swigregister(itkNarrowBandBNI2UC)

def itkNarrowBandBNI2US_New():
    return itkNarrowBandBNI2US.New()

class itkNarrowBandBNI2US(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI2US_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI2US_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI2US const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI2US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI2US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI2US_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI2US

        Create a new object of the class itkNarrowBandBNI2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI2US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI2US_swigregister(itkNarrowBandBNI2US)

def itkNarrowBandBNI3D_New():
    return itkNarrowBandBNI3D.New()

class itkNarrowBandBNI3D(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI3D_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI3D_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI3D const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3D

        Create a new object of the class itkNarrowBandBNI3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3D_swigregister(itkNarrowBandBNI3D)

def itkNarrowBandBNI3F_New():
    return itkNarrowBandBNI3F.New()

class itkNarrowBandBNI3F(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI3F_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI3F_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI3F const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3F

        Create a new object of the class itkNarrowBandBNI3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3F_swigregister(itkNarrowBandBNI3F)

def itkNarrowBandBNI3SS_New():
    return itkNarrowBandBNI3SS.New()

class itkNarrowBandBNI3SS(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI3SS_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI3SS_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI3SS const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI3SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3SS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3SS

        Create a new object of the class itkNarrowBandBNI3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3SS_swigregister(itkNarrowBandBNI3SS)

def itkNarrowBandBNI3UC_New():
    return itkNarrowBandBNI3UC.New()

class itkNarrowBandBNI3UC(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI3UC_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI3UC_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI3UC const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI3UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3UC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3UC

        Create a new object of the class itkNarrowBandBNI3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3UC_swigregister(itkNarrowBandBNI3UC)

def itkNarrowBandBNI3US_New():
    return itkNarrowBandBNI3US.New()

class itkNarrowBandBNI3US(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI3US_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI3US_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI3US const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI3US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI3US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI3US_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI3US

        Create a new object of the class itkNarrowBandBNI3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI3US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI3US_swigregister(itkNarrowBandBNI3US)

def itkNarrowBandBNI4D_New():
    return itkNarrowBandBNI4D.New()

class itkNarrowBandBNI4D(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI4D_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI4D_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI4D const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI4D

        Create a new object of the class itkNarrowBandBNI4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI4D in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI4D_swigregister(itkNarrowBandBNI4D)

def itkNarrowBandBNI4F_New():
    return itkNarrowBandBNI4F.New()

class itkNarrowBandBNI4F(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI4F_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI4F_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI4F const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI4F

        Create a new object of the class itkNarrowBandBNI4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI4F in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI4F_swigregister(itkNarrowBandBNI4F)

def itkNarrowBandBNI4SS_New():
    return itkNarrowBandBNI4SS.New()

class itkNarrowBandBNI4SS(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI4SS_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI4SS_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI4SS const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI4SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI4SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4SS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI4SS

        Create a new object of the class itkNarrowBandBNI4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI4SS in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI4SS_swigregister(itkNarrowBandBNI4SS)

def itkNarrowBandBNI4UC_New():
    return itkNarrowBandBNI4UC.New()

class itkNarrowBandBNI4UC(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI4UC_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI4UC_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI4UC const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI4UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI4UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4UC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI4UC

        Create a new object of the class itkNarrowBandBNI4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI4UC in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI4UC_swigregister(itkNarrowBandBNI4UC)

def itkNarrowBandBNI4US_New():
    return itkNarrowBandBNI4US.New()

class itkNarrowBandBNI4US(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkNarrowBandBNI4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNarrowBandBNI4US_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNarrowBandBNI4US_Pointer"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_Clone(self)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_Size(self)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_Empty(self)

    def Clear(self):
        r"""Clear(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_Clear(self)

    def Reserve(self, n):
        r"""
        Reserve(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_Reserve(self, n)

    def PushBack(self, n):
        r"""
        PushBack(self, n)

        Parameters
        ----------
        n: itkBandNodeI4US const &

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_PushBack(self, n)

    def PopBack(self):
        r"""PopBack(self)"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_PopBack(self)

    def Resize(self, n):
        r"""
        Resize(self, n)

        Parameters
        ----------
        n: unsigned long

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_Resize(self, n)

    def SetTotalRadius(self, val):
        r"""
        SetTotalRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_SetTotalRadius(self, val)

    def GetTotalRadius(self):
        r"""GetTotalRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_GetTotalRadius(self)

    def SetInnerRadius(self, val):
        r"""
        SetInnerRadius(self, val)

        Parameters
        ----------
        val: float const

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_SetInnerRadius(self, val)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> float"""
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_GetInnerRadius(self)
    __swig_destroy__ = _ITKNarrowBandBasePython.delete_itkNarrowBandBNI4US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandBNI4US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _ITKNarrowBandBasePython.itkNarrowBandBNI4US_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNarrowBandBNI4US

        Create a new object of the class itkNarrowBandBNI4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNarrowBandBNI4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNarrowBandBNI4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNarrowBandBNI4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNarrowBandBNI4US in _ITKNarrowBandBasePython:
_ITKNarrowBandBasePython.itkNarrowBandBNI4US_swigregister(itkNarrowBandBNI4US)

