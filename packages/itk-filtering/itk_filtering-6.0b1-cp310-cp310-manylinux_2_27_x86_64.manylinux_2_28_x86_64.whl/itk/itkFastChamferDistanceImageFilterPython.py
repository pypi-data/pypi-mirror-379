# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDistanceMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFastChamferDistanceImageFilterPython
else:
    import _itkFastChamferDistanceImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKNarrowBandBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython

def itkFastChamferDistanceImageFilterID2ID2_New():
    return itkFastChamferDistanceImageFilterID2ID2.New()

class itkFastChamferDistanceImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterID2ID2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterID2ID2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF2

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion2 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI2D *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI2D_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID2ID2

        Create a new object of the class itkFastChamferDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterID2ID2 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID2ID2_swigregister(itkFastChamferDistanceImageFilterID2ID2)

def itkFastChamferDistanceImageFilterID3ID3_New():
    return itkFastChamferDistanceImageFilterID3ID3.New()

class itkFastChamferDistanceImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterID3ID3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterID3ID3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF3

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion3 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI3D *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI3D_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID3ID3

        Create a new object of the class itkFastChamferDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterID3ID3 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID3ID3_swigregister(itkFastChamferDistanceImageFilterID3ID3)

def itkFastChamferDistanceImageFilterID4ID4_New():
    return itkFastChamferDistanceImageFilterID4ID4.New()

class itkFastChamferDistanceImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterID4ID4_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterID4ID4_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF4

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF4"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion4 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion4"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI4D *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI4D_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterID4ID4

        Create a new object of the class itkFastChamferDistanceImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterID4ID4 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterID4ID4_swigregister(itkFastChamferDistanceImageFilterID4ID4)

def itkFastChamferDistanceImageFilterIF2IF2_New():
    return itkFastChamferDistanceImageFilterIF2IF2.New()

class itkFastChamferDistanceImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterIF2IF2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterIF2IF2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF2

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion2 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI2F *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI2F_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF2IF2

        Create a new object of the class itkFastChamferDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterIF2IF2 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF2IF2_swigregister(itkFastChamferDistanceImageFilterIF2IF2)

def itkFastChamferDistanceImageFilterIF3IF3_New():
    return itkFastChamferDistanceImageFilterIF3IF3.New()

class itkFastChamferDistanceImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterIF3IF3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterIF3IF3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF3

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion3 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI3F *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI3F_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF3IF3

        Create a new object of the class itkFastChamferDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterIF3IF3 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF3IF3_swigregister(itkFastChamferDistanceImageFilterIF3IF3)

def itkFastChamferDistanceImageFilterIF4IF4_New():
    return itkFastChamferDistanceImageFilterIF4IF4.New()

class itkFastChamferDistanceImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterIF4IF4_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterIF4IF4_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF4

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF4"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion4 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion4"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI4F *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI4F_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterIF4IF4

        Create a new object of the class itkFastChamferDistanceImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterIF4IF4 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterIF4IF4_swigregister(itkFastChamferDistanceImageFilterIF4IF4)

def itkFastChamferDistanceImageFilterISS2ISS2_New():
    return itkFastChamferDistanceImageFilterISS2ISS2.New()

class itkFastChamferDistanceImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterISS2ISS2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterISS2ISS2_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF2

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion2 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion2"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI2SS *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI2SS_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS2ISS2

        Create a new object of the class itkFastChamferDistanceImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterISS2ISS2 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS2ISS2_swigregister(itkFastChamferDistanceImageFilterISS2ISS2)

def itkFastChamferDistanceImageFilterISS3ISS3_New():
    return itkFastChamferDistanceImageFilterISS3ISS3.New()

class itkFastChamferDistanceImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterISS3ISS3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterISS3ISS3_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF3

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion3 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion3"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI3SS *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI3SS_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS3ISS3

        Create a new object of the class itkFastChamferDistanceImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterISS3ISS3 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS3ISS3_swigregister(itkFastChamferDistanceImageFilterISS3ISS3)

def itkFastChamferDistanceImageFilterISS4ISS4_New():
    return itkFastChamferDistanceImageFilterISS4ISS4.New()

class itkFastChamferDistanceImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkFastChamferDistanceImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastChamferDistanceImageFilterISS4ISS4_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastChamferDistanceImageFilterISS4ISS4_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_Clone(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF4

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayF4"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_GetWeights(self)

    def SetMaximumDistance(self, _arg):
        r"""
        SetMaximumDistance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_SetMaximumDistance(self, _arg)

    def GetMaximumDistance(self):
        r"""GetMaximumDistance(self) -> float"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_GetMaximumDistance(self)

    def SetRegionToProcess(self, r):
        r"""
        SetRegionToProcess(self, r)

        Parameters
        ----------
        r: itkImageRegion4 const &

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_SetRegionToProcess(self, r)

    def GetRegionToProcess(self):
        r"""GetRegionToProcess(self) -> itkImageRegion4"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_GetRegionToProcess(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI4SS *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI4SS_Pointer"""
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_GetNarrowBand(self)
    SameDimensionCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_SameDimensionCheck
    
    SameTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_SameTypeCheck
    
    FloatConvertibleToPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_FloatConvertibleToPixelTypeCheck
    
    PixelTypeConvertibleToFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_PixelTypeConvertibleToFloatCheck
    
    PixelTypeGreaterThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_PixelTypeGreaterThanFloatCheck
    
    PixelTypeLessThanFloatCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_PixelTypeLessThanFloatCheck
    
    PixelTypeFloatAdditiveOperatorsCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_PixelTypeFloatAdditiveOperatorsCheck
    
    FloatGreaterThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_FloatGreaterThanPixelTypeCheck
    
    FloatLessThanPixelTypeCheck = _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_FloatLessThanPixelTypeCheck
    
    __swig_destroy__ = _itkFastChamferDistanceImageFilterPython.delete_itkFastChamferDistanceImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastChamferDistanceImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastChamferDistanceImageFilterISS4ISS4

        Create a new object of the class itkFastChamferDistanceImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastChamferDistanceImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastChamferDistanceImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastChamferDistanceImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastChamferDistanceImageFilterISS4ISS4 in _itkFastChamferDistanceImageFilterPython:
_itkFastChamferDistanceImageFilterPython.itkFastChamferDistanceImageFilterISS4ISS4_swigregister(itkFastChamferDistanceImageFilterISS4ISS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def fast_chamfer_distance_image_filter(*args: itkt.ImageLike,  weights: Sequence[float]=..., maximum_distance: float=..., region_to_process: itkt.ImageRegion=..., narrow_band=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FastChamferDistanceImageFilter"""
    import itk

    kwarg_typehints = { 'weights':weights,'maximum_distance':maximum_distance,'region_to_process':region_to_process,'narrow_band':narrow_band }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FastChamferDistanceImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def fast_chamfer_distance_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDistanceMap.FastChamferDistanceImageFilter
    fast_chamfer_distance_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    fast_chamfer_distance_image_filter.__doc__ = filter_object.__doc__



