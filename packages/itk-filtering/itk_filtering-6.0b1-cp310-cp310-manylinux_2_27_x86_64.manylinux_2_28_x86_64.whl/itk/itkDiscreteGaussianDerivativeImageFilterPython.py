# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkDiscreteGaussianDerivativeImageFilterPython
else:
    import _itkDiscreteGaussianDerivativeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython

def itkDiscreteGaussianDerivativeImageFilterID2ID2_New():
    return itkDiscreteGaussianDerivativeImageFilterID2ID2.New()

class itkDiscreteGaussianDerivativeImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterID2ID2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterID2ID2

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterID2ID2 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID2ID2_swigregister(itkDiscreteGaussianDerivativeImageFilterID2ID2)

def itkDiscreteGaussianDerivativeImageFilterID3ID3_New():
    return itkDiscreteGaussianDerivativeImageFilterID3ID3.New()

class itkDiscreteGaussianDerivativeImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterID3ID3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterID3ID3

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterID3ID3 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID3ID3_swigregister(itkDiscreteGaussianDerivativeImageFilterID3ID3)

def itkDiscreteGaussianDerivativeImageFilterID4ID4_New():
    return itkDiscreteGaussianDerivativeImageFilterID4ID4.New()

class itkDiscreteGaussianDerivativeImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterID4ID4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterID4ID4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterID4ID4

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterID4ID4 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterID4ID4_swigregister(itkDiscreteGaussianDerivativeImageFilterID4ID4)

def itkDiscreteGaussianDerivativeImageFilterIF2IF2_New():
    return itkDiscreteGaussianDerivativeImageFilterIF2IF2.New()

class itkDiscreteGaussianDerivativeImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIF2IF2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIF2IF2

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIF2IF2 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF2IF2_swigregister(itkDiscreteGaussianDerivativeImageFilterIF2IF2)

def itkDiscreteGaussianDerivativeImageFilterIF3IF3_New():
    return itkDiscreteGaussianDerivativeImageFilterIF3IF3.New()

class itkDiscreteGaussianDerivativeImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIF3IF3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIF3IF3

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIF3IF3 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF3IF3_swigregister(itkDiscreteGaussianDerivativeImageFilterIF3IF3)

def itkDiscreteGaussianDerivativeImageFilterIF4IF4_New():
    return itkDiscreteGaussianDerivativeImageFilterIF4IF4.New()

class itkDiscreteGaussianDerivativeImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIF4IF4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIF4IF4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIF4IF4

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIF4IF4 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIF4IF4_swigregister(itkDiscreteGaussianDerivativeImageFilterIF4IF4)

def itkDiscreteGaussianDerivativeImageFilterISS2ISS2_New():
    return itkDiscreteGaussianDerivativeImageFilterISS2ISS2.New()

class itkDiscreteGaussianDerivativeImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterISS2ISS2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterISS2ISS2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterISS2ISS2

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterISS2ISS2 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS2ISS2_swigregister(itkDiscreteGaussianDerivativeImageFilterISS2ISS2)

def itkDiscreteGaussianDerivativeImageFilterISS3ISS3_New():
    return itkDiscreteGaussianDerivativeImageFilterISS3ISS3.New()

class itkDiscreteGaussianDerivativeImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterISS3ISS3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterISS3ISS3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterISS3ISS3

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterISS3ISS3 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS3ISS3_swigregister(itkDiscreteGaussianDerivativeImageFilterISS3ISS3)

def itkDiscreteGaussianDerivativeImageFilterISS4ISS4_New():
    return itkDiscreteGaussianDerivativeImageFilterISS4ISS4.New()

class itkDiscreteGaussianDerivativeImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterISS4ISS4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterISS4ISS4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterISS4ISS4

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterISS4ISS4 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterISS4ISS4_swigregister(itkDiscreteGaussianDerivativeImageFilterISS4ISS4)

def itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_New():
    return itkDiscreteGaussianDerivativeImageFilterIUC2IUC2.New()

class itkDiscreteGaussianDerivativeImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIUC2IUC2

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIUC2IUC2 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC2IUC2_swigregister(itkDiscreteGaussianDerivativeImageFilterIUC2IUC2)

def itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_New():
    return itkDiscreteGaussianDerivativeImageFilterIUC3IUC3.New()

class itkDiscreteGaussianDerivativeImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIUC3IUC3

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIUC3IUC3 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC3IUC3_swigregister(itkDiscreteGaussianDerivativeImageFilterIUC3IUC3)

def itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_New():
    return itkDiscreteGaussianDerivativeImageFilterIUC4IUC4.New()

class itkDiscreteGaussianDerivativeImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIUC4IUC4

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIUC4IUC4 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUC4IUC4_swigregister(itkDiscreteGaussianDerivativeImageFilterIUC4IUC4)

def itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_New():
    return itkDiscreteGaussianDerivativeImageFilterIUS2IUS2.New()

class itkDiscreteGaussianDerivativeImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD2"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIUS2IUS2

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIUS2IUS2 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS2IUS2_swigregister(itkDiscreteGaussianDerivativeImageFilterIUS2IUS2)

def itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_New():
    return itkDiscreteGaussianDerivativeImageFilterIUS3IUS3.New()

class itkDiscreteGaussianDerivativeImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD3"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIUS3IUS3

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIUS3IUS3 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS3IUS3_swigregister(itkDiscreteGaussianDerivativeImageFilterIUS3IUS3)

def itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_New():
    return itkDiscreteGaussianDerivativeImageFilterIUS4IUS4.New()

class itkDiscreteGaussianDerivativeImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkDiscreteGaussianDerivativeImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_Pointer"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_Clone(self)

    def GetOrder(self):
        r"""GetOrder(self) -> itkFixedArrayUI4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetOrder(self)

    def GetVariance(self):
        r"""GetVariance(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetVariance(self)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> itkFixedArrayD4"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetMaximumError(self)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetMaximumKernelWidth(self)

    def SetMaximumKernelWidth(self, _arg):
        r"""
        SetMaximumKernelWidth(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetMaximumKernelWidth(self, _arg)

    def SetInternalNumberOfStreamDivisions(self, _arg):
        r"""
        SetInternalNumberOfStreamDivisions(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetInternalNumberOfStreamDivisions(self, _arg)

    def GetInternalNumberOfStreamDivisions(self):
        r"""GetInternalNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetInternalNumberOfStreamDivisions(self)

    def SetOrder(self, *args):
        r"""
        SetOrder(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetOrder(self, v)

        Parameters
        ----------
        v: unsigned int const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetOrder(self, *args)

    def SetVariance(self, *args):
        r"""
        SetVariance(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetVariance(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetVariance(self, *args)

    def SetMaximumError(self, *args):
        r"""
        SetMaximumError(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        SetMaximumError(self, v)

        Parameters
        ----------
        v: double const

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetMaximumError(self, *args)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_UseImageSpacingOff(self)

    def SetNormalizeAcrossScale(self, _arg):
        r"""
        SetNormalizeAcrossScale(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_SetNormalizeAcrossScale(self, _arg)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_NormalizeAcrossScaleOff(self)
    OutputHasNumericTraitsCheck = _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkDiscreteGaussianDerivativeImageFilterPython.delete_itkDiscreteGaussianDerivativeImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkDiscreteGaussianDerivativeImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkDiscreteGaussianDerivativeImageFilterIUS4IUS4

        Create a new object of the class itkDiscreteGaussianDerivativeImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDiscreteGaussianDerivativeImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkDiscreteGaussianDerivativeImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkDiscreteGaussianDerivativeImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkDiscreteGaussianDerivativeImageFilterIUS4IUS4 in _itkDiscreteGaussianDerivativeImageFilterPython:
_itkDiscreteGaussianDerivativeImageFilterPython.itkDiscreteGaussianDerivativeImageFilterIUS4IUS4_swigregister(itkDiscreteGaussianDerivativeImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def discrete_gaussian_derivative_image_filter(*args: itkt.ImageLike,  order: Union[Sequence[int], int]=..., variance: Union[float, Sequence[float]]=..., maximum_error: Union[float, Sequence[float]]=..., maximum_kernel_width: int=..., internal_number_of_stream_divisions: int=..., use_image_spacing: bool=..., normalize_across_scale: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for DiscreteGaussianDerivativeImageFilter"""
    import itk

    kwarg_typehints = { 'order':order,'variance':variance,'maximum_error':maximum_error,'maximum_kernel_width':maximum_kernel_width,'internal_number_of_stream_divisions':internal_number_of_stream_divisions,'use_image_spacing':use_image_spacing,'normalize_across_scale':normalize_across_scale }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.DiscreteGaussianDerivativeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def discrete_gaussian_derivative_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFeature.DiscreteGaussianDerivativeImageFilter
    discrete_gaussian_derivative_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    discrete_gaussian_derivative_image_filter.__doc__ = filter_object.__doc__



