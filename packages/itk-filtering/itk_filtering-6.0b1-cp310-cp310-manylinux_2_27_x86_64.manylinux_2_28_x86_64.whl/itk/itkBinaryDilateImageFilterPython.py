# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryDilateImageFilterPython
else:
    import _itkBinaryDilateImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFlatStructuringElementPython
import itk.itkNeighborhoodPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython

def itkBinaryDilateImageFilterID2ID2SE2_Superclass_New():
    return itkBinaryDilateImageFilterID2ID2SE2_Superclass.New()

class itkBinaryDilateImageFilterID2ID2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterID2ID2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterID2ID2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterID2ID2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID2ID2SE2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterID2ID2SE2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID2ID2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterID2ID2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID2ID2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID2ID2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID2ID2SE2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID2ID2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_swigregister(itkBinaryDilateImageFilterID2ID2SE2_Superclass)

def itkBinaryDilateImageFilterID3ID3SE3_Superclass_New():
    return itkBinaryDilateImageFilterID3ID3SE3_Superclass.New()

class itkBinaryDilateImageFilterID3ID3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterID3ID3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterID3ID3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterID3ID3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID3ID3SE3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterID3ID3SE3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID3ID3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterID3ID3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID3ID3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID3ID3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID3ID3SE3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID3ID3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_swigregister(itkBinaryDilateImageFilterID3ID3SE3_Superclass)

def itkBinaryDilateImageFilterID4ID4SE4_Superclass_New():
    return itkBinaryDilateImageFilterID4ID4SE4_Superclass.New()

class itkBinaryDilateImageFilterID4ID4SE4_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID4ID4SE4):
    r"""Proxy of C++ itkBinaryDilateImageFilterID4ID4SE4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterID4ID4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterID4ID4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID4ID4SE4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterID4ID4SE4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID4ID4SE4_Superclass

        Create a new object of the class itkBinaryDilateImageFilterID4ID4SE4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID4ID4SE4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID4ID4SE4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID4ID4SE4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID4ID4SE4_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass_swigregister(itkBinaryDilateImageFilterID4ID4SE4_Superclass)

def itkBinaryDilateImageFilterIF2IF2SE2_Superclass_New():
    return itkBinaryDilateImageFilterIF2IF2SE2_Superclass.New()

class itkBinaryDilateImageFilterIF2IF2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF2IF2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIF2IF2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIF2IF2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF2IF2SE2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIF2IF2SE2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF2IF2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIF2IF2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF2IF2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF2IF2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF2IF2SE2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF2IF2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_swigregister(itkBinaryDilateImageFilterIF2IF2SE2_Superclass)

def itkBinaryDilateImageFilterIF3IF3SE3_Superclass_New():
    return itkBinaryDilateImageFilterIF3IF3SE3_Superclass.New()

class itkBinaryDilateImageFilterIF3IF3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF3IF3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIF3IF3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIF3IF3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF3IF3SE3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIF3IF3SE3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF3IF3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIF3IF3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF3IF3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF3IF3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF3IF3SE3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF3IF3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_swigregister(itkBinaryDilateImageFilterIF3IF3SE3_Superclass)

def itkBinaryDilateImageFilterIF4IF4SE4_Superclass_New():
    return itkBinaryDilateImageFilterIF4IF4SE4_Superclass.New()

class itkBinaryDilateImageFilterIF4IF4SE4_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF4IF4SE4):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF4IF4SE4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIF4IF4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIF4IF4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF4IF4SE4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIF4IF4SE4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF4IF4SE4_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIF4IF4SE4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF4IF4SE4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF4IF4SE4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF4IF4SE4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF4IF4SE4_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass_swigregister(itkBinaryDilateImageFilterIF4IF4SE4_Superclass)

def itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_New():
    return itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.New()

class itkBinaryDilateImageFilterISS2ISS2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS2ISS2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS2ISS2SE2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterISS2ISS2SE2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS2ISS2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterISS2ISS2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS2ISS2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_swigregister(itkBinaryDilateImageFilterISS2ISS2SE2_Superclass)

def itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_New():
    return itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.New()

class itkBinaryDilateImageFilterISS3ISS3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS3ISS3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS3ISS3SE3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterISS3ISS3SE3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS3ISS3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterISS3ISS3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS3ISS3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_swigregister(itkBinaryDilateImageFilterISS3ISS3SE3_Superclass)

def itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_New():
    return itkBinaryDilateImageFilterISS4ISS4SE4_Superclass.New()

class itkBinaryDilateImageFilterISS4ISS4SE4_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS4ISS4SE4):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS4ISS4SE4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS4ISS4SE4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterISS4ISS4SE4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS4ISS4SE4_Superclass

        Create a new object of the class itkBinaryDilateImageFilterISS4ISS4SE4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS4ISS4SE4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS4ISS4SE4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS4ISS4SE4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS4ISS4SE4_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass_swigregister(itkBinaryDilateImageFilterISS4ISS4SE4_Superclass)

def itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_New():
    return itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.New()

class itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_swigregister(itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass)

def itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_New():
    return itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.New()

class itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_swigregister(itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass)

def itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_New():
    return itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass.New()

class itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC4IUC4SE4):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass_swigregister(itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass)

def itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_New():
    return itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.New()

class itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_swigregister(itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass)

def itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_New():
    return itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.New()

class itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_swigregister(itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass)

def itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_New():
    return itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass.New()

class itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS4IUS4SE4):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_Clone(self)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_ImageDimensionCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_GetBackgroundValue(self)

    def SetBoundaryToForeground(self, _arg):
        r"""
        SetBoundaryToForeground(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_SetBoundaryToForeground(self, _arg)

    def GetBoundaryToForeground(self):
        r"""GetBoundaryToForeground(self) -> bool const &"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_GetBoundaryToForeground(self)

    def BoundaryToForegroundOn(self):
        r"""BoundaryToForegroundOn(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_BoundaryToForegroundOn(self)

    def BoundaryToForegroundOff(self):
        r"""BoundaryToForegroundOff(self)"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_BoundaryToForegroundOff(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass_swigregister(itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass)

def itkBinaryDilateImageFilterID2ID2SE2_New():
    return itkBinaryDilateImageFilterID2ID2SE2.New()

class itkBinaryDilateImageFilterID2ID2SE2(itkBinaryDilateImageFilterID2ID2SE2_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterID2ID2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID2ID2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterID2ID2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID2ID2SE2

        Create a new object of the class itkBinaryDilateImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID2ID2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID2ID2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_swigregister(itkBinaryDilateImageFilterID2ID2SE2)

def itkBinaryDilateImageFilterID3ID3SE3_New():
    return itkBinaryDilateImageFilterID3ID3SE3.New()

class itkBinaryDilateImageFilterID3ID3SE3(itkBinaryDilateImageFilterID3ID3SE3_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterID3ID3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID3ID3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterID3ID3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID3ID3SE3

        Create a new object of the class itkBinaryDilateImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID3ID3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID3ID3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_swigregister(itkBinaryDilateImageFilterID3ID3SE3)

def itkBinaryDilateImageFilterID4ID4SE4_New():
    return itkBinaryDilateImageFilterID4ID4SE4.New()

class itkBinaryDilateImageFilterID4ID4SE4(itkBinaryDilateImageFilterID4ID4SE4_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterID4ID4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterID4ID4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterID4ID4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> double"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID4ID4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterID4ID4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID4ID4SE4

        Create a new object of the class itkBinaryDilateImageFilterID4ID4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID4ID4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID4ID4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID4ID4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID4ID4SE4 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_swigregister(itkBinaryDilateImageFilterID4ID4SE4)

def itkBinaryDilateImageFilterIF2IF2SE2_New():
    return itkBinaryDilateImageFilterIF2IF2SE2.New()

class itkBinaryDilateImageFilterIF2IF2SE2(itkBinaryDilateImageFilterIF2IF2SE2_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF2IF2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF2IF2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIF2IF2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryDilateImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF2IF2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF2IF2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_swigregister(itkBinaryDilateImageFilterIF2IF2SE2)

def itkBinaryDilateImageFilterIF3IF3SE3_New():
    return itkBinaryDilateImageFilterIF3IF3SE3.New()

class itkBinaryDilateImageFilterIF3IF3SE3(itkBinaryDilateImageFilterIF3IF3SE3_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF3IF3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF3IF3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIF3IF3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryDilateImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF3IF3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF3IF3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_swigregister(itkBinaryDilateImageFilterIF3IF3SE3)

def itkBinaryDilateImageFilterIF4IF4SE4_New():
    return itkBinaryDilateImageFilterIF4IF4SE4.New()

class itkBinaryDilateImageFilterIF4IF4SE4(itkBinaryDilateImageFilterIF4IF4SE4_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF4IF4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIF4IF4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIF4IF4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> float"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF4IF4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIF4IF4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF4IF4SE4

        Create a new object of the class itkBinaryDilateImageFilterIF4IF4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF4IF4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF4IF4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF4IF4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF4IF4SE4 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_swigregister(itkBinaryDilateImageFilterIF4IF4SE4)

def itkBinaryDilateImageFilterISS2ISS2SE2_New():
    return itkBinaryDilateImageFilterISS2ISS2SE2.New()

class itkBinaryDilateImageFilterISS2ISS2SE2(itkBinaryDilateImageFilterISS2ISS2SE2_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS2ISS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS2ISS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterISS2ISS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryDilateImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS2ISS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS2ISS2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_swigregister(itkBinaryDilateImageFilterISS2ISS2SE2)

def itkBinaryDilateImageFilterISS3ISS3SE3_New():
    return itkBinaryDilateImageFilterISS3ISS3SE3.New()

class itkBinaryDilateImageFilterISS3ISS3SE3(itkBinaryDilateImageFilterISS3ISS3SE3_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS3ISS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS3ISS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterISS3ISS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryDilateImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS3ISS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS3ISS3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_swigregister(itkBinaryDilateImageFilterISS3ISS3SE3)

def itkBinaryDilateImageFilterISS4ISS4SE4_New():
    return itkBinaryDilateImageFilterISS4ISS4SE4.New()

class itkBinaryDilateImageFilterISS4ISS4SE4(itkBinaryDilateImageFilterISS4ISS4SE4_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS4ISS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterISS4ISS4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterISS4ISS4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS4ISS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterISS4ISS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS4ISS4SE4

        Create a new object of the class itkBinaryDilateImageFilterISS4ISS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS4ISS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS4ISS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS4ISS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS4ISS4SE4 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_swigregister(itkBinaryDilateImageFilterISS4ISS4SE4)

def itkBinaryDilateImageFilterIUC2IUC2SE2_New():
    return itkBinaryDilateImageFilterIUC2IUC2SE2.New()

class itkBinaryDilateImageFilterIUC2IUC2SE2(itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC2IUC2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC2IUC2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUC2IUC2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryDilateImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC2IUC2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC2IUC2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_swigregister(itkBinaryDilateImageFilterIUC2IUC2SE2)

def itkBinaryDilateImageFilterIUC3IUC3SE3_New():
    return itkBinaryDilateImageFilterIUC3IUC3SE3.New()

class itkBinaryDilateImageFilterIUC3IUC3SE3(itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC3IUC3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC3IUC3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUC3IUC3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryDilateImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC3IUC3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC3IUC3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_swigregister(itkBinaryDilateImageFilterIUC3IUC3SE3)

def itkBinaryDilateImageFilterIUC4IUC4SE4_New():
    return itkBinaryDilateImageFilterIUC4IUC4SE4.New()

class itkBinaryDilateImageFilterIUC4IUC4SE4(itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC4IUC4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUC4IUC4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUC4IUC4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> unsigned char"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC4IUC4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUC4IUC4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC4IUC4SE4

        Create a new object of the class itkBinaryDilateImageFilterIUC4IUC4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC4IUC4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC4IUC4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC4IUC4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC4IUC4SE4 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_swigregister(itkBinaryDilateImageFilterIUC4IUC4SE4)

def itkBinaryDilateImageFilterIUS2IUS2SE2_New():
    return itkBinaryDilateImageFilterIUS2IUS2SE2.New()

class itkBinaryDilateImageFilterIUS2IUS2SE2(itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS2IUS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS2IUS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUS2IUS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryDilateImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS2IUS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS2IUS2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_swigregister(itkBinaryDilateImageFilterIUS2IUS2SE2)

def itkBinaryDilateImageFilterIUS3IUS3SE3_New():
    return itkBinaryDilateImageFilterIUS3IUS3SE3.New()

class itkBinaryDilateImageFilterIUS3IUS3SE3(itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS3IUS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS3IUS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUS3IUS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryDilateImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS3IUS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS3IUS3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_swigregister(itkBinaryDilateImageFilterIUS3IUS3SE3)

def itkBinaryDilateImageFilterIUS4IUS4SE4_New():
    return itkBinaryDilateImageFilterIUS4IUS4SE4.New()

class itkBinaryDilateImageFilterIUS4IUS4SE4(itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS4IUS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryDilateImageFilterIUS4IUS4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryDilateImageFilterIUS4IUS4SE4_Pointer"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Clone(self)

    def SetDilateValue(self, value):
        r"""
        SetDilateValue(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_SetDilateValue(self, value)

    def GetDilateValue(self):
        r"""GetDilateValue(self) -> unsigned short"""
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_GetDilateValue(self)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS4IUS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryDilateImageFilterIUS4IUS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS4IUS4SE4

        Create a new object of the class itkBinaryDilateImageFilterIUS4IUS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS4IUS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS4IUS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS4IUS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS4IUS4SE4 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_swigregister(itkBinaryDilateImageFilterIUS4IUS4SE4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_morphology_image_filter(*args: itkt.ImageLike,  foreground_value: int=..., background_value: int=..., boundary_to_foreground: bool=..., kernel: Union[itkt.FlatStructuringElement, itkt.FlatStructuringElement]=..., radius: Union[int, Sequence[int], Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryMorphologyImageFilter"""
    import itk

    kwarg_typehints = { 'foreground_value':foreground_value,'background_value':background_value,'boundary_to_foreground':boundary_to_foreground,'kernel':kernel,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryMorphologyImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_morphology_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKBinaryMathematicalMorphology.BinaryMorphologyImageFilter
    binary_morphology_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_morphology_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_dilate_image_filter(*args: itkt.ImageLike,  dilate_value: int=..., foreground_value: int=..., background_value: int=..., boundary_to_foreground: bool=..., kernel: Union[itkt.FlatStructuringElement, itkt.FlatStructuringElement]=..., radius: Union[int, Sequence[int], Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryDilateImageFilter"""
    import itk

    kwarg_typehints = { 'dilate_value':dilate_value,'foreground_value':foreground_value,'background_value':background_value,'boundary_to_foreground':boundary_to_foreground,'kernel':kernel,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryDilateImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_dilate_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKBinaryMathematicalMorphology.BinaryDilateImageFilter
    binary_dilate_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_dilate_image_filter.__doc__ = filter_object.__doc__



