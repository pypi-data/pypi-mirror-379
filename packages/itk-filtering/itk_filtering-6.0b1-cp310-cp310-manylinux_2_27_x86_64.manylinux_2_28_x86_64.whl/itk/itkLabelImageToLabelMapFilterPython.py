# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelImageToLabelMapFilterPython
else:
    import _itkLabelImageToLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.ITKLabelMapBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkStatisticsLabelObjectPython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkImageToImageFilterCommonPython

def itkLabelImageToLabelMapFilterIUC2LM2_New():
    return itkLabelImageToLabelMapFilterIUC2LM2.New()

class itkLabelImageToLabelMapFilterIUC2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2):
    r"""Proxy of C++ itkLabelImageToLabelMapFilterIUC2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageToLabelMapFilterIUC2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageToLabelMapFilterIUC2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_GetBackgroundValue(self)
    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_SameDimensionCheck
    
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUC2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageToLabelMapFilterIUC2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUC2LM2

        Create a new object of the class itkLabelImageToLabelMapFilterIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUC2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUC2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageToLabelMapFilterIUC2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageToLabelMapFilterIUC2LM2 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC2LM2_swigregister(itkLabelImageToLabelMapFilterIUC2LM2)

def itkLabelImageToLabelMapFilterIUC3LM3_New():
    return itkLabelImageToLabelMapFilterIUC3LM3.New()

class itkLabelImageToLabelMapFilterIUC3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3):
    r"""Proxy of C++ itkLabelImageToLabelMapFilterIUC3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageToLabelMapFilterIUC3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageToLabelMapFilterIUC3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_GetBackgroundValue(self)
    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_SameDimensionCheck
    
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUC3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageToLabelMapFilterIUC3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUC3LM3

        Create a new object of the class itkLabelImageToLabelMapFilterIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUC3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUC3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageToLabelMapFilterIUC3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageToLabelMapFilterIUC3LM3 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC3LM3_swigregister(itkLabelImageToLabelMapFilterIUC3LM3)

def itkLabelImageToLabelMapFilterIUC4LM4_New():
    return itkLabelImageToLabelMapFilterIUC4LM4.New()

class itkLabelImageToLabelMapFilterIUC4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4):
    r"""Proxy of C++ itkLabelImageToLabelMapFilterIUC4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageToLabelMapFilterIUC4LM4_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageToLabelMapFilterIUC4LM4_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4_GetBackgroundValue(self)
    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4_SameDimensionCheck
    
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUC4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageToLabelMapFilterIUC4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUC4LM4

        Create a new object of the class itkLabelImageToLabelMapFilterIUC4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUC4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUC4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageToLabelMapFilterIUC4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageToLabelMapFilterIUC4LM4 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUC4LM4_swigregister(itkLabelImageToLabelMapFilterIUC4LM4)

def itkLabelImageToLabelMapFilterIUS2LM2_New():
    return itkLabelImageToLabelMapFilterIUS2LM2.New()

class itkLabelImageToLabelMapFilterIUS2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2):
    r"""Proxy of C++ itkLabelImageToLabelMapFilterIUS2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageToLabelMapFilterIUS2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageToLabelMapFilterIUS2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_GetBackgroundValue(self)
    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_SameDimensionCheck
    
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUS2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageToLabelMapFilterIUS2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUS2LM2

        Create a new object of the class itkLabelImageToLabelMapFilterIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUS2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUS2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageToLabelMapFilterIUS2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageToLabelMapFilterIUS2LM2 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS2LM2_swigregister(itkLabelImageToLabelMapFilterIUS2LM2)

def itkLabelImageToLabelMapFilterIUS3LM3_New():
    return itkLabelImageToLabelMapFilterIUS3LM3.New()

class itkLabelImageToLabelMapFilterIUS3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3):
    r"""Proxy of C++ itkLabelImageToLabelMapFilterIUS3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageToLabelMapFilterIUS3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageToLabelMapFilterIUS3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_GetBackgroundValue(self)
    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_SameDimensionCheck
    
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUS3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageToLabelMapFilterIUS3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUS3LM3

        Create a new object of the class itkLabelImageToLabelMapFilterIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUS3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUS3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageToLabelMapFilterIUS3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageToLabelMapFilterIUS3LM3 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS3LM3_swigregister(itkLabelImageToLabelMapFilterIUS3LM3)

def itkLabelImageToLabelMapFilterIUS4LM4_New():
    return itkLabelImageToLabelMapFilterIUS4LM4.New()

class itkLabelImageToLabelMapFilterIUS4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4):
    r"""Proxy of C++ itkLabelImageToLabelMapFilterIUS4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelImageToLabelMapFilterIUS4LM4_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelImageToLabelMapFilterIUS4LM4_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long"""
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4_GetBackgroundValue(self)
    SameDimensionCheck = _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4_SameDimensionCheck
    
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkLabelImageToLabelMapFilterIUS4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelImageToLabelMapFilterIUS4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelImageToLabelMapFilterIUS4LM4

        Create a new object of the class itkLabelImageToLabelMapFilterIUS4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelImageToLabelMapFilterIUS4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelImageToLabelMapFilterIUS4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelImageToLabelMapFilterIUS4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelImageToLabelMapFilterIUS4LM4 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkLabelImageToLabelMapFilterIUS4LM4_swigregister(itkLabelImageToLabelMapFilterIUS4LM4)

def itkScanlineFilterCommonIUC2LM2_New():
    return itkScanlineFilterCommonIUC2LM2.New()

class itkScanlineFilterCommonIUC2LM2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2___New_orig__()
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC2LM2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC2LM2 *

        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUC2LM2(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUC2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC2LM2

        Create a new object of the class itkScanlineFilterCommonIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC2LM2 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC2LM2_swigregister(itkScanlineFilterCommonIUC2LM2)

def itkScanlineFilterCommonIUC3LM3_New():
    return itkScanlineFilterCommonIUC3LM3.New()

class itkScanlineFilterCommonIUC3LM3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3___New_orig__()
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC3LM3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC3LM3 *

        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUC3LM3(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUC3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC3LM3

        Create a new object of the class itkScanlineFilterCommonIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC3LM3 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC3LM3_swigregister(itkScanlineFilterCommonIUC3LM3)

def itkScanlineFilterCommonIUC4LM4_New():
    return itkScanlineFilterCommonIUC4LM4.New()

class itkScanlineFilterCommonIUC4LM4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC4LM4_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC4LM4___New_orig__()
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC4LM4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC4LM4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC4LM4 *

        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC4LM4_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUC4LM4(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUC4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC4LM4

        Create a new object of the class itkScanlineFilterCommonIUC4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC4LM4 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUC4LM4_swigregister(itkScanlineFilterCommonIUC4LM4)

def itkScanlineFilterCommonIUS2LM2_New():
    return itkScanlineFilterCommonIUS2LM2.New()

class itkScanlineFilterCommonIUS2LM2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS2LM2_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2___New_orig__()
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS2LM2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS2LM2 *

        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUS2LM2(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUS2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS2LM2

        Create a new object of the class itkScanlineFilterCommonIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS2LM2 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS2LM2_swigregister(itkScanlineFilterCommonIUS2LM2)

def itkScanlineFilterCommonIUS3LM3_New():
    return itkScanlineFilterCommonIUS3LM3.New()

class itkScanlineFilterCommonIUS3LM3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS3LM3_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3___New_orig__()
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS3LM3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS3LM3 *

        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUS3LM3(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUS3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS3LM3

        Create a new object of the class itkScanlineFilterCommonIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS3LM3 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS3LM3_swigregister(itkScanlineFilterCommonIUS3LM3)

def itkScanlineFilterCommonIUS4LM4_New():
    return itkScanlineFilterCommonIUS4LM4.New()

class itkScanlineFilterCommonIUS4LM4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS4LM4_Pointer"""
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS4LM4___New_orig__()
    SameDimension = _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS4LM4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS4LM4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS4LM4 *

        """
        _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS4LM4_swiginit(self, _itkLabelImageToLabelMapFilterPython.new_itkScanlineFilterCommonIUS4LM4(enclosingFilter))
    __swig_destroy__ = _itkLabelImageToLabelMapFilterPython.delete_itkScanlineFilterCommonIUS4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS4LM4

        Create a new object of the class itkScanlineFilterCommonIUS4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS4LM4 in _itkLabelImageToLabelMapFilterPython:
_itkLabelImageToLabelMapFilterPython.itkScanlineFilterCommonIUS4LM4_swigregister(itkScanlineFilterCommonIUS4LM4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_image_to_label_map_filter(*args: itkt.ImageLike,  background_value: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelImageToLabelMapFilter"""
    import itk

    kwarg_typehints = { 'background_value':background_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelImageToLabelMapFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_image_to_label_map_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.LabelImageToLabelMapFilter
    label_image_to_label_map_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_image_to_label_map_filter.__doc__ = filter_object.__doc__



