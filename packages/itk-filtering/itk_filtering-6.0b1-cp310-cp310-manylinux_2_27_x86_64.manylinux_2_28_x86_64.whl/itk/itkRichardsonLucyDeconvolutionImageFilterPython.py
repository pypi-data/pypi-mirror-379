# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDeconvolutionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRichardsonLucyDeconvolutionImageFilterPython
else:
    import _itkRichardsonLucyDeconvolutionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIterativeDeconvolutionImageFilterPython
import itk.itkFFTConvolutionImageFilterPython
import itk.itkSizePython
import itk.itkConvolutionImageFilterBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageBoundaryConditionPython

def itkRichardsonLucyDeconvolutionImageFilterID2ID2_New():
    return itkRichardsonLucyDeconvolutionImageFilterID2ID2.New()

class itkRichardsonLucyDeconvolutionImageFilterID2ID2(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID2ID2):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterID2ID2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterID2ID2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID2ID2_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterID2ID2

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterID2ID2 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID2ID2_swigregister(itkRichardsonLucyDeconvolutionImageFilterID2ID2)

def itkRichardsonLucyDeconvolutionImageFilterID3ID3_New():
    return itkRichardsonLucyDeconvolutionImageFilterID3ID3.New()

class itkRichardsonLucyDeconvolutionImageFilterID3ID3(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID3ID3):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterID3ID3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterID3ID3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID3ID3_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterID3ID3

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterID3ID3 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID3ID3_swigregister(itkRichardsonLucyDeconvolutionImageFilterID3ID3)

def itkRichardsonLucyDeconvolutionImageFilterID4ID4_New():
    return itkRichardsonLucyDeconvolutionImageFilterID4ID4.New()

class itkRichardsonLucyDeconvolutionImageFilterID4ID4(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterID4ID4):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterID4ID4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterID4ID4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID4ID4_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterID4ID4

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterID4ID4 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterID4ID4_swigregister(itkRichardsonLucyDeconvolutionImageFilterID4ID4)

def itkRichardsonLucyDeconvolutionImageFilterIF2IF2_New():
    return itkRichardsonLucyDeconvolutionImageFilterIF2IF2.New()

class itkRichardsonLucyDeconvolutionImageFilterIF2IF2(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF2IF2):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF2IF2_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIF2IF2

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIF2IF2 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF2IF2_swigregister(itkRichardsonLucyDeconvolutionImageFilterIF2IF2)

def itkRichardsonLucyDeconvolutionImageFilterIF3IF3_New():
    return itkRichardsonLucyDeconvolutionImageFilterIF3IF3.New()

class itkRichardsonLucyDeconvolutionImageFilterIF3IF3(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF3IF3):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF3IF3_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIF3IF3

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIF3IF3 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF3IF3_swigregister(itkRichardsonLucyDeconvolutionImageFilterIF3IF3)

def itkRichardsonLucyDeconvolutionImageFilterIF4IF4_New():
    return itkRichardsonLucyDeconvolutionImageFilterIF4IF4.New()

class itkRichardsonLucyDeconvolutionImageFilterIF4IF4(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIF4IF4):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIF4IF4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIF4IF4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF4IF4_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIF4IF4

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIF4IF4 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIF4IF4_swigregister(itkRichardsonLucyDeconvolutionImageFilterIF4IF4)

def itkRichardsonLucyDeconvolutionImageFilterISS2ISS2_New():
    return itkRichardsonLucyDeconvolutionImageFilterISS2ISS2.New()

class itkRichardsonLucyDeconvolutionImageFilterISS2ISS2(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS2ISS2):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterISS2ISS2

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterISS2ISS2 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS2ISS2_swigregister(itkRichardsonLucyDeconvolutionImageFilterISS2ISS2)

def itkRichardsonLucyDeconvolutionImageFilterISS3ISS3_New():
    return itkRichardsonLucyDeconvolutionImageFilterISS3ISS3.New()

class itkRichardsonLucyDeconvolutionImageFilterISS3ISS3(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS3ISS3):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterISS3ISS3

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterISS3ISS3 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS3ISS3_swigregister(itkRichardsonLucyDeconvolutionImageFilterISS3ISS3)

def itkRichardsonLucyDeconvolutionImageFilterISS4ISS4_New():
    return itkRichardsonLucyDeconvolutionImageFilterISS4ISS4.New()

class itkRichardsonLucyDeconvolutionImageFilterISS4ISS4(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterISS4ISS4):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterISS4ISS4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterISS4ISS4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterISS4ISS4

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterISS4ISS4 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterISS4ISS4_swigregister(itkRichardsonLucyDeconvolutionImageFilterISS4ISS4)

def itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2_New():
    return itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2.New()

class itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC2IUC2):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2_swigregister(itkRichardsonLucyDeconvolutionImageFilterIUC2IUC2)

def itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3_New():
    return itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3.New()

class itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC3IUC3):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3_swigregister(itkRichardsonLucyDeconvolutionImageFilterIUC3IUC3)

def itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4_New():
    return itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4.New()

class itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUC4IUC4):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4_swigregister(itkRichardsonLucyDeconvolutionImageFilterIUC4IUC4)

def itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2_New():
    return itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2.New()

class itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS2IUS2):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2_swigregister(itkRichardsonLucyDeconvolutionImageFilterIUS2IUS2)

def itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3_New():
    return itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3.New()

class itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS3IUS3):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3_swigregister(itkRichardsonLucyDeconvolutionImageFilterIUS3IUS3)

def itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4_New():
    return itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4.New()

class itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4(itk.itkIterativeDeconvolutionImageFilterPython.itkIterativeDeconvolutionImageFilterIUS4IUS4):
    r"""Proxy of C++ itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4_Pointer"""
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkRichardsonLucyDeconvolutionImageFilterPython.delete_itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4

        Create a new object of the class itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4 in _itkRichardsonLucyDeconvolutionImageFilterPython:
_itkRichardsonLucyDeconvolutionImageFilterPython.itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4_swigregister(itkRichardsonLucyDeconvolutionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def richardson_lucy_deconvolution_image_filter(*args: itkt.ImageLike,  number_of_iterations: int=..., stop_iteration: bool=..., size_greatest_prime_factor: int=..., boundary_condition: itkt.ImageBoundaryCondition=..., kernel_image: itkt.Image=..., normalize: bool=..., output_region_mode=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RichardsonLucyDeconvolutionImageFilter"""
    import itk

    kwarg_typehints = { 'number_of_iterations':number_of_iterations,'stop_iteration':stop_iteration,'size_greatest_prime_factor':size_greatest_prime_factor,'boundary_condition':boundary_condition,'kernel_image':kernel_image,'normalize':normalize,'output_region_mode':output_region_mode }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RichardsonLucyDeconvolutionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def richardson_lucy_deconvolution_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDeconvolution.RichardsonLucyDeconvolutionImageFilter
    richardson_lucy_deconvolution_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    richardson_lucy_deconvolution_image_filter.__doc__ = filter_object.__doc__



