# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkParallelSparseFieldLevelSetImageFilterPython
else:
    import _itkParallelSparseFieldLevelSetImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkParallelSparseFieldLevelSetImageFilterID2ID2_New():
    return itkParallelSparseFieldLevelSetImageFilterID2ID2.New()

class itkParallelSparseFieldLevelSetImageFilterID2ID2(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: signed char

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> signed char"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> double"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_GetIsoSurfaceValue(self)

    def GetActiveListForIndex(self, index):
        r"""
        GetActiveListForIndex(self, index) -> itkSparseFieldLayerPSFLSNI2_Pointer

        Parameters
        ----------
        index: itkIndex2 const

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_GetActiveListForIndex(self, index)
    OutputEqualityComparableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParallelSparseFieldLevelSetImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParallelSparseFieldLevelSetImageFilterID2ID2

        Create a new object of the class itkParallelSparseFieldLevelSetImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParallelSparseFieldLevelSetImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParallelSparseFieldLevelSetImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParallelSparseFieldLevelSetImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParallelSparseFieldLevelSetImageFilterID2ID2 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID2ID2_swigregister(itkParallelSparseFieldLevelSetImageFilterID2ID2)

def itkParallelSparseFieldLevelSetImageFilterID3ID3_New():
    return itkParallelSparseFieldLevelSetImageFilterID3ID3.New()

class itkParallelSparseFieldLevelSetImageFilterID3ID3(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: signed char

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> signed char"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> double"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_GetIsoSurfaceValue(self)

    def GetActiveListForIndex(self, index):
        r"""
        GetActiveListForIndex(self, index) -> itkSparseFieldLayerPSFLSNI3_Pointer

        Parameters
        ----------
        index: itkIndex3 const

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_GetActiveListForIndex(self, index)
    OutputEqualityComparableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParallelSparseFieldLevelSetImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParallelSparseFieldLevelSetImageFilterID3ID3

        Create a new object of the class itkParallelSparseFieldLevelSetImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParallelSparseFieldLevelSetImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParallelSparseFieldLevelSetImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParallelSparseFieldLevelSetImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParallelSparseFieldLevelSetImageFilterID3ID3 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID3ID3_swigregister(itkParallelSparseFieldLevelSetImageFilterID3ID3)

def itkParallelSparseFieldLevelSetImageFilterID4ID4_New():
    return itkParallelSparseFieldLevelSetImageFilterID4ID4.New()

class itkParallelSparseFieldLevelSetImageFilterID4ID4(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID4ID4):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParallelSparseFieldLevelSetImageFilterID4ID4_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParallelSparseFieldLevelSetImageFilterID4ID4_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: signed char

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> signed char"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> double"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_GetIsoSurfaceValue(self)

    def GetActiveListForIndex(self, index):
        r"""
        GetActiveListForIndex(self, index) -> itkSparseFieldLayerPSFLSNI4_Pointer

        Parameters
        ----------
        index: itkIndex4 const

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_GetActiveListForIndex(self, index)
    OutputEqualityComparableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParallelSparseFieldLevelSetImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParallelSparseFieldLevelSetImageFilterID4ID4

        Create a new object of the class itkParallelSparseFieldLevelSetImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParallelSparseFieldLevelSetImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParallelSparseFieldLevelSetImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParallelSparseFieldLevelSetImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParallelSparseFieldLevelSetImageFilterID4ID4 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterID4ID4_swigregister(itkParallelSparseFieldLevelSetImageFilterID4ID4)

def itkParallelSparseFieldLevelSetImageFilterIF2IF2_New():
    return itkParallelSparseFieldLevelSetImageFilterIF2IF2.New()

class itkParallelSparseFieldLevelSetImageFilterIF2IF2(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: signed char

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> signed char"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> float"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_GetIsoSurfaceValue(self)

    def GetActiveListForIndex(self, index):
        r"""
        GetActiveListForIndex(self, index) -> itkSparseFieldLayerPSFLSNI2_Pointer

        Parameters
        ----------
        index: itkIndex2 const

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_GetActiveListForIndex(self, index)
    OutputEqualityComparableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParallelSparseFieldLevelSetImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParallelSparseFieldLevelSetImageFilterIF2IF2

        Create a new object of the class itkParallelSparseFieldLevelSetImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParallelSparseFieldLevelSetImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParallelSparseFieldLevelSetImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParallelSparseFieldLevelSetImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParallelSparseFieldLevelSetImageFilterIF2IF2 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF2IF2_swigregister(itkParallelSparseFieldLevelSetImageFilterIF2IF2)

def itkParallelSparseFieldLevelSetImageFilterIF3IF3_New():
    return itkParallelSparseFieldLevelSetImageFilterIF3IF3.New()

class itkParallelSparseFieldLevelSetImageFilterIF3IF3(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: signed char

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> signed char"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> float"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_GetIsoSurfaceValue(self)

    def GetActiveListForIndex(self, index):
        r"""
        GetActiveListForIndex(self, index) -> itkSparseFieldLayerPSFLSNI3_Pointer

        Parameters
        ----------
        index: itkIndex3 const

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_GetActiveListForIndex(self, index)
    OutputEqualityComparableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParallelSparseFieldLevelSetImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParallelSparseFieldLevelSetImageFilterIF3IF3

        Create a new object of the class itkParallelSparseFieldLevelSetImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParallelSparseFieldLevelSetImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParallelSparseFieldLevelSetImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParallelSparseFieldLevelSetImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParallelSparseFieldLevelSetImageFilterIF3IF3 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF3IF3_swigregister(itkParallelSparseFieldLevelSetImageFilterIF3IF3)

def itkParallelSparseFieldLevelSetImageFilterIF4IF4_New():
    return itkParallelSparseFieldLevelSetImageFilterIF4IF4.New()

class itkParallelSparseFieldLevelSetImageFilterIF4IF4(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF4IF4):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkParallelSparseFieldLevelSetImageFilterIF4IF4_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkParallelSparseFieldLevelSetImageFilterIF4IF4_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: signed char

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> signed char"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> float"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_GetIsoSurfaceValue(self)

    def GetActiveListForIndex(self, index):
        r"""
        GetActiveListForIndex(self, index) -> itkSparseFieldLayerPSFLSNI4_Pointer

        Parameters
        ----------
        index: itkIndex4 const

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_GetActiveListForIndex(self, index)
    OutputEqualityComparableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkParallelSparseFieldLevelSetImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkParallelSparseFieldLevelSetImageFilterIF4IF4

        Create a new object of the class itkParallelSparseFieldLevelSetImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkParallelSparseFieldLevelSetImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkParallelSparseFieldLevelSetImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkParallelSparseFieldLevelSetImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkParallelSparseFieldLevelSetImageFilterIF4IF4 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetImageFilterIF4IF4_swigregister(itkParallelSparseFieldLevelSetImageFilterIF4IF4)
class itkParallelSparseFieldLevelSetNodeI2(object):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetNodeI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetNodeI2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkParallelSparseFieldLevelSetNodeI2
        __init__(self, arg0) -> itkParallelSparseFieldLevelSetNodeI2

        Parameters
        ----------
        arg0: itkParallelSparseFieldLevelSetNodeI2 const &

        """
        _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetNodeI2_swiginit(self, _itkParallelSparseFieldLevelSetImageFilterPython.new_itkParallelSparseFieldLevelSetNodeI2(*args))

# Register itkParallelSparseFieldLevelSetNodeI2 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetNodeI2_swigregister(itkParallelSparseFieldLevelSetNodeI2)
class itkParallelSparseFieldLevelSetNodeI3(object):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetNodeI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetNodeI3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkParallelSparseFieldLevelSetNodeI3
        __init__(self, arg0) -> itkParallelSparseFieldLevelSetNodeI3

        Parameters
        ----------
        arg0: itkParallelSparseFieldLevelSetNodeI3 const &

        """
        _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetNodeI3_swiginit(self, _itkParallelSparseFieldLevelSetImageFilterPython.new_itkParallelSparseFieldLevelSetNodeI3(*args))

# Register itkParallelSparseFieldLevelSetNodeI3 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetNodeI3_swigregister(itkParallelSparseFieldLevelSetNodeI3)
class itkParallelSparseFieldLevelSetNodeI4(object):
    r"""Proxy of C++ itkParallelSparseFieldLevelSetNodeI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkParallelSparseFieldLevelSetNodeI4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkParallelSparseFieldLevelSetNodeI4
        __init__(self, arg0) -> itkParallelSparseFieldLevelSetNodeI4

        Parameters
        ----------
        arg0: itkParallelSparseFieldLevelSetNodeI4 const &

        """
        _itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetNodeI4_swiginit(self, _itkParallelSparseFieldLevelSetImageFilterPython.new_itkParallelSparseFieldLevelSetNodeI4(*args))

# Register itkParallelSparseFieldLevelSetNodeI4 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkParallelSparseFieldLevelSetNodeI4_swigregister(itkParallelSparseFieldLevelSetNodeI4)

def itkSparseFieldLayerPSFLSNI2_New():
    return itkSparseFieldLayerPSFLSNI2.New()

class itkSparseFieldLayerPSFLSNI2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerPSFLSNI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerPSFLSNI2_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerPSFLSNI2_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkParallelSparseFieldLevelSetNodeI2
        Front(self) -> itkParallelSparseFieldLevelSetNodeI2
        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkParallelSparseFieldLevelSetNodeI2 *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkParallelSparseFieldLevelSetNodeI2 *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerPSFLSNI2::RegionType,std::allocator< itkSparseFieldLayerPSFLSNI2::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_SplitRegions(self, num)
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLayerPSFLSNI2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerPSFLSNI2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerPSFLSNI2

        Create a new object of the class itkSparseFieldLayerPSFLSNI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerPSFLSNI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerPSFLSNI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerPSFLSNI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerPSFLSNI2 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI2_swigregister(itkSparseFieldLayerPSFLSNI2)

def itkSparseFieldLayerPSFLSNI3_New():
    return itkSparseFieldLayerPSFLSNI3.New()

class itkSparseFieldLayerPSFLSNI3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerPSFLSNI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerPSFLSNI3_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerPSFLSNI3_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkParallelSparseFieldLevelSetNodeI3
        Front(self) -> itkParallelSparseFieldLevelSetNodeI3
        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkParallelSparseFieldLevelSetNodeI3 *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkParallelSparseFieldLevelSetNodeI3 *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerPSFLSNI3::RegionType,std::allocator< itkSparseFieldLayerPSFLSNI3::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_SplitRegions(self, num)
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLayerPSFLSNI3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerPSFLSNI3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerPSFLSNI3

        Create a new object of the class itkSparseFieldLayerPSFLSNI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerPSFLSNI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerPSFLSNI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerPSFLSNI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerPSFLSNI3 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI3_swigregister(itkSparseFieldLayerPSFLSNI3)

def itkSparseFieldLayerPSFLSNI4_New():
    return itkSparseFieldLayerPSFLSNI4.New()

class itkSparseFieldLayerPSFLSNI4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerPSFLSNI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerPSFLSNI4_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerPSFLSNI4_Pointer"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkParallelSparseFieldLevelSetNodeI4
        Front(self) -> itkParallelSparseFieldLevelSetNodeI4
        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkParallelSparseFieldLevelSetNodeI4 *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkParallelSparseFieldLevelSetNodeI4 *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerPSFLSNI4::RegionType,std::allocator< itkSparseFieldLayerPSFLSNI4::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_SplitRegions(self, num)
    __swig_destroy__ = _itkParallelSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLayerPSFLSNI4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerPSFLSNI4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerPSFLSNI4

        Create a new object of the class itkSparseFieldLayerPSFLSNI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerPSFLSNI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerPSFLSNI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerPSFLSNI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerPSFLSNI4 in _itkParallelSparseFieldLevelSetImageFilterPython:
_itkParallelSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerPSFLSNI4_swigregister(itkSparseFieldLayerPSFLSNI4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def parallel_sparse_field_level_set_image_filter(*args: itkt.ImageLike,  number_of_layers: int=..., iso_surface_value: float=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ParallelSparseFieldLevelSetImageFilter"""
    import itk

    kwarg_typehints = { 'number_of_layers':number_of_layers,'iso_surface_value':iso_surface_value,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ParallelSparseFieldLevelSetImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def parallel_sparse_field_level_set_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLevelSets.ParallelSparseFieldLevelSetImageFilter
    parallel_sparse_field_level_set_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    parallel_sparse_field_level_set_image_filter.__doc__ = filter_object.__doc__



