# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFusionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelMapOverlayImageFilterPython
else:
    import _itkLabelMapOverlayImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkStatisticsLabelObjectPython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkLabelMapFilterPython
import itk.ITKLabelMapBasePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_New():
    return itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2.New()

class itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2):
    r"""Proxy of C++ itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_Pointer"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_Pointer"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC2"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_SetInput2(self, input)

    def SetOpacity(self, _arg):
        r"""
        SetOpacity(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_SetOpacity(self, _arg)

    def GetOpacity(self):
        r"""GetOpacity(self) -> double const &"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_GetOpacity(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_SetFunctor(self, functor)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_GetFunctor(self, *args)
    __swig_destroy__ = _itkLabelMapOverlayImageFilterPython.delete_itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2

        Create a new object of the class itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2 in _itkLabelMapOverlayImageFilterPython:
_itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2_swigregister(itkLabelMapOverlayImageFilterLM2IUC2IRGBUC2)

def itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_New():
    return itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3.New()

class itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3):
    r"""Proxy of C++ itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_Pointer"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_Pointer"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC3"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_SetInput2(self, input)

    def SetOpacity(self, _arg):
        r"""
        SetOpacity(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_SetOpacity(self, _arg)

    def GetOpacity(self):
        r"""GetOpacity(self) -> double const &"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_GetOpacity(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_SetFunctor(self, functor)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_GetFunctor(self, *args)
    __swig_destroy__ = _itkLabelMapOverlayImageFilterPython.delete_itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3

        Create a new object of the class itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3 in _itkLabelMapOverlayImageFilterPython:
_itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3_swigregister(itkLabelMapOverlayImageFilterLM3IUC3IRGBUC3)

def itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_New():
    return itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4.New()

class itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4):
    r"""Proxy of C++ itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_Pointer"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_Pointer"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC4"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_SetInput2(self, input)

    def SetOpacity(self, _arg):
        r"""
        SetOpacity(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_SetOpacity(self, _arg)

    def GetOpacity(self):
        r"""GetOpacity(self) -> double const &"""
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_GetOpacity(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_SetFunctor(self, functor)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_GetFunctor(self, *args)
    __swig_destroy__ = _itkLabelMapOverlayImageFilterPython.delete_itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4

        Create a new object of the class itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4 in _itkLabelMapOverlayImageFilterPython:
_itkLabelMapOverlayImageFilterPython.itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4_swigregister(itkLabelMapOverlayImageFilterLM4IUC4IRGBUC4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_map_overlay_image_filter(*args: itkt.ImageLike,  feature_image: itkt.Image=..., opacity: float=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelMapOverlayImageFilter"""
    import itk

    kwarg_typehints = { 'feature_image':feature_image,'opacity':opacity,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelMapOverlayImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_map_overlay_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFusion.LabelMapOverlayImageFilter
    label_map_overlay_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_map_overlay_image_filter.__doc__ = filter_object.__doc__



