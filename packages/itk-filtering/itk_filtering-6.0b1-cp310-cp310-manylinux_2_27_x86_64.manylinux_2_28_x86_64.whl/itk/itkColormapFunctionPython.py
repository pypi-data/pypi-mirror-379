# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKColormapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkColormapFunctionPython
else:
    import _itkColormapFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
class itkColormapFunctionDRGBAPD(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkColormapFunctionDRGBAPD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMinimumRGBComponentValue(self, _arg):
        r"""
        SetMinimumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_SetMinimumRGBComponentValue(self, _arg)

    def GetMinimumRGBComponentValue(self):
        r"""GetMinimumRGBComponentValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_GetMinimumRGBComponentValue(self)

    def SetMaximumRGBComponentValue(self, _arg):
        r"""
        SetMaximumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_SetMaximumRGBComponentValue(self, _arg)

    def GetMaximumRGBComponentValue(self):
        r"""GetMaximumRGBComponentValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_GetMaximumRGBComponentValue(self)

    def SetMinimumInputValue(self, _arg):
        r"""
        SetMinimumInputValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_SetMinimumInputValue(self, _arg)

    def GetMinimumInputValue(self):
        r"""GetMinimumInputValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_GetMinimumInputValue(self)

    def SetMaximumInputValue(self, _arg):
        r"""
        SetMaximumInputValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_SetMaximumInputValue(self, _arg)

    def GetMaximumInputValue(self):
        r"""GetMaximumInputValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_GetMaximumInputValue(self)

    def __call__(self, arg0):
        r"""
        __call__(self, arg0) -> itkRGBAPixelD

        Parameters
        ----------
        arg0: double const &

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD___call__(self, arg0)
    __swig_destroy__ = _itkColormapFunctionPython.delete_itkColormapFunctionDRGBAPD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkColormapFunctionDRGBAPD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBAPD_cast(obj)

# Register itkColormapFunctionDRGBAPD in _itkColormapFunctionPython:
_itkColormapFunctionPython.itkColormapFunctionDRGBAPD_swigregister(itkColormapFunctionDRGBAPD)
class itkColormapFunctionDRGBPD(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkColormapFunctionDRGBPD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMinimumRGBComponentValue(self, _arg):
        r"""
        SetMinimumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_SetMinimumRGBComponentValue(self, _arg)

    def GetMinimumRGBComponentValue(self):
        r"""GetMinimumRGBComponentValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_GetMinimumRGBComponentValue(self)

    def SetMaximumRGBComponentValue(self, _arg):
        r"""
        SetMaximumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_SetMaximumRGBComponentValue(self, _arg)

    def GetMaximumRGBComponentValue(self):
        r"""GetMaximumRGBComponentValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_GetMaximumRGBComponentValue(self)

    def SetMinimumInputValue(self, _arg):
        r"""
        SetMinimumInputValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_SetMinimumInputValue(self, _arg)

    def GetMinimumInputValue(self):
        r"""GetMinimumInputValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_GetMinimumInputValue(self)

    def SetMaximumInputValue(self, _arg):
        r"""
        SetMaximumInputValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_SetMaximumInputValue(self, _arg)

    def GetMaximumInputValue(self):
        r"""GetMaximumInputValue(self) -> double"""
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_GetMaximumInputValue(self)

    def __call__(self, arg0):
        r"""
        __call__(self, arg0) -> itkRGBPixelD

        Parameters
        ----------
        arg0: double const &

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD___call__(self, arg0)
    __swig_destroy__ = _itkColormapFunctionPython.delete_itkColormapFunctionDRGBPD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkColormapFunctionDRGBPD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkColormapFunctionPython.itkColormapFunctionDRGBPD_cast(obj)

# Register itkColormapFunctionDRGBPD in _itkColormapFunctionPython:
_itkColormapFunctionPython.itkColormapFunctionDRGBPD_swigregister(itkColormapFunctionDRGBPD)
class itkColormapFunctionFRGBAPF(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkColormapFunctionFRGBAPF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMinimumRGBComponentValue(self, _arg):
        r"""
        SetMinimumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_SetMinimumRGBComponentValue(self, _arg)

    def GetMinimumRGBComponentValue(self):
        r"""GetMinimumRGBComponentValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_GetMinimumRGBComponentValue(self)

    def SetMaximumRGBComponentValue(self, _arg):
        r"""
        SetMaximumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_SetMaximumRGBComponentValue(self, _arg)

    def GetMaximumRGBComponentValue(self):
        r"""GetMaximumRGBComponentValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_GetMaximumRGBComponentValue(self)

    def SetMinimumInputValue(self, _arg):
        r"""
        SetMinimumInputValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_SetMinimumInputValue(self, _arg)

    def GetMinimumInputValue(self):
        r"""GetMinimumInputValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_GetMinimumInputValue(self)

    def SetMaximumInputValue(self, _arg):
        r"""
        SetMaximumInputValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_SetMaximumInputValue(self, _arg)

    def GetMaximumInputValue(self):
        r"""GetMaximumInputValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_GetMaximumInputValue(self)

    def __call__(self, arg0):
        r"""
        __call__(self, arg0) -> itkRGBAPixelF

        Parameters
        ----------
        arg0: float const &

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF___call__(self, arg0)
    __swig_destroy__ = _itkColormapFunctionPython.delete_itkColormapFunctionFRGBAPF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkColormapFunctionFRGBAPF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBAPF_cast(obj)

# Register itkColormapFunctionFRGBAPF in _itkColormapFunctionPython:
_itkColormapFunctionPython.itkColormapFunctionFRGBAPF_swigregister(itkColormapFunctionFRGBAPF)
class itkColormapFunctionFRGBPF(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkColormapFunctionFRGBPF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMinimumRGBComponentValue(self, _arg):
        r"""
        SetMinimumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_SetMinimumRGBComponentValue(self, _arg)

    def GetMinimumRGBComponentValue(self):
        r"""GetMinimumRGBComponentValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_GetMinimumRGBComponentValue(self)

    def SetMaximumRGBComponentValue(self, _arg):
        r"""
        SetMaximumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_SetMaximumRGBComponentValue(self, _arg)

    def GetMaximumRGBComponentValue(self):
        r"""GetMaximumRGBComponentValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_GetMaximumRGBComponentValue(self)

    def SetMinimumInputValue(self, _arg):
        r"""
        SetMinimumInputValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_SetMinimumInputValue(self, _arg)

    def GetMinimumInputValue(self):
        r"""GetMinimumInputValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_GetMinimumInputValue(self)

    def SetMaximumInputValue(self, _arg):
        r"""
        SetMaximumInputValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_SetMaximumInputValue(self, _arg)

    def GetMaximumInputValue(self):
        r"""GetMaximumInputValue(self) -> float"""
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_GetMaximumInputValue(self)

    def __call__(self, arg0):
        r"""
        __call__(self, arg0) -> itkRGBPixelF

        Parameters
        ----------
        arg0: float const &

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF___call__(self, arg0)
    __swig_destroy__ = _itkColormapFunctionPython.delete_itkColormapFunctionFRGBPF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkColormapFunctionFRGBPF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkColormapFunctionPython.itkColormapFunctionFRGBPF_cast(obj)

# Register itkColormapFunctionFRGBPF in _itkColormapFunctionPython:
_itkColormapFunctionPython.itkColormapFunctionFRGBPF_swigregister(itkColormapFunctionFRGBPF)
class itkColormapFunctionUCRGBAPUC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkColormapFunctionUCRGBAPUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMinimumRGBComponentValue(self, _arg):
        r"""
        SetMinimumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_SetMinimumRGBComponentValue(self, _arg)

    def GetMinimumRGBComponentValue(self):
        r"""GetMinimumRGBComponentValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_GetMinimumRGBComponentValue(self)

    def SetMaximumRGBComponentValue(self, _arg):
        r"""
        SetMaximumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_SetMaximumRGBComponentValue(self, _arg)

    def GetMaximumRGBComponentValue(self):
        r"""GetMaximumRGBComponentValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_GetMaximumRGBComponentValue(self)

    def SetMinimumInputValue(self, _arg):
        r"""
        SetMinimumInputValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_SetMinimumInputValue(self, _arg)

    def GetMinimumInputValue(self):
        r"""GetMinimumInputValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_GetMinimumInputValue(self)

    def SetMaximumInputValue(self, _arg):
        r"""
        SetMaximumInputValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_SetMaximumInputValue(self, _arg)

    def GetMaximumInputValue(self):
        r"""GetMaximumInputValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_GetMaximumInputValue(self)

    def __call__(self, arg0):
        r"""
        __call__(self, arg0) -> itkRGBAPixelUC

        Parameters
        ----------
        arg0: unsigned char const &

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC___call__(self, arg0)
    __swig_destroy__ = _itkColormapFunctionPython.delete_itkColormapFunctionUCRGBAPUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkColormapFunctionUCRGBAPUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_cast(obj)

# Register itkColormapFunctionUCRGBAPUC in _itkColormapFunctionPython:
_itkColormapFunctionPython.itkColormapFunctionUCRGBAPUC_swigregister(itkColormapFunctionUCRGBAPUC)
class itkColormapFunctionUCRGBPUC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkColormapFunctionUCRGBPUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetMinimumRGBComponentValue(self, _arg):
        r"""
        SetMinimumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_SetMinimumRGBComponentValue(self, _arg)

    def GetMinimumRGBComponentValue(self):
        r"""GetMinimumRGBComponentValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_GetMinimumRGBComponentValue(self)

    def SetMaximumRGBComponentValue(self, _arg):
        r"""
        SetMaximumRGBComponentValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_SetMaximumRGBComponentValue(self, _arg)

    def GetMaximumRGBComponentValue(self):
        r"""GetMaximumRGBComponentValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_GetMaximumRGBComponentValue(self)

    def SetMinimumInputValue(self, _arg):
        r"""
        SetMinimumInputValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_SetMinimumInputValue(self, _arg)

    def GetMinimumInputValue(self):
        r"""GetMinimumInputValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_GetMinimumInputValue(self)

    def SetMaximumInputValue(self, _arg):
        r"""
        SetMaximumInputValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_SetMaximumInputValue(self, _arg)

    def GetMaximumInputValue(self):
        r"""GetMaximumInputValue(self) -> unsigned char"""
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_GetMaximumInputValue(self)

    def __call__(self, arg0):
        r"""
        __call__(self, arg0) -> itkRGBPixelUC

        Parameters
        ----------
        arg0: unsigned char const &

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC___call__(self, arg0)
    __swig_destroy__ = _itkColormapFunctionPython.delete_itkColormapFunctionUCRGBPUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkColormapFunctionUCRGBPUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_cast(obj)

# Register itkColormapFunctionUCRGBPUC in _itkColormapFunctionPython:
_itkColormapFunctionPython.itkColormapFunctionUCRGBPUC_swigregister(itkColormapFunctionUCRGBPUC)

