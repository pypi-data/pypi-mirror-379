# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryMaskToNarrowBandPointSetFilterPython
else:
    import _itkBinaryMaskToNarrowBandPointSetFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToMeshFilterPython
import itk.itkPointSetPython
import itk.itkArrayPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMeshSourcePython
import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython

def itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2MD2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2MD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MD2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2MD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2MD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MD2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2MD2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MD2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2MD2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2MF2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2MF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MF2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2MF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2MF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MF2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2MF2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MF2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2MF2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MSS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2MSS2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MUC2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2MUC2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2MUS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2MUS2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSD2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2PSD2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSF2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2PSF2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSSS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2PSSS2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSUC2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2PSUC2)

def itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS2PSUS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS2PSUS2)

def itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3MD3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MD3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MD3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3MD3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MD3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3MD3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3MF3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MF3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MF3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3MF3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MF3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3MF3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MSS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3MSS3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MUC3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3MUC3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MUS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3MUS3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSD3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3PSD3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSF3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3PSF3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSSS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3PSSS3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSUC3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3PSUC3)

def itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3PSUS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS3PSUS3)

def itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4MD4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4MD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MD4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4MD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4MD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MD4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4MD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4MD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4MD4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MD4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4MD4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4MF4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4MF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MF4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4MF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4MF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MF4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4MF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4MF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4MF4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MF4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4MF4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MSS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4MSS4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MUC4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4MUC4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4MUS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4MUS4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSD4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4PSD4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSF4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4PSF4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSSS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4PSSS4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSUC4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4PSUC4)

def itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS4PSUS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageSS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterISS4PSUS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MD2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2MD2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MF2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2MF2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MSS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2MSS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MUC2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2MUC2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2MUS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2MUS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSD2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2PSD2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSF2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2PSF2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSSS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2PSSS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSUC2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUC2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC2PSUS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC2PSUS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MD3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3MD3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MF3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3MF3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MSS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3MSS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MUC3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3MUC3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MUS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3MUS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSD3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3PSD3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSF3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3PSF3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSSS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3PSSS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSUC3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUC3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3PSUS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC3PSUS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MD4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4MD4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MF4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4MF4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MSS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4MSS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MUC4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4MUC4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4MUS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4MUS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSD4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4PSD4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSF4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4PSF4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSSS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4PSSS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSUC4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUC4)

def itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC4PSUS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUC4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUC4PSUS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MD2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2MD2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MF2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2MF2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MSS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2MSS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MUC2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2MUC2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2MUS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2MUS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSD2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2PSD2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSF2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2PSF2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSSS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2PSSS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSUC2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUC2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS2PSUS2):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS2 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS2PSUS2)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MD3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3MD3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MF3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3MF3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MSS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3MSS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MUC3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3MUC3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MUS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3MUS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSD3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3PSD3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSF3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3PSF3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSSS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3PSSS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSUC3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUC3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3PSUS3):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS3 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS3PSUS3)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MD4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4MD4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MF4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4MF4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MSS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4MSS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MUC4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4MUC4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4MUS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4MUS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSD4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4PSD4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSF4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4PSF4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSSS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4PSSS4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSUC4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUC4)

def itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_New():
    return itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4.New()

class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS4PSUS4):
    r"""Proxy of C++ itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_Pointer"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_Clone(self)

    def SetInput(self, inputImage):
        r"""
        SetInput(self, inputImage)

        Parameters
        ----------
        inputImage: itkImageUS4 const *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_SetInput(self, inputImage)

    def SetBandWidth(self, _arg):
        r"""
        SetBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_SetBandWidth(self, _arg)

    def GetBandWidth(self):
        r"""GetBandWidth(self) -> float"""
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_GetBandWidth(self)
    __swig_destroy__ = _itkBinaryMaskToNarrowBandPointSetFilterPython.delete_itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4

        Create a new object of the class itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4 in _itkBinaryMaskToNarrowBandPointSetFilterPython:
_itkBinaryMaskToNarrowBandPointSetFilterPython.itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4_swigregister(itkBinaryMaskToNarrowBandPointSetFilterIUS4PSUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_mask_to_narrow_band_point_set_filter(*args: itkt.ImageLike,  band_width: float=..., output: itkt.PointSet=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for BinaryMaskToNarrowBandPointSetFilter"""
    import itk

    kwarg_typehints = { 'band_width':band_width,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryMaskToNarrowBandPointSetFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_mask_to_narrow_band_point_set_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLevelSets.BinaryMaskToNarrowBandPointSetFilter
    binary_mask_to_narrow_band_point_set_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_mask_to_narrow_band_point_set_filter.__doc__ = filter_object.__doc__



