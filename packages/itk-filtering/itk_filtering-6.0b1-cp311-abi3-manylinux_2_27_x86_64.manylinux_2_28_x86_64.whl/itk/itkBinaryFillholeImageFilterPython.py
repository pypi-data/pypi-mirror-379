# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryFillholeImageFilterPython
else:
    import _itkBinaryFillholeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkBinaryFillholeImageFilterISS2_New():
    return itkBinaryFillholeImageFilterISS2.New()

class itkBinaryFillholeImageFilterISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinaryFillholeImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterISS2_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterISS2_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterISS2

        Create a new object of the class itkBinaryFillholeImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterISS2 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS2_swigregister(itkBinaryFillholeImageFilterISS2)

def itkBinaryFillholeImageFilterISS3_New():
    return itkBinaryFillholeImageFilterISS3.New()

class itkBinaryFillholeImageFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinaryFillholeImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterISS3_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterISS3_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterISS3

        Create a new object of the class itkBinaryFillholeImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterISS3 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS3_swigregister(itkBinaryFillholeImageFilterISS3)

def itkBinaryFillholeImageFilterISS4_New():
    return itkBinaryFillholeImageFilterISS4.New()

class itkBinaryFillholeImageFilterISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkBinaryFillholeImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterISS4_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterISS4_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterISS4

        Create a new object of the class itkBinaryFillholeImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterISS4 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterISS4_swigregister(itkBinaryFillholeImageFilterISS4)

def itkBinaryFillholeImageFilterIUC2_New():
    return itkBinaryFillholeImageFilterIUC2.New()

class itkBinaryFillholeImageFilterIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinaryFillholeImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterIUC2_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterIUC2_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterIUC2

        Create a new object of the class itkBinaryFillholeImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterIUC2 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC2_swigregister(itkBinaryFillholeImageFilterIUC2)

def itkBinaryFillholeImageFilterIUC3_New():
    return itkBinaryFillholeImageFilterIUC3.New()

class itkBinaryFillholeImageFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinaryFillholeImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterIUC3_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterIUC3_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterIUC3

        Create a new object of the class itkBinaryFillholeImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterIUC3 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC3_swigregister(itkBinaryFillholeImageFilterIUC3)

def itkBinaryFillholeImageFilterIUC4_New():
    return itkBinaryFillholeImageFilterIUC4.New()

class itkBinaryFillholeImageFilterIUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBinaryFillholeImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterIUC4_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterIUC4_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterIUC4

        Create a new object of the class itkBinaryFillholeImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterIUC4 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUC4_swigregister(itkBinaryFillholeImageFilterIUC4)

def itkBinaryFillholeImageFilterIUS2_New():
    return itkBinaryFillholeImageFilterIUS2.New()

class itkBinaryFillholeImageFilterIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinaryFillholeImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterIUS2_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterIUS2_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterIUS2

        Create a new object of the class itkBinaryFillholeImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterIUS2 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS2_swigregister(itkBinaryFillholeImageFilterIUS2)

def itkBinaryFillholeImageFilterIUS3_New():
    return itkBinaryFillholeImageFilterIUS3.New()

class itkBinaryFillholeImageFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinaryFillholeImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterIUS3_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterIUS3_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterIUS3

        Create a new object of the class itkBinaryFillholeImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterIUS3 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS3_swigregister(itkBinaryFillholeImageFilterIUS3)

def itkBinaryFillholeImageFilterIUS4_New():
    return itkBinaryFillholeImageFilterIUS4.New()

class itkBinaryFillholeImageFilterIUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBinaryFillholeImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryFillholeImageFilterIUS4_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryFillholeImageFilterIUS4_Pointer"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_InputOStreamWritableCheck
    

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_GetForegroundValue(self)
    __swig_destroy__ = _itkBinaryFillholeImageFilterPython.delete_itkBinaryFillholeImageFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryFillholeImageFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryFillholeImageFilterIUS4

        Create a new object of the class itkBinaryFillholeImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryFillholeImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryFillholeImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryFillholeImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryFillholeImageFilterIUS4 in _itkBinaryFillholeImageFilterPython:
_itkBinaryFillholeImageFilterPython.itkBinaryFillholeImageFilterIUS4_swigregister(itkBinaryFillholeImageFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_fillhole_image_filter(*args: itkt.ImageLike,  fully_connected: bool=..., foreground_value: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryFillholeImageFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected,'foreground_value':foreground_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryFillholeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_fillhole_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.BinaryFillholeImageFilter
    binary_fillhole_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_fillhole_image_filter.__doc__ = filter_object.__doc__



