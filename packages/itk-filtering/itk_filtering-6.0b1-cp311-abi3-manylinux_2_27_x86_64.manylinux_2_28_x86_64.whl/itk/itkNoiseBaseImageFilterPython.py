# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageNoisePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNoiseBaseImageFilterPython
else:
    import _itkNoiseBaseImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterBPython
class itkNoiseBaseImageFilterID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkNoiseBaseImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID2ID2_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID2ID2_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID2ID2_cast(obj)

# Register itkNoiseBaseImageFilterID2ID2 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID2ID2_swigregister(itkNoiseBaseImageFilterID2ID2)
class itkNoiseBaseImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkNoiseBaseImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID3ID3_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID3ID3_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID3ID3_cast(obj)

# Register itkNoiseBaseImageFilterID3ID3 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID3ID3_swigregister(itkNoiseBaseImageFilterID3ID3)
class itkNoiseBaseImageFilterID4ID4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkNoiseBaseImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID4ID4_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID4ID4_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID4ID4_cast(obj)

# Register itkNoiseBaseImageFilterID4ID4 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID4ID4_swigregister(itkNoiseBaseImageFilterID4ID4)
class itkNoiseBaseImageFilterIF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkNoiseBaseImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_cast(obj)

# Register itkNoiseBaseImageFilterIF2IF2 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2_swigregister(itkNoiseBaseImageFilterIF2IF2)
class itkNoiseBaseImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkNoiseBaseImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_cast(obj)

# Register itkNoiseBaseImageFilterIF3IF3 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3_swigregister(itkNoiseBaseImageFilterIF3IF3)
class itkNoiseBaseImageFilterIF4IF4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkNoiseBaseImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF4IF4_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF4IF4_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF4IF4_cast(obj)

# Register itkNoiseBaseImageFilterIF4IF4 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF4IF4_swigregister(itkNoiseBaseImageFilterIF4IF4)
class itkNoiseBaseImageFilterISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkNoiseBaseImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_cast(obj)

# Register itkNoiseBaseImageFilterISS2ISS2 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2_swigregister(itkNoiseBaseImageFilterISS2ISS2)
class itkNoiseBaseImageFilterISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkNoiseBaseImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_cast(obj)

# Register itkNoiseBaseImageFilterISS3ISS3 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3_swigregister(itkNoiseBaseImageFilterISS3ISS3)
class itkNoiseBaseImageFilterISS4ISS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkNoiseBaseImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS4ISS4_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS4ISS4_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS4ISS4_cast(obj)

# Register itkNoiseBaseImageFilterISS4ISS4 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS4ISS4_swigregister(itkNoiseBaseImageFilterISS4ISS4)
class itkNoiseBaseImageFilterIUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkNoiseBaseImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_cast(obj)

# Register itkNoiseBaseImageFilterIUC2IUC2 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2_swigregister(itkNoiseBaseImageFilterIUC2IUC2)
class itkNoiseBaseImageFilterIUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkNoiseBaseImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_cast(obj)

# Register itkNoiseBaseImageFilterIUC3IUC3 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3_swigregister(itkNoiseBaseImageFilterIUC3IUC3)
class itkNoiseBaseImageFilterIUC4IUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkNoiseBaseImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC4IUC4_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC4IUC4_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC4IUC4_cast(obj)

# Register itkNoiseBaseImageFilterIUC4IUC4 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC4IUC4_swigregister(itkNoiseBaseImageFilterIUC4IUC4)
class itkNoiseBaseImageFilterIUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkNoiseBaseImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_cast(obj)

# Register itkNoiseBaseImageFilterIUS2IUS2 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2_swigregister(itkNoiseBaseImageFilterIUS2IUS2)
class itkNoiseBaseImageFilterIUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkNoiseBaseImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_cast(obj)

# Register itkNoiseBaseImageFilterIUS3IUS3 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3_swigregister(itkNoiseBaseImageFilterIUS3IUS3)
class itkNoiseBaseImageFilterIUS4IUS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkNoiseBaseImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetSeed(self):
        r"""GetSeed(self) -> unsigned int"""
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS4IUS4_GetSeed(self)

    def SetSeed(self, *args):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetSeed(self)
        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS4IUS4_SetSeed(self, *args)
    __swig_destroy__ = _itkNoiseBaseImageFilterPython.delete_itkNoiseBaseImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseBaseImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS4IUS4_cast(obj)

# Register itkNoiseBaseImageFilterIUS4IUS4 in _itkNoiseBaseImageFilterPython:
_itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS4IUS4_swigregister(itkNoiseBaseImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def noise_base_image_filter(*args: itkt.ImageLike,  seed: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for NoiseBaseImageFilter"""
    import itk

    kwarg_typehints = { 'seed':seed }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.NoiseBaseImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def noise_base_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageNoise.NoiseBaseImageFilter
    noise_base_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    noise_base_image_filter.__doc__ = filter_object.__doc__



